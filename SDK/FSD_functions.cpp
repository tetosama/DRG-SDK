
#include "../SDK.h"

// Name: , Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Functions
//---------------------------------------------------------------------------

// Function FSD.AcceptInviteBlueprintCallProxy.AcceptInvite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ListName                       (Parm, ZeroConstructor)
// struct FString*                userId                         (Parm, ZeroConstructor)
// class UAcceptInviteBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAcceptInviteBlueprintCallProxy* UAcceptInviteBlueprintCallProxy::STATIC_AcceptInvite(class UObject** WorldContextObject, struct FString* ListName, struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AcceptInviteBlueprintCallProxy.AcceptInvite");

	UAcceptInviteBlueprintCallProxy_AcceptInvite_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ListName = ListName;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.Receive_StartTracking
// (Event, Protected, BlueprintEvent)

void UObjective::Receive_StartTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.Receive_StartTracking");

	UObjective_Receive_StartTracking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Objective.OnRep_IsPrimaryObjective
// (Final, Native, Protected)

void UObjective::OnRep_IsPrimaryObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.OnRep_IsPrimaryObjective");

	UObjective_OnRep_IsPrimaryObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Objective.IsTutorialObjective
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObjective::IsTutorialObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.IsTutorialObjective");

	UObjective_IsTutorialObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.IsPrimary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObjective::IsPrimary()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.IsPrimary");

	UObjective_IsPrimary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.IsObjectiveResource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UResourceData**          InResource                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObjective::IsObjectiveResource(class UResourceData** InResource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.IsObjectiveResource");

	UObjective_IsObjectiveResource_Params params;
	params.InResource = InResource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.IsCompleted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObjective::IsCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.IsCompleted");

	UObjective_IsCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.HasReplicated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObjective::HasReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.HasReplicated");

	UObjective_HasReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetRewardXP
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UObjective::GetRewardXP()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetRewardXP");

	UObjective_GetRewardXP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetRewardCredits
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCreditsReward          ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FCreditsReward UObjective::GetRewardCredits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetRewardCredits");

	UObjective_GetRewardCredits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UObjective::GetObjectiveText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveText");

	UObjective_GetObjectiveText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveMissionIconFromClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectiveClass                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FObjectiveMissionIcon   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FObjectiveMissionIcon UObjective::STATIC_GetObjectiveMissionIconFromClass(class UClass** objectiveClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveMissionIconFromClass");

	UObjective_GetObjectiveMissionIconFromClass_Params params;
	params.objectiveClass = objectiveClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveIconFromClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectiveClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UObjective::STATIC_GetObjectiveIconFromClass(class UClass** objectiveClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveIconFromClass");

	UObjective_GetObjectiveIconFromClass_Params params;
	params.objectiveClass = objectiveClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveIcon
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UObjective::GetObjectiveIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveIcon");

	UObjective_GetObjectiveIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveDescriptionFromClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectiveClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         missionLength                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UObjective::STATIC_GetObjectiveDescriptionFromClass(class UClass** objectiveClass, float* missionLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveDescriptionFromClass");

	UObjective_GetObjectiveDescriptionFromClass_Params params;
	params.objectiveClass = objectiveClass;
	params.missionLength = missionLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveDescription
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         missionLength                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UObjective::GetObjectiveDescription(float* missionLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveDescription");

	UObjective_GetObjectiveDescription_Params params;
	params.missionLength = missionLength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveAmountFromClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectiveClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         missionLength                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UObjective::STATIC_GetObjectiveAmountFromClass(class UClass** objectiveClass, float* missionLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveAmountFromClass");

	UObjective_GetObjectiveAmountFromClass_Params params;
	params.objectiveClass = objectiveClass;
	params.missionLength = missionLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetObjectiveAmount
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float*                         missionLength                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UObjective::GetObjectiveAmount(float* missionLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetObjectiveAmount");

	UObjective_GetObjectiveAmount_Params params;
	params.missionLength = missionLength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetMissionIcon
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FObjectiveMissionIcon   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FObjectiveMissionIcon UObjective::GetMissionIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetMissionIcon");

	UObjective_GetMissionIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetInMissionText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UObjective::GetInMissionText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetInMissionText");

	UObjective_GetInMissionText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetInMissionCounterText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UObjective::GetInMissionCounterText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetInMissionCounterText");

	UObjective_GetInMissionCounterText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Objective.GetInMissionCounterIcon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UObjective::GetInMissionCounterIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Objective.GetInMissionCounterIcon");

	UObjective_GetInMissionCounterIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActivationOjective.OnRep_ObjectivesToFind
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UActivationOjective::OnRep_ObjectivesToFind(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActivationOjective.OnRep_ObjectivesToFind");

	UActivationOjective_OnRep_ObjectivesToFind_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActivationOjective.OnRep_ObjectivesFound
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UActivationOjective::OnRep_ObjectivesFound(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActivationOjective.OnRep_ObjectivesFound");

	UActivationOjective_OnRep_ObjectivesFound_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActivationObject.OnUsedBy
// (Final, Native, Protected)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void AActivationObject::OnUsedBy(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActivationObject.OnUsedBy");

	AActivationObject_OnUsedBy_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.UnlockSpecificCharacters
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APlayerCharacter*>* Characters                     (Parm, ZeroConstructor)
// ECharacterState*               UnlockIf                       (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterState*               UnlockTo                       (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_UnlockSpecificCharacters(class UObject** WorldContextObject, TArray<class APlayerCharacter*>* Characters, ECharacterState* UnlockIf, ECharacterState* UnlockTo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.UnlockSpecificCharacters");

	UActorFunctionLibrary_UnlockSpecificCharacters_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Characters = Characters;
	params.UnlockIf = UnlockIf;
	params.UnlockTo = UnlockTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.UnlockCharacters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_UnlockCharacters(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.UnlockCharacters");

	UActorFunctionLibrary_UnlockCharacters_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.TimeSince
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_TimeSince(class UObject** WorldContextObject, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.TimeSince");

	UActorFunctionLibrary_TimeSince_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.SetScalarParameters
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName*                  ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UMaterialInstanceDynamic*>* Materials                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UActorFunctionLibrary::STATIC_SetScalarParameters(struct FName* ParameterName, float* Value, TArray<class UMaterialInstanceDynamic*>* Materials)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.SetScalarParameters");

	UActorFunctionLibrary_SetScalarParameters_Params params;
	params.ParameterName = ParameterName;
	params.Value = Value;
	params.Materials = Materials;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.PlayCueOnClient
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class USoundCue**              cue                            (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_PlayCueOnClient(class APlayerController** Target, class USoundCue** cue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.PlayCueOnClient");

	UActorFunctionLibrary_PlayCueOnClient_Params params;
	params.Target = Target;
	params.cue = cue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.PlayCueOnAll
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USoundCue**              cue                            (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_PlayCueOnAll(class UObject** WorldContextObject, class USoundCue** cue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.PlayCueOnAll");

	UActorFunctionLibrary_PlayCueOnAll_Params params;
	params.WorldContextObject = WorldContextObject;
	params.cue = cue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.PingPong
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Length                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          normalize                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_PingPong(float* Time, float* Length, bool* normalize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.PingPong");

	UActorFunctionLibrary_PingPong_Params params;
	params.Time = Time;
	params.Length = Length;
	params.normalize = normalize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.MoveTowards
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         current                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         End                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         step                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_MoveTowards(float* current, float* End, float* step)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.MoveTowards");

	UActorFunctionLibrary_MoveTowards_Params params;
	params.current = current;
	params.End = End;
	params.step = step;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.LockSpecificCharactersIfState
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APlayerCharacter*>* Characters                     (Parm, ZeroConstructor)
// ECharacterState*               stateToLock                    (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_LockSpecificCharactersIfState(class UObject** WorldContextObject, TArray<class APlayerCharacter*>* Characters, ECharacterState* stateToLock)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LockSpecificCharactersIfState");

	UActorFunctionLibrary_LockSpecificCharactersIfState_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Characters = Characters;
	params.stateToLock = stateToLock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.LockSpecificCharacters
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APlayerCharacter*>* Characters                     (Parm, ZeroConstructor)

void UActorFunctionLibrary::STATIC_LockSpecificCharacters(class UObject** WorldContextObject, TArray<class APlayerCharacter*>* Characters)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LockSpecificCharacters");

	UActorFunctionLibrary_LockSpecificCharacters_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Characters = Characters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.LockSpecificCharacterIfState
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterState*               LockIf                         (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterState*               LockTo                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorFunctionLibrary::STATIC_LockSpecificCharacterIfState(class UObject** WorldContextObject, class APlayerCharacter** Character, ECharacterState* LockIf, ECharacterState* LockTo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LockSpecificCharacterIfState");

	UActorFunctionLibrary_LockSpecificCharacterIfState_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Character = Character;
	params.LockIf = LockIf;
	params.LockTo = LockTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.LockCharacters
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_LockCharacters(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LockCharacters");

	UActorFunctionLibrary_LockCharacters_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.LoadWindowWidgetClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UActorFunctionLibrary::STATIC_LoadWindowWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LoadWindowWidgetClass");

	UActorFunctionLibrary_LoadWindowWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.LoadWidgetClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UActorFunctionLibrary::STATIC_LoadWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LoadWidgetClass");

	UActorFunctionLibrary_LoadWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.LoadClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UActorFunctionLibrary::STATIC_LoadClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.LoadClass");

	UActorFunctionLibrary_LoadClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.KillActorWithEffects
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        visualsToHide                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class USoundCue**              deathSound                     (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        deathParticles                 (Parm, ZeroConstructor, IsPlainOldData)
// class UPathfinderCollisionComponent** pathColliderToDisable          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UNiagaraSystem**         niagaraDeathParticles          (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_KillActorWithEffects(class AActor** Actor, class USceneComponent** visualsToHide, class USoundCue** deathSound, class UParticleSystem** deathParticles, class UPathfinderCollisionComponent** pathColliderToDisable, class UNiagaraSystem** niagaraDeathParticles)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.KillActorWithEffects");

	UActorFunctionLibrary_KillActorWithEffects_Params params;
	params.Actor = Actor;
	params.visualsToHide = visualsToHide;
	params.deathSound = deathSound;
	params.deathParticles = deathParticles;
	params.pathColliderToDisable = pathColliderToDisable;
	params.niagaraDeathParticles = niagaraDeathParticles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.IsWeakPoint
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFSDPhysicalMaterial**   Material                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorFunctionLibrary::STATIC_IsWeakPoint(class UFSDPhysicalMaterial** Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.IsWeakPoint");

	UActorFunctionLibrary_IsWeakPoint_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.IsInRangeOfLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 toActor                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MinDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorFunctionLibrary::STATIC_IsInRangeOfLocalPlayer(class AActor** toActor, float* MinDistance, float* MaxDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.IsInRangeOfLocalPlayer");

	UActorFunctionLibrary_IsInRangeOfLocalPlayer_Params params;
	params.toActor = toActor;
	params.MinDistance = MinDistance;
	params.MaxDistance = MaxDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.IsCloseToLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 toActor                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorFunctionLibrary::STATIC_IsCloseToLocalPlayer(class AActor** toActor, float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.IsCloseToLocalPlayer");

	UActorFunctionLibrary_IsCloseToLocalPlayer_Params params;
	params.toActor = toActor;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetTotalHeroLevels
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UActorFunctionLibrary::STATIC_GetTotalHeroLevels(class UObject** WorldContextObject, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetTotalHeroLevels");

	UActorFunctionLibrary_GetTotalHeroLevels_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetSavegameID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)

struct FGuid UActorFunctionLibrary::STATIC_GetSavegameID(class UClass** objectClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetSavegameID");

	UActorFunctionLibrary_GetSavegameID_Params params;
	params.objectClass = objectClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetPlayersInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APlayerCharacter*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class APlayerCharacter*> UActorFunctionLibrary::STATIC_GetPlayersInRange(class UObject** WorldContextObject, struct FVector* Origin, float* Radius, bool* MustBeAlive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetPlayersInRange");

	UActorFunctionLibrary_GetPlayersInRange_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.Radius = Radius;
	params.MustBeAlive = MustBeAlive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemID* UActorFunctionLibrary::STATIC_GetItemID(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetItemID");

	UActorFunctionLibrary_GetItemID_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroXP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 HeroClass                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_GetHeroXP(class UObject** WorldContextObject, class UClass** HeroClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroXP");

	UActorFunctionLibrary_GetHeroXP_Params params;
	params.WorldContextObject = WorldContextObject;
	params.HeroClass = HeroClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroSourceName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UActorFunctionLibrary::STATIC_GetHeroSourceName(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroSourceName");

	UActorFunctionLibrary_GetHeroSourceName_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroProgress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_GetHeroProgress(class UObject** WorldContextObject, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroProgress");

	UActorFunctionLibrary_GetHeroProgress_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UActorFunctionLibrary::STATIC_GetHeroName(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroName");

	UActorFunctionLibrary_GetHeroName_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UActorFunctionLibrary::STATIC_GetHeroLevel(class UObject** WorldContextObject, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroLevel");

	UActorFunctionLibrary_GetHeroLevel_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroInventoryList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// class UInventoryList*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UInventoryList* UActorFunctionLibrary::STATIC_GetHeroInventoryList(class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroInventoryList");

	UActorFunctionLibrary_GetHeroInventoryList_Params params;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHeroInfo               ReturnValue                    (Parm, OutParm, ReturnParm)

struct FHeroInfo UActorFunctionLibrary::STATIC_GetHeroInfo(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroInfo");

	UActorFunctionLibrary_GetHeroInfo_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroImageSmall
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UActorFunctionLibrary::STATIC_GetHeroImageSmall(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroImageSmall");

	UActorFunctionLibrary_GetHeroImageSmall_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroImageFullSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UActorFunctionLibrary::STATIC_GetHeroImageFullSize(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroImageFullSize");

	UActorFunctionLibrary_GetHeroImageFullSize_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroImage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UActorFunctionLibrary::STATIC_GetHeroImage(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroImage");

	UActorFunctionLibrary_GetHeroImage_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetHeroColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UActorFunctionLibrary::STATIC_GetHeroColor(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetHeroColor");

	UActorFunctionLibrary_GetHeroColor_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetComponentFromClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UActorComponent* UActorFunctionLibrary::STATIC_GetComponentFromClass(class UClass** Actor, class UClass** ComponentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetComponentFromClass");

	UActorFunctionLibrary_GetComponentFromClass_Params params;
	params.Actor = Actor;
	params.ComponentClass = ComponentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetComponentByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UActorComponent* UActorFunctionLibrary::STATIC_GetComponentByClass(class AActor** Actor, class UClass** ComponentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetComponentByClass");

	UActorFunctionLibrary_GetComponentByClass_Params params;
	params.Actor = Actor;
	params.ComponentClass = ComponentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetCharacterID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlayerCharacterID* UActorFunctionLibrary::STATIC_GetCharacterID(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetCharacterID");

	UActorFunctionLibrary_GetCharacterID_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetAllPlayerCharacters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class APlayerCharacter*> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class APlayerCharacter*> UActorFunctionLibrary::STATIC_GetAllPlayerCharacters(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetAllPlayerCharacters");

	UActorFunctionLibrary_GetAllPlayerCharacters_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.GetActorTargetCenter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UActorFunctionLibrary::STATIC_GetActorTargetCenter(class AActor** TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.GetActorTargetCenter");

	UActorFunctionLibrary_GetActorTargetCenter_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.FSDRemoveBlendable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPostProcessComponent**  PostProcessComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TScriptInterface<class UBlendableInterface>* InBlendableObject              (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_FSDRemoveBlendable(class UPostProcessComponent** PostProcessComponent, TScriptInterface<class UBlendableInterface>* InBlendableObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FSDRemoveBlendable");

	UActorFunctionLibrary_FSDRemoveBlendable_Params params;
	params.PostProcessComponent = PostProcessComponent;
	params.InBlendableObject = InBlendableObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.FSDRemoveAllWidgets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_FSDRemoveAllWidgets(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FSDRemoveAllWidgets");

	UActorFunctionLibrary_FSDRemoveAllWidgets_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.FSDDumpCallStack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString*                Msg                            (Parm, ZeroConstructor)

void UActorFunctionLibrary::STATIC_FSDDumpCallStack(struct FString* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FSDDumpCallStack");

	UActorFunctionLibrary_FSDDumpCallStack_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.FindNearestPlayerCharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                fromLocation                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxRadius                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustHaveLineOfSight            (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UActorFunctionLibrary::STATIC_FindNearestPlayerCharacter(class UObject** WorldContextObject, struct FVector* fromLocation, float* MaxRadius, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* MustHaveLineOfSight)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FindNearestPlayerCharacter");

	UActorFunctionLibrary_FindNearestPlayerCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.fromLocation = fromLocation;
	params.MaxRadius = MaxRadius;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.MustHaveLineOfSight = MustHaveLineOfSight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.FindLatejoinDroppodLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AFSDGameMode**           GameMode                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UActorFunctionLibrary::STATIC_FindLatejoinDroppodLocation(class AFSDGameMode** GameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FindLatejoinDroppodLocation");

	UActorFunctionLibrary_FindLatejoinDroppodLocation_Params params;
	params.GameMode = GameMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.FindClosestEnemyFromLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                fromLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          LineOfSightCheck               (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Offset                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UActorFunctionLibrary::STATIC_FindClosestEnemyFromLocation(struct FVector* fromLocation, float* Range, bool* LineOfSightCheck, class UObject** WorldContextObject, struct FVector* Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FindClosestEnemyFromLocation");

	UActorFunctionLibrary_FindClosestEnemyFromLocation_Params params;
	params.fromLocation = fromLocation;
	params.Range = Range;
	params.LineOfSightCheck = LineOfSightCheck;
	params.WorldContextObject = WorldContextObject;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.FindClosestEnemyFromActor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 FromActor                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          LineOfSightCheck               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Offset                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UActorFunctionLibrary::STATIC_FindClosestEnemyFromActor(class AActor** FromActor, float* Range, bool* LineOfSightCheck, struct FVector* Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.FindClosestEnemyFromActor");

	UActorFunctionLibrary_FindClosestEnemyFromActor_Params params;
	params.FromActor = FromActor;
	params.Range = Range;
	params.LineOfSightCheck = LineOfSightCheck;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.EvaluateRuntimeCurve
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FRuntimeFloatCurve*     Curve                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_EvaluateRuntimeCurve(class UObject** WorldContextObject, struct FRuntimeFloatCurve* Curve, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.EvaluateRuntimeCurve");

	UActorFunctionLibrary_EvaluateRuntimeCurve_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Curve = Curve;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.DamagePlayersInArea
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_DamagePlayersInArea(struct FVector* Origin, class AActor** Instigator, float* Damage, float* Radius, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.DamagePlayersInArea");

	UActorFunctionLibrary_DamagePlayersInArea_Params params;
	params.Origin = Origin;
	params.Instigator = Instigator;
	params.Damage = Damage;
	params.Radius = Radius;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.DamageIfInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UHealthComponentBase*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHealthComponentBase* UActorFunctionLibrary::STATIC_DamageIfInRange(float* MaxDistance, float* Damage, class AActor** Target, class AActor** Attacker, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.DamageIfInRange");

	UActorFunctionLibrary_DamageIfInRange_Params params;
	params.MaxDistance = MaxDistance;
	params.Damage = Damage;
	params.Target = Target;
	params.Attacker = Attacker;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorFunctionLibrary.DamageAllInAreaExcept
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         blastRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxDamageRadius                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         minDamagePercent               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ignoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         friendlyFireModifier           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_DamageAllInAreaExcept(struct FVector* Origin, class AActor** Instigator, float* Damage, float* blastRadius, float* maxDamageRadius, float* minDamagePercent, TArray<class AActor*>* ignoreActors, float* friendlyFireModifier, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.DamageAllInAreaExcept");

	UActorFunctionLibrary_DamageAllInAreaExcept_Params params;
	params.Origin = Origin;
	params.Instigator = Instigator;
	params.Damage = Damage;
	params.blastRadius = blastRadius;
	params.maxDamageRadius = maxDamageRadius;
	params.minDamagePercent = minDamagePercent;
	params.ignoreActors = ignoreActors;
	params.friendlyFireModifier = friendlyFireModifier;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.DamageAllInArea
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         blastRadius                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxDamageRadius                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         minDamagePercent               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         friendlyFireModifier           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)

void UActorFunctionLibrary::STATIC_DamageAllInArea(struct FVector* Origin, class AActor** Instigator, float* Damage, float* blastRadius, float* maxDamageRadius, float* minDamagePercent, float* friendlyFireModifier, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.DamageAllInArea");

	UActorFunctionLibrary_DamageAllInArea_Params params;
	params.Origin = Origin;
	params.Instigator = Instigator;
	params.Damage = Damage;
	params.blastRadius = blastRadius;
	params.maxDamageRadius = maxDamageRadius;
	params.minDamagePercent = minDamagePercent;
	params.friendlyFireModifier = friendlyFireModifier;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorFunctionLibrary.AddHeroXP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 HeroClass                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UActorFunctionLibrary::STATIC_AddHeroXP(class UObject** WorldContextObject, class UClass** HeroClass, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorFunctionLibrary.AddHeroXP");

	UActorFunctionLibrary_AddHeroXP_Params params;
	params.WorldContextObject = WorldContextObject;
	params.HeroClass = HeroClass;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsFunctionLibrary.GetMaxResistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStatusEffectsFunctionLibrary::STATIC_GetMaxResistance(class UClass** StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsFunctionLibrary.GetMaxResistance");

	UStatusEffectsFunctionLibrary_GetMaxResistance_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsFunctionLibrary.GetDamageClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDamageClass* UStatusEffectsFunctionLibrary::STATIC_GetDamageClass(class UClass** StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsFunctionLibrary.GetDamageClass");

	UStatusEffectsFunctionLibrary_GetDamageClass_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsFunctionLibrary.CanTrigger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsFunctionLibrary::STATIC_CanTrigger(class UClass** StatusEffect, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsFunctionLibrary.CanTrigger");

	UStatusEffectsFunctionLibrary_CanTrigger_Params params;
	params.StatusEffect = StatusEffect;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FrontendBlueprintLibrary.OpenURLInExternalBrowser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString*                URL                            (Parm, ZeroConstructor)

void UFrontendBlueprintLibrary::STATIC_OpenURLInExternalBrowser(struct FString* URL)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FrontendBlueprintLibrary.OpenURLInExternalBrowser");

	UFrontendBlueprintLibrary_OpenURLInExternalBrowser_Params params;
	params.URL = URL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FrontendBlueprintLibrary.FSDTargetPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFSDTargetPlatform             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFSDTargetPlatform UFrontendBlueprintLibrary::STATIC_FSDTargetPlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FrontendBlueprintLibrary.FSDTargetPlatform");

	UFrontendBlueprintLibrary_FSDTargetPlatform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameModeFunctionLibrary.FindRandomEscapePodLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UGameModeFunctionLibrary::STATIC_FindRandomEscapePodLocation(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameModeFunctionLibrary.FindRandomEscapePodLocation");

	UGameModeFunctionLibrary_FindRandomEscapePodLocation_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameModeFunctionLibrary.FindEscapePodLocationAtDistance
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         aboveDistanceBias              (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UGameModeFunctionLibrary::STATIC_FindEscapePodLocationAtDistance(class UObject** WorldContextObject, float* distance, float* aboveDistanceBias)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameModeFunctionLibrary.FindEscapePodLocationAtDistance");

	UGameModeFunctionLibrary_FindEscapePodLocationAtDistance_Params params;
	params.WorldContextObject = WorldContextObject;
	params.distance = distance;
	params.aboveDistanceBias = aboveDistanceBias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.VectorToNetQuantizeNormal
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                Vec                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantizeNormal ReturnValue                    (Parm, OutParm, ReturnParm)

struct FVector_NetQuantizeNormal UFSDConversionLibrary::STATIC_VectorToNetQuantizeNormal(struct FVector* Vec)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.VectorToNetQuantizeNormal");

	UFSDConversionLibrary_VectorToNetQuantizeNormal_Params params;
	params.Vec = Vec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.VectorToNetQuantize
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                Vec                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FVector_NetQuantize UFSDConversionLibrary::STATIC_VectorToNetQuantize(struct FVector* Vec)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.VectorToNetQuantize");

	UFSDConversionLibrary_VectorToNetQuantize_Params params;
	params.Vec = Vec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.QuatToVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQuat*                  Quat                           (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFSDConversionLibrary::STATIC_QuatToVector(struct FQuat* Quat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.QuatToVector");

	UFSDConversionLibrary_QuatToVector_Params params;
	params.Quat = Quat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.QuatToRotator
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQuat*                  Quat                           (Parm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFSDConversionLibrary::STATIC_QuatToRotator(struct FQuat* Quat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.QuatToRotator");

	UFSDConversionLibrary_QuatToRotator_Params params;
	params.Quat = Quat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.QuadToNetQuantizeNormal
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQuat*                  Quat                           (Parm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ReturnValue                    (Parm, OutParm, ReturnParm)

struct FVector_NetQuantizeNormal UFSDConversionLibrary::STATIC_QuadToNetQuantizeNormal(struct FQuat* Quat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.QuadToNetQuantizeNormal");

	UFSDConversionLibrary_QuadToNetQuantizeNormal_Params params;
	params.Quat = Quat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.ComponentToWorldLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USceneComponent**        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFSDConversionLibrary::STATIC_ComponentToWorldLocation(class USceneComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.ComponentToWorldLocation");

	UFSDConversionLibrary_ComponentToWorldLocation_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDConversionLibrary.ActorToWorldLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFSDConversionLibrary::STATIC_ActorToWorldLocation(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDConversionLibrary.ActorToWorldLocation");

	UFSDConversionLibrary_ActorToWorldLocation_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorStateComponent.OnRep_CurrentState
// (Final, Native, Protected)
// Parameters:
// class UActorStateComponent**   PreviousState                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UActorStateComponent::OnRep_CurrentState(class UActorStateComponent** PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorStateComponent.OnRep_CurrentState");

	UActorStateComponent_OnRep_CurrentState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorStateComponent.IsStateActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorStateComponent::IsStateActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorStateComponent.IsStateActive");

	UActorStateComponent_IsStateActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorStateComponent.GotoState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UActorStateComponent::GotoState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorStateComponent.GotoState");

	UActorStateComponent_GotoState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDUserWidget.SetTickEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          tickEnabled                    (Parm, ZeroConstructor, IsPlainOldData)

void UFSDUserWidget::STATIC_SetTickEnabled(class UUserWidget** Widget, bool* tickEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.SetTickEnabled");

	UFSDUserWidget_SetTickEnabled_Params params;
	params.Widget = Widget;
	params.tickEnabled = tickEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDUserWidget.SetOpacity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDUserWidget::SetOpacity(float* Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.SetOpacity");

	UFSDUserWidget_SetOpacity_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDUserWidget.ScaleByBaseResolution
// (Final, Native, Public, BlueprintCallable)

void UFSDUserWidget::ScaleByBaseResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.ScaleByBaseResolution");

	UFSDUserWidget_ScaleByBaseResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDUserWidget.Refresh
// (Native, Protected, BlueprintCallable)

void UFSDUserWidget::Refresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.Refresh");

	UFSDUserWidget_Refresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDUserWidget.ReceiveNewVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESlateVisibility*              NewVisibility                  (Parm, ZeroConstructor, IsPlainOldData)

void UFSDUserWidget::ReceiveNewVisibility(ESlateVisibility* NewVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.ReceiveNewVisibility");

	UFSDUserWidget_ReceiveNewVisibility_Params params;
	params.NewVisibility = NewVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDUserWidget.OnCloseMenuReleased
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           Handled                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFSDUserWidget::OnCloseMenuReleased(bool* Handled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.OnCloseMenuReleased");

	UFSDUserWidget_OnCloseMenuReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Handled != nullptr)
		*Handled = params.Handled;
}


// Function FSD.FSDUserWidget.OnCloseMenuPressed
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           Handled                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFSDUserWidget::OnCloseMenuPressed(bool* Handled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.OnCloseMenuPressed");

	UFSDUserWidget_OnCloseMenuPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Handled != nullptr)
		*Handled = params.Handled;
}


// Function FSD.FSDUserWidget.HasCharacter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDUserWidget::HasCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.HasCharacter");

	UFSDUserWidget_HasCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDUserWidget.GetOpacity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDUserWidget::GetOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.GetOpacity");

	UFSDUserWidget_GetOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDUserWidget.GetFSDPlayerState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerState* UFSDUserWidget::GetFSDPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.GetFSDPlayerState");

	UFSDUserWidget_GetFSDPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDUserWidget.GetEquippedItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AItem* UFSDUserWidget::GetEquippedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.GetEquippedItem");

	UFSDUserWidget_GetEquippedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDUserWidget.GetBaseResolutionScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDUserWidget::GetBaseResolutionScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.GetBaseResolutionScale");

	UFSDUserWidget_GetBaseResolutionScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDUserWidget.BP_OnRefresh
// (Event, Protected, BlueprintEvent)

void UFSDUserWidget::BP_OnRefresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDUserWidget.BP_OnRefresh");

	UFSDUserWidget_BP_OnRefresh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.SetTargetComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent**        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UActorTrackingWidget::SetTargetComponent(class USceneComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.SetTargetComponent");

	UActorTrackingWidget_SetTargetComponent_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.SetTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UActorTrackingWidget::SetTarget(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.SetTarget");

	UActorTrackingWidget_SetTarget_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.OnTargetSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UActorTrackingWidget::OnTargetSet(class AActor** NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.OnTargetSet");

	UActorTrackingWidget_OnTargetSet_Params params;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.OnTargetDistanceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UActorTrackingWidget::OnTargetDistanceChanged(float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.OnTargetDistanceChanged");

	UActorTrackingWidget_OnTargetDistanceChanged_Params params;
	params.distance = distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.OnShow
// (Event, Public, BlueprintEvent)

void UActorTrackingWidget::OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.OnShow");

	UActorTrackingWidget_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.OnInViewChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          inView                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Angle                          (Parm, ZeroConstructor, IsPlainOldData)

void UActorTrackingWidget::OnInViewChanged(bool* inView, float* Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.OnInViewChanged");

	UActorTrackingWidget_OnInViewChanged_Params params;
	params.inView = inView;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingWidget.GetTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UActorTrackingWidget::GetTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.GetTarget");

	UActorTrackingWidget_GetTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorTrackingWidget.GetRenderTranslation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UActorTrackingWidget::GetRenderTranslation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.GetRenderTranslation");

	UActorTrackingWidget_GetRenderTranslation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorTrackingWidget.FindScreenPosition
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                WorldLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FMargin*                Margin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ScreenCord                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Angle                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorTrackingWidget::STATIC_FindScreenPosition(class APlayerController** PlayerController, struct FVector* WorldLocation, struct FMargin* Margin, struct FVector* ScreenCord, float* Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.FindScreenPosition");

	UActorTrackingWidget_FindScreenPosition_Params params;
	params.PlayerController = PlayerController;
	params.WorldLocation = WorldLocation;
	params.Margin = Margin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ScreenCord != nullptr)
		*ScreenCord = params.ScreenCord;
	if (Angle != nullptr)
		*Angle = params.Angle;

	return params.ReturnValue;
}


// Function FSD.ActorTrackingWidget.CreateTrackingWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 WidgetType                     (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UActorTrackingWidget*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UActorTrackingWidget* UActorTrackingWidget::STATIC_CreateTrackingWidget(class APlayerController** PlayerController, class UClass** WidgetType, class USceneComponent** TargetComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingWidget.CreateTrackingWidget");

	UActorTrackingWidget_CreateTrackingWidget_Params params;
	params.PlayerController = PlayerController;
	params.WidgetType = WidgetType;
	params.TargetComponent = TargetComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ActorTrackingComponent.ToggleIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UActorTrackingComponent::ToggleIcon(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingComponent.ToggleIcon");

	UActorTrackingComponent_ToggleIcon_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingComponent.OnHoldTAB
// (Final, Native, Protected)
// Parameters:
// bool*                          IsDown                         (Parm, ZeroConstructor, IsPlainOldData)

void UActorTrackingComponent::OnHoldTAB(bool* IsDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingComponent.OnHoldTAB");

	UActorTrackingComponent_OnHoldTAB_Params params;
	params.IsDown = IsDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ActorTrackingComponent.IsIconVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorTrackingComponent::IsIconVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ActorTrackingComponent.IsIconVisible");

	UActorTrackingComponent_IsIconVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AdicPuddle.OnPuddleEndOverLap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AAdicPuddle::OnPuddleEndOverLap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AdicPuddle.OnPuddleEndOverLap");

	AAdicPuddle_OnPuddleEndOverLap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AdicPuddle.OnPuddleBeginOverLap
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AAdicPuddle::OnPuddleBeginOverLap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AdicPuddle.OnPuddleBeginOverLap");

	AAdicPuddle_OnPuddleBeginOverLap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AfflictionEffect.ShouldInstantiate
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAfflictionEffect::ShouldInstantiate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AfflictionEffect.ShouldInstantiate");

	UAfflictionEffect_ShouldInstantiate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AfflictionEffect.ReceiveEndEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPawnAfflictionComponent** Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAfflictionEffect::ReceiveEndEffect(class UPawnAfflictionComponent** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AfflictionEffect.ReceiveEndEffect");

	UAfflictionEffect_ReceiveEndEffect_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AfflictionEffect.ReceiveBeginEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPawnAfflictionComponent** Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAfflictionEffect::ReceiveBeginEffect(class UPawnAfflictionComponent** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AfflictionEffect.ReceiveBeginEffect");

	UAfflictionEffect_ReceiveBeginEffect_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.UnFreeze
// (Native, Public, BlueprintCallable)

void AFSDPawn::UnFreeze()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.UnFreeze");

	AFSDPawn_UnFreeze_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.StopFleeing
// (Native, Public, BlueprintCallable)

void AFSDPawn::StopFleeing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.StopFleeing");

	AFSDPawn_StopFleeing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.StartFleeing
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                fromLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFSDPawn::StartFleeing(struct FVector* fromLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.StartFleeing");

	AFSDPawn_StartFleeing_Params params;
	params.fromLocation = fromLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.SetAlerted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isAlerted                      (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPawn::SetAlerted(bool* isAlerted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.SetAlerted");

	AFSDPawn_SetAlerted_Params params;
	params.isAlerted = isAlerted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.OnUnFrozen
// (Native, Event, Protected, BlueprintEvent)

void AFSDPawn::OnUnFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.OnUnFrozen");

	AFSDPawn_OnUnFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.OnStoppedFleeing
// (Event, Protected, BlueprintEvent)

void AFSDPawn::OnStoppedFleeing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.OnStoppedFleeing");

	AFSDPawn_OnStoppedFleeing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.OnStartedFleeing
// (Event, Protected, BlueprintEvent)

void AFSDPawn::OnStartedFleeing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.OnStartedFleeing");

	AFSDPawn_OnStartedFleeing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.OnRep_IsFrozen
// (Final, Native, Protected)

void AFSDPawn::OnRep_IsFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.OnRep_IsFrozen");

	AFSDPawn_OnRep_IsFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.OnFrozen
// (Native, Event, Protected, BlueprintEvent)

void AFSDPawn::OnFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.OnFrozen");

	AFSDPawn_OnFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.OnArmorPartsDestroyedFromRadialDamage
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TArray<unsigned char>*         destroyedParts                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFSDPawn::OnArmorPartsDestroyedFromRadialDamage(TArray<unsigned char>* destroyedParts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.OnArmorPartsDestroyedFromRadialDamage");

	AFSDPawn_OnArmorPartsDestroyedFromRadialDamage_Params params;
	params.destroyedParts = destroyedParts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.MakeRagdollMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent** Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AFSDPawn::MakeRagdollMesh(class USkeletalMeshComponent** Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.MakeRagdollMesh");

	AFSDPawn_MakeRagdollMesh_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.GetIsAlerted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPawn::GetIsAlerted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.GetIsAlerted");

	AFSDPawn_GetIsAlerted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPawn.GetHealthComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHealthComponentBase*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHealthComponentBase* AFSDPawn::GetHealthComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.GetHealthComponent");

	AFSDPawn_GetHealthComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPawn.Freeze
// (Native, Public, BlueprintCallable)

void AFSDPawn::Freeze()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.Freeze");

	AFSDPawn_Freeze_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.BackOffFromLocation
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                fromLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFSDPawn::BackOffFromLocation(struct FVector* fromLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.BackOffFromLocation");

	AFSDPawn_BackOffFromLocation_Params params;
	params.fromLocation = fromLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPawn.All_ArmorPartsDestroyed
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<unsigned char>*         parts                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AFSDPawn::All_ArmorPartsDestroyed(TArray<unsigned char>* parts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPawn.All_ArmorPartsDestroyed");

	AFSDPawn_All_ArmorPartsDestroyed_Params params;
	params.parts = parts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderCharacter.TryJoinFormation
// (Final, Native, Public, BlueprintCallable)

void ADeepPathfinderCharacter::TryJoinFormation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderCharacter.TryJoinFormation");

	ADeepPathfinderCharacter_TryJoinFormation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderCharacter.SetHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          shouldHide                     (Parm, ZeroConstructor, IsPlainOldData)

void ADeepPathfinderCharacter::SetHidden(bool* shouldHide)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderCharacter.SetHidden");

	ADeepPathfinderCharacter_SetHidden_Params params;
	params.shouldHide = shouldHide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderCharacter.OnPausedMovementElapsed
// (Final, Native, Protected)

void ADeepPathfinderCharacter::OnPausedMovementElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderCharacter.OnPausedMovementElapsed");

	ADeepPathfinderCharacter_OnPausedMovementElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderCharacter.LeaveFormation
// (Final, Native, Public, BlueprintCallable)

void ADeepPathfinderCharacter::LeaveFormation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderCharacter.LeaveFormation");

	ADeepPathfinderCharacter_LeaveFormation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyDeepPathfinderCharacter.OnRep_QueuedMontage
// (Final, Native, Protected)

void AEnemyDeepPathfinderCharacter::OnRep_QueuedMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyDeepPathfinderCharacter.OnRep_QueuedMontage");

	AEnemyDeepPathfinderCharacter_OnRep_QueuedMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.TriggerFrozenRagdoll
// (Final, Native, Protected)

void AAFlyingBug::TriggerFrozenRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.TriggerFrozenRagdoll");

	AAFlyingBug_TriggerFrozenRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.StartFizzle
// (Event, Public, BlueprintEvent)

void AAFlyingBug::StartFizzle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.StartFizzle");

	AAFlyingBug_StartFizzle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.SetExternallyControlled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isExternallyControlled         (Parm, ZeroConstructor, IsPlainOldData)

void AAFlyingBug::SetExternallyControlled(bool* isExternallyControlled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.SetExternallyControlled");

	AAFlyingBug_SetExternallyControlled_Params params;
	params.isExternallyControlled = isExternallyControlled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.SetAttackStance
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isAttackStance                 (Parm, ZeroConstructor, IsPlainOldData)

void AAFlyingBug::SetAttackStance(bool* isAttackStance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.SetAttackStance");

	AAFlyingBug_SetAttackStance_Params params;
	params.isAttackStance = isAttackStance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.Ragdoll
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// bool*                          applyForce                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                force                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AAFlyingBug::Ragdoll(bool* applyForce, struct FVector* force)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.Ragdoll");

	AAFlyingBug_Ragdoll_Params params;
	params.applyForce = applyForce;
	params.force = force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.PlayVoice
// (Final, Native, Protected)

void AAFlyingBug::PlayVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.PlayVoice");

	AAFlyingBug_PlayVoice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.OnRep_RagdollImpact
// (Native, Public)

void AAFlyingBug::OnRep_RagdollImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.OnRep_RagdollImpact");

	AAFlyingBug_OnRep_RagdollImpact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.OnRagdoll
// (Event, Protected, BlueprintEvent)

void AAFlyingBug::OnRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.OnRagdoll");

	AAFlyingBug_OnRagdoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.OnFreezeImpact
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector*                NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AAFlyingBug::OnFreezeImpact(class UPrimitiveComponent** HitComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, struct FVector* NormalImpulse, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.OnFreezeImpact");

	AAFlyingBug_OnFreezeImpact_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.OnDamaged
// (Native, Public)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AAFlyingBug::OnDamaged(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.OnDamaged");

	AAFlyingBug_OnDamaged_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.OnBugDeath
// (Native, Public)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AAFlyingBug::OnBugDeath(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.OnBugDeath");

	AAFlyingBug_OnBugDeath_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AFlyingBug.GetMidZpointFromCielingAndFloor
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          distanceFromCieling            (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          distanceFromFloor              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AAFlyingBug::GetMidZpointFromCielingAndFloor(float* distanceFromCieling, float* distanceFromFloor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.GetMidZpointFromCielingAndFloor");

	AAFlyingBug_GetMidZpointFromCielingAndFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (distanceFromCieling != nullptr)
		*distanceFromCieling = params.distanceFromCieling;
	if (distanceFromFloor != nullptr)
		*distanceFromFloor = params.distanceFromFloor;

	return params.ReturnValue;
}


// Function FSD.AFlyingBug.GetIsInAttackStance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AAFlyingBug::GetIsInAttackStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.GetIsInAttackStance");

	AAFlyingBug_GetIsInAttackStance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AFlyingBug.AlertNearbyEnemies
// (Event, Public, BlueprintEvent)

void AAFlyingBug::AlertNearbyEnemies()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AFlyingBug.AlertNearbyEnemies");

	AAFlyingBug_AlertNearbyEnemies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyAnimInstance.IsSlotPlayingAnyAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName*                  SlotNodeName                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEnemyAnimInstance::IsSlotPlayingAnyAnimation(struct FName* SlotNodeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyAnimInstance.IsSlotPlayingAnyAnimation");

	UEnemyAnimInstance_IsSlotPlayingAnyAnimation_Params params;
	params.SlotNodeName = SlotNodeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyAnimInstance.GetSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UEnemyAnimInstance::GetSkeletalMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyAnimInstance.GetSkeletalMesh");

	UEnemyAnimInstance_GetSkeletalMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SimpleMovingEnemyAnimInstance.SetMeshScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewScale                       (Parm, ZeroConstructor, IsPlainOldData)

void USimpleMovingEnemyAnimInstance::SetMeshScale(float* NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SimpleMovingEnemyAnimInstance.SetMeshScale");

	USimpleMovingEnemyAnimInstance_SetMeshScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AIFunctionLibrary.SetAICanSense
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool*                          canSense                       (Parm, ZeroConstructor, IsPlainOldData)

void UAIFunctionLibrary::STATIC_SetAICanSense(bool* canSense)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.SetAICanSense");

	UAIFunctionLibrary_SetAICanSense_Params params;
	params.canSense = canSense;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AIFunctionLibrary.MakeEnemiesFleeFromArea
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Center                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           maxEnemiesAffected             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UAIFunctionLibrary::STATIC_MakeEnemiesFleeFromArea(class UObject** WorldContextObject, struct FVector* Center, float* Radius, int* maxEnemiesAffected)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.MakeEnemiesFleeFromArea");

	UAIFunctionLibrary_MakeEnemiesFleeFromArea_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Center = Center;
	params.Radius = Radius;
	params.maxEnemiesAffected = maxEnemiesAffected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AIFunctionLibrary.MakeEnemiesBackOutOfArea
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Center                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void UAIFunctionLibrary::STATIC_MakeEnemiesBackOutOfArea(class UObject** WorldContextObject, struct FVector* Center, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.MakeEnemiesBackOutOfArea");

	UAIFunctionLibrary_MakeEnemiesBackOutOfArea_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Center = Center;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AIFunctionLibrary.IsEnemyAlertet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  enemy                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAIFunctionLibrary::STATIC_IsEnemyAlertet(class APawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.IsEnemyAlertet");

	UAIFunctionLibrary_IsEnemyAlertet_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AIFunctionLibrary.GetPlayerTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          accountForAttackers            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 ignoreTarget                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFlying                       (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UAIFunctionLibrary::STATIC_GetPlayerTarget(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* accountForAttackers, class AActor** ignoreTarget, bool* IsFlying)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.GetPlayerTarget");

	UAIFunctionLibrary_GetPlayerTarget_Params params;
	params.From = From;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.accountForAttackers = accountForAttackers;
	params.ignoreTarget = ignoreTarget;
	params.IsFlying = IsFlying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AIFunctionLibrary.GetAttackableTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          accountForAttackers            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 ignoreTarget                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFlying                       (Parm, ZeroConstructor, IsPlainOldData)
// class UAttackerPositioningComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAttackerPositioningComponent* UAIFunctionLibrary::STATIC_GetAttackableTarget(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* accountForAttackers, class AActor** ignoreTarget, bool* IsFlying)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.GetAttackableTarget");

	UAIFunctionLibrary_GetAttackableTarget_Params params;
	params.From = From;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.accountForAttackers = accountForAttackers;
	params.ignoreTarget = ignoreTarget;
	params.IsFlying = IsFlying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AIFunctionLibrary.ConsiderChangingTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerCharacter**       CurrentTarget                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          CurrentTargetMustBeAlive       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFlying                       (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UAIFunctionLibrary::STATIC_ConsiderChangingTarget(class APlayerCharacter** CurrentTarget, class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* CurrentTargetMustBeAlive, bool* IsFlying)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.ConsiderChangingTarget");

	UAIFunctionLibrary_ConsiderChangingTarget_Params params;
	params.CurrentTarget = CurrentTarget;
	params.From = From;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.CurrentTargetMustBeAlive = CurrentTargetMustBeAlive;
	params.IsFlying = IsFlying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AIFunctionLibrary.AlertEnemy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn**                  enemy                          (Parm, ZeroConstructor, IsPlainOldData)

void UAIFunctionLibrary::STATIC_AlertEnemy(class APawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.AlertEnemy");

	UAIFunctionLibrary_AlertEnemy_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AIFunctionLibrary.AlertEnemiesInRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  alerter                        (Parm, ZeroConstructor, IsPlainOldData)

void UAIFunctionLibrary::STATIC_AlertEnemiesInRange(class UObject** WorldContextObject, struct FVector* Origin, float* Range, class APawn** alerter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AIFunctionLibrary.AlertEnemiesInRange");

	UAIFunctionLibrary_AlertEnemiesInRange_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.Range = Range;
	params.alerter = alerter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.TriggerEvent
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AGameEvent::TriggerEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.TriggerEvent");

	AGameEvent_TriggerEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.StartShout
// (Final, Native, Protected)

void AGameEvent::StartShout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.StartShout");

	AGameEvent_StartShout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.StageObjectiveCompleted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AGameEvent::StageObjectiveCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.StageObjectiveCompleted");

	AGameEvent_StageObjectiveCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.SpawnEventPod
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass**                 podClass                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                aSpawnLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int*                           Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// class ARessuplyPod*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ARessuplyPod* AGameEvent::SpawnEventPod(class UClass** podClass, struct FVector* aSpawnLocation, int* Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.SpawnEventPod");

	AGameEvent_SpawnEventPod_Params params;
	params.podClass = podClass;
	params.aSpawnLocation = aSpawnLocation;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.SpawnEventActor
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass**                 eventActorClass                (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             aSpawnLocation                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AGameEvent::SpawnEventActor(class UClass** eventActorClass, struct FTransform* aSpawnLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.SpawnEventActor");

	AGameEvent_SpawnEventActor_Params params;
	params.eventActorClass = eventActorClass;
	params.aSpawnLocation = aSpawnLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.SetStageProgress
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::SetStageProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.SetStageProgress");

	AGameEvent_SetStageProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.SetObjectivesPerStage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int*                           objectivesPerStage             (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::SetObjectivesPerStage(int* objectivesPerStage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.SetObjectivesPerStage");

	AGameEvent_SetObjectivesPerStage_Params params;
	params.objectivesPerStage = objectivesPerStage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.RemoveParticipant
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Participant                    (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::RemoveParticipant(class AActor** Participant)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.RemoveParticipant");

	AGameEvent_RemoveParticipant_Params params;
	params.Participant = Participant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnStarterObjectUsed
// (Final, Native, Protected)
// Parameters:
// class AEventStarterButton**    eventStarter                   (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::OnStarterObjectUsed(class AEventStarterButton** eventStarter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnStarterObjectUsed");

	AGameEvent_OnStarterObjectUsed_Params params;
	params.eventStarter = eventStarter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnStageProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::OnStageProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnStageProgress");

	AGameEvent_OnStageProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnStageComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// int*                           Stage                          (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::OnStageComplete(int* Stage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnStageComplete");

	AGameEvent_OnStageComplete_Params params;
	params.Stage = Stage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnRep_StageProgress
// (Final, Native, Protected)

void AGameEvent::OnRep_StageProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnRep_StageProgress");

	AGameEvent_OnRep_StageProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnRep_ObjectivesPerStage
// (Final, Native, Public)

void AGameEvent::OnRep_ObjectivesPerStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnRep_ObjectivesPerStage");

	AGameEvent_OnRep_ObjectivesPerStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnRep_IsEventStartersActive
// (Final, Native, Protected)

void AGameEvent::OnRep_IsEventStartersActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnRep_IsEventStartersActive");

	AGameEvent_OnRep_IsEventStartersActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnRep_FailedEvent
// (Final, Native, Protected)

void AGameEvent::OnRep_FailedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnRep_FailedEvent");

	AGameEvent_OnRep_FailedEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnRep_EventStarted
// (Final, Native, Protected)

void AGameEvent::OnRep_EventStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnRep_EventStarted");

	AGameEvent_OnRep_EventStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnRep_EventParticipants
// (Final, Native, Protected)

void AGameEvent::OnRep_EventParticipants()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnRep_EventParticipants");

	AGameEvent_OnRep_EventParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnEventTriggered
// (Event, Public, BlueprintEvent)

void AGameEvent::OnEventTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnEventTriggered");

	AGameEvent_OnEventTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnEventFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          eventSuccess                   (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::OnEventFinished(bool* eventSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnEventFinished");

	AGameEvent_OnEventFinished_Params params;
	params.eventSuccess = eventSuccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.OnEventBooted
// (Event, Public, BlueprintEvent)

void AGameEvent::OnEventBooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.OnEventBooted");

	AGameEvent_OnEventBooted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.IsEventActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGameEvent::IsEventActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.IsEventActive");

	AGameEvent_IsEventActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetStageProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AGameEvent::GetStageProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetStageProgress");

	AGameEvent_GetStageProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetShowTimeOnHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGameEvent::GetShowTimeOnHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetShowTimeOnHUD");

	AGameEvent_GetShowTimeOnHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetShowScoreOnHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGameEvent::GetShowScoreOnHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetShowScoreOnHUD");

	AGameEvent_GetShowScoreOnHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetObjectiveText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText AGameEvent::GetObjectiveText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetObjectiveText");

	AGameEvent_GetObjectiveText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetObjectivesPerStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AGameEvent::GetObjectivesPerStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetObjectivesPerStage");

	AGameEvent_GetObjectivesPerStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetEventName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText AGameEvent::GetEventName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetEventName");

	AGameEvent_GetEventName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetEventFailed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGameEvent::GetEventFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetEventFailed");

	AGameEvent_GetEventFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.GetDelayUITime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AGameEvent::GetDelayUITime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.GetDelayUITime");

	AGameEvent_GetDelayUITime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.EndShout
// (Final, Native, Protected)

void AGameEvent::EndShout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.EndShout");

	AGameEvent_EndShout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.DebreePositionPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                fromLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDebrisPositioning**     DebrisPositioning              (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 terrainPlacement               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        locationsToAvoid               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UCurveFloat**            avoidCostCurve                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxPathLength                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform AGameEvent::DebreePositionPoint(class AProceduralSetup** setup, struct FVector* fromLocation, float* Radius, class UDebrisPositioning** DebrisPositioning, class UClass** terrainPlacement, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve, float* maxPathLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.DebreePositionPoint");

	AGameEvent_DebreePositionPoint_Params params;
	params.setup = setup;
	params.fromLocation = fromLocation;
	params.Radius = Radius;
	params.DebrisPositioning = DebrisPositioning;
	params.terrainPlacement = terrainPlacement;
	params.locationsToAvoid = locationsToAvoid;
	params.avoidCostCurve = avoidCostCurve;
	params.maxPathLength = maxPathLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameEvent.BootUpEvent
// (Final, Native, Public, BlueprintCallable)

void AGameEvent::BootUpEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.BootUpEvent");

	AGameEvent_BootUpEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameEvent.AddStageProgress
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         progressToAdd                  (Parm, ZeroConstructor, IsPlainOldData)

void AGameEvent::AddStageProgress(float* progressToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameEvent.AddStageProgress");

	AGameEvent_AddStageProgress_Params params;
	params.progressToAdd = progressToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmberEvent.OnSpawnedDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   spawnedHealthComponent         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AAmberEvent::OnSpawnedDeath(class UHealthComponentBase** spawnedHealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmberEvent.OnSpawnedDeath");

	AAmberEvent_OnSpawnedDeath_Params params;
	params.spawnedHealthComponent = spawnedHealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnVisibleChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          showClipCount                  (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnVisibleChanged(bool* Visible, bool* showClipCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnVisibleChanged");

	UAmmoCountWidget_OnVisibleChanged_Params params;
	params.Visible = Visible;
	params.showClipCount = showClipCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnTotalVisibleChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnTotalVisibleChanged(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnTotalVisibleChanged");

	UAmmoCountWidget_OnTotalVisibleChanged_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnTotalChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           Total                          (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnTotalChanged(int* Total)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnTotalChanged");

	UAmmoCountWidget_OnTotalChanged_Params params;
	params.Total = Total;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnItemTotalChanged
// (Final, Native, Protected)
// Parameters:
// int*                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnItemTotalChanged(int* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnItemTotalChanged");

	UAmmoCountWidget_OnItemTotalChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnItemEquipped
// (Final, Native, Protected)
// Parameters:
// class AItem**                  NewItem                        (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnItemEquipped(class AItem** NewItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnItemEquipped");

	UAmmoCountWidget_OnItemEquipped_Params params;
	params.NewItem = NewItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnItemAmountChanged
// (Final, Native, Protected)
// Parameters:
// int*                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnItemAmountChanged(int* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnItemAmountChanged");

	UAmmoCountWidget_OnItemAmountChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.OnAmountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoCountWidget::OnAmountChanged(int* count)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.OnAmountChanged");

	UAmmoCountWidget_OnAmountChanged_Params params;
	params.count = count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoCountWidget.DoItemEquipped
// (Event, Protected, BlueprintEvent)

void UAmmoCountWidget::DoItemEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoCountWidget.DoItemEquipped");

	UAmmoCountWidget_DoItemEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.UpdateSkin
// (Native, Public, BlueprintCallable)

void AItem::UpdateSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.UpdateSkin");

	AItem_UpdateSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.Server_StartUsing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          IsUsing                        (Parm, ZeroConstructor, IsPlainOldData)

void AItem::Server_StartUsing(bool* IsUsing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.Server_StartUsing");

	AItem_Server_StartUsing_Params params;
	params.IsUsing = IsUsing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.RecieveUnequipped
// (Event, Protected, BlueprintEvent)

void AItem::RecieveUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.RecieveUnequipped");

	AItem_RecieveUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.RecieveStopUsing
// (Event, Protected, BlueprintEvent)

void AItem::RecieveStopUsing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.RecieveStopUsing");

	AItem_RecieveStopUsing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.RecieveStartUsing
// (Event, Protected, BlueprintEvent)

void AItem::RecieveStartUsing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.RecieveStartUsing");

	AItem_RecieveStartUsing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.RecieveEquipped
// (Event, Protected, BlueprintEvent)

void AItem::RecieveEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.RecieveEquipped");

	AItem_RecieveEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.RecieveCycledItem
// (Event, Protected, BlueprintEvent)

void AItem::RecieveCycledItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.RecieveCycledItem");

	AItem_RecieveCycledItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.Recieve_UpdateMeshses
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          IsFirstPerson                  (Parm, ZeroConstructor, IsPlainOldData)

void AItem::Recieve_UpdateMeshses(bool* IsFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.Recieve_UpdateMeshses");

	AItem_Recieve_UpdateMeshses_Params params;
	params.IsFirstPerson = IsFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.ReceiveResupply
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void AItem::ReceiveResupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.ReceiveResupply");

	AItem_ReceiveResupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.Receive_Overheated
// (Event, Protected, BlueprintEvent)

void AItem::Receive_Overheated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.Receive_Overheated");

	AItem_Receive_Overheated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.Receive_GetTPAnimationEventMesh
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* AItem::Receive_GetTPAnimationEventMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.Receive_GetTPAnimationEventMesh");

	AItem_Receive_GetTPAnimationEventMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.Receive_GetFPAnimationEventMesh
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UFirstPersonStaticMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFirstPersonStaticMeshComponent* AItem::Receive_GetFPAnimationEventMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.Receive_GetFPAnimationEventMesh");

	AItem_Receive_GetFPAnimationEventMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.OnTemperatureChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         Temperature                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Overheated                     (Parm, ZeroConstructor, IsPlainOldData)

void AItem::OnTemperatureChanged(float* Temperature, bool* Overheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.OnTemperatureChanged");

	AItem_OnTemperatureChanged_Params params;
	params.Temperature = Temperature;
	params.Overheated = Overheated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.OnSkinChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class USkinEffect**            Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void AItem::OnSkinChanged(class USkinEffect** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.OnSkinChanged");

	AItem_OnSkinChanged_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.OnRep_IsUsing
// (Native, Protected)
// Parameters:
// bool*                          OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void AItem::OnRep_IsUsing(bool* OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.OnRep_IsUsing");

	AItem_OnRep_IsUsing_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.OnOwnerDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 owningActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AItem::OnOwnerDestroyed(class AActor** owningActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.OnOwnerDestroyed");

	AItem_OnOwnerDestroyed_Params params;
	params.owningActor = owningActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Item.IsLocallyControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AItem::IsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.IsLocallyControlled");

	AItem_IsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.IsFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AItem::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.IsFirstPerson");

	AItem_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetWeaponViewClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AItem::GetWeaponViewClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetWeaponViewClass");

	AItem_GetWeaponViewClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetItemName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AItem::GetItemName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetItemName");

	AItem_GetItemName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetItemIconLine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* AItem::GetItemIconLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetItemIconLine");

	AItem_GetItemIconLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetItemIconBG
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* AItem::GetItemIconBG()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetItemIconBG");

	AItem_GetItemIconBG_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetItemDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AItem* AItem::STATIC_GetItemDefaultObject(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetItemDefaultObject");

	AItem_GetItemDefaultObject_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetItemCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AItem::GetItemCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetItemCategory");

	AItem_GetItemCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetHeatingAudioSceneComponent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AItem::GetHeatingAudioSceneComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetHeatingAudioSceneComponent");

	AItem_GetHeatingAudioSceneComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetCharacterAnimationSet
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItemCharacterAnimationSet* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemCharacterAnimationSet* AItem::GetCharacterAnimationSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetCharacterAnimationSet");

	AItem_GetCharacterAnimationSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetAnalyticsItemName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AItem::GetAnalyticsItemName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetAnalyticsItemName");

	AItem_GetAnalyticsItemName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.GetAnalyticsItemCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AItem::GetAnalyticsItemCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.GetAnalyticsItemCategory");

	AItem_GetAnalyticsItemCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Item.AddedToInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerCharacter**       ItemOwner                      (Parm, ZeroConstructor, IsPlainOldData)

void AItem::AddedToInventory(class APlayerCharacter** ItemOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Item.AddedToInventory");

	AItem_AddedToInventory_Params params;
	params.ItemOwner = ItemOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AnimatedItem.GetMuzzle
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform AAnimatedItem::GetMuzzle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AnimatedItem.GetMuzzle");

	AAnimatedItem_GetMuzzle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AnimatedItem.GetItemMesh
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AAnimatedItem::GetItemMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AnimatedItem.GetItemMesh");

	AAnimatedItem_GetItemMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AmmoDrivenWeapon.Upgraded_Blueprint_Implementation
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<class UItemUpgrade*>*   Upgrades                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AAmmoDrivenWeapon::Upgraded_Blueprint_Implementation(TArray<class UItemUpgrade*>* Upgrades)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Upgraded_Blueprint_Implementation");

	AAmmoDrivenWeapon_Upgraded_Blueprint_Implementation_Params params;
	params.Upgrades = Upgrades;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Server_StopReload
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AAmmoDrivenWeapon::Server_StopReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Server_StopReload");

	AAmmoDrivenWeapon_Server_StopReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Server_ReloadWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AAmmoDrivenWeapon::Server_ReloadWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Server_ReloadWeapon");

	AAmmoDrivenWeapon_Server_ReloadWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Server_PlayBurstFire
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// unsigned char*                 shotCount                      (Parm, ZeroConstructor, IsPlainOldData)

void AAmmoDrivenWeapon::Server_PlayBurstFire(unsigned char* shotCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Server_PlayBurstFire");

	AAmmoDrivenWeapon_Server_PlayBurstFire_Params params;
	params.shotCount = shotCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Server_Gunsling
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AAmmoDrivenWeapon::Server_Gunsling(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Server_Gunsling");

	AAmmoDrivenWeapon_Server_Gunsling_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.RecieveFiredWeapon
// (Event, Protected, BlueprintEvent)

void AAmmoDrivenWeapon::RecieveFiredWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.RecieveFiredWeapon");

	AAmmoDrivenWeapon_RecieveFiredWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Receive_ReloadEnd
// (Event, Public, BlueprintEvent)

void AAmmoDrivenWeapon::Receive_ReloadEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Receive_ReloadEnd");

	AAmmoDrivenWeapon_Receive_ReloadEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Receive_ReloadBegin
// (Event, Public, BlueprintEvent)

void AAmmoDrivenWeapon::Receive_ReloadBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Receive_ReloadBegin");

	AAmmoDrivenWeapon_Receive_ReloadBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Receive_IsFiringChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void AAmmoDrivenWeapon::Receive_IsFiringChanged(bool* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Receive_IsFiringChanged");

	AAmmoDrivenWeapon_Receive_IsFiringChanged_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.OnWeaponFireEnded
// (Final, Native, Protected)

void AAmmoDrivenWeapon::OnWeaponFireEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.OnWeaponFireEnded");

	AAmmoDrivenWeapon_OnWeaponFireEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.OnWeaponFired
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AAmmoDrivenWeapon::OnWeaponFired(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.OnWeaponFired");

	AAmmoDrivenWeapon_OnWeaponFired_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.OnRicochet
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Normal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AAmmoDrivenWeapon::OnRicochet(struct FVector* Origin, struct FVector* Location, struct FVector* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.OnRicochet");

	AAmmoDrivenWeapon_OnRicochet_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.OnRep_IsFiring
// (Final, Native, Protected)

void AAmmoDrivenWeapon::OnRep_IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.OnRep_IsFiring");

	AAmmoDrivenWeapon_OnRep_IsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.IsClipFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AAmmoDrivenWeapon::IsClipFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.IsClipFull");

	AAmmoDrivenWeapon_IsClipFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AmmoDrivenWeapon.InstantlyReload
// (Final, Native, Protected, BlueprintCallable)

void AAmmoDrivenWeapon::InstantlyReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.InstantlyReload");

	AAmmoDrivenWeapon_InstantlyReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.Client_RefillAmmo
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void AAmmoDrivenWeapon::Client_RefillAmmo(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.Client_RefillAmmo");

	AAmmoDrivenWeapon_Client_RefillAmmo_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.All_StopReload
// (Net, Native, Event, NetMulticast, Protected)

void AAmmoDrivenWeapon::All_StopReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.All_StopReload");

	AAmmoDrivenWeapon_All_StopReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.All_StartReload
// (Net, Native, Event, NetMulticast, Protected)

void AAmmoDrivenWeapon::All_StartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.All_StartReload");

	AAmmoDrivenWeapon_All_StartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.All_PlayBurstFire
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// unsigned char*                 shotCount                      (Parm, ZeroConstructor, IsPlainOldData)

void AAmmoDrivenWeapon::All_PlayBurstFire(unsigned char* shotCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.All_PlayBurstFire");

	AAmmoDrivenWeapon_All_PlayBurstFire_Params params;
	params.shotCount = shotCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AmmoDrivenWeapon.All_Gunsling
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AAmmoDrivenWeapon::All_Gunsling(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeapon.All_Gunsling");

	AAmmoDrivenWeapon_All_Gunsling_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemAggregator.UnbindAllEvents
// (Native, Public, BlueprintCallable)

void UItemAggregator::UnbindAllEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemAggregator.UnbindAllEvents");

	UItemAggregator_UnbindAllEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ClipBasedItemAggregator.ReloadStarted
// (Final, Native, Public)

void UClipBasedItemAggregator::ReloadStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ClipBasedItemAggregator.ReloadStarted");

	UClipBasedItemAggregator_ReloadStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ClipBasedItemAggregator.ReloadComplete
// (Final, Native, Public)

void UClipBasedItemAggregator::ReloadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ClipBasedItemAggregator.ReloadComplete");

	UClipBasedItemAggregator_ReloadComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ClipBasedItemAggregator.GetTotalAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UClipBasedItemAggregator::GetTotalAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ClipBasedItemAggregator.GetTotalAmount");

	UClipBasedItemAggregator_GetTotalAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ClipBasedItemAggregator.GetClipAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UClipBasedItemAggregator::GetClipAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ClipBasedItemAggregator.GetClipAmount");

	UClipBasedItemAggregator_GetClipAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AmmoDrivenWeaponAnimInstance.IsFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAmmoDrivenWeaponAnimInstance::IsFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeaponAnimInstance.IsFull");

	UAmmoDrivenWeaponAnimInstance_IsFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AmmoDrivenWeaponAnimInstance.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAmmoDrivenWeaponAnimInstance::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeaponAnimInstance.IsEmpty");

	UAmmoDrivenWeaponAnimInstance_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlatformGunAnimInstance.WeaponFired
// (Final, Native, Public, BlueprintCallable)

void UPlatformGunAnimInstance::WeaponFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlatformGunAnimInstance.WeaponFired");

	UPlatformGunAnimInstance_WeaponFired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AreaDamageComponent.EndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor**                 MyActor                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UAreaDamageComponent::EndOverlap(class AActor** MyActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AreaDamageComponent.EndOverlap");

	UAreaDamageComponent_EndOverlap_Params params;
	params.MyActor = MyActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AreaDamageComponent.BeginOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor**                 MyActor                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UAreaDamageComponent::BeginOverlap(class AActor** MyActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AreaDamageComponent.BeginOverlap");

	UAreaDamageComponent_BeginOverlap_Params params;
	params.MyActor = MyActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SimpleArmorDamageComponent.DamageArmor_All
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<unsigned char>*         parts                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void USimpleArmorDamageComponent::DamageArmor_All(TArray<unsigned char>* parts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SimpleArmorDamageComponent.DamageArmor_All");

	USimpleArmorDamageComponent_DamageArmor_All_Params params;
	params.parts = parts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorHealthDamageComponent.OnRep_ArmorDamageIndex
// (Final, Native, Protected)
// Parameters:
// uint32_t*                      OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UArmorHealthDamageComponent::OnRep_ArmorDamageIndex(uint32_t* OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorHealthDamageComponent.OnRep_ArmorDamageIndex");

	UArmorHealthDamageComponent_OnRep_ArmorDamageIndex_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorPiece.GetWeaponViewClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AArmorPiece::GetWeaponViewClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorPiece.GetWeaponViewClass");

	AArmorPiece_GetWeaponViewClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ArmorPiece.GetArmorPieceDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 armorPieceClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AArmorPiece*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AArmorPiece* AArmorPiece::STATIC_GetArmorPieceDefaultObject(class UClass** armorPieceClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorPiece.GetArmorPieceDefaultObject");

	AArmorPiece_GetArmorPieceDefaultObject_Params params;
	params.armorPieceClass = armorPieceClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ThrowableItem.Simulate_Throw
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class UClass**                 ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)

void AThrowableItem::Simulate_Throw(class UClass** ActorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableItem.Simulate_Throw");

	AThrowableItem_Simulate_Throw_Params params;
	params.ActorClass = ActorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrowableItem.Server_Throw
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UClass**                 ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)

void AThrowableItem::Server_Throw(class UClass** ActorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableItem.Server_Throw");

	AThrowableItem_Server_Throw_Params params;
	params.ActorClass = ActorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrowableItem.ReceiveItemThrown
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AThrowableActor**        thrownActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AThrowableItem::ReceiveItemThrown(class AThrowableActor** thrownActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableItem.ReceiveItemThrown");

	AThrowableItem_ReceiveItemThrown_Params params;
	params.thrownActor = thrownActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrowableItem.ReceiveItemSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AThrowableActor**        thrownActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AThrowableItem::ReceiveItemSpawned(class AThrowableActor** thrownActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableItem.ReceiveItemSpawned");

	AThrowableItem_ReceiveItemSpawned_Params params;
	params.thrownActor = thrownActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrowableItem.OnThrownActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void AThrowableItem::OnThrownActorDestroyed(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableItem.OnThrownActorDestroyed");

	AThrowableItem_OnThrownActorDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorRegeneratorItem.ReceiveGeneratorReturned
// (Event, Protected, BlueprintEvent)

void AArmorRegeneratorItem::ReceiveGeneratorReturned()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorItem.ReceiveGeneratorReturned");

	AArmorRegeneratorItem_ReceiveGeneratorReturned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorRegeneratorItem.ReceiveGeneratorRechargeProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void AArmorRegeneratorItem::ReceiveGeneratorRechargeProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorItem.ReceiveGeneratorRechargeProgress");

	AArmorRegeneratorItem_ReceiveGeneratorRechargeProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorRegeneratorItem.ReceiveGeneratorRecharged
// (Event, Protected, BlueprintEvent)

void AArmorRegeneratorItem::ReceiveGeneratorRecharged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorItem.ReceiveGeneratorRecharged");

	AArmorRegeneratorItem_ReceiveGeneratorRecharged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorRegeneratorItem.OnRep_UnchargedCount
// (Final, Native, Protected)
// Parameters:
// int*                           OldCount                       (Parm, ZeroConstructor, IsPlainOldData)

void AArmorRegeneratorItem::OnRep_UnchargedCount(int* OldCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorItem.OnRep_UnchargedCount");

	AArmorRegeneratorItem_OnRep_UnchargedCount_Params params;
	params.OldCount = OldCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorRegeneratorItem.GetIsRecharging
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AArmorRegeneratorItem::GetIsRecharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorItem.GetIsRecharging");

	AArmorRegeneratorItem_GetIsRecharging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ArmorRegeneratorItem.GeneratorReturned
// (Final, Native, Protected, BlueprintCallable)

void AArmorRegeneratorItem::GeneratorReturned()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorItem.GeneratorReturned");

	AArmorRegeneratorItem_GeneratorReturned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrowableActor.ReceiveHitObject
// (Event, Protected, BlueprintEvent)

void AThrowableActor::ReceiveHitObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableActor.ReceiveHitObject");

	AThrowableActor_ReceiveHitObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrowableActor.OnRep_IsMoving
// (Final, Native, Protected)

void AThrowableActor::OnRep_IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrowableActor.OnRep_IsMoving");

	AThrowableActor_OnRep_IsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AsyncManager.AsyncLoadAssets
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSoftObjectPath>* Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// EAsyncPersistence*             persistence                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        OnLoadComplete                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// EAsyncLoadPriority*            Priority                       (Parm, ZeroConstructor, IsPlainOldData)

void UAsyncManager::AsyncLoadAssets(TArray<struct FSoftObjectPath>* Items, EAsyncPersistence* persistence, struct FScriptDelegate* OnLoadComplete, EAsyncLoadPriority* Priority)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AsyncManager.AsyncLoadAssets");

	UAsyncManager_AsyncLoadAssets_Params params;
	params.Items = Items;
	params.persistence = persistence;
	params.OnLoadComplete = OnLoadComplete;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AsyncManager.AsyncLoadAsset
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath*        Item                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// EAsyncPersistence*             persistence                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        OnLoadComplete                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// EAsyncLoadPriority*            Priority                       (Parm, ZeroConstructor, IsPlainOldData)

void UAsyncManager::AsyncLoadAsset(struct FSoftObjectPath* Item, EAsyncPersistence* persistence, struct FScriptDelegate* OnLoadComplete, EAsyncLoadPriority* Priority)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AsyncManager.AsyncLoadAsset");

	UAsyncManager_AsyncLoadAsset_Params params;
	params.Item = Item;
	params.persistence = persistence;
	params.OnLoadComplete = OnLoadComplete;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AttackerPositioningComponent.UnregisterAttacker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFlying                       (Parm, ZeroConstructor, IsPlainOldData)

void UAttackerPositioningComponent::UnregisterAttacker(class AActor** Attacker, bool* IsFlying)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AttackerPositioningComponent.UnregisterAttacker");

	UAttackerPositioningComponent_UnregisterAttacker_Params params;
	params.Attacker = Attacker;
	params.IsFlying = IsFlying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AttackerPositioningComponent.RegisterAttacker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFlying                       (Parm, ZeroConstructor, IsPlainOldData)

void UAttackerPositioningComponent::RegisterAttacker(class AActor** Attacker, bool* IsFlying)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AttackerPositioningComponent.RegisterAttacker");

	UAttackerPositioningComponent_RegisterAttacker_Params params;
	params.Attacker = Attacker;
	params.IsFlying = IsFlying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AttackerPositioningComponent.OnFlyingAttackerDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAttackerPositioningComponent::OnFlyingAttackerDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AttackerPositioningComponent.OnFlyingAttackerDeath");

	UAttackerPositioningComponent_OnFlyingAttackerDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AttackerPositioningComponent.OnAttackerDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAttackerPositioningComponent::OnAttackerDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AttackerPositioningComponent.OnAttackerDeath");

	UAttackerPositioningComponent_OnAttackerDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AttackerPositioningComponent.GetFlyingAttackerPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AttackerRadius                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UAttackerPositioningComponent::GetFlyingAttackerPosition(class AActor** Attacker, float* AttackerRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AttackerPositioningComponent.GetFlyingAttackerPosition");

	UAttackerPositioningComponent_GetFlyingAttackerPosition_Params params;
	params.Attacker = Attacker;
	params.AttackerRadius = AttackerRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AttackerPositioningComponent.GetAttackerPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AttackerRadius                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UAttackerPositioningComponent::GetAttackerPosition(class AActor** Attacker, float* AttackerRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AttackerPositioningComponent.GetAttackerPosition");

	UAttackerPositioningComponent_GetAttackerPosition_Params params;
	params.Attacker = Attacker;
	params.AttackerRadius = AttackerRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AudioFunctionLibrary.SetSoundClassVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USoundClass**            SoundClass                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Volume                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UAudioFunctionLibrary::STATIC_SetSoundClassVolume(class USoundClass** SoundClass, float* Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AudioFunctionLibrary.SetSoundClassVolume");

	UAudioFunctionLibrary_SetSoundClassVolume_Params params;
	params.SoundClass = SoundClass;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AudioFunctionLibrary.PushTimedSoundMix
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                contextObject                  (Parm, ZeroConstructor, IsPlainOldData)
// class USoundMix**              mix                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UAudioFunctionLibrary::STATIC_PushTimedSoundMix(class UObject** contextObject, class USoundMix** mix, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AudioFunctionLibrary.PushTimedSoundMix");

	UAudioFunctionLibrary_PushTimedSoundMix_Params params;
	params.contextObject = contextObject;
	params.mix = mix;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AudioFunctionLibrary.GetSoundClassVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USoundClass**            SoundClass                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UAudioFunctionLibrary::STATIC_GetSoundClassVolume(class USoundClass** SoundClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AudioFunctionLibrary.GetSoundClassVolume");

	UAudioFunctionLibrary_GetSoundClassVolume_Params params;
	params.SoundClass = SoundClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AutoCannon.Server_SetStatusActive
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void AAutoCannon::Server_SetStatusActive(bool* IsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoCannon.Server_SetStatusActive");

	AAutoCannon_Server_SetStatusActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoCarverComponent.ForceCarve
// (Final, Native, Public, BlueprintCallable)

void UAutoCarverComponent::ForceCarve()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoCarverComponent.ForceCarve");

	UAutoCarverComponent_ForceCarve_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MeshCarverComponent.Carve
// (Final, Native, Public, BlueprintCallable)

void UMeshCarverComponent::Carve()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MeshCarverComponent.Carve");

	UMeshCarverComponent_Carve_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityBasedItemAggregator.ReloadStarted
// (Final, Native, Public)

void UCapacityBasedItemAggregator::ReloadStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityBasedItemAggregator.ReloadStarted");

	UCapacityBasedItemAggregator_ReloadStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityBasedItemAggregator.ReloadComplete
// (Final, Native, Public)

void UCapacityBasedItemAggregator::ReloadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityBasedItemAggregator.ReloadComplete");

	UCapacityBasedItemAggregator_ReloadComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityBasedItemAggregator.GetMaxAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCapacityBasedItemAggregator::GetMaxAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityBasedItemAggregator.GetMaxAmount");

	UCapacityBasedItemAggregator_GetMaxAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CapacityBasedItemAggregator.GetCurrentAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCapacityBasedItemAggregator::GetCurrentAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityBasedItemAggregator.GetCurrentAmount");

	UCapacityBasedItemAggregator_GetCurrentAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DualAnimatedItem.GetRItemMesh
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* ADualAnimatedItem::GetRItemMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DualAnimatedItem.GetRItemMesh");

	ADualAnimatedItem_GetRItemMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DualAnimatedItem.GetLItemMesh
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* ADualAnimatedItem::GetLItemMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DualAnimatedItem.GetLItemMesh");

	ADualAnimatedItem_GetLItemMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AutoMinerItem.Server_StopMining
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAutoMinerItem::Server_StopMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.Server_StopMining");

	AAutoMinerItem_Server_StopMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.Server_StartMining
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AAutoMinerItem::Server_StartMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.Server_StartMining");

	AAutoMinerItem_Server_StartMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.Server_DoDamage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FAutoMinerDamageItem>* Targets                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AAutoMinerItem::Server_DoDamage(TArray<struct FAutoMinerDamageItem>* Targets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.Server_DoDamage");

	AAutoMinerItem_Server_DoDamage_Params params;
	params.Targets = Targets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.Server_DigBlock
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Start                          (Parm)
// struct FVector_NetQuantize*    End                            (Parm)

void AAutoMinerItem::Server_DigBlock(struct FVector_NetQuantize* Start, struct FVector_NetQuantize* End)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.Server_DigBlock");

	AAutoMinerItem_Server_DigBlock_Params params;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.OnTargetKilled
// (Final, Native, Public)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void AAutoMinerItem::OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.OnTargetKilled");

	AAutoMinerItem_OnTargetKilled_Params params;
	params.Target = Target;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.OnStopDrilling
// (Event, Public, BlueprintEvent)

void AAutoMinerItem::OnStopDrilling()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.OnStopDrilling");

	AAutoMinerItem_OnStopDrilling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.OnStartDrilling
// (Event, Public, BlueprintEvent)

void AAutoMinerItem::OnStartDrilling()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.OnStartDrilling");

	AAutoMinerItem_OnStartDrilling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.OnRep_SimulatingMining
// (Final, Native, Public)

void AAutoMinerItem::OnRep_SimulatingMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.OnRep_SimulatingMining");

	AAutoMinerItem_OnRep_SimulatingMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.OnRep_IsGunslinging
// (Final, Native, Public)

void AAutoMinerItem::OnRep_IsGunslinging()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.OnRep_IsGunslinging");

	AAutoMinerItem_OnRep_IsGunslinging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.Client_Resupply
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void AAutoMinerItem::Client_Resupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.Client_Resupply");

	AAutoMinerItem_Client_Resupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.BP_OnDrillDamage
// (Event, Public, BlueprintEvent)

void AAutoMinerItem::BP_OnDrillDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.BP_OnDrillDamage");

	AAutoMinerItem_BP_OnDrillDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.All_SimulateDigDebris
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FVector_NetQuantize*    Position                       (Parm)
// int*                           DebrisIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void AAutoMinerItem::All_SimulateDigDebris(struct FVector_NetQuantize* Position, int* DebrisIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.All_SimulateDigDebris");

	AAutoMinerItem_All_SimulateDigDebris_Params params;
	params.Position = Position;
	params.DebrisIndex = DebrisIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.All_SimulateDigBlock
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FVector_NetQuantize*    Position                       (Parm)
// bool*                          spawnParticles                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Material                       (Parm, ZeroConstructor, IsPlainOldData)

void AAutoMinerItem::All_SimulateDigBlock(struct FVector_NetQuantize* Position, bool* spawnParticles, int* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.All_SimulateDigBlock");

	AAutoMinerItem_All_SimulateDigBlock_Params params;
	params.Position = Position;
	params.spawnParticles = spawnParticles;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoMinerItem.All_SimulateDamage
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// TArray<struct FAutoMinerDamageItem>* Targets                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AAutoMinerItem::All_SimulateDamage(TArray<struct FAutoMinerDamageItem>* Targets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerItem.All_SimulateDamage");

	AAutoMinerItem_All_SimulateDamage_Params params;
	params.Targets = Targets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.ReceiveSelectPreviousCommand
// (Event, Protected, BlueprintEvent)

void UWindowWidget::ReceiveSelectPreviousCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.ReceiveSelectPreviousCommand");

	UWindowWidget_ReceiveSelectPreviousCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.ReceiveSelectNextCommand
// (Event, Protected, BlueprintEvent)

void UWindowWidget::ReceiveSelectNextCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.ReceiveSelectNextCommand");

	UWindowWidget_ReceiveSelectNextCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.ReceiveSelectCharacterCommand
// (Event, Protected, BlueprintEvent)

void UWindowWidget::ReceiveSelectCharacterCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.ReceiveSelectCharacterCommand");

	UWindowWidget_ReceiveSelectCharacterCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.ReceiveOkCommand
// (Event, Protected, BlueprintEvent)

void UWindowWidget::ReceiveOkCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.ReceiveOkCommand");

	UWindowWidget_ReceiveOkCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.ReceiveCloseCommand
// (Event, Protected, BlueprintEvent)

void UWindowWidget::ReceiveCloseCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.ReceiveCloseCommand");

	UWindowWidget_ReceiveCloseCommand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.OnShown
// (Event, Public, BlueprintEvent)

void UWindowWidget::OnShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.OnShown");

	UWindowWidget_OnShown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.OnNewTopWindow
// (Event, Public, BlueprintEvent)

void UWindowWidget::OnNewTopWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.OnNewTopWindow");

	UWindowWidget_OnNewTopWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.OnClosed
// (Event, Public, BlueprintEvent)

void UWindowWidget::OnClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.OnClosed");

	UWindowWidget_OnClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.ConsumeCommand
// (Final, Native, Protected, BlueprintCallable)

void UWindowWidget::ConsumeCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.ConsumeCommand");

	UWindowWidget_ConsumeCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowWidget.CloseThisWindow
// (Final, Native, Public, BlueprintCallable)

void UWindowWidget::CloseThisWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowWidget.CloseThisWindow");

	UWindowWidget_CloseThisWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponFireComponent.StopFire
// (Native, Public, BlueprintCallable)

void UWeaponFireComponent::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireComponent.StopFire");

	UWeaponFireComponent_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponFireComponent.Server_SetShotPower
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         shotPower                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponFireComponent::Server_SetShotPower(float* shotPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireComponent.Server_SetShotPower");

	UWeaponFireComponent_Server_SetShotPower_Params params;
	params.shotPower = shotPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponFireComponent.Fire
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector_NetQuantizeNormal* Direction                      (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponFireComponent::Fire(struct FVector* Origin, struct FVector_NetQuantizeNormal* Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireComponent.Fire");

	UWeaponFireComponent_Fire_Params params;
	params.Origin = Origin;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BasicWeaponFireComponent.Server_FireWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UBasicWeaponFireComponent::Server_FireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BasicWeaponFireComponent.Server_FireWeapon");

	UBasicWeaponFireComponent_Server_FireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BasicWeaponFireComponent.Server_EndFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UBasicWeaponFireComponent::Server_EndFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BasicWeaponFireComponent.Server_EndFire");

	UBasicWeaponFireComponent_Server_EndFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BasicWeaponFireComponent.All_WeaponFired
// (Net, Native, Event, NetMulticast, Protected)

void UBasicWeaponFireComponent::All_WeaponFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BasicWeaponFireComponent.All_WeaponFired");

	UBasicWeaponFireComponent_All_WeaponFired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BeltDrivenWeapon.Server_StopBarrel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ABeltDrivenWeapon::Server_StopBarrel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BeltDrivenWeapon.Server_StopBarrel");

	ABeltDrivenWeapon_Server_StopBarrel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BeltDrivenWeapon.Server_StartBarrel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ABeltDrivenWeapon::Server_StartBarrel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BeltDrivenWeapon.Server_StartBarrel");

	ABeltDrivenWeapon_Server_StartBarrel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatlingGun.Server_SetHotShellsOn
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          hotShellsIsOn                  (Parm, ZeroConstructor, IsPlainOldData)

void AGatlingGun::Server_SetHotShellsOn(bool* hotShellsIsOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingGun.Server_SetHotShellsOn");

	AGatlingGun_Server_SetHotShellsOn_Params params;
	params.hotShellsIsOn = hotShellsIsOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatlingGun.OnRep_HotShellsTracerOn
// (Final, Native, Protected)

void AGatlingGun::OnRep_HotShellsTracerOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingGun.OnRep_HotShellsTracerOn");

	AGatlingGun_OnRep_HotShellsTracerOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatlingGun.OnGatlingTemperatureChanged
// (Final, Native, Protected)
// Parameters:
// float*                         Temperature                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isOverheated                   (Parm, ZeroConstructor, IsPlainOldData)

void AGatlingGun::OnGatlingTemperatureChanged(float* Temperature, bool* isOverheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingGun.OnGatlingTemperatureChanged");

	AGatlingGun_OnGatlingTemperatureChanged_Params params;
	params.Temperature = Temperature;
	params.isOverheated = isOverheated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatlingGun.OnEnemyKilled
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void AGatlingGun::OnEnemyKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingGun.OnEnemyKilled");

	AGatlingGun_OnEnemyKilled_Params params;
	params.Target = Target;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatlingGun.Client_RemoveHeat
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AGatlingGun::Client_RemoveHeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingGun.Client_RemoveHeat");

	AGatlingGun_Client_RemoveHeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Biome.GetDebrisActorSoftClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)

void UBiome::GetDebrisActorSoftClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetDebrisActorSoftClass");

	UBiome_GetDebrisActorSoftClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Biome.GetBiomeWorldMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UBiome::GetBiomeWorldMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeWorldMap");

	UBiome_GetBiomeWorldMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomePicture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UBiome::GetBiomePicture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomePicture");

	UBiome_GetBiomePicture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UBiome::GetBiomeName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeName");

	UBiome_GetBiomeName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeMissionBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UBiome::GetBiomeMissionBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeMissionBar");

	UBiome_GetBiomeMissionBar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeMapWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UBiome::GetBiomeMapWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeMapWidget");

	UBiome_GetBiomeMapWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeMapAssetList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSoftObjectPath> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSoftObjectPath> UBiome::GetBiomeMapAssetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeMapAssetList");

	UBiome_GetBiomeMapAssetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeLargeImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UBiome::GetBiomeLargeImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeLargeImage");

	UBiome_GetBiomeLargeImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBiome::GetBiomeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeIndex");

	UBiome_GetBiomeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UBiome::GetBiomeIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeIcon");

	UBiome_GetBiomeIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetBiomeAnalyticsIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UBiome::GetBiomeAnalyticsIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetBiomeAnalyticsIndex");

	UBiome_GetBiomeAnalyticsIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetAtmosphericParticles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UBiome::GetAtmosphericParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetAtmosphericParticles");

	UBiome_GetAtmosphericParticles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Biome.GetAmbientSounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundCue*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USoundCue* UBiome::GetAmbientSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Biome.GetAmbientSounds");

	UBiome_GetAmbientSounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BobbingComponent.SetOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 AActor                         (Parm, ZeroConstructor, IsPlainOldData)

void UBobbingComponent::SetOwner(class AActor** AActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BobbingComponent.SetOwner");

	UBobbingComponent_SetOwner_Params params;
	params.AActor = AActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.SetOverheated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          isOverheated                   (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::SetOverheated(bool* isOverheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.SetOverheated");

	ABoltActionWeapon_SetOverheated_Params params;
	params.isOverheated = isOverheated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.Server_SetIsMovementSlowed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          bisMovementSlowed              (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::Server_SetIsMovementSlowed(bool* bisMovementSlowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.Server_SetIsMovementSlowed");

	ABoltActionWeapon_Server_SetIsMovementSlowed_Params params;
	params.bisMovementSlowed = bisMovementSlowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.Server_SetIsLatestShotFocused
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          bisShotFocused                 (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::Server_SetIsLatestShotFocused(bool* bisShotFocused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.Server_SetIsLatestShotFocused");

	ABoltActionWeapon_Server_SetIsLatestShotFocused_Params params;
	params.bisShotFocused = bisShotFocused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.Server_SetIsChargingShot
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          bisCharging                    (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::Server_SetIsChargingShot(bool* bisCharging)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.Server_SetIsChargingShot");

	ABoltActionWeapon_Server_SetIsChargingShot_Params params;
	params.bisCharging = bisCharging;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.OnTimerElapsed
// (Final, Native, Protected)

void ABoltActionWeapon::OnTimerElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.OnTimerElapsed");

	ABoltActionWeapon_OnTimerElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.OnTargetKilled
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.OnTargetKilled");

	ABoltActionWeapon_OnTargetKilled_Params params;
	params.Target = Target;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.OnTargetDamaged");

	ABoltActionWeapon_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.OnShotPowerSet
// (Final, Native, Protected)

void ABoltActionWeapon::OnShotPowerSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.OnShotPowerSet");

	ABoltActionWeapon_OnShotPowerSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.OnMovementSlowed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          isSlowed                       (Parm, ZeroConstructor, IsPlainOldData)

void ABoltActionWeapon::OnMovementSlowed(bool* isSlowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.OnMovementSlowed");

	ABoltActionWeapon_OnMovementSlowed_Params params;
	params.isSlowed = isSlowed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoltActionWeapon.Client_BoostReloadTime
// (Net, NetReliable, Native, Event, Protected, NetClient)

void ABoltActionWeapon::Client_BoostReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionWeapon.Client_BoostReloadTime");

	ABoltActionWeapon_Client_BoostReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.StopSpinAndDie
// (Final, Native, Protected)

void ABomber::StopSpinAndDie()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.StopSpinAndDie");

	ABomber_StopSpinAndDie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.SetDropAcid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          dropAcid                       (Parm, ZeroConstructor, IsPlainOldData)

void ABomber::SetDropAcid(bool* dropAcid)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.SetDropAcid");

	ABomber_SetDropAcid_Params params;
	params.dropAcid = dropAcid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.OnStartDeathPanic
// (Event, Protected, BlueprintEvent)

void ABomber::OnStartDeathPanic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.OnStartDeathPanic");

	ABomber_OnStartDeathPanic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.OnRep_DropAcid
// (Final, Native, Protected)

void ABomber::OnRep_DropAcid()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.OnRep_DropAcid");

	ABomber_OnRep_DropAcid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.OnRep_Death
// (Native, Protected)

void ABomber::OnRep_Death()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.OnRep_Death");

	ABomber_OnRep_Death_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.OnBladderDamage
// (Final, Native, Protected)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ABomber::OnBladderDamage(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.OnBladderDamage");

	ABomber_OnBladderDamage_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.OnArmorDestroyed
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)

void ABomber::OnArmorDestroyed(struct FName* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.OnArmorDestroyed");

	ABomber_OnArmorDestroyed_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bomber.GetDropAcid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABomber::GetDropAcid()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.GetDropAcid");

	ABomber_GetDropAcid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bomber.AreBladdersDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABomber::AreBladdersDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bomber.AreBladdersDestroyed");

	ABomber_AreBladdersDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bosco.UseABillity
// (Final, Native, Public, BlueprintCallable)

void ABosco::UseABillity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.UseABillity");

	ABosco_UseABillity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.StopShootingSound
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ABosco::StopShootingSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.StopShootingSound");

	ABosco_StopShootingSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.StateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EDroneAIState*                 aCurrentState                  (Parm, ZeroConstructor, IsPlainOldData)

void ABosco::StateChanged(EDroneAIState* aCurrentState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.StateChanged");

	ABosco_StateChanged_Params params;
	params.aCurrentState = aCurrentState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.StartSelfDestruct
// (Final, Native, Public, BlueprintCallable)

void ABosco::StartSelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.StartSelfDestruct");

	ABosco_StartSelfDestruct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.SetIsReviving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aIsReviving                    (Parm, ZeroConstructor, IsPlainOldData)

void ABosco::SetIsReviving(bool* aIsReviving)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.SetIsReviving");

	ABosco_SetIsReviving_Params params;
	params.aIsReviving = aIsReviving;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.SelfDestruct
// (Event, Public, BlueprintEvent)

void ABosco::SelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.SelfDestruct");

	ABosco_SelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.ReviveCounterChanged
// (Native, Public)
// Parameters:
// int*                           remainingCharges               (Parm, ZeroConstructor, IsPlainOldData)

void ABosco::ReviveCounterChanged(int* remainingCharges)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.ReviveCounterChanged");

	ABosco_ReviveCounterChanged_Params params;
	params.remainingCharges = remainingCharges;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.PlaySalute
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ABosco::PlaySalute()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.PlaySalute");

	ABosco_PlaySalute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.OnWeaponFired
// (Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ABosco::OnWeaponFired(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.OnWeaponFired");

	ABosco_OnWeaponFired_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.OnRep_State
// (Native, Public)
// Parameters:
// EDroneAIState*                 prevState                      (Parm, ZeroConstructor, IsPlainOldData)

void ABosco::OnRep_State(EDroneAIState* prevState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.OnRep_State");

	ABosco_OnRep_State_Params params;
	params.prevState = prevState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.OnReadyToShoot
// (Final, Native, Protected)

void ABosco::OnReadyToShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.OnReadyToShoot");

	ABosco_OnReadyToShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.OnNotReadyToShoot
// (Final, Native, Protected)

void ABosco::OnNotReadyToShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.OnNotReadyToShoot");

	ABosco_OnNotReadyToShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.OnHit
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         BaseAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ABosco::OnHit(float* amount, float* BaseAmount, class UPrimitiveComponent** Component, class UFSDPhysicalMaterial** PhysMat, struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.OnHit");

	ABosco_OnHit_Params params;
	params.amount = amount;
	params.BaseAmount = BaseAmount;
	params.Component = Component;
	params.PhysMat = PhysMat;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.OnGrabbedGem
// (Final, Native, Public, BlueprintCallable)

void ABosco::OnGrabbedGem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.OnGrabbedGem");

	ABosco_OnGrabbedGem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.MineEffects
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class UTerrainMaterial**       aTerrainMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize*    aLocation                      (Parm)
// struct FRotator*               aRotation                      (Parm, ZeroConstructor, IsPlainOldData)

void ABosco::MineEffects(class UTerrainMaterial** aTerrainMaterial, struct FVector_NetQuantize* aLocation, struct FRotator* aRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.MineEffects");

	ABosco_MineEffects_Params params;
	params.aTerrainMaterial = aTerrainMaterial;
	params.aLocation = aLocation;
	params.aRotation = aRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.GetUpgradeComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUpgradableBoscoComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUpgradableBoscoComponent* ABosco::GetUpgradeComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.GetUpgradeComponent");

	ABosco_GetUpgradeComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bosco.GetReviveCharges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ABosco::GetReviveCharges()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.GetReviveCharges");

	ABosco_GetReviveCharges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bosco.GetPlayerAbillity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoscoAbillityComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBoscoAbillityComponent* ABosco::GetPlayerAbillity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.GetPlayerAbillity");

	ABosco_GetPlayerAbillity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bosco.GetCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDroneAIState                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDroneAIState ABosco::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.GetCurrentState");

	ABosco_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bosco.GetCarryInterrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABosco::GetCarryInterrupted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.GetCarryInterrupted");

	ABosco_GetCarryInterrupted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Bosco.FireEffects
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector*                fireDirection                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ABosco::FireEffects(struct FVector* fireDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.FireEffects");

	ABosco_FireEffects_Params params;
	params.fireDirection = fireDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Bosco.DoPickupGemAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABosco::DoPickupGemAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Bosco.DoPickupGemAnimation");

	ABosco_DoPickupGemAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoscoAbillityComponent.GetMaxCharges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBoscoAbillityComponent::GetMaxCharges()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoAbillityComponent.GetMaxCharges");

	UBoscoAbillityComponent_GetMaxCharges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoscoAbillityComponent.GetCharges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBoscoAbillityComponent::GetCharges()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoAbillityComponent.GetCharges");

	UBoscoAbillityComponent_GetCharges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAIController.SetAlerted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isAlerted                      (Parm, ZeroConstructor, IsPlainOldData)

void AFSDAIController::SetAlerted(bool* isAlerted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAIController.SetAlerted");

	AFSDAIController_SetAlerted_Params params;
	params.isAlerted = isAlerted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAIController.RegisterBlackboardChanges
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName*                  Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFSDAIController::RegisterBlackboardChanges(struct FName* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAIController.RegisterBlackboardChanges");

	AFSDAIController_RegisterBlackboardChanges_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAIController.Recieve_BlackboardValueChanged
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName*                  KeyName                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFSDAIController::Recieve_BlackboardValueChanged(struct FName* KeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAIController.Recieve_BlackboardValueChanged");

	AFSDAIController_Recieve_BlackboardValueChanged_Params params;
	params.KeyName = KeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAIController.OnAttackingChanged
// (Final, Native, Protected)
// Parameters:
// bool*                          attacking                      (Parm, ZeroConstructor, IsPlainOldData)

void AFSDAIController::OnAttackingChanged(bool* attacking)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAIController.OnAttackingChanged");

	AFSDAIController_OnAttackingChanged_Params params;
	params.attacking = attacking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAIController.GetIsAlerted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDAIController::GetIsAlerted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAIController.GetIsAlerted");

	AFSDAIController_GetIsAlerted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoscoController.ReviveTarget
// (Final, Native, Public, BlueprintCallable)

void ABoscoController::ReviveTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.ReviveTarget");

	ABoscoController_ReviveTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.RegisterPlayer
// (Final, Native, Private)
// Parameters:
// class APlayerCharacter**       APlayerCharacter               (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::RegisterPlayer(class APlayerCharacter** APlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.RegisterPlayer");

	ABoscoController_RegisterPlayer_Params params;
	params.APlayerCharacter = APlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.PickupGem
// (Final, Native, Public, BlueprintCallable)

void ABoscoController::PickupGem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.PickupGem");

	ABoscoController_PickupGem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.OnSecondaryLaserPointer
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 aTarget                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                aLocation                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ABoscoController::OnSecondaryLaserPointer(class AActor** aTarget, struct FVector* aLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.OnSecondaryLaserPointer");

	ABoscoController_OnSecondaryLaserPointer_Params params;
	params.aTarget = aTarget;
	params.aLocation = aLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.OnPlayerShout
// (Native, Public)
// Parameters:
// class APlayerCharacter**       APlayerCharacter               (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::OnPlayerShout(class APlayerCharacter** APlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.OnPlayerShout");

	ABoscoController_OnPlayerShout_Params params;
	params.APlayerCharacter = APlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.OnPlayerSalute
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       aCharacater                    (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::OnPlayerSalute(class APlayerCharacter** aCharacater)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.OnPlayerSalute");

	ABoscoController_OnPlayerSalute_Params params;
	params.aCharacater = aCharacater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.OnPlayerLeave
// (Native, Public)
// Parameters:
// class AFSDPlayerState**        APlayerState                   (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::OnPlayerLeave(class AFSDPlayerState** APlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.OnPlayerLeave");

	ABoscoController_OnPlayerLeave_Params params;
	params.APlayerState = APlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.OnLaserPointer
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 aTarget                        (Parm, ZeroConstructor, IsPlainOldData)
// ELaserPointerTargetType*       aROI                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                aMineLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor**                 AGem                           (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::OnLaserPointer(class AActor** aTarget, ELaserPointerTargetType* aROI, struct FVector* aMineLocation, class AActor** AGem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.OnLaserPointer");

	ABoscoController_OnLaserPointer_Params params;
	params.aTarget = aTarget;
	params.aROI = aROI;
	params.aMineLocation = aMineLocation;
	params.AGem = AGem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.OnJobFinished
// (Final, Native, Public, BlueprintCallable)

void ABoscoController::OnJobFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.OnJobFinished");

	ABoscoController_OnJobFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.GetPointNearPlayers
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ABoscoController::GetPointNearPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.GetPointNearPlayers");

	ABoscoController_GetPointNearPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoscoController.GenerateNewRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 aTarget                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                aLocation                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         aRange                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         aHeightRestriction             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         aMinRange                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          aTryToStayOutOfTheWay          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          aStayBehind                    (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::GenerateNewRelativeLocation(class AActor** aTarget, struct FVector* aLocation, float* aRange, float* aHeightRestriction, float* aMinRange, bool* aTryToStayOutOfTheWay, bool* aStayBehind)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.GenerateNewRelativeLocation");

	ABoscoController_GenerateNewRelativeLocation_Params params;
	params.aTarget = aTarget;
	params.aLocation = aLocation;
	params.aRange = aRange;
	params.aHeightRestriction = aHeightRestriction;
	params.aMinRange = aMinRange;
	params.aTryToStayOutOfTheWay = aTryToStayOutOfTheWay;
	params.aStayBehind = aStayBehind;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.GemUsed
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       usedBy                         (Parm, ZeroConstructor, IsPlainOldData)

void ABoscoController::GemUsed(class APlayerCharacter** usedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.GemUsed");

	ABoscoController_GemUsed_Params params;
	params.usedBy = usedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoscoController.ConfirmPickup
// (Final, Native, Public)

void ABoscoController::ConfirmPickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoController.ConfirmPickup");

	ABoscoController_ConfirmPickup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BoxFunctionLibrary.CreateBoxAt
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FBox                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FBox UBoxFunctionLibrary::STATIC_CreateBoxAt(struct FVector* Location, struct FVector* Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoxFunctionLibrary.CreateBoxAt");

	UBoxFunctionLibrary_CreateBoxAt_Params params;
	params.Location = Location;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoxFunctionLibrary.ClosestPointToBox
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FBox*                   Box                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBoxFunctionLibrary::STATIC_ClosestPointToBox(struct FVector* Pos, struct FBox* Box)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoxFunctionLibrary.ClosestPointToBox");

	UBoxFunctionLibrary_ClosestPointToBox_Params params;
	params.Pos = Pos;
	params.Box = Box;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoxFunctionLibrary.BoxSize
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox*                   Box                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBoxFunctionLibrary::STATIC_BoxSize(struct FBox* Box)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoxFunctionLibrary.BoxSize");

	UBoxFunctionLibrary_BoxSize_Params params;
	params.Box = Box;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoxFunctionLibrary.BoxExtends
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox*                   Box                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBoxFunctionLibrary::STATIC_BoxExtends(struct FBox* Box)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoxFunctionLibrary.BoxExtends");

	UBoxFunctionLibrary_BoxExtends_Params params;
	params.Box = Box;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoxFunctionLibrary.BoxCenter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox*                   Box                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBoxFunctionLibrary::STATIC_BoxCenter(struct FBox* Box)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoxFunctionLibrary.BoxCenter");

	UBoxFunctionLibrary_BoxCenter_Params params;
	params.Box = Box;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CalldownItem.Server_Call_Resupply
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ACalldownItem::Server_Call_Resupply(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CalldownItem.Server_Call_Resupply");

	ACalldownItem_Server_Call_Resupply_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CampaignManager.StartNewCampaign
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 campaignClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDSaveGame**           SaveGame                       (Parm, ZeroConstructor, IsPlainOldData)

void UCampaignManager::StartNewCampaign(class UClass** campaignClass, class UFSDSaveGame** SaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.StartNewCampaign");

	UCampaignManager_StartNewCampaign_Params params;
	params.campaignClass = campaignClass;
	params.SaveGame = SaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CampaignManager.SkipMainCampaign
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UCampaignManager::SkipMainCampaign(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.SkipMainCampaign");

	UCampaignManager_SkipMainCampaign_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CampaignManager.IsWeeklyCampaignCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// ECampaignType*                 campaigntype                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaignManager::IsWeeklyCampaignCompleted(class UObject** WorldContext, ECampaignType* campaigntype)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.IsWeeklyCampaignCompleted");

	UCampaignManager_IsWeeklyCampaignCompleted_Params params;
	params.WorldContext = WorldContext;
	params.campaigntype = campaigntype;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.IsInCampaignMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaignManager::IsInCampaignMission(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.IsInCampaignMission");

	UCampaignManager_IsInCampaignMission_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.IsCampaignRestrictionsMet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// class UDifficultySetting**     optionalDifficulty             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaignManager::IsCampaignRestrictionsMet(class UObject** WorldContextObject, class UGeneratedMission** mission, class UDifficultySetting** optionalDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.IsCampaignRestrictionsMet");

	UCampaignManager_IsCampaignRestrictionsMet_Params params;
	params.WorldContextObject = WorldContextObject;
	params.mission = mission;
	params.optionalDifficulty = optionalDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.IsCampaignMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaignManager::IsCampaignMission(class UObject** WorldContextObject, class UGeneratedMission** mission)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.IsCampaignMission");

	UCampaignManager_IsCampaignMission_Params params;
	params.WorldContextObject = WorldContextObject;
	params.mission = mission;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.IsActiveCampaign
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCampaign**              Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaignManager::IsActiveCampaign(class UCampaign** Campaign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.IsActiveCampaign");

	UCampaignManager_IsActiveCampaign_Params params;
	params.Campaign = Campaign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.GetUncompletedCampaigns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UCampaignManager::GetUncompletedCampaigns(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.GetUncompletedCampaigns");

	UCampaignManager_GetUncompletedCampaigns_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.GetCampaingMissionFromSeeds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           GlobalSeed                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           MissionSeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGeneratedMission*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGeneratedMission* UCampaignManager::GetCampaingMissionFromSeeds(class UObject** WorldContextObject, int* GlobalSeed, int* MissionSeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.GetCampaingMissionFromSeeds");

	UCampaignManager_GetCampaingMissionFromSeeds_Params params;
	params.WorldContextObject = WorldContextObject;
	params.GlobalSeed = GlobalSeed;
	params.MissionSeed = MissionSeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.GetCampaingMission
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UGeneratedMission*>* missions                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int*                           MissionSeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGeneratedMission*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGeneratedMission* UCampaignManager::GetCampaingMission(TArray<class UGeneratedMission*>* missions, int* MissionSeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.GetCampaingMission");

	UCampaignManager_GetCampaingMission_Params params;
	params.missions = missions;
	params.MissionSeed = MissionSeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignManager.AbortActiveCampaign
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFSDSaveGame**           SaveGame                       (Parm, ZeroConstructor, IsPlainOldData)

void UCampaignManager::AbortActiveCampaign(class UFSDSaveGame** SaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignManager.AbortActiveCampaign");

	UCampaignManager_AbortActiveCampaign_Params params;
	params.SaveGame = SaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Campaign.IsComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaign::IsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.IsComplete");

	UCampaign_IsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.IsCampaignComplete
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaign::STATIC_IsCampaignComplete(class UObject** WorldContext, class UClass** Campaign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.IsCampaignComplete");

	UCampaign_IsCampaignComplete_Params params;
	params.WorldContext = WorldContext;
	params.Campaign = Campaign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.GetRequiredCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UCampaign::GetRequiredCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.GetRequiredCharacter");

	UCampaign_GetRequiredCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.GetReference
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// class UCampaign*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCampaign* UCampaign::STATIC_GetReference(class UClass** Campaign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.GetReference");

	UCampaign_GetReference_Params params;
	params.Campaign = Campaign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.GetPreviousMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCampaignMission*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCampaignMission* UCampaign::GetPreviousMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.GetPreviousMission");

	UCampaign_GetPreviousMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.GetPicture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UCampaign::GetPicture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.GetPicture");

	UCampaign_GetPicture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.GetCampaignTitle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UCampaign::STATIC_GetCampaignTitle(class UClass** Campaign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.GetCampaignTitle");

	UCampaign_GetCampaignTitle_Params params;
	params.Campaign = Campaign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.GetActiveMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCampaignMission*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCampaignMission* UCampaign::GetActiveMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.GetActiveMission");

	UCampaign_GetActiveMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.CanStartCampaign
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaign::CanStartCampaign(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.CanStartCampaign");

	UCampaign_CanStartCampaign_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Campaign.AreRestrictionsMet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDifficultySetting**     optionalDifficulty             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaign::AreRestrictionsMet(class AFSDPlayerController** Player, class UDifficultySetting** optionalDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Campaign.AreRestrictionsMet");

	UCampaign_AreRestrictionsMet_Params params;
	params.Player = Player;
	params.optionalDifficulty = optionalDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignMission.GetMissionTemplate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMissionTemplate*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMissionTemplate* UCampaignMission::GetMissionTemplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignMission.GetMissionTemplate");

	UCampaignMission_GetMissionTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CampaignRequirement.IsRequirementMet
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UCampaign**              Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCampaignRequirement::IsRequirementMet(class AFSDPlayerController** Player, class UCampaign** Campaign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CampaignRequirement.IsRequirementMet");

	UCampaignRequirement_IsRequirementMet_Params params;
	params.Player = Player;
	params.Campaign = Campaign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeeklyTimerCampaignRequirement.GetWeeklyTimeLeft
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FTimespan               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FTimespan UWeeklyTimerCampaignRequirement::GetWeeklyTimeLeft(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeeklyTimerCampaignRequirement.GetWeeklyTimeLeft");

	UWeeklyTimerCampaignRequirement_GetWeeklyTimeLeft_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeeklyTimerCampaignRequirement.GetTimeUntillNewCampaign
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FTimespan               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FTimespan UWeeklyTimerCampaignRequirement::GetTimeUntillNewCampaign(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeeklyTimerCampaignRequirement.GetTimeUntillNewCampaign");

	UWeeklyTimerCampaignRequirement_GetTimeUntillNewCampaign_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeeklyTimerCampaignRequirement.GetHasCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCampaign**              Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeeklyTimerCampaignRequirement::GetHasCompleted(class UCampaign** Campaign, class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeeklyTimerCampaignRequirement.GetHasCompleted");

	UWeeklyTimerCampaignRequirement_GetHasCompleted_Params params;
	params.Campaign = Campaign;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CapacityHoldingItemAggregator.UseAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)

void UCapacityHoldingItemAggregator::UseAmmo(int* count)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityHoldingItemAggregator.UseAmmo");

	UCapacityHoldingItemAggregator_UseAmmo_Params params;
	params.count = count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityHoldingItemAggregator.SetMaxAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int*                           InMaxAmmo                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          InChangeCurrentAmount          (Parm, ZeroConstructor, IsPlainOldData)

void UCapacityHoldingItemAggregator::SetMaxAmmo(int* InMaxAmmo, bool* InChangeCurrentAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityHoldingItemAggregator.SetMaxAmmo");

	UCapacityHoldingItemAggregator_SetMaxAmmo_Params params;
	params.InMaxAmmo = InMaxAmmo;
	params.InChangeCurrentAmount = InChangeCurrentAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityHoldingItemAggregator.Resupply
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void UCapacityHoldingItemAggregator::Resupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityHoldingItemAggregator.Resupply");

	UCapacityHoldingItemAggregator_Resupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityHoldingItemAggregator.OnRep_MaxAmmo
// (Final, Native, Protected)

void UCapacityHoldingItemAggregator::OnRep_MaxAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityHoldingItemAggregator.OnRep_MaxAmmo");

	UCapacityHoldingItemAggregator_OnRep_MaxAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityHoldingItemAggregator.OnRep_AmmoCount
// (Final, Native, Protected)

void UCapacityHoldingItemAggregator::OnRep_AmmoCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityHoldingItemAggregator.OnRep_AmmoCount");

	UCapacityHoldingItemAggregator_OnRep_AmmoCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CapacityHoldingItemAggregator.AddAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UCapacityHoldingItemAggregator::AddAmmo(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityHoldingItemAggregator.AddAmmo");

	UCapacityHoldingItemAggregator_AddAmmo_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CappedResource.TransferAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCappedResource**        Receiver                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCappedResource::TransferAll(class UCappedResource** Receiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.TransferAll");

	UCappedResource_TransferAll_Params params;
	params.Receiver = Receiver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.Transfer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UCappedResource**        Receiver                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCappedResource::Transfer(float* amount, class UCappedResource** Receiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.Transfer");

	UCappedResource_Transfer_Params params;
	params.amount = amount;
	params.Receiver = Receiver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.OnRep_FullFlag
// (Final, Native, Protected)
// Parameters:
// int*                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UCappedResource::OnRep_FullFlag(int* OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.OnRep_FullFlag");

	UCappedResource_OnRep_FullFlag_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CappedResource.OnRep_CurrentAmount
// (Final, Native, Protected)
// Parameters:
// float*                         OldAmount                      (Parm, ZeroConstructor, IsPlainOldData)

void UCappedResource::OnRep_CurrentAmount(float* OldAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.OnRep_CurrentAmount");

	UCappedResource_OnRep_CurrentAmount_Params params;
	params.OldAmount = OldAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CappedResource.IsObjectiveResource
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsCompleted                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCappedResource::IsObjectiveResource(class UObject** WorldContext, bool* IsCompleted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.IsObjectiveResource");

	UCappedResource_IsObjectiveResource_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (IsCompleted != nullptr)
		*IsCompleted = params.IsCompleted;

	return params.ReturnValue;
}


// Function FSD.CappedResource.IsFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCappedResource::IsFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.IsFull");

	UCappedResource_IsFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCappedResource::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.IsEmpty");

	UCappedResource_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.IsCraftingResource
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCappedResource::IsCraftingResource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.IsCraftingResource");

	UCappedResource_IsCraftingResource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UCappedResource::GetTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.GetTitle");

	UCappedResource_GetTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.GetColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor UCappedResource::GetColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.GetColor");

	UCappedResource_GetColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.GetCapacityPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCappedResource::GetCapacityPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.GetCapacityPct");

	UCappedResource_GetCapacityPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.Deduct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCappedResource::Deduct(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.Deduct");

	UCappedResource_Deduct_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CappedResource.Add
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCappedResource::Add(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CappedResource.Add");

	UCappedResource_Add_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UsableComponentBase.GetUseText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UUsableComponentBase::GetUseText(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableComponentBase.GetUseText");

	UUsableComponentBase_GetUseText_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UsableComponentBase.GetShowUsingUI
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUsableComponentBase::GetShowUsingUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableComponentBase.GetShowUsingUI");

	UUsableComponentBase_GetShowUsingUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UsableComponentBase.GetHideProgressBar
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUsableComponentBase::GetHideProgressBar(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableComponentBase.GetHideProgressBar");

	UUsableComponentBase_GetHideProgressBar_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UsableComponentBase.GetHideActionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUsableComponentBase::GetHideActionText(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableComponentBase.GetHideActionText");

	UUsableComponentBase_GetHideActionText_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UsableComponent.SetUseText
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  NewText                        (ConstParm, Parm, OutParm, ReferenceParm)

void UUsableComponent::SetUseText(struct FText* NewText)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableComponent.SetUseText");

	UUsableComponent_SetUseText_Params params;
	params.NewText = NewText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UsableComponent.HasDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUsableComponent::HasDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableComponent.HasDuration");

	UUsableComponent_HasDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InstantUsable.SetCanUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          canUse                         (Parm, ZeroConstructor, IsPlainOldData)

void UInstantUsable::SetCanUse(bool* canUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InstantUsable.SetCanUse");

	UInstantUsable_SetCanUse_Params params;
	params.canUse = canUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InstantUsable.OnRep_Usable
// (Final, Native, Protected)

void UInstantUsable::OnRep_Usable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InstantUsable.OnRep_Usable");

	UInstantUsable_OnRep_Usable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CarriableComponent.PickupItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCarriableComponent::PickupItem(class APlayerCharacter** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CarriableComponent.PickupItem");

	UCarriableComponent_PickupItem_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CarriableComponent.OnRep_CarriedBy
// (Final, Native, Protected)

void UCarriableComponent::OnRep_CarriedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CarriableComponent.OnRep_CarriedBy");

	UCarriableComponent_OnRep_CarriedBy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CarriableComponent.DropItem
// (Final, Native, Public, BlueprintCallable)

void UCarriableComponent::DropItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CarriableComponent.DropItem");

	UCarriableComponent_DropItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourceData.GetOwnedAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UResourceData::GetOwnedAmount(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceData.GetOwnedAmount");

	UResourceData_GetOwnedAmount_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.SpawnSpecialEvents
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::SpawnSpecialEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SpawnSpecialEvents");

	AProceduralSetup_SpawnSpecialEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SpawnObjectiveEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AProceduralSetup::SpawnObjectiveEncounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SpawnObjectiveEncounter");

	AProceduralSetup_SpawnObjectiveEncounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SpawnItemsDepths_Async
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)
// int*                           Depth                          (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::STATIC_SpawnItemsDepths_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo, int* Depth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SpawnItemsDepths_Async");

	AProceduralSetup_SpawnItemsDepths_Async_Params params;
	params.setup = setup;
	params.LatentInfo = LatentInfo;
	params.Depth = Depth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SpawnItems_Async
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void AProceduralSetup::STATIC_SpawnItems_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SpawnItems_Async");

	AProceduralSetup_SpawnItems_Async_Params params;
	params.setup = setup;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SpawnItems
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::SpawnItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SpawnItems");

	AProceduralSetup_SpawnItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SpawnEncounters
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AProceduralSetup::SpawnEncounters()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SpawnEncounters");

	AProceduralSetup_SpawnEncounters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SetSeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Seed                           (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::SetSeed(int* Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SetSeed");

	AProceduralSetup_SetSeed_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.SetObjectivesCompleted
// (Final, Native, Private)

void AProceduralSetup::SetObjectivesCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.SetObjectivesCompleted");

	AProceduralSetup_SetObjectivesCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.ResetData
// (Event, Public, BlueprintEvent)

void AProceduralSetup::ResetData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.ResetData");

	AProceduralSetup_ResetData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.RemoveBLockedEntrances
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::RemoveBLockedEntrances()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.RemoveBLockedEntrances");

	AProceduralSetup_RemoveBLockedEntrances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.OnPLSDataRecieved
// (Event, Public, BlueprintEvent)

void AProceduralSetup::OnPLSDataRecieved()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.OnPLSDataRecieved");

	AProceduralSetup_OnPLSDataRecieved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.OnObjectivesCompleted
// (Event, Protected, BlueprintEvent)

void AProceduralSetup::OnObjectivesCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.OnObjectivesCompleted");

	AProceduralSetup_OnObjectivesCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.IsGeneratedDataReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AProceduralSetup::IsGeneratedDataReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.IsGeneratedDataReady");

	AProceduralSetup_IsGeneratedDataReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.GetMissionDNA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMissionDNA*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMissionDNA* AProceduralSetup::GetMissionDNA()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GetMissionDNA");

	AProceduralSetup_GetMissionDNA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.GetCSGWorld
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ADeepCSGWorld*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADeepCSGWorld* AProceduralSetup::GetCSGWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GetCSGWorld");

	AProceduralSetup_GetCSGWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.GenerateRoomsFromGraph_Async
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void AProceduralSetup::STATIC_GenerateRoomsFromGraph_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GenerateRoomsFromGraph_Async");

	AProceduralSetup_GenerateRoomsFromGraph_Async_Params params;
	params.setup = setup;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GenerateRoomsFromGraph
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::GenerateRoomsFromGraph()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GenerateRoomsFromGraph");

	AProceduralSetup_GenerateRoomsFromGraph_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GenerateRoomGenerator
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::GenerateRoomGenerator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GenerateRoomGenerator");

	AProceduralSetup_GenerateRoomGenerator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GenerateResourceVeins_Async
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void AProceduralSetup::STATIC_GenerateResourceVeins_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GenerateResourceVeins_Async");

	AProceduralSetup_GenerateResourceVeins_Async_Params params;
	params.setup = setup;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GenerateResourceVeins
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::GenerateResourceVeins()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GenerateResourceVeins");

	AProceduralSetup_GenerateResourceVeins_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GeneratePostCarveRooms_Async
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void AProceduralSetup::STATIC_GeneratePostCarveRooms_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GeneratePostCarveRooms_Async");

	AProceduralSetup_GeneratePostCarveRooms_Async_Params params;
	params.setup = setup;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GeneratePostCarveRooms
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::GeneratePostCarveRooms()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GeneratePostCarveRooms");

	AProceduralSetup_GeneratePostCarveRooms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.GenerateLandscape
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AProceduralSetup::GenerateLandscape()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.GenerateLandscape");

	AProceduralSetup_GenerateLandscape_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.FindLocationInDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         horizontalDeviation            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         verticalDeviation              (Parm, ZeroConstructor, IsPlainOldData)
// struct FRandRange*             distance                       (Parm)
// float*                         additionalDistance             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AProceduralSetup::FindLocationInDirection(struct FVector* Origin, struct FVector* Direction, float* horizontalDeviation, float* verticalDeviation, struct FRandRange* distance, float* additionalDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.FindLocationInDirection");

	AProceduralSetup_FindLocationInDirection_Params params;
	params.Origin = Origin;
	params.Direction = Direction;
	params.horizontalDeviation = horizontalDeviation;
	params.verticalDeviation = verticalDeviation;
	params.distance = distance;
	params.additionalDistance = additionalDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.FindEntrancesForAllConnections
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::FindEntrancesForAllConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.FindEntrancesForAllConnections");

	AProceduralSetup_FindEntrancesForAllConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.FillTunnels_Async
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void AProceduralSetup::STATIC_FillTunnels_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.FillTunnels_Async");

	AProceduralSetup_FillTunnels_Async_Params params;
	params.setup = setup;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.FillTunnels
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::FillTunnels()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.FillTunnels");

	AProceduralSetup_FillTunnels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.EndRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           ID                             (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::EndRoom(int* ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.EndRoom");

	AProceduralSetup_EndRoom_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.DoneCarving
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::DoneCarving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.DoneCarving");

	AProceduralSetup_DoneCarving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.DoAsyncThreadGeneration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AProceduralSetup::DoAsyncThreadGeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.DoAsyncThreadGeneration");

	AProceduralSetup_DoAsyncThreadGeneration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.CreateTunnelPaths
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::CreateTunnelPaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CreateTunnelPaths");

	AProceduralSetup_CreateTunnelPaths_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.CreateSecretRooms
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::CreateSecretRooms()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CreateSecretRooms");

	AProceduralSetup_CreateSecretRooms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.CreateItemDepths
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AProceduralSetup::CreateItemDepths()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CreateItemDepths");

	AProceduralSetup_CreateItemDepths_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.CreateGeneratedInfluenceSet
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::CreateGeneratedInfluenceSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CreateGeneratedInfluenceSet");

	AProceduralSetup_CreateGeneratedInfluenceSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.CreateAdditionalRooms
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::CreateAdditionalRooms()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CreateAdditionalRooms");

	AProceduralSetup_CreateAdditionalRooms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.ConnectRooms
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FRoomNode               From                           (Parm, OutParm, ReferenceParm)
// struct FRoomNode               to                             (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AProceduralSetup::ConnectRooms(struct FRoomNode* From, struct FRoomNode* to)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.ConnectRooms");

	AProceduralSetup_ConnectRooms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (From != nullptr)
		*From = params.From;
	if (to != nullptr)
		*to = params.to;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.ConnectRoomIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           fromID                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           toID                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AProceduralSetup::ConnectRoomIds(int* fromID, int* toID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.ConnectRoomIds");

	AProceduralSetup_ConnectRoomIds_Params params;
	params.fromID = fromID;
	params.toID = toID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.CommitCarving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          finalCommit                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          generateMesh                   (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::CommitCarving(bool* finalCommit, bool* generateMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CommitCarving");

	AProceduralSetup_CommitCarving_Params params;
	params.finalCommit = finalCommit;
	params.generateMesh = generateMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.CarveWithGeneratedInstantCarvers
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::CarveWithGeneratedInstantCarvers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.CarveWithGeneratedInstantCarvers");

	AProceduralSetup_CarveWithGeneratedInstantCarvers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.BeginRoom
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          CanHaveEnemies                 (Parm, ZeroConstructor, IsPlainOldData)
// class URoomGenerator**         baseGenerator                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 outCenter                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRoomNode               outRoom                        (Parm, OutParm)
// float*                         resourceMultiplayer            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AProceduralSetup::BeginRoom(struct FVector* Location, float* Rotation, bool* CanHaveEnemies, class URoomGenerator** baseGenerator, float* resourceMultiplayer, struct FVector* outCenter, struct FRoomNode* outRoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.BeginRoom");

	AProceduralSetup_BeginRoom_Params params;
	params.Location = Location;
	params.Rotation = Rotation;
	params.CanHaveEnemies = CanHaveEnemies;
	params.baseGenerator = baseGenerator;
	params.resourceMultiplayer = resourceMultiplayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outCenter != nullptr)
		*outCenter = params.outCenter;
	if (outRoom != nullptr)
		*outRoom = params.outRoom;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.BeginLiveGeneration
// (Event, Public, BlueprintEvent)

void AProceduralSetup::BeginLiveGeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.BeginLiveGeneration");

	AProceduralSetup_BeginLiveGeneration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.BeginGenerating
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::BeginGenerating()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.BeginGenerating");

	AProceduralSetup_BeginGenerating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddToRoom
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int*                           ID                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// class URoomGenerator**         additionalRoomGenerator        (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::AddToRoom(int* ID, struct FVector* Location, float* Rotation, class URoomGenerator** additionalRoomGenerator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddToRoom");

	AProceduralSetup_AddToRoom_Params params;
	params.ID = ID;
	params.Location = Location;
	params.Rotation = Rotation;
	params.additionalRoomGenerator = additionalRoomGenerator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddRoomToInitialState
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FRoomNode*              RoomNode                       (ConstParm, Parm, OutParm, ReferenceParm)

void AProceduralSetup::AddRoomToInitialState(struct FRoomNode* RoomNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddRoomToInitialState");

	AProceduralSetup_AddRoomToInitialState_Params params;
	params.RoomNode = RoomNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddRoom
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          CanHaveEnemies                 (Parm, ZeroConstructor, IsPlainOldData)
// class URoomGeneratorBase**     RoomGenerator                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          canBeRotated                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 outCenter                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRoomNode               outRoom                        (Parm, OutParm)
// float*                         ResourceMultiplier             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AProceduralSetup::AddRoom(struct FVector* Location, bool* CanHaveEnemies, class URoomGeneratorBase** RoomGenerator, bool* canBeRotated, float* ResourceMultiplier, struct FVector* outCenter, struct FRoomNode* outRoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddRoom");

	AProceduralSetup_AddRoom_Params params;
	params.Location = Location;
	params.CanHaveEnemies = CanHaveEnemies;
	params.RoomGenerator = RoomGenerator;
	params.canBeRotated = canBeRotated;
	params.ResourceMultiplier = ResourceMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outCenter != nullptr)
		*outCenter = params.outCenter;
	if (outRoom != nullptr)
		*outRoom = params.outRoom;

	return params.ReturnValue;
}


// Function FSD.ProceduralSetup.AddInfluenceToTunnelEntrances
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCaveInfluencer**        Influencer                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::AddInfluenceToTunnelEntrances(class UCaveInfluencer** Influencer, float* Range)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddInfluenceToTunnelEntrances");

	AProceduralSetup_AddInfluenceToTunnelEntrances_Params params;
	params.Influencer = Influencer;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddDebrisVariantsToRooms
// (Final, Native, Public, BlueprintCallable)

void AProceduralSetup::AddDebrisVariantsToRooms()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddDebrisVariantsToRooms");

	AProceduralSetup_AddDebrisVariantsToRooms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddDebrisCollider
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDebrisCapsule*         Capsule                        (ConstParm, Parm, OutParm, ReferenceParm)

void AProceduralSetup::AddDebrisCollider(struct FDebrisCapsule* Capsule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddDebrisCollider");

	AProceduralSetup_AddDebrisCollider_Params params;
	params.Capsule = Capsule;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddCaveInfluence
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UCaveInfluencer**        Influencer                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)

void AProceduralSetup::AddCaveInfluence(class UCaveInfluencer** Influencer, struct FVector* Location, float* Range)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddCaveInfluence");

	AProceduralSetup_AddCaveInfluence_Params params;
	params.Influencer = Influencer;
	params.Location = Location;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralSetup.AddAirParticlesCollider
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDebrisCapsule*         Capsule                        (ConstParm, Parm, OutParm, ReferenceParm)

void AProceduralSetup::AddAirParticlesCollider(struct FDebrisCapsule* Capsule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralSetup.AddAirParticlesCollider");

	AProceduralSetup_AddAirParticlesCollider_Params params;
	params.Capsule = Capsule;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RoomBurner.SpawnEncounter
// (Final, Native, Protected)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)

void ARoomBurner::SpawnEncounter(class AProceduralSetup** setup)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RoomBurner.SpawnEncounter");

	ARoomBurner_SpawnEncounter_Params params;
	params.setup = setup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyPawn.OnRep_QueuedMontage
// (Final, Native, Protected)

void AEnemyPawn::OnRep_QueuedMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyPawn.OnRep_QueuedMontage");

	AEnemyPawn_OnRep_QueuedMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyPawn.GetMesh
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AEnemyPawn::GetMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyPawn.GetMesh");

	AEnemyPawn_GetMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CaveLeech.OnRep_State
// (Final, Native, Protected)

void ACaveLeech::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.OnRep_State");

	ACaveLeech_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveLeech.GetTentacleTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ACaveLeech::GetTentacleTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.GetTentacleTargetLocation");

	ACaveLeech_GetTentacleTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CaveLeech.GetMouthLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector ACaveLeech::GetMouthLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.GetMouthLocation");

	ACaveLeech_GetMouthLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CaveLeech.GetCurrentTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ACaveLeech::GetCurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.GetCurrentTarget");

	ACaveLeech_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CaveLeech.Died
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACaveLeech::Died(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.Died");

	ACaveLeech_Died_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveLeech.Damaged
// (Final, Native, Protected)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ACaveLeech::Damaged(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.Damaged");

	ACaveLeech_Damaged_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveLeech.BP_OnTentacleLocationChanged
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void ACaveLeech::BP_OnTentacleLocationChanged(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.BP_OnTentacleLocationChanged");

	ACaveLeech_BP_OnTentacleLocationChanged_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveLeech.BP_OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECaveLeechState*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void ACaveLeech::BP_OnStateChanged(ECaveLeechState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.BP_OnStateChanged");

	ACaveLeech_BP_OnStateChanged_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveLeech.BP_OnBite
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHealthComponent**       TargetHealth                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACaveLeech::BP_OnBite(class UHealthComponent** TargetHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveLeech.BP_OnBite");

	ACaveLeech_BP_OnBite_Params params;
	params.TargetHealth = TargetHealth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveObject.TriggerNetworkUpdate
// (Final, Native, Protected, BlueprintCallable)

void ACaveObject::TriggerNetworkUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveObject.TriggerNetworkUpdate");

	ACaveObject_TriggerNetworkUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveObject.ResumeNetworkUpdates
// (Final, Native, Protected, BlueprintCallable)

void ACaveObject::ResumeNetworkUpdates()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveObject.ResumeNetworkUpdates");

	ACaveObject_ResumeNetworkUpdates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveObject.Recieve_OnGameStarted
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ACaveObject::Recieve_OnGameStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveObject.Recieve_OnGameStarted");

	ACaveObject_Recieve_OnGameStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveObject.PauseNetworkUpdates
// (Final, Native, Protected, BlueprintCallable)

void ACaveObject::PauseNetworkUpdates()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveObject.PauseNetworkUpdates");

	ACaveObject_PauseNetworkUpdates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveVine.BP_OnTargetChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHealthComponent**       NewTarget                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACaveVine::BP_OnTargetChanged(class UHealthComponent** NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveVine.BP_OnTargetChanged");

	ACaveVine_BP_OnTargetChanged_Params params;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveVine.BP_OnInitialized
// (Event, Protected, BlueprintEvent)

void ACaveVine::BP_OnInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveVine.BP_OnInitialized");

	ACaveVine_BP_OnInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CaveWorm.SpawnResource
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UResourceData**          Data                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (Parm, IsPlainOldData)
// struct FVector*                Impulse                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DropOffset                     (Parm, ZeroConstructor, IsPlainOldData)
// class AResourceChunk*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AResourceChunk* ACaveWorm::STATIC_SpawnResource(class UObject** WorldContext, class UResourceData** Data, float* Size, struct FTransform* Transform, struct FVector* Impulse, struct FVector* DropOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveWorm.SpawnResource");

	ACaveWorm_SpawnResource_Params params;
	params.WorldContext = WorldContext;
	params.Data = Data;
	params.Size = Size;
	params.Transform = Transform;
	params.Impulse = Impulse;
	params.DropOffset = DropOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CaveWorm.DropResource
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UResourceData**          Data                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Impulse                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DropOffset                     (Parm, ZeroConstructor, IsPlainOldData)

void ACaveWorm::DropResource(class UResourceData** Data, float* Size, struct FVector* Impulse, struct FVector* DropOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CaveWorm.DropResource");

	ACaveWorm_DropResource_Params params;
	params.Data = Data;
	params.Size = Size;
	params.Impulse = Impulse;
	params.DropOffset = DropOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterCameraController.ResetFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         FadeSpeed                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCameraController::ResetFOV(float* FadeSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterCameraController.ResetFOV");

	UCharacterCameraController_ResetFOV_Params params;
	params.FadeSpeed = FadeSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterCameraController.FOVChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewFOV                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCameraController::FOVChanged(float* NewFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterCameraController.FOVChanged");

	UCharacterCameraController_FOVChanged_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterCameraController.FadeToFOVRelative
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         targetFov                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         FadeSpeed                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCameraController::FadeToFOVRelative(float* targetFov, float* FadeSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterCameraController.FadeToFOVRelative");

	UCharacterCameraController_FadeToFOVRelative_Params params;
	params.targetFov = targetFov;
	params.FadeSpeed = FadeSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterCameraController.FadeToFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         targetFov                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         FadeSpeed                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCameraController::FadeToFOV(float* targetFov, float* FadeSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterCameraController.FadeToFOV");

	UCharacterCameraController_FadeToFOV_Params params;
	params.targetFov = targetFov;
	params.FadeSpeed = FadeSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterGearComponent.UpdateMeshes
// (Final, Native, Protected)

void UCharacterGearComponent::UpdateMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.UpdateMeshes");

	UCharacterGearComponent_UpdateMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterGearComponent.UpdateEquippedVanity
// (Final, Native, Public, BlueprintCallable)

void UCharacterGearComponent::UpdateEquippedVanity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.UpdateEquippedVanity");

	UCharacterGearComponent_UpdateEquippedVanity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterGearComponent.SetEquippedVanityInViewer
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UVanityItem*>*    Vanity                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UCharacterGearComponent::SetEquippedVanityInViewer(TArray<class UVanityItem*>* Vanity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.SetEquippedVanityInViewer");

	UCharacterGearComponent_SetEquippedVanityInViewer_Params params;
	params.Vanity = Vanity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterGearComponent.Server_SetEquippedVanity
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<class UVanityItem*>*    equippedItems                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UCharacterGearComponent::Server_SetEquippedVanity(TArray<class UVanityItem*>* equippedItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.Server_SetEquippedVanity");

	UCharacterGearComponent_Server_SetEquippedVanity_Params params;
	params.equippedItems = equippedItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterGearComponent.Receive_GetEquippedVanityItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Character                      (Parm, ZeroConstructor, IsPlainOldData)
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UVanityItem*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UVanityItem* UCharacterGearComponent::STATIC_Receive_GetEquippedVanityItem(class UObject** WorldContextObject, class UClass** Character, EVanitySlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.Receive_GetEquippedVanityItem");

	UCharacterGearComponent_Receive_GetEquippedVanityItem_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Character = Character;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterGearComponent.Receive_GetAvailableVanityItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class UCharacterVanityItems*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCharacterVanityItems* UCharacterGearComponent::Receive_GetAvailableVanityItems(class UObject** WorldContextObject, class UClass** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.Receive_GetAvailableVanityItems");

	UCharacterGearComponent_Receive_GetAvailableVanityItems_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterGearComponent.OnRep_EquippedVanity
// (Final, Native, Protected)

void UCharacterGearComponent::OnRep_EquippedVanity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.OnRep_EquippedVanity");

	UCharacterGearComponent_OnRep_EquippedVanity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterGearComponent.GetEquippedVanityItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UVanityItem*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UVanityItem* UCharacterGearComponent::GetEquippedVanityItem(EVanitySlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.GetEquippedVanityItem");

	UCharacterGearComponent_GetEquippedVanityItem_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterGearComponent.GetAvailableVanityItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterVanityItems*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCharacterVanityItems* UCharacterGearComponent::GetAvailableVanityItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterGearComponent.GetAvailableVanityItems");

	UCharacterGearComponent_GetAvailableVanityItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.ReceiveStateChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// EIntoxicationState*            NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterIntoxicationComponent::ReceiveStateChange(EIntoxicationState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.ReceiveStateChange");

	UCharacterIntoxicationComponent_ReceiveStateChange_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.ReceivePassOutDrunk
// (Event, Protected, BlueprintEvent)

void UCharacterIntoxicationComponent::ReceivePassOutDrunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.ReceivePassOutDrunk");

	UCharacterIntoxicationComponent_ReceivePassOutDrunk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.ReceiveDrunkTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrunkTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterIntoxicationComponent::ReceiveDrunkTick(float* DeltaTime, float* DrunkTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.ReceiveDrunkTick");

	UCharacterIntoxicationComponent_ReceiveDrunkTick_Params params;
	params.DeltaTime = DeltaTime;
	params.DrunkTime = DrunkTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.ReceiveDrunkEnd
// (Event, Protected, BlueprintEvent)

void UCharacterIntoxicationComponent::ReceiveDrunkEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.ReceiveDrunkEnd");

	UCharacterIntoxicationComponent_ReceiveDrunkEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.ReceiveDrunkBegin
// (Event, Protected, BlueprintEvent)

void UCharacterIntoxicationComponent::ReceiveDrunkBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.ReceiveDrunkBegin");

	UCharacterIntoxicationComponent_ReceiveDrunkBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.CharacterIntoxicationComponent.PassOutDrunkSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterIntoxicationComponent::PassOutDrunkSignature__DelegateSignature(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.CharacterIntoxicationComponent.PassOutDrunkSignature__DelegateSignature");

	UCharacterIntoxicationComponent_PassOutDrunkSignature__DelegateSignature_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.IsPassOutDrunk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterIntoxicationComponent::IsPassOutDrunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.IsPassOutDrunk");

	UCharacterIntoxicationComponent_IsPassOutDrunk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.IsOnSpaceRig
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterIntoxicationComponent::IsOnSpaceRig()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.IsOnSpaceRig");

	UCharacterIntoxicationComponent_IsOnSpaceRig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.IsLocallyControlled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterIntoxicationComponent::IsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.IsLocallyControlled");

	UCharacterIntoxicationComponent_IsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.IsDrunk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterIntoxicationComponent::IsDrunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.IsDrunk");

	UCharacterIntoxicationComponent_IsDrunk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.CharacterIntoxicationComponent.IntoxicationProgressSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterIntoxicationComponent::IntoxicationProgressSignature__DelegateSignature(class APlayerCharacter** Player, float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.CharacterIntoxicationComponent.IntoxicationProgressSignature__DelegateSignature");

	UCharacterIntoxicationComponent_IntoxicationProgressSignature__DelegateSignature_Params params;
	params.Player = Player;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.HasAuthority
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterIntoxicationComponent::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.HasAuthority");

	UCharacterIntoxicationComponent_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.GetSoberingUpCoolDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterIntoxicationComponent::GetSoberingUpCoolDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.GetSoberingUpCoolDown");

	UCharacterIntoxicationComponent_GetSoberingUpCoolDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.GetIntoxicationProgressMapped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveFloat**            Curve                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterIntoxicationComponent::GetIntoxicationProgressMapped(class UCurveFloat** Curve)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.GetIntoxicationProgressMapped");

	UCharacterIntoxicationComponent_GetIntoxicationProgressMapped_Params params;
	params.Curve = Curve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.GetIntoxicationProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterIntoxicationComponent::GetIntoxicationProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.GetIntoxicationProgress");

	UCharacterIntoxicationComponent_GetIntoxicationProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.GetAlcoholPct
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// EDrinkableAlcoholStrength*     Strength                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterIntoxicationComponent::GetAlcoholPct(EDrinkableAlcoholStrength* Strength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.GetAlcoholPct");

	UCharacterIntoxicationComponent_GetAlcoholPct_Params params;
	params.Strength = Strength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterIntoxicationComponent.Consume
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UDrinkableDataAsset**    Drinkable                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterIntoxicationComponent::Consume(class UDrinkableDataAsset** Drinkable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.Consume");

	UCharacterIntoxicationComponent_Consume_Params params;
	params.Drinkable = Drinkable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterIntoxicationComponent.ClearIntoxication
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UCharacterIntoxicationComponent::ClearIntoxication()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterIntoxicationComponent.ClearIntoxication");

	UCharacterIntoxicationComponent_ClearIntoxication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSettings.PreloadAllInventories
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAsyncManager**          AsyncManager                   (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterSettings::PreloadAllInventories(class UAsyncManager** AsyncManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSettings.PreloadAllInventories");

	UCharacterSettings_PreloadAllInventories_Params params;
	params.AsyncManager = AsyncManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSettings.GetPlayerCharacterID
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid*                  ID                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPlayerCharacterID*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlayerCharacterID* UCharacterSettings::GetPlayerCharacterID(struct FGuid* ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSettings.GetPlayerCharacterID");

	UCharacterSettings_GetPlayerCharacterID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterStateComponent.ReceiveStateTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterStateComponent::ReceiveStateTick(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.ReceiveStateTick");

	UCharacterStateComponent_ReceiveStateTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterStateComponent.ReceiveStateExit
// (Event, Protected, BlueprintEvent)

void UCharacterStateComponent::ReceiveStateExit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.ReceiveStateExit");

	UCharacterStateComponent_ReceiveStateExit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterStateComponent.ReceiveStateEnter
// (Event, Protected, BlueprintEvent)

void UCharacterStateComponent::ReceiveStateEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.ReceiveStateEnter");

	UCharacterStateComponent_ReceiveStateEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterStateComponent.IsLocallyControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterStateComponent::IsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.IsLocallyControlled");

	UCharacterStateComponent_IsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterStateComponent.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterStateComponent::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.HasAuthority");

	UCharacterStateComponent_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterStateComponent.GetStateTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterStateComponent::GetStateTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.GetStateTime");

	UCharacterStateComponent_GetStateTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterStateComponent.GetStateID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UCharacterStateComponent::GetStateID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.GetStateID");

	UCharacterStateComponent_GetStateID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterStateComponent.GetStateActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterStateComponent::GetStateActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.GetStateActive");

	UCharacterStateComponent_GetStateActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterStateComponent.GetCharacterMovement
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPlayerMovementComponent* UCharacterStateComponent::GetCharacterMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterStateComponent.GetCharacterMovement");

	UCharacterStateComponent_GetCharacterMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterUseComponent.Server_SetCanUse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EUseRestriction*               UseRestriction                 (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterUseComponent::Server_SetCanUse(EUseRestriction* UseRestriction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.Server_SetCanUse");

	UCharacterUseComponent_Server_SetCanUse_Params params;
	params.UseRestriction = UseRestriction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterUseComponent.Server_EndUse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UCharacterUseComponent::Server_EndUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.Server_EndUse");

	UCharacterUseComponent_Server_EndUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterUseComponent.Server_BeginUse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UUsableComponentBase**   Usable                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterUseComponent::Server_BeginUse(class UUsableComponentBase** Usable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.Server_BeginUse");

	UCharacterUseComponent_Server_BeginUse_Params params;
	params.Usable = Usable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterUseComponent.OnRep_ActiveUsablee
// (Final, Native, Protected)
// Parameters:
// class UUsableComponentBase**   lastUsable                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterUseComponent::OnRep_ActiveUsablee(class UUsableComponentBase** lastUsable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.OnRep_ActiveUsablee");

	UCharacterUseComponent_OnRep_ActiveUsablee_Params params;
	params.lastUsable = lastUsable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterUseComponent.OnCharacterStateChanged
// (Final, Native, Protected)
// Parameters:
// ECharacterState*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterUseComponent::OnCharacterStateChanged(ECharacterState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.OnCharacterStateChanged");

	UCharacterUseComponent_OnCharacterStateChanged_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterUseComponent.IsLookingAtUsable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterUseComponent::IsLookingAtUsable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.IsLookingAtUsable");

	UCharacterUseComponent_IsLookingAtUsable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterUseComponent.IsLookingAtDepositable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterUseComponent::IsLookingAtDepositable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.IsLookingAtDepositable");

	UCharacterUseComponent_IsLookingAtDepositable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterUseComponent.GetUseProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterUseComponent::GetUseProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.GetUseProgress");

	UCharacterUseComponent_GetUseProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterUseComponent.GetIsUsing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterUseComponent::GetIsUsing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.GetIsUsing");

	UCharacterUseComponent_GetIsUsing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterUseComponent.GetIsDepositing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterUseComponent::GetIsDepositing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.GetIsDepositing");

	UCharacterUseComponent_GetIsDepositing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterUseComponent.All_PlaySingleUse
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class UUsableComponentBase**   Usable                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterUseComponent::All_PlaySingleUse(class UUsableComponentBase** Usable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterUseComponent.All_PlaySingleUse");

	UCharacterUseComponent_All_PlaySingleUse_Params params;
	params.Usable = Usable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.CharacterSightComponent.TargetChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor**                 NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    NewPrimitive                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterSightComponent::TargetChangedSignature__DelegateSignature(class AActor** NewTarget, class UPrimitiveComponent** NewPrimitive)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.CharacterSightComponent.TargetChangedSignature__DelegateSignature");

	UCharacterSightComponent_TargetChangedSignature__DelegateSignature_Params params;
	params.NewTarget = NewTarget;
	params.NewPrimitive = NewPrimitive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSightComponent.Server_UpdateTarget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor**                 NewActor                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    NewPrimitive                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterSightComponent::Server_UpdateTarget(class AActor** NewActor, class UPrimitiveComponent** NewPrimitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSightComponent.Server_UpdateTarget");

	UCharacterSightComponent_Server_UpdateTarget_Params params;
	params.NewActor = NewActor;
	params.NewPrimitive = NewPrimitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSightComponent.ReceiveTargetInSightTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterSightComponent::ReceiveTargetInSightTick(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSightComponent.ReceiveTargetInSightTick");

	UCharacterSightComponent_ReceiveTargetInSightTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSightComponent.ReceiveTargetChanged
// (Event, Protected, BlueprintEvent)

void UCharacterSightComponent::ReceiveTargetChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSightComponent.ReceiveTargetChanged");

	UCharacterSightComponent_ReceiveTargetChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ChargedWeapon.SetOverheated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          isOverheated                   (Parm, ZeroConstructor, IsPlainOldData)

void AChargedWeapon::SetOverheated(bool* isOverheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedWeapon.SetOverheated");

	AChargedWeapon_SetOverheated_Params params;
	params.isOverheated = isOverheated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ChargedWeapon.Server_SetIsCharging
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          isChargingValue                (Parm, ZeroConstructor, IsPlainOldData)

void AChargedWeapon::Server_SetIsCharging(bool* isChargingValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedWeapon.Server_SetIsCharging");

	AChargedWeapon_Server_SetIsCharging_Params params;
	params.isChargingValue = isChargingValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ChargedWeapon.RecieveChargeProgressChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         NewChargeProgress              (Parm, ZeroConstructor, IsPlainOldData)

void AChargedWeapon::RecieveChargeProgressChanged(float* NewChargeProgress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedWeapon.RecieveChargeProgressChanged");

	AChargedWeapon_RecieveChargeProgressChanged_Params params;
	params.NewChargeProgress = NewChargeProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ChargedWeapon.ReceiveOverheatedChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          isOverheated                   (Parm, ZeroConstructor, IsPlainOldData)

void AChargedWeapon::ReceiveOverheatedChanged(bool* isOverheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedWeapon.ReceiveOverheatedChanged");

	AChargedWeapon_ReceiveOverheatedChanged_Params params;
	params.isOverheated = isOverheated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ChargedWeapon.GetIsCharging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AChargedWeapon::GetIsCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedWeapon.GetIsCharging");

	AChargedWeapon_GetIsCharging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterSelectionSwitcher.OnVictoryPoseChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVictoryPose**           VictoryPose                    (Parm, ZeroConstructor, IsPlainOldData)

void ACharacterSelectionSwitcher::OnVictoryPoseChanged(class UVictoryPose** VictoryPose)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSelectionSwitcher.OnVictoryPoseChanged");

	ACharacterSelectionSwitcher_OnVictoryPoseChanged_Params params;
	params.VictoryPose = VictoryPose;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSelectionSwitcher.OnVanityItemEquipped
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void ACharacterSelectionSwitcher::OnVanityItemEquipped(EVanitySlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSelectionSwitcher.OnVanityItemEquipped");

	ACharacterSelectionSwitcher_OnVanityItemEquipped_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSelectionSwitcher.Hide
// (Event, Public, BlueprintEvent)

void ACharacterSelectionSwitcher::Hide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSelectionSwitcher.Hide");

	ACharacterSelectionSwitcher_Hide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterSelectionSwitcher.GetActiveCharacter
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* ACharacterSelectionSwitcher::GetActiveCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterSelectionSwitcher.GetActiveCharacter");

	ACharacterSelectionSwitcher_GetActiveCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProjectileBase.OnRep_ProjectileImpact
// (Final, Native, Public)

void AProjectileBase::OnRep_ProjectileImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.OnRep_ProjectileImpact");

	AProjectileBase_OnRep_ProjectileImpact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileBase.OnImpacted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AProjectileBase::OnImpacted(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.OnImpacted");

	AProjectileBase_OnImpacted_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileBase.OnClientInitialized
// (Event, Public, BlueprintEvent)

void AProjectileBase::OnClientInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.OnClientInitialized");

	AProjectileBase_OnClientInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileBase.MakeBouncy
// (Event, Public, BlueprintEvent)

void AProjectileBase::MakeBouncy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.MakeBouncy");

	AProjectileBase_MakeBouncy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileBase.InitVelocity
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector*                ShootDirection                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AProjectileBase::InitVelocity(struct FVector* ShootDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.InitVelocity");

	AProjectileBase_InitVelocity_Params params;
	params.ShootDirection = ShootDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileBase.GetBoneIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AProjectileBase::GetBoneIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.GetBoneIndex");

	AProjectileBase_GetBoneIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProjectileBase.DisableAndDestroy
// (Native, Public, BlueprintCallable)

void AProjectileBase::DisableAndDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.DisableAndDestroy");

	AProjectileBase_DisableAndDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileBase.All_SmoothPosition
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FVector_NetQuantize*    ServerPosition                 (ConstParm, Parm, ReferenceParm)
// float*                         ServerSpeed                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AProjectileBase::All_SmoothPosition(struct FVector_NetQuantize* ServerPosition, float* ServerSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileBase.All_SmoothPosition");

	AProjectileBase_All_SmoothPosition_Params params;
	params.ServerPosition = ServerPosition;
	params.ServerSpeed = ServerSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Projectile.SpawnProjectile
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 projectileClass                (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  projectileOwner                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               velocityDirection              (Parm, ZeroConstructor, IsPlainOldData)
// class AProjectileBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AProjectileBase* AProjectile::STATIC_SpawnProjectile(class UObject** WorldContextObject, class UClass** projectileClass, class APawn** projectileOwner, struct FVector* Origin, struct FRotator* velocityDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Projectile.SpawnProjectile");

	AProjectile_SpawnProjectile_Params params;
	params.WorldContextObject = WorldContextObject;
	params.projectileClass = projectileClass;
	params.projectileOwner = projectileOwner;
	params.Origin = Origin;
	params.velocityDirection = velocityDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Projectile.SpawnBallisticProjectile
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 projectileClass                (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  projectileOwner                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Velocity                       (Parm, ZeroConstructor, IsPlainOldData)
// class AProjectileBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AProjectileBase* AProjectile::STATIC_SpawnBallisticProjectile(class UObject** WorldContextObject, class UClass** projectileClass, class APawn** projectileOwner, struct FVector* Origin, struct FVector* Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Projectile.SpawnBallisticProjectile");

	AProjectile_SpawnBallisticProjectile_Params params;
	params.WorldContextObject = WorldContextObject;
	params.projectileClass = projectileClass;
	params.projectileOwner = projectileOwner;
	params.Origin = Origin;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Projectile.OnImpact
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AProjectile::OnImpact(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Projectile.OnImpact");

	AProjectile_OnImpact_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Projectile.FindBoneIndexFromArmor
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int                            outBoneIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDPhysicalMaterial* AProjectile::FindBoneIndexFromArmor(struct FHitResult* HitResult, int* outBoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Projectile.FindBoneIndexFromArmor");

	AProjectile_FindBoneIndexFromArmor_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBoneIndex != nullptr)
		*outBoneIndex = params.outBoneIndex;

	return params.ReturnValue;
}


// Function FSD.ChargedProjectile.OnAoEDamageEnabled
// (Event, Protected, BlueprintEvent)

void AChargedProjectile::OnAoEDamageEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedProjectile.OnAoEDamageEnabled");

	AChargedProjectile_OnAoEDamageEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ChromaComponent.TriggerEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFSDChromaEffect*              effect                         (Parm, ZeroConstructor, IsPlainOldData)

void UChromaComponent::TriggerEffect(EFSDChromaEffect* effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChromaComponent.TriggerEffect");

	UChromaComponent_TriggerEffect_Params params;
	params.effect = effect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExampleActor.Server_ExampleFunction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AExampleActor::Server_ExampleFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExampleActor.Server_ExampleFunction");

	AExampleActor_Server_ExampleFunction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExampleActor.Client_ExampleFunction
// (Net, NetReliable, Native, Event, Public, NetClient)

void AExampleActor::Client_ExampleFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExampleActor.Client_ExampleFunction");

	AExampleActor_Client_ExampleFunction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExampleActor.All_ExampleFunction
// (Net, Native, Event, NetMulticast, Public)

void AExampleActor::All_ExampleFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExampleActor.All_ExampleFunction");

	AExampleActor_All_ExampleFunction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ShoutWidget.OnShout
// (Event, Protected, BlueprintEvent)

void UShoutWidget::OnShout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ShoutWidget.OnShout");

	UShoutWidget_OnShout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ShoutWidget.GetTimeString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Seconds                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UShoutWidget::STATIC_GetTimeString(int* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ShoutWidget.GetTimeString");

	UShoutWidget_GetTimeString_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ShoutWidget.GetSplitTimeString
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Seconds                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 MinutesString                  (Parm, OutParm, ZeroConstructor)
// struct FString                 SecondsString                  (Parm, OutParm, ZeroConstructor)

void UShoutWidget::STATIC_GetSplitTimeString(int* Seconds, struct FString* MinutesString, struct FString* SecondsString)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ShoutWidget.GetSplitTimeString");

	UShoutWidget_GetSplitTimeString_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MinutesString != nullptr)
		*MinutesString = params.MinutesString;
	if (SecondsString != nullptr)
		*SecondsString = params.SecondsString;
}


// Function FSD.ShoutWidget.GetCountDownString
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Seconds                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UShoutWidget::GetCountDownString(int* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ShoutWidget.GetCountDownString");

	UShoutWidget_GetCountDownString_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunicationComponent.ShoutCustomOrDefault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDialogDataAsset**       CustomShout                    (Parm, ZeroConstructor, IsPlainOldData)
// EShoutType*                    DefaultShout                   (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::ShoutCustomOrDefault(class UDialogDataAsset** CustomShout, EShoutType* DefaultShout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ShoutCustomOrDefault");

	UCommunicationComponent_ShoutCustomOrDefault_Params params;
	params.CustomShout = CustomShout;
	params.DefaultShout = DefaultShout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.ShoutCustom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::ShoutCustom(class UDialogDataAsset** Shout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ShoutCustom");

	UCommunicationComponent_ShoutCustom_Params params;
	params.Shout = Shout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.Shout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EShoutType*                    Shout                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::Shout(EShoutType* Shout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.Shout");

	UCommunicationComponent_Shout_Params params;
	params.Shout = Shout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.SetMissionControlPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsPaused                       (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::SetMissionControlPaused(bool* IsPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.SetMissionControlPaused");

	UCommunicationComponent_SetMissionControlPaused_Params params;
	params.IsPaused = IsPaused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.ServerShout
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::ServerShout(class UDialogDataAsset** Shout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ServerShout");

	UCommunicationComponent_ServerShout_Params params;
	params.Shout = Shout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.ServerMixerAnnouncement
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FMixerAnnouncement*     Announcement                   (ConstParm, Parm, ReferenceParm)

void UCommunicationComponent::ServerMixerAnnouncement(struct FMixerAnnouncement* Announcement)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ServerMixerAnnouncement");

	UCommunicationComponent_ServerMixerAnnouncement_Params params;
	params.Announcement = Announcement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.ServerMissionShout
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::ServerMissionShout(class UDialogDataAsset** Shout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ServerMissionShout");

	UCommunicationComponent_ServerMissionShout_Params params;
	params.Shout = Shout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.PlayPitchedByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class USoundBase**             Sound                          (Parm, ZeroConstructor, IsPlainOldData)
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)
// EShoutType*                    ShoutType                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAudioComponent**        AudioComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAudioComponent* UCommunicationComponent::STATIC_PlayPitchedByClass(class UObject** WorldContextObject, class UClass** CharacterClass, class USoundBase** Sound, class UDialogDataAsset** Shout, EShoutType* ShoutType, class UAudioComponent** AudioComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.PlayPitchedByClass");

	UCommunicationComponent_PlayPitchedByClass_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;
	params.Sound = Sound;
	params.Shout = Shout;
	params.ShoutType = ShoutType;
	params.AudioComponent = AudioComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunicationComponent.PlayPitched
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase**             Sound                          (Parm, ZeroConstructor, IsPlainOldData)
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)
// EShoutType*                    ShoutType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IgnoreCoolDown                 (Parm, ZeroConstructor, IsPlainOldData)
// class UAudioComponent**        AudioComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAudioComponent* UCommunicationComponent::PlayPitched(class USoundBase** Sound, class UDialogDataAsset** Shout, EShoutType* ShoutType, bool* IgnoreCoolDown, class UAudioComponent** AudioComponent, class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.PlayPitched");

	UCommunicationComponent_PlayPitched_Params params;
	params.Sound = Sound;
	params.Shout = Shout;
	params.ShoutType = ShoutType;
	params.IgnoreCoolDown = IgnoreCoolDown;
	params.AudioComponent = AudioComponent;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunicationComponent.OnDamagedEnemy
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TScriptInterface<class UHealth>* EnemyHealth                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageModifier                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         HealthRemaining                (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::OnDamagedEnemy(TScriptInterface<class UHealth>* EnemyHealth, float* Damage, float* DamageModifier, float* HealthRemaining)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.OnDamagedEnemy");

	UCommunicationComponent_OnDamagedEnemy_Params params;
	params.EnemyHealth = EnemyHealth;
	params.Damage = Damage;
	params.DamageModifier = DamageModifier;
	params.HealthRemaining = HealthRemaining;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.MixerAnnouncementLocalOnly
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FMixerAnnouncement*     Announcement                   (ConstParm, Parm, OutParm, ReferenceParm)

void UCommunicationComponent::STATIC_MixerAnnouncementLocalOnly(class UObject** WorldContext, struct FMixerAnnouncement* Announcement)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.MixerAnnouncementLocalOnly");

	UCommunicationComponent_MixerAnnouncementLocalOnly_Params params;
	params.WorldContext = WorldContext;
	params.Announcement = Announcement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.MixerAnnouncement
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FMixerAnnouncement*     Announcement                   (ConstParm, Parm, OutParm, ReferenceParm)

void UCommunicationComponent::STATIC_MixerAnnouncement(class UObject** WorldContext, struct FMixerAnnouncement* Announcement)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.MixerAnnouncement");

	UCommunicationComponent_MixerAnnouncement_Params params;
	params.WorldContext = WorldContext;
	params.Announcement = Announcement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.MissionShoutLocally
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCommunicationComponent::STATIC_MissionShoutLocally(class UObject** WorldContext, class UDialogDataAsset** Shout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.MissionShoutLocally");

	UCommunicationComponent_MissionShoutLocally_Params params;
	params.WorldContext = WorldContext;
	params.Shout = Shout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunicationComponent.MissionShout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::STATIC_MissionShout(class UObject** WorldContext, class UDialogDataAsset** Shout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.MissionShout");

	UCommunicationComponent_MissionShout_Params params;
	params.WorldContext = WorldContext;
	params.Shout = Shout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.IsMissionControlSpeaking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCommunicationComponent::IsMissionControlSpeaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.IsMissionControlSpeaking");

	UCommunicationComponent_IsMissionControlSpeaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunicationComponent.ClientShout
// (Net, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// class APlayerCharacter**       Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::ClientShout(class APlayerCharacter** Sender, class UDialogDataAsset** Shout, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ClientShout");

	UCommunicationComponent_ClientShout_Params params;
	params.Sender = Sender;
	params.Shout = Shout;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.ClientMixerAnnouncement
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// struct FMixerAnnouncement*     Announcement                   (ConstParm, Parm, ReferenceParm)

void UCommunicationComponent::ClientMixerAnnouncement(struct FMixerAnnouncement* Announcement)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ClientMixerAnnouncement");

	UCommunicationComponent_ClientMixerAnnouncement_Params params;
	params.Announcement = Announcement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunicationComponent.ClientMissionShout
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// class UDialogDataAsset**       Shout                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunicationComponent::ClientMissionShout(class UDialogDataAsset** Shout, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunicationComponent.ClientMissionShout");

	UCommunicationComponent_ClientMissionShout_Params params;
	params.Shout = Shout;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommnuityRewardSetup.GetResourcesTierOnlyReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// TMap<class UResourceData*, int> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class UResourceData*, int> UCommnuityRewardSetup::GetResourcesTierOnlyReward(int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommnuityRewardSetup.GetResourcesTierOnlyReward");

	UCommnuityRewardSetup_GetResourcesTierOnlyReward_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommnuityRewardSetup.GetResourcesReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// TMap<class UResourceData*, int> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class UResourceData*, int> UCommnuityRewardSetup::GetResourcesReward(int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommnuityRewardSetup.GetResourcesReward");

	UCommnuityRewardSetup_GetResourcesReward_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommnuityRewardSetup.AwardTierRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)

void UCommnuityRewardSetup::AwardTierRewards(class UObject** WorldContext, int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommnuityRewardSetup.AwardTierRewards");

	UCommnuityRewardSetup_AwardTierRewards_Params params;
	params.WorldContext = WorldContext;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoal.TotalTierProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Members                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCommunityGoal::TotalTierProgress(float* Value, int* Members)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.TotalTierProgress");

	UCommunityGoal_TotalTierProgress_Params params;
	params.Value = Value;
	params.Members = Members;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.TierValue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ECommunityGoalTier*            Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Members                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCommunityGoal::TierValue(ECommunityGoalTier* Tier, float* Value, int* Members)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.TierValue");

	UCommunityGoal_TierValue_Params params;
	params.Tier = Tier;
	params.Value = Value;
	params.Members = Members;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.TierProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ECommunityGoalTier*            Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Members                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCommunityGoal::TierProgress(ECommunityGoalTier* Tier, float* Value, int* Members)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.TierProgress");

	UCommunityGoal_TierProgress_Params params;
	params.Tier = Tier;
	params.Value = Value;
	params.Members = Members;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.TierGoal
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ECommunityGoalTier*            Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Members                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCommunityGoal::TierGoal(ECommunityGoalTier* Tier, int* Members)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.TierGoal");

	UCommunityGoal_TierGoal_Params params;
	params.Tier = Tier;
	params.Members = Members;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.RewardTier
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Members                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCommunityGoal::RewardTier(float* Value, int* Members)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.RewardTier");

	UCommunityGoal_RewardTier_Params params;
	params.Value = Value;
	params.Members = Members;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.IncrementGoal
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UCommunityGoal::IncrementGoal(class UObject** WorldContext, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.IncrementGoal");

	UCommunityGoal_IncrementGoal_Params params;
	params.WorldContext = WorldContext;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoal.GoalToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECommunityGoalType*            StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UCommunityGoal::STATIC_GoalToText(ECommunityGoalType* StatType, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.GoalToText");

	UCommunityGoal_GoalToText_Params params;
	params.StatType = StatType;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.GetCategoryTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UCommunityGoal::GetCategoryTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.GetCategoryTitle");

	UCommunityGoal_GetCategoryTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoal.AreTiersInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCommunityGoal::AreTiersInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoal.AreTiersInitialized");

	UCommunityGoal_AreTiersInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoalWrapper.UpdateAllGoalsInitialized
// (Final, Native, Public, BlueprintCallable)

void UCommunityGoalWrapper::UpdateAllGoalsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.UpdateAllGoalsInitialized");

	UCommunityGoalWrapper_UpdateAllGoalsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.RewardReceived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCommunityGoalWrapper::RewardReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.RewardReceived");

	UCommunityGoalWrapper_RewardReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoalWrapper.RequestGoalStateData
// (Final, Native, Public, BlueprintCallable)

void UCommunityGoalWrapper::RequestGoalStateData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.RequestGoalStateData");

	UCommunityGoalWrapper_RequestGoalStateData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.RequestFactionsData
// (Final, Native, Public, BlueprintCallable)

void UCommunityGoalWrapper::RequestFactionsData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.RequestFactionsData");

	UCommunityGoalWrapper_RequestFactionsData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.NextPeriod
// (Final, Native, Public, BlueprintCallable)

void UCommunityGoalWrapper::NextPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.NextPeriod");

	UCommunityGoalWrapper_NextPeriod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.InitializeGoalTierTargetValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommunityGoal**         goalToInitialize               (Parm, ZeroConstructor, IsPlainOldData)

void UCommunityGoalWrapper::InitializeGoalTierTargetValues(class UCommunityGoal** goalToInitialize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.InitializeGoalTierTargetValues");

	UCommunityGoalWrapper_InitializeGoalTierTargetValues_Params params;
	params.goalToInitialize = goalToInitialize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.GetPlayerCurrentFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UCommunityGoalFaction*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCommunityGoalFaction* UCommunityGoalWrapper::GetPlayerCurrentFaction(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.GetPlayerCurrentFaction");

	UCommunityGoalWrapper_GetPlayerCurrentFaction_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoalWrapper.ClaimRewardMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FCommunityRewardNotification* rewardNotification             (Parm)

void UCommunityGoalWrapper::ClaimRewardMessage(class UObject** WorldContext, struct FCommunityRewardNotification* rewardNotification)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.ClaimRewardMessage");

	UCommunityGoalWrapper_ClaimRewardMessage_Params params;
	params.WorldContext = WorldContext;
	params.rewardNotification = rewardNotification;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.ClaimReward
// (Final, Native, Public, BlueprintCallable)

void UCommunityGoalWrapper::ClaimReward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.ClaimReward");

	UCommunityGoalWrapper_ClaimReward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalWrapper.CheckUI
// (Final, Native, Public, BlueprintCallable)

void UCommunityGoalWrapper::CheckUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalWrapper.CheckUI");

	UCommunityGoalWrapper_CheckUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ControllerIconSettings.FindMouseKeyboardKeyIcon
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey*                   Key                            (Parm)
// struct FActionIconMapping      KeyIcon                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UControllerIconSettings::STATIC_FindMouseKeyboardKeyIcon(struct FKey* Key, struct FActionIconMapping* KeyIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ControllerIconSettings.FindMouseKeyboardKeyIcon");

	UControllerIconSettings_FindMouseKeyboardKeyIcon_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (KeyIcon != nullptr)
		*KeyIcon = params.KeyIcon;

	return params.ReturnValue;
}


// Function FSD.ControllerIconSettings.FindControllerKeyIcon
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey*                   Key                            (Parm)
// struct FActionIconMapping      KeyIcon                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UControllerIconSettings::STATIC_FindControllerKeyIcon(struct FKey* Key, struct FActionIconMapping* KeyIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ControllerIconSettings.FindControllerKeyIcon");

	UControllerIconSettings_FindControllerKeyIcon_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (KeyIcon != nullptr)
		*KeyIcon = params.KeyIcon;

	return params.ReturnValue;
}


// Function FSD.ConvertedRobot.StartBossFight
// (Final, Native, Public, BlueprintCallable)

void AConvertedRobot::StartBossFight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.StartBossFight");

	AConvertedRobot_StartBossFight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.ParasiteDamaged
// (Final, Native, Protected)
// Parameters:
// float*                         aDamage                        (Parm, ZeroConstructor, IsPlainOldData)

void AConvertedRobot::ParasiteDamaged(float* aDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.ParasiteDamaged");

	AConvertedRobot_ParasiteDamaged_Params params;
	params.aDamage = aDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnWeaponsFired
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             aHitResult                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AConvertedRobot::OnWeaponsFired(struct FHitResult* aHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnWeaponsFired");

	AConvertedRobot_OnWeaponsFired_Params params;
	params.aHitResult = aHitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnUsed
// (Final, Native, Protected)
// Parameters:
// class APlayerCharacter**       aUser                          (Parm, ZeroConstructor, IsPlainOldData)

void AConvertedRobot::OnUsed(class APlayerCharacter** aUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnUsed");

	AConvertedRobot_OnUsed_Params params;
	params.aUser = aUser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnSeePawn
// (Final, Native, Public)
// Parameters:
// class APawn**                  APawn                          (Parm, ZeroConstructor, IsPlainOldData)

void AConvertedRobot::OnSeePawn(class APawn** APawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnSeePawn");

	AConvertedRobot_OnSeePawn_Params params;
	params.APawn = APawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnRep_TeamState
// (Native, Protected)

void AConvertedRobot::OnRep_TeamState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnRep_TeamState");

	AConvertedRobot_OnRep_TeamState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnRep_Target
// (Native, Protected)

void AConvertedRobot::OnRep_Target()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnRep_Target");

	AConvertedRobot_OnRep_Target_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnRep_SpinTurret
// (Final, Native, Protected)

void AConvertedRobot::OnRep_SpinTurret()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnRep_SpinTurret");

	AConvertedRobot_OnRep_SpinTurret_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnRep_IsIntroducting
// (Final, Native, Protected)

void AConvertedRobot::OnRep_IsIntroducting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnRep_IsIntroducting");

	AConvertedRobot_OnRep_IsIntroducting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnRep_IsFiring
// (Final, Native, Protected)

void AConvertedRobot::OnRep_IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnRep_IsFiring");

	AConvertedRobot_OnRep_IsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnRep_IsDoingSpecialAttack
// (Final, Native, Protected)

void AConvertedRobot::OnRep_IsDoingSpecialAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnRep_IsDoingSpecialAttack");

	AConvertedRobot_OnRep_IsDoingSpecialAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.OnParasiteDeath
// (Final, Native, Protected)
// Parameters:
// class AActor**                 AParasiteEnemy                 (Parm, ZeroConstructor, IsPlainOldData)

void AConvertedRobot::OnParasiteDeath(class AActor** AParasiteEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.OnParasiteDeath");

	AConvertedRobot_OnParasiteDeath_Params params;
	params.AParasiteEnemy = AParasiteEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.GetTeamState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERobotState                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERobotState AConvertedRobot::GetTeamState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.GetTeamState");

	AConvertedRobot_GetTeamState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ConvertedRobot.GetPlayerMediumPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AConvertedRobot::GetPlayerMediumPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.GetPlayerMediumPoint");

	AConvertedRobot_GetPlayerMediumPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ConvertedRobot.GetParasites
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class AActor*> AConvertedRobot::GetParasites()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.GetParasites");

	AConvertedRobot_GetParasites_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ConvertedRobot.GetHasPoweredDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AConvertedRobot::GetHasPoweredDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.GetHasPoweredDown");

	AConvertedRobot_GetHasPoweredDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ConvertedRobot.FireEffects
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    aFireDirection                 (ConstParm, Parm, ReferenceParm)

void AConvertedRobot::FireEffects(struct FVector_NetQuantize* aFireDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.FireEffects");

	AConvertedRobot_FireEffects_Params params;
	params.aFireDirection = aFireDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.DestroyAttatchPoint
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class USceneComponent**        aComponent                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AConvertedRobot::DestroyAttatchPoint(class USceneComponent** aComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.DestroyAttatchPoint");

	AConvertedRobot_DestroyAttatchPoint_Params params;
	params.aComponent = aComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.CannonEffects
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AConvertedRobot::CannonEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.CannonEffects");

	AConvertedRobot_CannonEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.BP_OnStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ERobotState*                   TeamState                      (Parm, ZeroConstructor, IsPlainOldData)

void AConvertedRobot::BP_OnStateChanged(ERobotState* TeamState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.BP_OnStateChanged");

	AConvertedRobot_BP_OnStateChanged_Params params;
	params.TeamState = TeamState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.BP_OnShieldChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          isGrowing                      (Parm, ZeroConstructor, IsPlainOldData)

void AConvertedRobot::BP_OnShieldChanged(bool* isGrowing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.BP_OnShieldChanged");

	AConvertedRobot_BP_OnShieldChanged_Params params;
	params.isGrowing = isGrowing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobot.BP_OnInstroduce
// (Event, Public, BlueprintEvent)

void AConvertedRobot::BP_OnInstroduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobot.BP_OnInstroduce");

	AConvertedRobot_BP_OnInstroduce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ConvertedRobotController.ResetCloseTimer
// (Final, Native, Public, BlueprintCallable)

void AConvertedRobotController::ResetCloseTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ConvertedRobotController.ResetCloseTimer");

	AConvertedRobotController_ResetCloseTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoolDownItemAggregator.SetPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsPaused                       (Parm, ZeroConstructor, IsPlainOldData)

void UCoolDownItemAggregator::SetPaused(bool* IsPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownItemAggregator.SetPaused");

	UCoolDownItemAggregator_SetPaused_Params params;
	params.IsPaused = IsPaused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoolDownItemAggregator.IsCoolingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCoolDownItemAggregator::IsCoolingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownItemAggregator.IsCoolingDown");

	UCoolDownItemAggregator_IsCoolingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CoolDownItemAggregator.GetCoolDownProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCoolDownItemAggregator::GetCoolDownProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownItemAggregator.GetCoolDownProgress");

	UCoolDownItemAggregator_GetCoolDownProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CoolDownItemAggregator.ActivateCoolDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          startPaused                    (Parm, ZeroConstructor, IsPlainOldData)

void UCoolDownItemAggregator::ActivateCoolDown(bool* startPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownItemAggregator.ActivateCoolDown");

	UCoolDownItemAggregator_ActivateCoolDown_Params params;
	params.startPaused = startPaused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoolDownProgressWidget.UpdateProgress
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UCoolDownProgressWidget::UpdateProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownProgressWidget.UpdateProgress");

	UCoolDownProgressWidget_UpdateProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoolDownProgressWidget.ReceiveUpdateProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         InProgress                     (Parm, ZeroConstructor, IsPlainOldData)

void UCoolDownProgressWidget::ReceiveUpdateProgress(float* InProgress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownProgressWidget.ReceiveUpdateProgress");

	UCoolDownProgressWidget_ReceiveUpdateProgress_Params params;
	params.InProgress = InProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoolDownProgressWidget.ReceiveInitWidget
// (Event, Protected, BlueprintEvent)

void UCoolDownProgressWidget::ReceiveInitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownProgressWidget.ReceiveInitWidget");

	UCoolDownProgressWidget_ReceiveInitWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoolDownProgressWidget.Init
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                InCoolDownObject               (Parm, ZeroConstructor, IsPlainOldData)
// struct FCoolDownProgressStyle* InStyle                        (ConstParm, Parm, OutParm, ReferenceParm)

void UCoolDownProgressWidget::Init(class UObject** InCoolDownObject, struct FCoolDownProgressStyle* InStyle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoolDownProgressWidget.Init");

	UCoolDownProgressWidget_Init_Params params;
	params.InCoolDownObject = InCoolDownObject;
	params.InStyle = InStyle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CraftableObject.PreviewItem
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UCraftableObject::PreviewItem(class AFSDPlayerState** PlayerState, bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.PreviewItem");

	UCraftableObject_PreviewItem_Params params;
	params.PlayerState = PlayerState;
	params.Show = Show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CraftableObject.MarkAsUnLocked
// (Final, Native, Protected, BlueprintCallable)

void UCraftableObject::MarkAsUnLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.MarkAsUnLocked");

	UCraftableObject_MarkAsUnLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CraftableObject.IsOwned
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCraftableObject::IsOwned(class UClass** CharacterClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.IsOwned");

	UCraftableObject_IsOwned_Params params;
	params.CharacterClass = CharacterClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.GetResourceCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCraftingCost>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCraftingCost> UCraftableObject::GetResourceCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.GetResourceCost");

	UCraftableObject_GetResourceCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.GetRequiredPlayerRank
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCraftableObject::GetRequiredPlayerRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.GetRequiredPlayerRank");

	UCraftableObject_GetRequiredPlayerRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.GetCraftingCreditsCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCraftableObject::GetCraftingCreditsCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.GetCraftingCreditsCost");

	UCraftableObject_GetCraftingCreditsCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.GetCraftableName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UCraftableObject::GetCraftableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.GetCraftableName");

	UCraftableObject_GetCraftableName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.GetCraftableIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UCraftableObject::GetCraftableIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.GetCraftableIcon");

	UCraftableObject_GetCraftableIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.GetCraftableDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UCraftableObject::GetCraftableDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.GetCraftableDescription");

	UCraftableObject_GetCraftableDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CraftableObject.CraftItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UCraftableObject::CraftItem(class UClass** CharacterClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.CraftItem");

	UCraftableObject_CraftItem_Params params;
	params.CharacterClass = CharacterClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CraftableObject.ClearUnLockedMark
// (Final, Native, Protected, BlueprintCallable)

void UCraftableObject::ClearUnLockedMark()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.ClearUnLockedMark");

	UCraftableObject_ClearUnLockedMark_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CraftableObject.CanCraft
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCraftableObject::CanCraft(class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CraftableObject.CanCraft");

	UCraftableObject_CanCraft_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CrosshairWidget.SetData
// (Event, Public, BlueprintEvent)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UCrosshairWidget::SetData(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CrosshairWidget.SetData");

	UCrosshairWidget_SetData_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CrosshairAggregator.SetCrosshair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCrosshairAggregator::SetCrosshair(class UUserWidget** Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CrosshairAggregator.SetCrosshair");

	UCrosshairAggregator_SetCrosshair_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.ServerDoDamage
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Start                          (Parm)
// struct FVector_NetQuantize*    End                            (Parm)
// unsigned char*                 power                          (Parm, ZeroConstructor, IsPlainOldData)

void ACryosprayItem::ServerDoDamage(struct FVector_NetQuantize* Start, struct FVector_NetQuantize* End, unsigned char* power)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.ServerDoDamage");

	ACryosprayItem_ServerDoDamage_Params params;
	params.Start = Start;
	params.End = End;
	params.power = power;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.Server_TriggerAoECold
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ACryosprayItem::Server_TriggerAoECold()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.Server_TriggerAoECold");

	ACryosprayItem_Server_TriggerAoECold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.Server_PreLaunchProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ACryosprayItem::Server_PreLaunchProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.Server_PreLaunchProjectile");

	ACryosprayItem_Server_PreLaunchProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.Server_LaunchProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Start                          (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal* Direction                      (ConstParm, Parm, ReferenceParm)
// float*                         pressurePercentage             (Parm, ZeroConstructor, IsPlainOldData)

void ACryosprayItem::Server_LaunchProjectile(struct FVector_NetQuantize* Start, struct FVector_NetQuantizeNormal* Direction, float* pressurePercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.Server_LaunchProjectile");

	ACryosprayItem_Server_LaunchProjectile_Params params;
	params.Start = Start;
	params.Direction = Direction;
	params.pressurePercentage = pressurePercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.ReceiveRepressurisingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ACryosprayItem::ReceiveRepressurisingChanged(bool* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.ReceiveRepressurisingChanged");

	ACryosprayItem_ReceiveRepressurisingChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void ACryosprayItem::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.OnTargetDamaged");

	ACryosprayItem_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.OnRep_IsCharging
// (Final, Native, Protected)
// Parameters:
// bool*                          OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ACryosprayItem::OnRep_IsCharging(bool* OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.OnRep_IsCharging");

	ACryosprayItem_OnRep_IsCharging_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.OnProjectileLaunched
// (Event, Protected, BlueprintEvent)

void ACryosprayItem::OnProjectileLaunched()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.OnProjectileLaunched");

	ACryosprayItem_OnProjectileLaunched_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.OnPressurizedPartileShoot
// (Final, Native, Protected)

void ACryosprayItem::OnPressurizedPartileShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.OnPressurizedPartileShoot");

	ACryosprayItem_OnPressurizedPartileShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.OnPreProjectileLaunch
// (Event, Protected, BlueprintEvent)

void ACryosprayItem::OnPreProjectileLaunch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.OnPreProjectileLaunch");

	ACryosprayItem_OnPreProjectileLaunch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.All_PreLaunchProjectile
// (Net, Native, Event, NetMulticast, Protected)

void ACryosprayItem::All_PreLaunchProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.All_PreLaunchProjectile");

	ACryosprayItem_All_PreLaunchProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CryosprayItem.All_LaunchedProjectile
// (Net, Native, Event, NetMulticast, Protected)

void ACryosprayItem::All_LaunchedProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryosprayItem.All_LaunchedProjectile");

	ACryosprayItem_All_LaunchedProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DamageComponent.GetDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDamageComponent::GetDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DamageComponent.GetDamage");

	UDamageComponent_GetDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DamageComponent.DamageTarget
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void UDamageComponent::DamageTarget(class AActor** Target, struct FVector* Location, class UPrimitiveComponent** HitComponent, class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DamageComponent.DamageTarget");

	UDamageComponent_DamageTarget_Params params;
	params.Target = Target;
	params.Location = Location;
	params.HitComponent = HitComponent;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DamageComponent.DamageArmor_Server
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                impactLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDamageComponent::DamageArmor_Server(class AActor** Target, int* BoneIndex, struct FVector* impactLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DamageComponent.DamageArmor_Server");

	UDamageComponent_DamageArmor_Server_Params params;
	params.Target = Target;
	params.BoneIndex = BoneIndex;
	params.impactLocation = impactLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DamageComponent.DamageArmor_All
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UDamageComponent::DamageArmor_All(class AActor** Target, int* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DamageComponent.DamageArmor_All");

	UDamageComponent_DamageArmor_All_Params params;
	params.Target = Target;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DashPoints.StopDashing
// (Final, Native, Public, BlueprintCallable)

void UDashPoints::StopDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DashPoints.StopDashing");

	UDashPoints_StopDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DashPoints.StartDashing
// (Final, Native, Public, BlueprintCallable)

void UDashPoints::StartDashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DashPoints.StartDashing");

	UDashPoints_StartDashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DashPoints.OnRep_Dashing
// (Final, Native, Public)

void UDashPoints::OnRep_Dashing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DashPoints.OnRep_Dashing");

	UDashPoints_OnRep_Dashing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DashPoints.OnParentDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDashPoints::OnParentDeath(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DashPoints.OnParentDeath");

	UDashPoints_OnParentDeath_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DashPoints.GetDashPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 fromTarget                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDashPoints::GetDashPoint(class AActor** fromTarget, bool* success)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DashPoints.GetDashPoint");

	UDashPoints_GetDashPoint_Params params;
	params.fromTarget = fromTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (success != nullptr)
		*success = params.success;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.UnRegisterScannerComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADeepCSGWorld::UnRegisterScannerComponent(class UPrimitiveComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.UnRegisterScannerComponent");

	ADeepCSGWorld_UnRegisterScannerComponent_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_RemoveFloating
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FRemoveFloatingIslandOperationData* Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ADeepCSGWorld::TerrainOp_RemoveFloating(struct FRemoveFloatingIslandOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_RemoveFloating");

	ADeepCSGWorld_TerrainOp_RemoveFloating_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_PickAxe
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FPickaxeDigOperationData* Data                           (ConstParm, Parm, ReferenceParm)

void ADeepCSGWorld::TerrainOp_PickAxe(struct FPickaxeDigOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_PickAxe");

	ADeepCSGWorld_TerrainOp_PickAxe_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_Melt
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FMeltOperationData*     Data                           (ConstParm, Parm, ReferenceParm)

void ADeepCSGWorld::TerrainOp_Melt(struct FMeltOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_Melt");

	ADeepCSGWorld_TerrainOp_Melt_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_Explode
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGrenadeExplodeOperationData* Data                           (ConstParm, Parm, ReferenceParm)

void ADeepCSGWorld::TerrainOp_Explode(struct FGrenadeExplodeOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_Explode");

	ADeepCSGWorld_TerrainOp_Explode_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_Drill
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FDrillOperationData*    Data                           (ConstParm, Parm, ReferenceParm)

void ADeepCSGWorld::TerrainOp_Drill(struct FDrillOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_Drill");

	ADeepCSGWorld_TerrainOp_Drill_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_CarveSTLMesh
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FCarveWithSTLMeshOperationData* Data                           (ConstParm, Parm, ReferenceParm)

void ADeepCSGWorld::TerrainOp_CarveSTLMesh(struct FCarveWithSTLMeshOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_CarveSTLMesh");

	ADeepCSGWorld_TerrainOp_CarveSTLMesh_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainOp_CarveCollider
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FCarveWithColliderOperationData* Data                           (ConstParm, Parm, ReferenceParm)

void ADeepCSGWorld::TerrainOp_CarveCollider(struct FCarveWithColliderOperationData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainOp_CarveCollider");

	ADeepCSGWorld_TerrainOp_CarveCollider_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.TerrainMaterialDataLoaded
// (Final, Native, Protected)

void ADeepCSGWorld::TerrainMaterialDataLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.TerrainMaterialDataLoaded");

	ADeepCSGWorld_TerrainMaterialDataLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.SetVisibleToScanner
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Center                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Range                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ADeepCSGWorld::SetVisibleToScanner(struct FVector* Center, struct FVector* Range)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.SetVisibleToScanner");

	ADeepCSGWorld_SetVisibleToScanner_Params params;
	params.Center = Center;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.SelectDebrisSettings
// (Final, Native, Public, BlueprintCallable)

void ADeepCSGWorld::SelectDebrisSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.SelectDebrisSettings");

	ADeepCSGWorld_SelectDebrisSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.ResetEntireWorld
// (Final, Native, Public, BlueprintCallable)

void ADeepCSGWorld::ResetEntireWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.ResetEntireWorld");

	ADeepCSGWorld_ResetEntireWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.RemoveDebrisInstance_TerrainOp2
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int*                           instance                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Component                      (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::RemoveDebrisInstance_TerrainOp2(int* instance, int* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.RemoveDebrisInstance_TerrainOp2");

	ADeepCSGWorld_RemoveDebrisInstance_TerrainOp2_Params params;
	params.instance = instance;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.RemoveDebrisInSphere
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          onlyFragile                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          alsoDurable                    (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::RemoveDebrisInSphere(struct FVector* Position, float* Radius, bool* onlyFragile, bool* alsoDurable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.RemoveDebrisInSphere");

	ADeepCSGWorld_RemoveDebrisInSphere_Params params;
	params.Position = Position;
	params.Radius = Radius;
	params.onlyFragile = onlyFragile;
	params.alsoDurable = alsoDurable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.RegisterScannerComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          useFogOfWar                    (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::RegisterScannerComponent(class UPrimitiveComponent** Component, bool* useFogOfWar)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.RegisterScannerComponent");

	ADeepCSGWorld_RegisterScannerComponent_Params params;
	params.Component = Component;
	params.useFogOfWar = useFogOfWar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.Raycast
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                Start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FCSGRaycastHitInfo      HitInfo                        (Parm, OutParm)
// ELandscapeCellFilter*          Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADeepCSGWorld::Raycast(struct FVector* Start, struct FVector* Direction, float* MaxDistance, ELandscapeCellFilter* Filter, struct FCSGRaycastHitInfo* HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.Raycast");

	ADeepCSGWorld_Raycast_Params params;
	params.Start = Start;
	params.Direction = Direction;
	params.MaxDistance = MaxDistance;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitInfo != nullptr)
		*HitInfo = params.HitInfo;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.Linecast
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                Start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                End                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FCSGRaycastHitInfo      HitInfo                        (Parm, OutParm)
// ELandscapeCellFilter*          Filter                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADeepCSGWorld::Linecast(struct FVector* Start, struct FVector* End, ELandscapeCellFilter* Filter, struct FCSGRaycastHitInfo* HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.Linecast");

	ADeepCSGWorld_Linecast_Params params;
	params.Start = Start;
	params.End = End;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitInfo != nullptr)
		*HitInfo = params.HitInfo;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.IsPositionVisibleToScanner
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADeepCSGWorld::IsPositionVisibleToScanner(struct FVector* Pos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.IsPositionVisibleToScanner");

	ADeepCSGWorld_IsPositionVisibleToScanner_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.IsPointInsideTerrain
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADeepCSGWorld::IsPointInsideTerrain(struct FVector* Pos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.IsPointInsideTerrain");

	ADeepCSGWorld_IsPointInsideTerrain_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.GetTerrainHash
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADeepCSGWorld::GetTerrainHash()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.GetTerrainHash");

	ADeepCSGWorld_GetTerrainHash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.GetShadowQuality
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADeepCSGWorld::STATIC_GetShadowQuality()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.GetShadowQuality");

	ADeepCSGWorld_GetShadowQuality_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.GetDebrisDataActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADebrisDataActor*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADebrisDataActor* ADeepCSGWorld::GetDebrisDataActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.GetDebrisDataActor");

	ADeepCSGWorld_GetDebrisDataActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.GetAllTerrainActorsAroundPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Center                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Range                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TArray<class AActor*>          TerrainActors                  (Parm, OutParm, ZeroConstructor)

void ADeepCSGWorld::GetAllTerrainActorsAroundPoint(struct FVector* Center, struct FVector* Range, TArray<class AActor*>* TerrainActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.GetAllTerrainActorsAroundPoint");

	ADeepCSGWorld_GetAllTerrainActorsAroundPoint_Params params;
	params.Center = Center;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TerrainActors != nullptr)
		*TerrainActors = params.TerrainActors;
}


// Function FSD.DeepCSGWorld.GenerateAllMeshes
// (Final, Native, Public, BlueprintCallable)

void ADeepCSGWorld::GenerateAllMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.GenerateAllMeshes");

	ADeepCSGWorld_GenerateAllMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.FinishGeneration_Blocking
// (Final, Native, Public, BlueprintCallable)

void ADeepCSGWorld::FinishGeneration_Blocking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.FinishGeneration_Blocking");

	ADeepCSGWorld_FinishGeneration_Blocking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.FindTotalVolumeOfMaterialInWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADeepCSGWorld::FindTotalVolumeOfMaterialInWorld(class UTerrainMaterial** Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.FindTotalVolumeOfMaterialInWorld");

	ADeepCSGWorld_FindTotalVolumeOfMaterialInWorld_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.CarveWithSTLMeshUsingTransform_Wait
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class ADeepCSGWorld**          CSGWorld                       (Parm, ZeroConstructor, IsPlainOldData)
// class USTLMeshCarver**         MeshCarver                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void ADeepCSGWorld::STATIC_CarveWithSTLMeshUsingTransform_Wait(class ADeepCSGWorld** CSGWorld, class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, EPreciousMaterialOptions* Precious, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithSTLMeshUsingTransform_Wait");

	ADeepCSGWorld_CarveWithSTLMeshUsingTransform_Wait_Params params;
	params.CSGWorld = CSGWorld;
	params.MeshCarver = MeshCarver;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Transform = Transform;
	params.Precious = Precious;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithSTLMeshUsingTransform
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class USTLMeshCarver**         MeshCarver                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::CarveWithSTLMeshUsingTransform(class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, EPreciousMaterialOptions* Precious)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithSTLMeshUsingTransform");

	ADeepCSGWorld_CarveWithSTLMeshUsingTransform_Params params;
	params.MeshCarver = MeshCarver;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Transform = Transform;
	params.Precious = Precious;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithSTLMesh_Wait
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ADeepCSGWorld**          CSGWorld                       (Parm, ZeroConstructor, IsPlainOldData)
// class USTLMeshCarver**         MeshCarver                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat*                  Orientation                    (Parm, IsPlainOldData)
// struct FVector*                Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void ADeepCSGWorld::STATIC_CarveWithSTLMesh_Wait(class ADeepCSGWorld** CSGWorld, class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithSTLMesh_Wait");

	ADeepCSGWorld_CarveWithSTLMesh_Wait_Params params;
	params.CSGWorld = CSGWorld;
	params.MeshCarver = MeshCarver;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Pos = Pos;
	params.Orientation = Orientation;
	params.Scale = Scale;
	params.Precious = Precious;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithSTLMesh
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USTLMeshCarver**         MeshCarver                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat*                  Orientation                    (Parm, IsPlainOldData)
// struct FVector*                Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::CarveWithSTLMesh(class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithSTLMesh");

	ADeepCSGWorld_CarveWithSTLMesh_Params params;
	params.MeshCarver = MeshCarver;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Pos = Pos;
	params.Orientation = Orientation;
	params.Scale = Scale;
	params.Precious = Precious;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithStaticMeshUsingTransform
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMeshCarver**      MeshCarver                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::CarveWithStaticMeshUsingTransform(class UStaticMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, EPreciousMaterialOptions* Precious)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithStaticMeshUsingTransform");

	ADeepCSGWorld_CarveWithStaticMeshUsingTransform_Params params;
	params.MeshCarver = MeshCarver;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Transform = Transform;
	params.Precious = Precious;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithStaticMesh
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMeshCarver**      MeshCarver                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat*                  Orientation                    (Parm, IsPlainOldData)
// struct FVector*                Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::CarveWithStaticMesh(class UStaticMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithStaticMesh");

	ADeepCSGWorld_CarveWithStaticMesh_Params params;
	params.MeshCarver = MeshCarver;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Pos = Pos;
	params.Orientation = Orientation;
	params.Scale = Scale;
	params.Precious = Precious;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithMeshUsingTransform_Wait
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class ADeepCSGWorld**          CSGWorld                       (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         ExpensiveNoise                 (Parm, ZeroConstructor, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void ADeepCSGWorld::STATIC_CarveWithMeshUsingTransform_Wait(class ADeepCSGWorld** CSGWorld, class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, float* ExpensiveNoise, EPreciousMaterialOptions* Precious, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithMeshUsingTransform_Wait");

	ADeepCSGWorld_CarveWithMeshUsingTransform_Wait_Params params;
	params.CSGWorld = CSGWorld;
	params.StaticMesh = StaticMesh;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Transform = Transform;
	params.ExpensiveNoise = ExpensiveNoise;
	params.Precious = Precious;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithMeshUsingTransform
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         ExpensiveNoise                 (Parm, ZeroConstructor, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::CarveWithMeshUsingTransform(class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, float* ExpensiveNoise, EPreciousMaterialOptions* Precious)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithMeshUsingTransform");

	ADeepCSGWorld_CarveWithMeshUsingTransform_Params params;
	params.StaticMesh = StaticMesh;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Transform = Transform;
	params.ExpensiveNoise = ExpensiveNoise;
	params.Precious = Precious;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithMesh_Wait
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ADeepCSGWorld**          CSGWorld                       (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat*                  Orientation                    (Parm, IsPlainOldData)
// struct FVector*                Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void ADeepCSGWorld::STATIC_CarveWithMesh_Wait(class ADeepCSGWorld** CSGWorld, class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithMesh_Wait");

	ADeepCSGWorld_CarveWithMesh_Wait_Params params;
	params.CSGWorld = CSGWorld;
	params.StaticMesh = StaticMesh;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Pos = Pos;
	params.Orientation = Orientation;
	params.Scale = Scale;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CarveWithMesh
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial**       Material                       (Parm, ZeroConstructor, IsPlainOldData)
// ECarveFilterType*              CarveFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat*                  Orientation                    (Parm, IsPlainOldData)
// struct FVector*                Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// EPreciousMaterialOptions*      Precious                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::CarveWithMesh(class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CarveWithMesh");

	ADeepCSGWorld_CarveWithMesh_Params params;
	params.StaticMesh = StaticMesh;
	params.Material = Material;
	params.CarveFilter = CarveFilter;
	params.Pos = Pos;
	params.Orientation = Orientation;
	params.Scale = Scale;
	params.Precious = Precious;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.CalcApproximateTerrainDensity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ADeepCSGWorld::CalcApproximateTerrainDensity(struct FVector* Pos, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.CalcApproximateTerrainDensity");

	ADeepCSGWorld_CalcApproximateTerrainDensity_Params params;
	params.Pos = Pos;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepCSGWorld.BaseLayerCommitFinal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          blocking                       (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::BaseLayerCommitFinal(bool* blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.BaseLayerCommitFinal");

	ADeepCSGWorld_BaseLayerCommitFinal_Params params;
	params.blocking = blocking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.BaseLayerCommit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          blocking                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          scheduleTesselation            (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::BaseLayerCommit(bool* blocking, bool* scheduleTesselation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.BaseLayerCommit");

	ADeepCSGWorld_BaseLayerCommit_Params params;
	params.blocking = blocking;
	params.scheduleTesselation = scheduleTesselation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.AttachActorToTerrain
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)

void ADeepCSGWorld::AttachActorToTerrain(class AActor** Actor, struct FVector* Pos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.AttachActorToTerrain");

	ADeepCSGWorld_AttachActorToTerrain_Params params;
	params.Actor = Actor;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.ApplyDebrisCarvers
// (Final, Native, Public, BlueprintCallable)

void ADeepCSGWorld::ApplyDebrisCarvers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.ApplyDebrisCarvers");

	ADeepCSGWorld_ApplyDebrisCarvers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepCSGWorld.ApplyBaseDebrisCarvers
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UDebrisBase*>*    Carvers                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ADeepCSGWorld::ApplyBaseDebrisCarvers(TArray<class UDebrisBase*>* Carvers)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepCSGWorld.ApplyBaseDebrisCarvers");

	ADeepCSGWorld_ApplyBaseDebrisCarvers_Params params;
	params.Carvers = Carvers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepDiveTemplate.GetStageRewardType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           StageIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// ESchematicType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESchematicType UDeepDiveTemplate::GetStageRewardType(int* StageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveTemplate.GetStageRewardType");

	UDeepDiveTemplate_GetStageRewardType_Params params;
	params.StageIndex = StageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveFunctionLibrary.IsDeepDiveElite
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UDeepDive**              DeepDive                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDiveFunctionLibrary::STATIC_IsDeepDiveElite(class UObject** WorldContextObject, class UDeepDive** DeepDive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveFunctionLibrary.IsDeepDiveElite");

	UDeepDiveFunctionLibrary_IsDeepDiveElite_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DeepDive = DeepDive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveFunctionLibrary.GetHasEverCompletedDeepDive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UDeepDiveTemplate**      DeepDive                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDiveFunctionLibrary::STATIC_GetHasEverCompletedDeepDive(class UObject** WorldContextObject, class UDeepDiveTemplate** DeepDive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveFunctionLibrary.GetHasEverCompletedDeepDive");

	UDeepDiveFunctionLibrary_GetHasEverCompletedDeepDive_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DeepDive = DeepDive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.StartDeepDive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UDeepDive**              DeepDive                       (Parm, ZeroConstructor, IsPlainOldData)

void UDeepDiveManager::StartDeepDive(class UDeepDive** DeepDive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.StartDeepDive");

	UDeepDiveManager_StartDeepDive_Params params;
	params.DeepDive = DeepDive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepDiveManager.MarkGivenRewards
// (Final, Native, Public, BlueprintCallable)

void UDeepDiveManager::MarkGivenRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.MarkGivenRewards");

	UDeepDiveManager_MarkGivenRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepDiveManager.IsEliteDeepDive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDiveManager::IsEliteDeepDive(class UGeneratedMission** mission)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.IsEliteDeepDive");

	UDeepDiveManager_IsEliteDeepDive_Params params;
	params.mission = mission;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.GetDeepDiveFromMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// class UDeepDive*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDeepDive* UDeepDiveManager::GetDeepDiveFromMission(class UGeneratedMission** mission)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.GetDeepDiveFromMission");

	UDeepDiveManager_GetDeepDiveFromMission_Params params;
	params.mission = mission;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.GetCurrentSingleMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeneratedMission*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGeneratedMission* UDeepDiveManager::GetCurrentSingleMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.GetCurrentSingleMission");

	UDeepDiveManager_GetCurrentSingleMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.GetCurrentDeepDiveStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDeepDiveManager::GetCurrentDeepDiveStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.GetCurrentDeepDiveStage");

	UDeepDiveManager_GetCurrentDeepDiveStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.GetActiveNormalDeepDive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDeepDive*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDeepDive* UDeepDiveManager::GetActiveNormalDeepDive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.GetActiveNormalDeepDive");

	UDeepDiveManager_GetActiveNormalDeepDive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.GetActiveHardDeepDive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDeepDive*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDeepDive* UDeepDiveManager::GetActiveHardDeepDive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.GetActiveHardDeepDive");

	UDeepDiveManager_GetActiveHardDeepDive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.GetActiveDeepDive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDeepDive*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDeepDive* UDeepDiveManager::GetActiveDeepDive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.GetActiveDeepDive");

	UDeepDiveManager_GetActiveDeepDive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.DeepDiveManager.DeepDiveRefreshDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UDeepDiveManager::DeepDiveRefreshDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.DeepDiveManager.DeepDiveRefreshDelegate__DelegateSignature");

	UDeepDiveManager_DeepDiveRefreshDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepDiveManager.CompleteCurrentSingleMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDiveManager::CompleteCurrentSingleMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.CompleteCurrentSingleMission");

	UDeepDiveManager_CompleteCurrentSingleMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDiveManager.AreAllSelectedClassesQualified
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDiveManager::AreAllSelectedClassesQualified()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDiveManager.AreAllSelectedClassesQualified");

	UDeepDiveManager_AreAllSelectedClassesQualified_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDive.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDive::IsCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDive.IsCompleted");

	UDeepDive_IsCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDive.HasCompletedStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           StageIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepDive::HasCompletedStage(int* StageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDive.HasCompletedStage");

	UDeepDive_HasCompletedStage_Params params;
	params.StageIndex = StageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepDive.GetGivenRewardAtStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           StageIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FDeepDiveRewardItem     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDeepDiveRewardItem UDeepDive::GetGivenRewardAtStage(int* StageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepDive.GetGivenRewardAtStage");

	UDeepDive_GetGivenRewardAtStage_Params params;
	params.StageIndex = StageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommnuityRewardBundle.AwardRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void UCommnuityRewardBundle::AwardRewards(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommnuityRewardBundle.AwardRewards");

	UCommnuityRewardBundle_AwardRewards_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.UpdateDestination
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Dest                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDeepPathfinderMovement::UpdateDestination(struct FVector* Dest)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.UpdateDestination");

	UDeepPathfinderMovement_UpdateDestination_Params params;
	params.Dest = Dest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.TeleportTo
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                destLoc                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               destRot                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDeepPathfinderMovement::TeleportTo(struct FVector* destLoc, struct FRotator* destRot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.TeleportTo");

	UDeepPathfinderMovement_TeleportTo_Params params;
	params.destLoc = destLoc;
	params.destRot = destRot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.StopMove
// (Final, Native, Public, BlueprintCallable)

void UDeepPathfinderMovement::StopMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StopMove");

	UDeepPathfinderMovement_StopMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.StopAttackStance
// (Final, Native, Public, BlueprintCallable)

void UDeepPathfinderMovement::StopAttackStance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StopAttackStance");

	UDeepPathfinderMovement_StopAttackStance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.StartMoveToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Dest                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AcceptanceRadius               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::StartMoveToActor(class AActor** Dest, float* AcceptanceRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StartMoveToActor");

	UDeepPathfinderMovement_StartMoveToActor_Params params;
	params.Dest = Dest;
	params.AcceptanceRadius = AcceptanceRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.StartMoveTo
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Dest                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         AcceptanceRadius               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::StartMoveTo(struct FVector* Dest, float* AcceptanceRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StartMoveTo");

	UDeepPathfinderMovement_StartMoveTo_Params params;
	params.Dest = Dest;
	params.AcceptanceRadius = AcceptanceRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.StartFleeFrom
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                dangerPos                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::StartFleeFrom(struct FVector* dangerPos, float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StartFleeFrom");

	UDeepPathfinderMovement_StartFleeFrom_Params params;
	params.dangerPos = dangerPos;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.StartFakePhysicsMoveSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFakeMoverSettings**     MoveSettings                   (Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::StartFakePhysicsMoveSet(class UFakeMoverSettings** MoveSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StartFakePhysicsMoveSet");

	UDeepPathfinderMovement_StartFakePhysicsMoveSet_Params params;
	params.MoveSettings = MoveSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.StartFakePhysics
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Vel                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDeepPathfinderMovement::StartFakePhysics(struct FVector* Vel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StartFakePhysics");

	UDeepPathfinderMovement_StartFakePhysics_Params params;
	params.Vel = Vel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.StartAttackStance
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                stancePos                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDeepPathfinderMovement::StartAttackStance(struct FVector* stancePos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.StartAttackStance");

	UDeepPathfinderMovement_StartAttackStance_Params params;
	params.stancePos = stancePos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.SnapToPathfinder
// (Final, Native, Public, BlueprintCallable)

void UDeepPathfinderMovement::SnapToPathfinder()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.SnapToPathfinder");

	UDeepPathfinderMovement_SnapToPathfinder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.SetSlowDownAngles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Min                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         Max                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::SetSlowDownAngles(float* Min, float* Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.SetSlowDownAngles");

	UDeepPathfinderMovement_SetSlowDownAngles_Params params;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.SetMaxSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Speed                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::SetMaxSpeed(float* Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.SetMaxSpeed");

	UDeepPathfinderMovement_SetMaxSpeed_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.SetHandleRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          flag                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::SetHandleRotation(bool* flag)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.SetHandleRotation");

	UDeepPathfinderMovement_SetHandleRotation_Params params;
	params.flag = flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.SetFreezeAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Freeze                         (Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::SetFreezeAlignment(bool* Freeze)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.SetFreezeAlignment");

	UDeepPathfinderMovement_SetFreezeAlignment_Params params;
	params.Freeze = Freeze;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.SetControlledExternally
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          controlled                     (Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::SetControlledExternally(bool* controlled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.SetControlledExternally");

	UDeepPathfinderMovement_SetControlledExternally_Params params;
	params.controlled = controlled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.PathExistTo
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Dest                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::PathExistTo(struct FVector* Dest)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.PathExistTo");

	UDeepPathfinderMovement_PathExistTo_Params params;
	params.Dest = Dest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.PathExistsBetween
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                From                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                to                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::PathExistsBetween(struct FVector* From, struct FVector* to)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.PathExistsBetween");

	UDeepPathfinderMovement_PathExistsBetween_Params params;
	params.From = From;
	params.to = to;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.OnRep_PathMovedDist
// (Final, Native, Private)
// Parameters:
// uint32_t*                      lastPathMovedDist              (Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::OnRep_PathMovedDist(uint32_t* lastPathMovedDist)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.OnRep_PathMovedDist");

	UDeepPathfinderMovement_OnRep_PathMovedDist_Params params;
	params.lastPathMovedDist = lastPathMovedDist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.OnRep_Path
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FDeepRepPath*           oldPath                        (ConstParm, Parm, OutParm, ReferenceParm)

void UDeepPathfinderMovement::OnRep_Path(struct FDeepRepPath* oldPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.OnRep_Path");

	UDeepPathfinderMovement_OnRep_Path_Params params;
	params.oldPath = oldPath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.OnRep_MoveSettings
// (Final, Native, Private)
// Parameters:
// class UFakeMoverSettings**     MoveSettings                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDeepPathfinderMovement::OnRep_MoveSettings(class UFakeMoverSettings** MoveSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.OnRep_MoveSettings");

	UDeepPathfinderMovement_OnRep_MoveSettings_Params params;
	params.MoveSettings = MoveSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepPathfinderMovement.IsFreezeAlignmentSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::IsFreezeAlignmentSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.IsFreezeAlignmentSet");

	UDeepPathfinderMovement_IsFreezeAlignmentSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetVerticalAngleSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDeepPathfinderMovement::GetVerticalAngleSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetVerticalAngleSpeed");

	UDeepPathfinderMovement_GetVerticalAngleSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetRandomReachablePointAtApproximateDistance_Async
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 outPos                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void UDeepPathfinderMovement::GetRandomReachablePointAtApproximateDistance_Async(struct FVector* Origin, float* distance, struct FLatentActionInfo* LatentInfo, bool* success, struct FVector* outPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetRandomReachablePointAtApproximateDistance_Async");

	UDeepPathfinderMovement_GetRandomReachablePointAtApproximateDistance_Async_Params params;
	params.Origin = Origin;
	params.distance = distance;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (success != nullptr)
		*success = params.success;
	if (outPos != nullptr)
		*outPos = params.outPos;
}


// Function FSD.DeepPathfinderMovement.GetRandomReachablePointAtApproximateDistance
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 outPos                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::GetRandomReachablePointAtApproximateDistance(struct FVector* Origin, float* distance, struct FVector* outPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetRandomReachablePointAtApproximateDistance");

	UDeepPathfinderMovement_GetRandomReachablePointAtApproximateDistance_Params params;
	params.Origin = Origin;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outPos != nullptr)
		*outPos = params.outPos;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetPathForwardDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDeepPathfinderMovement::GetPathForwardDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetPathForwardDirection");

	UDeepPathfinderMovement_GetPathForwardDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetMovementState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDeepMovementState             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDeepMovementState UDeepPathfinderMovement::GetMovementState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetMovementState");

	UDeepPathfinderMovement_GetMovementState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetIsStrafing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::GetIsStrafing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetIsStrafing");

	UDeepPathfinderMovement_GetIsStrafing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetHorizontalAngleSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDeepPathfinderMovement::GetHorizontalAngleSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetHorizontalAngleSpeed");

	UDeepPathfinderMovement_GetHorizontalAngleSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.GetCurrentFakePhysicsMoveSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFakeMoverSettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFakeMoverSettings* UDeepPathfinderMovement::GetCurrentFakePhysicsMoveSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.GetCurrentFakePhysicsMoveSet");

	UDeepPathfinderMovement_GetCurrentFakePhysicsMoveSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.FlyToConnectedPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                destPos                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::FlyToConnectedPosition(struct FVector* destPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.FlyToConnectedPosition");

	UDeepPathfinderMovement_FlyToConnectedPosition_Params params;
	params.destPos = destPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.FindPathfinderPointAbove
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDeepPathfinderMovement::FindPathfinderPointAbove(struct FVector* Pos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.FindPathfinderPointAbove");

	UDeepPathfinderMovement_FindPathfinderPointAbove_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.FindNearestPathfinderPoint_Async
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           success                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 outPos                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void UDeepPathfinderMovement::FindNearestPathfinderPoint_Async(struct FVector* Pos, float* MaxDistance, struct FLatentActionInfo* LatentInfo, bool* success, struct FVector* outPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.FindNearestPathfinderPoint_Async");

	UDeepPathfinderMovement_FindNearestPathfinderPoint_Async_Params params;
	params.Pos = Pos;
	params.MaxDistance = MaxDistance;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (success != nullptr)
		*success = params.success;
	if (outPos != nullptr)
		*outPos = params.outPos;
}


// Function FSD.DeepPathfinderMovement.FindNearestPathfinderPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDeepPathfinderMovement::FindNearestPathfinderPoint(struct FVector* Pos, float* MaxDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.FindNearestPathfinderPoint");

	UDeepPathfinderMovement_FindNearestPathfinderPoint_Params params;
	params.Pos = Pos;
	params.MaxDistance = MaxDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.FindNearestConnectedPathfinderPoint
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UDeepPathfinderMovement::FindNearestConnectedPathfinderPoint(struct FVector* Pos, float* MaxDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.FindNearestConnectedPathfinderPoint");

	UDeepPathfinderMovement_FindNearestConnectedPathfinderPoint_Params params;
	params.Pos = Pos;
	params.MaxDistance = MaxDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.CalcPathfinderOrientation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                forwardDir                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FQuat                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FQuat UDeepPathfinderMovement::CalcPathfinderOrientation(struct FVector* Pos, struct FVector* forwardDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.CalcPathfinderOrientation");

	UDeepPathfinderMovement_CalcPathfinderOrientation_Params params;
	params.Pos = Pos;
	params.forwardDir = forwardDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.BackOffFrom
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                dangerPos                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeepPathfinderMovement::BackOffFrom(struct FVector* dangerPos, float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.BackOffFrom");

	UDeepPathfinderMovement_BackOffFrom_Params params;
	params.dangerPos = dangerPos;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepPathfinderMovement.AddFakeMoverImpulse
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Impulse                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDeepPathfinderMovement::AddFakeMoverImpulse(struct FVector* Impulse)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepPathfinderMovement.AddFakeMoverImpulse");

	UDeepPathfinderMovement_AddFakeMoverImpulse_Params params;
	params.Impulse = Impulse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepProceduralMeshComponent.FindTerrainMaterialFromPhysicalMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFSDPhysicalMaterial**   Material                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTerrainMaterial*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTerrainMaterial* UDeepProceduralMeshComponent::FindTerrainMaterialFromPhysicalMaterial(class UFSDPhysicalMaterial** Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepProceduralMeshComponent.FindTerrainMaterialFromPhysicalMaterial");

	UDeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DeepScanComponent.StopScan
// (Final, Native, Public, BlueprintCallable)

void UDeepScanComponent::StopScan()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepScanComponent.StopScan");

	UDeepScanComponent_StopScan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DeepScanComponent.StartScan
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform*             trans                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDeepScanComponent::StartScan(struct FTransform* trans)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DeepScanComponent.StartScan");

	UDeepScanComponent_StartScan_Params params;
	params.trans = trans;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefenseEvent.OnRep_Progress
// (Final, Native, Protected)
// Parameters:
// float*                         OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void ADefenseEvent::OnRep_Progress(float* OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefenseEvent.OnRep_Progress");

	ADefenseEvent_OnRep_Progress_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MapDrawer.DrawMapSphere
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Center                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Segments                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           LineColor                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void AMapDrawer::DrawMapSphere(struct FVector* Center, float* Radius, int* Segments, struct FLinearColor* LineColor, float* Thickness)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MapDrawer.DrawMapSphere");

	AMapDrawer_DrawMapSphere_Params params;
	params.Center = Center;
	params.Radius = Radius;
	params.Segments = Segments;
	params.LineColor = LineColor;
	params.Thickness = Thickness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MapDrawer.DrawMapLine
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                LineStart                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                LineEnd                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FLinearColor*           LineColor                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void AMapDrawer::DrawMapLine(struct FVector* LineStart, struct FVector* LineEnd, struct FLinearColor* LineColor, float* Thickness)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MapDrawer.DrawMapLine");

	AMapDrawer_DrawMapLine_Params params;
	params.LineStart = LineStart;
	params.LineEnd = LineEnd;
	params.LineColor = LineColor;
	params.Thickness = Thickness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefensePointActor.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDefendPointState*             State                          (Parm, ZeroConstructor, IsPlainOldData)

void ADefensePointActor::SetState(EDefendPointState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefensePointActor.SetState");

	ADefensePointActor_SetState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefensePointActor.OnRep_DefendState
// (Final, Native, Protected)

void ADefensePointActor::OnRep_DefendState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefensePointActor.OnRep_DefendState");

	ADefensePointActor_OnRep_DefendState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefensePointActor.OnDefensePointActivated
// (Native, Protected)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void ADefensePointActor::OnDefensePointActivated(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefensePointActor.OnDefensePointActivated");

	ADefensePointActor_OnDefensePointActivated_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefensePointActor.DefenseStart
// (Event, Protected, BlueprintEvent)

void ADefensePointActor::DefenseStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefensePointActor.DefenseStart");

	ADefensePointActor_DefenseStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefensePointActor.DefenseFail
// (Event, Protected, BlueprintEvent)

void ADefensePointActor::DefenseFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefensePointActor.DefenseFail");

	ADefensePointActor_DefenseFail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefensePointActor.DefenseComplete
// (Event, Protected, BlueprintEvent)

void ADefensePointActor::DefenseComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefensePointActor.DefenseComplete");

	ADefensePointActor_DefenseComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefenseObjective.PointDefended
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UDefenseObjective::PointDefended()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefenseObjective.PointDefended");

	UDefenseObjective_PointDefended_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefenseObjective.OnRep_PointsRepaired
// (Final, Native, Protected)

void UDefenseObjective::OnRep_PointsRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefenseObjective.OnRep_PointsRepaired");

	UDefenseObjective_OnRep_PointsRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefenseObjective.OnDefensePointsSpawned
// (Event, Public, BlueprintEvent)

void UDefenseObjective::OnDefensePointsSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefenseObjective.OnDefensePointsSpawned");

	UDefenseObjective_OnDefensePointsSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DefenseObjective.FindDefensePointLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// class UDebrisPositioning**     DebrisPositioning              (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 terrainPlacement               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        locationsToAvoid               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UCurveFloat**            avoidCostCurve                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           outFoundSpawn                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UDefenseObjective::STATIC_FindDefensePointLocation(class AProceduralSetup** setup, class UDebrisPositioning** DebrisPositioning, class UClass** terrainPlacement, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve, bool* outFoundSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DefenseObjective.FindDefensePointLocation");

	UDefenseObjective_FindDefensePointLocation_Params params;
	params.setup = setup;
	params.DebrisPositioning = DebrisPositioning;
	params.terrainPlacement = terrainPlacement;
	params.locationsToAvoid = locationsToAvoid;
	params.avoidCostCurve = avoidCostCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outFoundSpawn != nullptr)
		*outFoundSpawn = params.outFoundSpawn;

	return params.ReturnValue;
}


// Function FSD.DetPack.UseFearStaggerUpgrades
// (Final, Native, Protected, BlueprintCallable)

void ADetPack::UseFearStaggerUpgrades()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.UseFearStaggerUpgrades");

	ADetPack_UseFearStaggerUpgrades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPack.RecieveHitObject
// (Event, Protected, BlueprintEvent)

void ADetPack::RecieveHitObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.RecieveHitObject");

	ADetPack_RecieveHitObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPack.OnRep_IsMoving
// (Final, Native, Protected)

void ADetPack::OnRep_IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.OnRep_IsMoving");

	ADetPack_OnRep_IsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPack.OnRep_HasExploded
// (Final, Native, Protected)

void ADetPack::OnRep_HasExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.OnRep_HasExploded");

	ADetPack_OnRep_HasExploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPack.OnExploded
// (Event, Protected, BlueprintEvent)

void ADetPack::OnExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.OnExploded");

	ADetPack_OnExploded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPack.OnDetPackPickedUp
// (Final, Native, Protected)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void ADetPack::OnDetPackPickedUp(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.OnDetPackPickedUp");

	ADetPack_OnDetPackPickedUp_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPack.OnDetPackDeath
// (Final, Native, Public)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ADetPack::OnDetPackDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPack.OnDetPackDeath");

	ADetPack_OnDetPackDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.Simulate_ThrowGrenade
// (Net, Native, Event, NetMulticast, Protected)

void ADetPackItem::Simulate_ThrowGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.Simulate_ThrowGrenade");

	ADetPackItem_Simulate_ThrowGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.Server_ThrowGrenade
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ADetPackItem::Server_ThrowGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.Server_ThrowGrenade");

	ADetPackItem_Server_ThrowGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.Server_Detonate
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ADetPackItem::Server_Detonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.Server_Detonate");

	ADetPackItem_Server_Detonate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.Server_CycleItem
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ADetPackItem::Server_CycleItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.Server_CycleItem");

	ADetPackItem_Server_CycleItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.Receive_OnRep_IsDetonatorOut
// (Event, Protected, BlueprintEvent)

void ADetPackItem::Receive_OnRep_IsDetonatorOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.Receive_OnRep_IsDetonatorOut");

	ADetPackItem_Receive_OnRep_IsDetonatorOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.OnRep_IsDetonatorOut
// (Final, Native, Protected)

void ADetPackItem::OnRep_IsDetonatorOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.OnRep_IsDetonatorOut");

	ADetPackItem_OnRep_IsDetonatorOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.OnDetonatingFinished
// (Final, Native, Protected)

void ADetPackItem::OnDetonatingFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.OnDetonatingFinished");

	ADetPackItem_OnDetonatingFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DetPackItem.GetCurrentGrenades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ADetPackItem::GetCurrentGrenades()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackItem.GetCurrentGrenades");

	ADetPackItem_GetCurrentGrenades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DialogDataAsset.SelectIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UDialogDataAsset::SelectIndex(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DialogDataAsset.SelectIndex");

	UDialogDataAsset_SelectIndex_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DialogDataAsset.SelectEntry
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDialogStruct           Dialog                         (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDialogDataAsset::SelectEntry(class UObject** WorldContext, struct FDialogStruct* Dialog)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DialogDataAsset.SelectEntry");

	UDialogDataAsset_SelectEntry_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Dialog != nullptr)
		*Dialog = params.Dialog;

	return params.ReturnValue;
}


// Function FSD.DialogDataAsset.GetShout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FDialogStruct           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDialogStruct UDialogDataAsset::GetShout(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DialogDataAsset.GetShout");

	UDialogDataAsset_GetShout_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.SelectDifficulty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UDifficultySetting*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDifficultySetting* UDifficultyManager::SelectDifficulty(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.SelectDifficulty");

	UDifficultyManager_SelectDifficulty_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetSmallEnemyDamageResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetSmallEnemyDamageResistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetSmallEnemyDamageResistance");

	UDifficultyManager_GetSmallEnemyDamageResistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetPointExtractionScaler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetPointExtractionScaler()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetPointExtractionScaler");

	UDifficultyManager_GetPointExtractionScaler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetExtraLargeEnemyDamageResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetExtraLargeEnemyDamageResistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetExtraLargeEnemyDamageResistance");

	UDifficultyManager_GetExtraLargeEnemyDamageResistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetEnemyDamageResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetEnemyDamageResistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetEnemyDamageResistance");

	UDifficultyManager_GetEnemyDamageResistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetEnemyDamageModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetEnemyDamageModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetEnemyDamageModifier");

	UDifficultyManager_GetEnemyDamageModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetEnemyCountModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetEnemyCountModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetEnemyCountModifier");

	UDifficultyManager_GetEnemyCountModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetCurrentDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDifficultySetting*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDifficultySetting* UDifficultyManager::GetCurrentDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetCurrentDifficulty");

	UDifficultyManager_GetCurrentDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultyManager.GetBossDifficultyScaler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultyManager::GetBossDifficultyScaler()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultyManager.GetBossDifficultyScaler");

	UDifficultyManager_GetBossDifficultyScaler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultySetting.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDifficultySetting::IsUnlocked(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultySetting.IsUnlocked");

	UDifficultySetting_IsUnlocked_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DifficultySetting.AddHazardBonus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         BaseValue                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UDifficultySetting::AddHazardBonus(float* BaseValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DifficultySetting.AddHazardBonus");

	UDifficultySetting_AddHazardBonus_Params params;
	params.BaseValue = BaseValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DiscordWrapper.RequestUserInServer
// (Final, Native, Public, BlueprintCallable)

void UDiscordWrapper::RequestUserInServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.RequestUserInServer");

	UDiscordWrapper_RequestUserInServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.RequestFactionAdjustment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Faction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          force                          (Parm, ZeroConstructor, IsPlainOldData)

void UDiscordWrapper::RequestFactionAdjustment(int* Faction, bool* force)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.RequestFactionAdjustment");

	UDiscordWrapper_RequestFactionAdjustment_Params params;
	params.Faction = Faction;
	params.force = force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.RequestEoMData
// (Final, Native, Public, BlueprintCallable)

void UDiscordWrapper::RequestEoMData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.RequestEoMData");

	UDiscordWrapper_RequestEoMData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.RequestDiscordServerInfo
// (Final, Native, Public, BlueprintCallable)

void UDiscordWrapper::RequestDiscordServerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.RequestDiscordServerInfo");

	UDiscordWrapper_RequestDiscordServerInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.RejectInviteSignature
// (Final, Native, Public)

void UDiscordWrapper::RejectInviteSignature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.RejectInviteSignature");

	UDiscordWrapper_RejectInviteSignature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.RejectInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                userId                         (Parm, ZeroConstructor)

void UDiscordWrapper::RejectInvite(struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.RejectInvite");

	UDiscordWrapper_RejectInvite_Params params;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.IgnoreInviteSignature
// (Final, Native, Public)

void UDiscordWrapper::IgnoreInviteSignature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.IgnoreInviteSignature");

	UDiscordWrapper_IgnoreInviteSignature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.IgnoreInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                userId                         (Parm, ZeroConstructor)

void UDiscordWrapper::IgnoreInvite(struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.IgnoreInvite");

	UDiscordWrapper_IgnoreInvite_Params params;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.GetAvatarURL
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDiscordWrapper::GetAvatarURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.GetAvatarURL");

	UDiscordWrapper_GetAvatarURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DiscordWrapper.AdjustFaction
// (Final, Native, Public, BlueprintCallable)

void UDiscordWrapper::AdjustFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.AdjustFaction");

	UDiscordWrapper_AdjustFaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.AcceptInviteSignature
// (Final, Native, Public)

void UDiscordWrapper::AcceptInviteSignature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.AcceptInviteSignature");

	UDiscordWrapper_AcceptInviteSignature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DiscordWrapper.AcceptInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                userId                         (Parm, ZeroConstructor)

void UDiscordWrapper::AcceptInvite(struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DiscordWrapper.AcceptInvite");

	UDiscordWrapper_AcceptInvite_Params params;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RepairableComponent.TryRepair
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool URepairableComponent::TryRepair(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairableComponent.TryRepair");

	URepairableComponent_TryRepair_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RepairableComponent.OnRep_ResourcesRequired
// (Final, Native, Protected)

void URepairableComponent::OnRep_ResourcesRequired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairableComponent.OnRep_ResourcesRequired");

	URepairableComponent_OnRep_ResourcesRequired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RepairableComponent.GetResourcesRequired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int URepairableComponent::GetResourcesRequired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairableComponent.GetResourcesRequired");

	URepairableComponent_GetResourcesRequired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RepairableComponent.Cheat_Repair
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void URepairableComponent::Cheat_Repair()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairableComponent.Cheat_Repair");

	URepairableComponent_Cheat_Repair_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DonkeyCharacter.SetOpenForDeposit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Open                           (Parm, ZeroConstructor, IsPlainOldData)

void ADonkeyCharacter::SetOpenForDeposit(bool* Open)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DonkeyCharacter.SetOpenForDeposit");

	ADonkeyCharacter_SetOpenForDeposit_Params params;
	params.Open = Open;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DonkeyCharacter.EnableButton
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADonkeyCharacter::EnableButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DonkeyCharacter.EnableButton");

	ADonkeyCharacter_EnableButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DownedStateComponent.Server_StopBleedOut
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UDownedStateComponent::Server_StopBleedOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DownedStateComponent.Server_StopBleedOut");

	UDownedStateComponent_Server_StopBleedOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DownedStateComponent.Server_StartBleedOut
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UDownedStateComponent::Server_StartBleedOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DownedStateComponent.Server_StartBleedOut");

	UDownedStateComponent_Server_StartBleedOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableActor.Pickup
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void ADrinkableActor::Pickup(class APlayerCharacter** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableActor.Pickup");

	ADrinkableActor_Pickup_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableActor.OnRep_DrinkableData
// (Event, Protected, BlueprintEvent)

void ADrinkableActor::OnRep_DrinkableData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableActor.OnRep_DrinkableData");

	ADrinkableActor_OnRep_DrinkableData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableActor.Fill
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADrinkableActor::Fill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableActor.Fill");

	ADrinkableActor_Fill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableDataAsset.TryUnlockSpecialDrinks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::STATIC_TryUnlockSpecialDrinks(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.TryUnlockSpecialDrinks");

	UDrinkableDataAsset_TryUnlockSpecialDrinks_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.TryUnlockDrink
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::TryUnlockDrink(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.TryUnlockDrink");

	UDrinkableDataAsset_TryUnlockDrink_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.TryPurchaseDrink
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::TryPurchaseDrink(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.TryPurchaseDrink");

	UDrinkableDataAsset_TryPurchaseDrink_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.OnRoundOrdered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDrinkableDataAsset::OnRoundOrdered(class APlayerCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.OnRoundOrdered");

	UDrinkableDataAsset_OnRoundOrdered_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableDataAsset.MustBeUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::MustBeUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.MustBeUnlocked");

	UDrinkableDataAsset_MustBeUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::IsUnlocked(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.IsUnlocked");

	UDrinkableDataAsset_IsUnlocked_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.IsDrinkFree
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::IsDrinkFree(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.IsDrinkFree");

	UDrinkableDataAsset_IsDrinkFree_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.HasSupporterEdition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::HasSupporterEdition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.HasSupporterEdition");

	UDrinkableDataAsset_HasSupporterEdition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.GetDrinkableEdition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDrinkableDataAsset*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDrinkableDataAsset* UDrinkableDataAsset::GetDrinkableEdition(class UObject** WorldContext, class APlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.GetDrinkableEdition");

	UDrinkableDataAsset_GetDrinkableEdition_Params params;
	params.WorldContext = WorldContext;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkableDataAsset.AreSpecialDrinksUnlocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrinkableDataAsset::STATIC_AreSpecialDrinksUnlocked(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableDataAsset.AreSpecialDrinksUnlocked");

	UDrinkableDataAsset_AreSpecialDrinksUnlocked_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DrinkEffectComponent.StopEffect
// (Final, Native, Protected, BlueprintCallable)

void UDrinkEffectComponent::StopEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkEffectComponent.StopEffect");

	UDrinkEffectComponent_StopEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkEffectComponent.OnStopEffect
// (Event, Protected, BlueprintEvent)

void UDrinkEffectComponent::OnStopEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkEffectComponent.OnStopEffect");

	UDrinkEffectComponent_OnStopEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkEffectComponent.OnStartEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerCharacter**       Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UDrinkEffectComponent::OnStartEffect(class APlayerCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkEffectComponent.OnStartEffect");

	UDrinkEffectComponent_OnStartEffect_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableItem.OnRep_DrinkableData
// (Final, Native, Protected)

void ADrinkableItem::OnRep_DrinkableData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableItem.OnRep_DrinkableData");

	ADrinkableItem_OnRep_DrinkableData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableItem.Consume
// (Final, Native, Protected, BlueprintCallable)

void ADrinkableItem::Consume()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableItem.Consume");

	ADrinkableItem_Consume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableItem.ClientConsumed
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)

void ADrinkableItem::ClientConsumed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableItem.ClientConsumed");

	ADrinkableItem_ClientConsumed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DrinkableItem.CheckCanSalute
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADrinkableItem::CheckCanSalute()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DrinkableItem.CheckCanSalute");

	ADrinkableItem_CheckCanSalute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DroneDisplayActionComponent.SetMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDroneActions*                 droneAction                    (Parm, ZeroConstructor, IsPlainOldData)

void UDroneDisplayActionComponent::SetMode(EDroneActions* droneAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DroneDisplayActionComponent.SetMode");

	UDroneDisplayActionComponent_SetMode_Params params;
	params.droneAction = droneAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DroneMiningToolBase.StopMining
// (Final, Native, Public, BlueprintCallable)

void UDroneMiningToolBase::StopMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DroneMiningToolBase.StopMining");

	UDroneMiningToolBase_StopMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DroneMiningToolBase.StartMining
// (Final, Native, Public, BlueprintCallable)

void UDroneMiningToolBase::StartMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DroneMiningToolBase.StartMining");

	UDroneMiningToolBase_StartMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DroneMiningToolBase.SpawnEffects
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class UTerrainMaterial**       aTerrainMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          aParialHit                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize*    aLocation                      (Parm)
// struct FVector_NetQuantize*    aImpactNormal                  (Parm)

void UDroneMiningToolBase::SpawnEffects(class UTerrainMaterial** aTerrainMaterial, bool* aParialHit, struct FVector_NetQuantize* aLocation, struct FVector_NetQuantize* aImpactNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DroneMiningToolBase.SpawnEffects");

	UDroneMiningToolBase_SpawnEffects_Params params;
	params.aTerrainMaterial = aTerrainMaterial;
	params.aParialHit = aParialHit;
	params.aLocation = aLocation;
	params.aImpactNormal = aImpactNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DroneMiningToolBase.SetLocationToMine
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UDroneMiningToolBase::SetLocationToMine(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DroneMiningToolBase.SetLocationToMine");

	UDroneMiningToolBase_SetLocationToMine_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.StartDrilling
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ADropPod::StartDrilling()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.StartDrilling");

	ADropPod_StartDrilling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.PrepForTakeOff
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ADropPod::PrepForTakeOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.PrepForTakeOff");

	ADropPod_PrepForTakeOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.OnRep_State
// (Final, Native, Protected)

void ADropPod::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.OnRep_State");

	ADropPod_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.OnPrepForTakeOff
// (Event, Protected, BlueprintEvent)

void ADropPod::OnPrepForTakeOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.OnPrepForTakeOff");

	ADropPod_OnPrepForTakeOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.OnDroppodImpact
// (Event, Protected, BlueprintEvent)

void ADropPod::OnDroppodImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.OnDroppodImpact");

	ADropPod_OnDroppodImpact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.OnDrillingStarted
// (Event, Protected, BlueprintEvent)

void ADropPod::OnDrillingStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.OnDrillingStarted");

	ADropPod_OnDrillingStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.OnDeparting
// (Event, Protected, BlueprintEvent)

void ADropPod::OnDeparting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.OnDeparting");

	ADropPod_OnDeparting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropPod.DropToMission
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 podClass                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class ADropPod*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADropPod* ADropPod::STATIC_DropToMission(class UObject** WorldContextObject, class UClass** podClass, struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.DropToMission");

	ADropPod_DropToMission_Params params;
	params.WorldContextObject = WorldContextObject;
	params.podClass = podClass;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DropPod.Depart
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ADropPod::Depart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropPod.Depart");

	ADropPod_Depart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropToTerrainComponent.SetParentPositionOnAll
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                CurrentParentLocation          (Parm, ZeroConstructor, IsPlainOldData)

void UDropToTerrainComponent::SetParentPositionOnAll(struct FVector* CurrentParentLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropToTerrainComponent.SetParentPositionOnAll");

	UDropToTerrainComponent_SetParentPositionOnAll_Params params;
	params.CurrentParentLocation = CurrentParentLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropToTerrainComponent.OnTerrainRemoved
// (Final, Native, Protected)

void UDropToTerrainComponent::OnTerrainRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropToTerrainComponent.OnTerrainRemoved");

	UDropToTerrainComponent_OnTerrainRemoved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DropToTerrainComponent.BeginDropDetection
// (Native, Protected, BlueprintCallable)

void UDropToTerrainComponent::BeginDropDetection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DropToTerrainComponent.BeginDropDetection");

	UDropToTerrainComponent_BeginDropDetection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DualMachinePistols.Server_TriggerStatusEffect
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ADualMachinePistols::Server_TriggerStatusEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DualMachinePistols.Server_TriggerStatusEffect");

	ADualMachinePistols_Server_TriggerStatusEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.SetTarget
// (Final, Native, Public)
// Parameters:
// class USceneComponent**        TargetPoint                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectroBeam::SetTarget(class USceneComponent** TargetPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.SetTarget");

	AElectroBeam_SetTarget_Params params;
	params.TargetPoint = TargetPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.SetSource
// (Final, Native, Public)
// Parameters:
// class USceneComponent**        SourcePoint                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectroBeam::SetSource(class USceneComponent** SourcePoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.SetSource");

	AElectroBeam_SetSource_Params params;
	params.SourcePoint = SourcePoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.SetParents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 firstParent                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 secondParent                   (Parm, ZeroConstructor, IsPlainOldData)

void AElectroBeam::SetParents(class AActor** firstParent, class AActor** secondParent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.SetParents");

	AElectroBeam_SetParents_Params params;
	params.firstParent = firstParent;
	params.secondParent = secondParent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.RecalculateBeam
// (Final, Native, Public, BlueprintCallable)

void AElectroBeam::RecalculateBeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.RecalculateBeam");

	AElectroBeam_RecalculateBeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.OnRep_TargetLocation
// (Final, Native, Public)

void AElectroBeam::OnRep_TargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.OnRep_TargetLocation");

	AElectroBeam_OnRep_TargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.OnRep_SourceLocation
// (Final, Native, Public)

void AElectroBeam::OnRep_SourceLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.OnRep_SourceLocation");

	AElectroBeam_OnRep_SourceLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.OnRep_Flag
// (Final, Native, Private)

void AElectroBeam::OnRep_Flag()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.OnRep_Flag");

	AElectroBeam_OnRep_Flag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.OnParentTwoDeath
// (Final, Native, Public)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectroBeam::OnParentTwoDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.OnParentTwoDeath");

	AElectroBeam_OnParentTwoDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.OnParentOneDeath
// (Final, Native, Public)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectroBeam::OnParentOneDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.OnParentOneDeath");

	AElectroBeam_OnParentOneDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.GetParticleEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* AElectroBeam::GetParticleEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.GetParticleEffect");

	AElectroBeam_GetParticleEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElectroBeam.GetCollider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCapsuleComponent* AElectroBeam::GetCollider()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.GetCollider");

	AElectroBeam_GetCollider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElectroBeam.GetAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAudioComponent* AElectroBeam::GetAudio()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.GetAudio");

	AElectroBeam_GetAudio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElectroBeam.DelayedSetTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent**        TargetPoint                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectroBeam::DelayedSetTarget(class USceneComponent** TargetPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.DelayedSetTarget");

	AElectroBeam_DelayedSetTarget_Params params;
	params.TargetPoint = TargetPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.DelayedSetSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent**        SourcePoint                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectroBeam::DelayedSetSource(class USceneComponent** SourcePoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.DelayedSetSource");

	AElectroBeam_DelayedSetSource_Params params;
	params.SourcePoint = SourcePoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectroBeam.DeactivateCollisionAndEffect
// (Final, Native, Public, BlueprintCallable)

void AElectroBeam::DeactivateCollisionAndEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectroBeam.DeactivateCollisionAndEffect");

	AElectroBeam_DeactivateCollisionAndEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetLeafNoiseRotator
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*               aRotator                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AElevatorPlant::SetLeafNoiseRotator(struct FRotator* aRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetLeafNoiseRotator");

	AElevatorPlant_SetLeafNoiseRotator_Params params;
	params.aRotator = aRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetLeafLocationNoise
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                aVector                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AElevatorPlant::SetLeafLocationNoise(struct FVector* aVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetLeafLocationNoise");

	AElevatorPlant_SetLeafLocationNoise_Params params;
	params.aVector = aVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetIsPlayersOnLeaf
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          aValue                         (Parm, ZeroConstructor, IsPlainOldData)

void AElevatorPlant::SetIsPlayersOnLeaf(bool* aValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetIsPlayersOnLeaf");

	AElevatorPlant_SetIsPlayersOnLeaf_Params params;
	params.aValue = aValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetIsOpen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          aValue                         (Parm, ZeroConstructor, IsPlainOldData)

void AElevatorPlant::SetIsOpen(bool* aValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetIsOpen");

	AElevatorPlant_SetIsOpen_Params params;
	params.aValue = aValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetIsExtended
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          aValue                         (Parm, ZeroConstructor, IsPlainOldData)

void AElevatorPlant::SetIsExtended(bool* aValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetIsExtended");

	AElevatorPlant_SetIsExtended_Params params;
	params.aValue = aValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetBaseTangentLength
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AElevatorPlant::SetBaseTangentLength(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetBaseTangentLength");

	AElevatorPlant_SetBaseTangentLength_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.SetBaseTangentDirectionOffset
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                aVector                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AElevatorPlant::SetBaseTangentDirectionOffset(struct FVector* aVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.SetBaseTangentDirectionOffset");

	AElevatorPlant_SetBaseTangentDirectionOffset_Params params;
	params.aVector = aVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.OnRep_RelavtiveDestinationLocation
// (Final, Native, Protected)

void AElevatorPlant::OnRep_RelavtiveDestinationLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.OnRep_RelavtiveDestinationLocation");

	AElevatorPlant_OnRep_RelavtiveDestinationLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.OnRep_Open
// (Final, Native, Protected)

void AElevatorPlant::OnRep_Open()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.OnRep_Open");

	AElevatorPlant_OnRep_Open_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.OnMatchStarted
// (Final, Native, Protected)

void AElevatorPlant::OnMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.OnMatchStarted");

	AElevatorPlant_OnMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.MoreTick
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                DipOffset                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         aValue                         (Parm, ZeroConstructor, IsPlainOldData)

void AElevatorPlant::MoreTick(struct FVector* DipOffset, float* aValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.MoreTick");

	AElevatorPlant_MoreTick_Params params;
	params.DipOffset = DipOffset;
	params.aValue = aValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElevatorPlant.GetVineMovementAlpha
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AElevatorPlant::GetVineMovementAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetVineMovementAlpha");

	AElevatorPlant_GetVineMovementAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetRelativeRestLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)

struct FVector AElevatorPlant::GetRelativeRestLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetRelativeRestLocation");

	AElevatorPlant_GetRelativeRestLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetRelativeDestinationLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)

struct FVector AElevatorPlant::GetRelativeDestinationLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetRelativeDestinationLocation");

	AElevatorPlant_GetRelativeDestinationLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetLeafLocationNoiseSize
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AElevatorPlant::GetLeafLocationNoiseSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetLeafLocationNoiseSize");

	AElevatorPlant_GetLeafLocationNoiseSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetIsPlayersOnLeaf
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AElevatorPlant::GetIsPlayersOnLeaf()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetIsPlayersOnLeaf");

	AElevatorPlant_GetIsPlayersOnLeaf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetIsMoving
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AElevatorPlant::GetIsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetIsMoving");

	AElevatorPlant_GetIsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetIsExtended
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AElevatorPlant::GetIsExtended()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetIsExtended");

	AElevatorPlant_GetIsExtended_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElevatorPlant.GetInitialTangentLenth
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AElevatorPlant::GetInitialTangentLenth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElevatorPlant.GetInitialTangentLenth");

	AElevatorPlant_GetInitialTangentLenth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EliminationObjective.RegisterTargetSpawned
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UEliminationObjective::RegisterTargetSpawned(class APawn** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EliminationObjective.RegisterTargetSpawned");

	UEliminationObjective_RegisterTargetSpawned_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EliminationObjective.ReceiveTargetKilled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEliminationObjective::ReceiveTargetKilled(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EliminationObjective.ReceiveTargetKilled");

	UEliminationObjective_ReceiveTargetKilled_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EliminationObjective.OnTargetKilled
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEliminationObjective::OnTargetKilled(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EliminationObjective.OnTargetKilled");

	UEliminationObjective_OnTargetKilled_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EliminationObjective.OnRep_EnemiesToKill
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UEliminationObjective::OnRep_EnemiesToKill(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EliminationObjective.OnRep_EnemiesToKill");

	UEliminationObjective_OnRep_EnemiesToKill_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EliminationObjective.OnRep_EnemiesKilled
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UEliminationObjective::OnRep_EnemiesKilled(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EliminationObjective.OnRep_EnemiesKilled");

	UEliminationObjective_OnRep_EnemiesKilled_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EncounterActor.Receive_EncounterHasSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn**                  spawnedPawn                    (Parm, ZeroConstructor, IsPlainOldData)

void AEncounterActor::Receive_EncounterHasSpawned(class APawn** spawnedPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EncounterActor.Receive_EncounterHasSpawned");

	AEncounterActor_Receive_EncounterHasSpawned_Params params;
	params.spawnedPawn = spawnedPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EncounterManager.ShowSpawnLocations
// (Final, Exec, Native, Public)

void UEncounterManager::ShowSpawnLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EncounterManager.ShowSpawnLocations");

	UEncounterManager_ShowSpawnLocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EncounterManager.GetEnemyPool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UEnemyDescriptor*> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UEnemyDescriptor*> UEncounterManager::GetEnemyPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EncounterManager.GetEnemyPool");

	UEncounterManager_GetEnemyPool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EncounterManager.GetEncounterPool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UEnemyDescriptor*> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UEnemyDescriptor*> UEncounterManager::GetEncounterPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EncounterManager.GetEncounterPool");

	UEncounterManager_GetEncounterPool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EncounterManager.GetCritterPool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UCritterDescriptor*> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UCritterDescriptor*> UEncounterManager::GetCritterPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EncounterManager.GetCritterPool");

	UEncounterManager_GetCritterPool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectInfoComponent.GetLookAtShout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogDataAsset*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDialogDataAsset* UObjectInfoComponent::GetLookAtShout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectInfoComponent.GetLookAtShout");

	UObjectInfoComponent_GetLookAtShout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectInfoComponent.GetInGameName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UObjectInfoComponent::GetInGameName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectInfoComponent.GetInGameName");

	UObjectInfoComponent_GetInGameName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectInfoComponent.GetInGameIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UObjectInfoComponent::GetInGameIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectInfoComponent.GetInGameIcon");

	UObjectInfoComponent_GetInGameIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectInfoComponent.GetInGameDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UObjectInfoComponent::GetInGameDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectInfoComponent.GetInGameDescription");

	UObjectInfoComponent_GetInGameDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SimpleObjectInfoComponent.SetInGameName
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FString*                GameName                       (Parm, ZeroConstructor)

void USimpleObjectInfoComponent::SetInGameName(struct FString* GameName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SimpleObjectInfoComponent.SetInGameName");

	USimpleObjectInfoComponent_SetInGameName_Params params;
	params.GameName = GameName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SimpleObjectInfoComponent.SetInGameDescription
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FString*                GameDescription                (Parm, ZeroConstructor)

void USimpleObjectInfoComponent::SetInGameDescription(struct FString* GameDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SimpleObjectInfoComponent.SetInGameDescription");

	USimpleObjectInfoComponent_SetInGameDescription_Params params;
	params.GameDescription = GameDescription;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyComponent.GetFamilyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UEnemyComponent::GetFamilyName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyComponent.GetFamilyName");

	UEnemyComponent_GetFamilyName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyComponent.GetFamilyIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UEnemyComponent::GetFamilyIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyComponent.GetFamilyIcon");

	UEnemyComponent_GetFamilyIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyAttacker.GetAttackDamageModifier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UEnemyAttacker::GetAttackDamageModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyAttacker.GetAttackDamageModifier");

	UEnemyAttacker_GetAttackDamageModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyDescriptor.GetEnemyClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBiome**                 Biome                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UEnemyDescriptor::GetEnemyClass(class UBiome** Biome)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyDescriptor.GetEnemyClass");

	UEnemyDescriptor_GetEnemyClass_Params params;
	params.Biome = Biome;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.TakeRadialDamage
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BlastCenter                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         blastRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxDamageRadius                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MinDamagePct                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponentBase::TakeRadialDamage(float* damageAmount, struct FVector* BlastCenter, float* blastRadius, float* maxDamageRadius, float* MinDamagePct, class AController** EventInstigator, class AActor** DamageCauser, class UPrimitiveComponent** HitComponent, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.TakeRadialDamage");

	UHealthComponentBase_TakeRadialDamage_Params params;
	params.damageAmount = damageAmount;
	params.BlastCenter = BlastCenter;
	params.blastRadius = blastRadius;
	params.maxDamageRadius = maxDamageRadius;
	params.MinDamagePct = MinDamagePct;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.HitComponent = HitComponent;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.TakePointDamage
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponentBase::TakePointDamage(float* damageAmount, struct FVector* HitLocation, class AController** EventInstigator, class AActor** DamageCauser, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.TakePointDamage");

	UHealthComponentBase_TakePointDamage_Params params;
	params.damageAmount = damageAmount;
	params.HitLocation = HitLocation;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.TakeDamageSimple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponentBase::TakeDamageSimple(float* damageAmount, class AActor** DamageCauser, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.TakeDamageSimple");

	UHealthComponentBase_TakeDamageSimple_Params params;
	params.damageAmount = damageAmount;
	params.DamageCauser = DamageCauser;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponentBase.SetCanTakeDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          canTakeDamage                  (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponentBase::SetCanTakeDamage(bool* canTakeDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.SetCanTakeDamage");

	UHealthComponentBase_SetCanTakeDamage_Params params;
	params.canTakeDamage = canTakeDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponentBase.Kill
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHealthComponentBase::Kill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.Kill");

	UHealthComponentBase_Kill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponentBase.IsDead
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealthComponentBase::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.IsDead");

	UHealthComponentBase_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealthComponentBase::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.IsAlive");

	UHealthComponentBase_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.Heal
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponentBase::Heal(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.Heal");

	UHealthComponentBase_Heal_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.GetShowHealthBar
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealthComponentBase::GetShowHealthBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.GetShowHealthBar");

	UHealthComponentBase_GetShowHealthBar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.GetHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponentBase::GetHealthPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.GetHealthPct");

	UHealthComponentBase_GetHealthPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.GetHealthComponentForCollider
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent**    Primitive                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TScriptInterface<class UHealth> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UHealth> UHealthComponentBase::GetHealthComponentForCollider(class UPrimitiveComponent** Primitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.GetHealthComponentForCollider");

	UHealthComponentBase_GetHealthComponentForCollider_Params params;
	params.Primitive = Primitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.GetHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponentBase::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.GetHealth");

	UHealthComponentBase_GetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.GetGenericImpactParticles
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UHealthComponentBase::GetGenericImpactParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.GetGenericImpactParticles");

	UHealthComponentBase_GetGenericImpactParticles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.GetCanTakeDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealthComponentBase::GetCanTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.GetCanTakeDamage");

	UHealthComponentBase_GetCanTakeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponentBase.CanTakeDamageFrom
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealthComponentBase::CanTakeDamageFrom(class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponentBase.CanTakeDamageFrom");

	UHealthComponentBase_CanTakeDamageFrom_Params params;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponent.ToggleCanTakeDamage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UHealthComponent::ToggleCanTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.ToggleCanTakeDamage");

	UHealthComponent_ToggleCanTakeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponent.Resupply
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::Resupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.Resupply");

	UHealthComponent_Resupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponent.OnRep_Damage
// (Native, Protected)
// Parameters:
// float*                         oldDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::OnRep_Damage(float* oldDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.OnRep_Damage");

	UHealthComponent_OnRep_Damage_Params params;
	params.oldDamage = oldDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponent.HealArmor
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::HealArmor(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.HealArmor");

	UHealthComponent_HealArmor_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthComponent.HasArmor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealthComponent::HasArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.HasArmor");

	UHealthComponent_HasArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponent.GetMaxArmor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetMaxArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.GetMaxArmor");

	UHealthComponent_GetMaxArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponent.GetHealthbarType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHealthbarType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHealthbarType UHealthComponent::GetHealthbarType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.GetHealthbarType");

	UHealthComponent_GetHealthbarType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponent.GetArmorPct
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetArmorPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.GetArmorPct");

	UHealthComponent_GetArmorPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponent.GetArmor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.GetArmor");

	UHealthComponent_GetArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HealthComponent.Client_ReceivedHit
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          anyHealthLost                  (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::Client_ReceivedHit(float* amount, class UDamageClass** DamageClass, class AActor** DamageCauser, bool* anyHealthLost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthComponent.Client_ReceivedHit");

	UHealthComponent_Client_ReceivedHit_Params params;
	params.amount = amount;
	params.DamageClass = DamageClass;
	params.DamageCauser = DamageCauser;
	params.anyHealthLost = anyHealthLost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyHealthComponent.SetMaxHealth
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float*                         newMaxHealth                   (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyHealthComponent::SetMaxHealth(float* newMaxHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyHealthComponent.SetMaxHealth");

	UEnemyHealthComponent_SetMaxHealth_Params params;
	params.newMaxHealth = newMaxHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyHealthComponent.OnSubArmorDamaged
// (Final, Native, Protected)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyHealthComponent::OnSubArmorDamaged(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyHealthComponent.OnSubArmorDamaged");

	UEnemyHealthComponent_OnSubArmorDamaged_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyHealthComponent.GetMaxHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UEnemyHealthComponent::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyHealthComponent.GetMaxHealth");

	UEnemyHealthComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyMeleeAttack.SelectMeleeAttack
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UEnemyMeleeAttack*>* attacks                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UEnemyMeleeAttack*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UEnemyMeleeAttack* UEnemyMeleeAttack::STATIC_SelectMeleeAttack(class AActor** Attacker, class AActor** Target, TArray<class UEnemyMeleeAttack*>* attacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyMeleeAttack.SelectMeleeAttack");

	UEnemyMeleeAttack_SelectMeleeAttack_Params params;
	params.Attacker = Attacker;
	params.Target = Target;
	params.attacks = attacks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyMeleeAttack.GetRandomMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UEnemyMeleeAttack::GetRandomMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyMeleeAttack.GetRandomMontage");

	UEnemyMeleeAttack_GetRandomMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyMeleeAttack.DamageTarget
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         attackModifier                 (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyMeleeAttack::DamageTarget(class AActor** Target, class AActor** Attacker, float* attackModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyMeleeAttack.DamageTarget");

	UEnemyMeleeAttack_DamageTarget_Params params;
	params.Target = Target;
	params.Attacker = Attacker;
	params.attackModifier = attackModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.SpawnerDestroyed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemySpawnManager::SpawnerDestroyed(class APawn** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.SpawnerDestroyed");

	UEnemySpawnManager_SpawnerDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.SpawnEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UEnemyDescriptor**       Descriptor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          useSpawnFX                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Alert                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEnemySpawnManager::SpawnEnemy(class UEnemyDescriptor** Descriptor, struct FTransform* Transform, struct FScriptDelegate* Callback, bool* useSpawnFX, bool* Alert)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.SpawnEnemy");

	UEnemySpawnManager_SpawnEnemy_Params params;
	params.Descriptor = Descriptor;
	params.Transform = Transform;
	params.Callback = Callback;
	params.useSpawnFX = useSpawnFX;
	params.Alert = Alert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemySpawnManager.RegisterSpawner
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemySpawnManager::RegisterSpawner(class APawn** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.RegisterSpawner");

	UEnemySpawnManager_RegisterSpawner_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.RegisterSpawnedEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 enemy                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemySpawnManager::RegisterSpawnedEnemy(class AActor** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.RegisterSpawnedEnemy");

	UEnemySpawnManager_RegisterSpawnedEnemy_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.OnMatchStarted
// (Final, Native, Private)

void UEnemySpawnManager::OnMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.OnMatchStarted");

	UEnemySpawnManager_OnMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.OnMatchEnded
// (Final, Native, Private)

void UEnemySpawnManager::OnMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.OnMatchEnded");

	UEnemySpawnManager_OnMatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.EnemyDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemySpawnManager::EnemyDestroyed(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.EnemyDestroyed");

	UEnemySpawnManager_EnemyDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.EnemyDeath
// (Final, Native, Private)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEnemySpawnManager::EnemyDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.EnemyDeath");

	UEnemySpawnManager_EnemyDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.DestroyAllEnemies
// (Final, Native, Public, BlueprintCallable)

void UEnemySpawnManager::DestroyAllEnemies()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.DestroyAllEnemies");

	UEnemySpawnManager_DestroyAllEnemies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemySpawnManager.CanSpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEnemyDescriptor**       EnemyDescriptor                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEnemySpawnManager::CanSpawn(class UEnemyDescriptor** EnemyDescriptor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemySpawnManager.CanSpawn");

	UEnemySpawnManager_CanSpawn_Params params;
	params.EnemyDescriptor = EnemyDescriptor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyTemperatureReplicatorComponent.OnRep_TemperatureEffect
// (Final, Native, Protected)

void UEnemyTemperatureReplicatorComponent::OnRep_TemperatureEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureReplicatorComponent.OnRep_TemperatureEffect");

	UEnemyTemperatureReplicatorComponent_OnRep_TemperatureEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyTemperatureReplicatorComponent.OnRep_IsOnFire
// (Final, Native, Protected)

void UEnemyTemperatureReplicatorComponent::OnRep_IsOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureReplicatorComponent.OnRep_IsOnFire");

	UEnemyTemperatureReplicatorComponent_OnRep_IsOnFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyTemperatureReplicatorComponent.OnRep_IsFrozen
// (Final, Native, Protected)

void UEnemyTemperatureReplicatorComponent::OnRep_IsFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureReplicatorComponent.OnRep_IsFrozen");

	UEnemyTemperatureReplicatorComponent_OnRep_IsFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyTemperatureReplicatorComponent.IsOnFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEnemyTemperatureReplicatorComponent::IsOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureReplicatorComponent.IsOnFire");

	UEnemyTemperatureReplicatorComponent_IsOnFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyTemperatureReplicatorComponent.IsFrozen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEnemyTemperatureReplicatorComponent::IsFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureReplicatorComponent.IsFrozen");

	UEnemyTemperatureReplicatorComponent_IsFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyTemperatureReplicatorComponent.GetTemperatureEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UEnemyTemperatureReplicatorComponent::GetTemperatureEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureReplicatorComponent.GetTemperatureEffect");

	UEnemyTemperatureReplicatorComponent_GetTemperatureEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.EnemyTemperatureReplicatorComponent.FloatDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyTemperatureReplicatorComponent::FloatDelegate__DelegateSignature(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.EnemyTemperatureReplicatorComponent.FloatDelegate__DelegateSignature");

	UEnemyTemperatureReplicatorComponent_FloatDelegate__DelegateSignature_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.EnemyTemperatureReplicatorComponent.BoolDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool*                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyTemperatureReplicatorComponent::BoolDelegate__DelegateSignature(bool* Value)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.EnemyTemperatureReplicatorComponent.BoolDelegate__DelegateSignature");

	UEnemyTemperatureReplicatorComponent_BoolDelegate__DelegateSignature_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveController.StartWave
// (Event, Public, BlueprintEvent)

void UEnemyWaveController::StartWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveController.StartWave");

	UEnemyWaveController_StartWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.TriggerWave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 waveClass                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          resetScriptedWaveTimer         (Parm, ZeroConstructor, IsPlainOldData)
// class UEnemyWaveController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UEnemyWaveController* UEnemyWaveManager::TriggerWave(class UClass** waveClass, bool* resetScriptedWaveTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.TriggerWave");

	UEnemyWaveManager_TriggerWave_Params params;
	params.waveClass = waveClass;
	params.resetScriptedWaveTimer = resetScriptedWaveTimer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EnemyWaveManager.TriggerEndWave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          cancelAllWaves                 (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyWaveManager::TriggerEndWave(bool* cancelAllWaves)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.TriggerEndWave");

	UEnemyWaveManager_TriggerEndWave_Params params;
	params.cancelAllWaves = cancelAllWaves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.OnMatchEnded
// (Final, Native, Protected)

void UEnemyWaveManager::OnMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.OnMatchEnded");

	UEnemyWaveManager_OnMatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.OnEnemySpawned
// (Final, Native, Protected)
// Parameters:
// class APawn**                  enemy                          (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyWaveManager::OnEnemySpawned(class APawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.OnEnemySpawned");

	UEnemyWaveManager_OnEnemySpawned_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.EnableScriptedWaves
// (Final, Native, Public, BlueprintCallable)

void UEnemyWaveManager::EnableScriptedWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.EnableScriptedWaves");

	UEnemyWaveManager_EnableScriptedWaves_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.EnableNormalWaves
// (Final, Native, Public, BlueprintCallable)

void UEnemyWaveManager::EnableNormalWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.EnableNormalWaves");

	UEnemyWaveManager_EnableNormalWaves_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.DisableScriptedWaves
// (Final, Native, Public, BlueprintCallable)

void UEnemyWaveManager::DisableScriptedWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.DisableScriptedWaves");

	UEnemyWaveManager_DisableScriptedWaves_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyWaveManager.DisableNormalWaves
// (Final, Native, Public, BlueprintCallable)

void UEnemyWaveManager::DisableNormalWaves()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyWaveManager.DisableNormalWaves");

	UEnemyWaveManager_DisableNormalWaves_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EscortObjective.SetEscortMule
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AEscortMule**            MULE                           (Parm, ZeroConstructor, IsPlainOldData)

void UEscortObjective::SetEscortMule(class AEscortMule** MULE)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EscortObjective.SetEscortMule");

	UEscortObjective_SetEscortMule_Params params;
	params.MULE = MULE;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EscortObjective.OnRep_AreasToScan
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UEscortObjective::OnRep_AreasToScan(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EscortObjective.OnRep_AreasToScan");

	UEscortObjective_OnRep_AreasToScan_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EscortObjective.OnRep_AreasScanned
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UEscortObjective::OnRep_AreasScanned(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EscortObjective.OnRep_AreasScanned");

	UEscortObjective_OnRep_AreasScanned_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EscortObjective.OnEscortMuleSpawnedEvent
// (Event, Protected, BlueprintEvent)

void UEscortObjective::OnEscortMuleSpawnedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EscortObjective.OnEscortMuleSpawnedEvent");

	UEscortObjective_OnEscortMuleSpawnedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BarrelDispenser.SetPicked
// (Final, Native, Public)

void ABarrelDispenser::SetPicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BarrelDispenser.SetPicked");

	ABarrelDispenser_SetPicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BarrelDispenser.OnUsed
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void ABarrelDispenser::OnUsed(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BarrelDispenser.OnUsed");

	ABarrelDispenser_OnUsed_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BarrelDispenser.FoldUp
// (Final, Native, Public, BlueprintCallable)

void ABarrelDispenser::FoldUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BarrelDispenser.FoldUp");

	ABarrelDispenser_FoldUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BarrelDispenser.Deploy
// (Final, Native, Public, BlueprintCallable)

void ABarrelDispenser::Deploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BarrelDispenser.Deploy");

	ABarrelDispenser_Deploy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakeFallComponent.StartFakeFall
// (Final, Native, Public, BlueprintCallable)

void UFakeFallComponent::StartFakeFall()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakeFallComponent.StartFakeFall");

	UFakeFallComponent_StartFakeFall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakePhysicsMover.Teleport
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Vel                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFakePhysicsMover::Teleport(struct FVector* Pos, struct FVector* Vel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakePhysicsMover.Teleport");

	AFakePhysicsMover_Teleport_Params params;
	params.Pos = Pos;
	params.Vel = Vel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakePhysicsMover.OnRep_PosVel
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FFakeMoveState*         posVel                         (ConstParm, Parm, OutParm, ReferenceParm)

void AFakePhysicsMover::OnRep_PosVel(struct FFakeMoveState* posVel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakePhysicsMover.OnRep_PosVel");

	AFakePhysicsMover_OnRep_PosVel_Params params;
	params.posVel = posVel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakePhysicsMover.OnRep_MoveSettings
// (Final, Native, Public)
// Parameters:
// class UFakeMoverSettings**     MoveSettings                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AFakePhysicsMover::OnRep_MoveSettings(class UFakeMoverSettings** MoveSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakePhysicsMover.OnRep_MoveSettings");

	AFakePhysicsMover_OnRep_MoveSettings_Params params;
	params.MoveSettings = MoveSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakePhysicsMover.ApplyImpulse
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Impulse                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFakePhysicsMover::ApplyImpulse(struct FVector* Impulse)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakePhysicsMover.ApplyImpulse");

	AFakePhysicsMover_ApplyImpulse_Params params;
	params.Impulse = Impulse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FallingStateComponent.Server_ClimbLedge
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          shouldPlayAnimation            (Parm, ZeroConstructor, IsPlainOldData)

void UFallingStateComponent::Server_ClimbLedge(bool* shouldPlayAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FallingStateComponent.Server_ClimbLedge");

	UFallingStateComponent_Server_ClimbLedge_Params params;
	params.shouldPlayAnimation = shouldPlayAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FallingStateComponent.All_ShowFallImpact
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void UFallingStateComponent::All_ShowFallImpact(class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FallingStateComponent.All_ShowFallImpact");

	UFallingStateComponent_All_ShowFallImpact_Params params;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FallingStateComponent.All_ShowClimbLedge
// (Net, Native, Event, NetMulticast, Protected)

void UFallingStateComponent::All_ShowClimbLedge()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FallingStateComponent.All_ShowClimbLedge");

	UFallingStateComponent_All_ShowClimbLedge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FindFriendSessionsBlueprintCallProxy.FindFriendSessions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                FriendId                       (Parm, ZeroConstructor)
// class UFindFriendSessionsBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFindFriendSessionsBlueprintCallProxy* UFindFriendSessionsBlueprintCallProxy::STATIC_FindFriendSessions(class UObject** WorldContextObject, struct FString* FriendId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FindFriendSessionsBlueprintCallProxy.FindFriendSessions");

	UFindFriendSessionsBlueprintCallProxy_FindFriendSessions_Params params;
	params.WorldContextObject = WorldContextObject;
	params.FriendId = FriendId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FirstPersonSkeletalMeshComponent.CalcFirstPersonFOVPositionCorrection
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                origPos                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFirstPersonSkeletalMeshComponent::STATIC_CalcFirstPersonFOVPositionCorrection(class APlayerController** PlayerController, struct FVector* origPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FirstPersonSkeletalMeshComponent.CalcFirstPersonFOVPositionCorrection");

	UFirstPersonSkeletalMeshComponent_CalcFirstPersonFOVPositionCorrection_Params params;
	params.PlayerController = PlayerController;
	params.origPos = origPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FirstPersonParticleSystemComponent.SpawnFirstPersonEmitterAttached
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem**        EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  AttachPointName                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>*  LocationType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UFirstPersonParticleSystemComponent::STATIC_SpawnFirstPersonEmitterAttached(class UParticleSystem** EmitterTemplate, class USceneComponent** AttachToComponent, struct FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale, TEnumAsByte<EAttachLocation>* LocationType, bool* bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FirstPersonParticleSystemComponent.SpawnFirstPersonEmitterAttached");

	UFirstPersonParticleSystemComponent_SpawnFirstPersonEmitterAttached_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Scale = Scale;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Flare.OnUpdateShadowRadius
// (Event, Public, BlueprintEvent)

void AFlare::OnUpdateShadowRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.OnUpdateShadowRadius");

	AFlare_OnUpdateShadowRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.OnRep_IsFlareOn
// (Final, Native, Protected)

void AFlare::OnRep_IsFlareOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.OnRep_IsFlareOn");

	AFlare_OnRep_IsFlareOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.OnFlareSpawnCompleted
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void AFlare::OnFlareSpawnCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.OnFlareSpawnCompleted");

	AFlare_OnFlareSpawnCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.OnFlareIgnite
// (Event, Protected, BlueprintEvent)

void AFlare::OnFlareIgnite()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.OnFlareIgnite");

	AFlare_OnFlareIgnite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.OnFlareExtinguish
// (Event, Protected, BlueprintEvent)

void AFlare::OnFlareExtinguish()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.OnFlareExtinguish");

	AFlare_OnFlareExtinguish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.Inhibit
// (Final, Native, Public, BlueprintCallable)

void AFlare::Inhibit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.Inhibit");

	AFlare_Inhibit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.GetWeaponViewClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFlare::GetWeaponViewClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.GetWeaponViewClass");

	AFlare_GetWeaponViewClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Flare.GetFlareDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 flareClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class AFlare*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFlare* AFlare::STATIC_GetFlareDefaultObject(class UClass** flareClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.GetFlareDefaultObject");

	AFlare_GetFlareDefaultObject_Params params;
	params.flareClass = flareClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Flare.ActorWasHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFlare::ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.ActorWasHit");

	AFlare_ActorWasHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Flare.ActivateFlare
// (Event, Public, BlueprintEvent)

void AFlare::ActivateFlare()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Flare.ActivateFlare");

	AFlare_ActivateFlare_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.OnUpdateShadowRadius
// (Event, Public, BlueprintEvent)

void AFlareGunProjectile::OnUpdateShadowRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.OnUpdateShadowRadius");

	AFlareGunProjectile_OnUpdateShadowRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.OnRep_IsFlareOn
// (Final, Native, Public)

void AFlareGunProjectile::OnRep_IsFlareOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.OnRep_IsFlareOn");

	AFlareGunProjectile_OnRep_IsFlareOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.OnProjectileSpawnCompleted
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void AFlareGunProjectile::OnProjectileSpawnCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.OnProjectileSpawnCompleted");

	AFlareGunProjectile_OnProjectileSpawnCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.OnFlareIgnite
// (Event, Public, BlueprintEvent)

void AFlareGunProjectile::OnFlareIgnite()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.OnFlareIgnite");

	AFlareGunProjectile_OnFlareIgnite_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.OnFlareExtinguish
// (Event, Public, BlueprintEvent)

void AFlareGunProjectile::OnFlareExtinguish()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.OnFlareExtinguish");

	AFlareGunProjectile_OnFlareExtinguish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.OnDroppodImpact
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AMiningPod**             DropPod                        (Parm, ZeroConstructor, IsPlainOldData)

void AFlareGunProjectile::OnDroppodImpact(class AMiningPod** DropPod)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.OnDroppodImpact");

	AFlareGunProjectile_OnDroppodImpact_Params params;
	params.DropPod = DropPod;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.Inhibit
// (Final, Native, Public, BlueprintCallable)

void AFlareGunProjectile::Inhibit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.Inhibit");

	AFlareGunProjectile_Inhibit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareGunProjectile.ActivateFlare
// (Event, Public, BlueprintEvent)

void AFlareGunProjectile::ActivateFlare()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunProjectile.ActivateFlare");

	AFlareGunProjectile_ActivateFlare_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareController.UnregisterFlareGunProjectile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFlareGunProjectile**    flareprj                       (Parm, ZeroConstructor, IsPlainOldData)

void UFlareController::STATIC_UnregisterFlareGunProjectile(class AFlareGunProjectile** flareprj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareController.UnregisterFlareGunProjectile");

	UFlareController_UnregisterFlareGunProjectile_Params params;
	params.flareprj = flareprj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareController.UnregisterFlare
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFlare**                 Flare                          (Parm, ZeroConstructor, IsPlainOldData)

void UFlareController::STATIC_UnregisterFlare(class AFlare** Flare)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareController.UnregisterFlare");

	UFlareController_UnregisterFlare_Params params;
	params.Flare = Flare;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareController.RegisterFlareGunProjectile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFlareGunProjectile**    flareprj                       (Parm, ZeroConstructor, IsPlainOldData)

void UFlareController::STATIC_RegisterFlareGunProjectile(class AFlareGunProjectile** flareprj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareController.RegisterFlareGunProjectile");

	UFlareController_RegisterFlareGunProjectile_Params params;
	params.flareprj = flareprj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareController.RegisterFlare
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFlare**                 Flare                          (Parm, ZeroConstructor, IsPlainOldData)

void UFlareController::STATIC_RegisterFlare(class AFlare** Flare)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareController.RegisterFlare");

	UFlareController_RegisterFlare_Params params;
	params.Flare = Flare;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlareController.FindFlareNear
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          allowMoving                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxLightRadiusFraction         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFlareController::STATIC_FindFlareNear(class UObject** WorldContextObject, struct FVector* Pos, bool* allowMoving, float* maxLightRadiusFraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareController.FindFlareNear");

	UFlareController_FindFlareNear_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Pos = Pos;
	params.allowMoving = allowMoving;
	params.maxLightRadiusFraction = maxLightRadiusFraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.Unequip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkAsset::Unequip(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.Unequip");

	UPerkAsset_Unequip_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.SetHighlighted
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          IsHighlighted                  (Parm, ZeroConstructor, IsPlainOldData)

void UPerkAsset::SetHighlighted(bool* IsHighlighted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.SetHighlighted");

	UPerkAsset_SetHighlighted_Params params;
	params.IsHighlighted = IsHighlighted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PerkAsset.SetCharacterPerks
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UPerkAsset*>*     perks                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UPerkAsset::STATIC_SetCharacterPerks(class UObject** WorldContext, class UClass** CharacterClass, TArray<class UPerkAsset*>* perks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.SetCharacterPerks");

	UPerkAsset_SetCharacterPerks_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;
	params.perks = perks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PerkAsset.IsPerkAvailableInTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkAsset::IsPerkAvailableInTier(int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.IsPerkAvailableInTier");

	UPerkAsset_IsPerkAvailableInTier_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.IsEquippedBy
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ByCharacterClass               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkAsset::IsEquippedBy(class UObject** WorldContext, class UClass** ByCharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.IsEquippedBy");

	UPerkAsset_IsEquippedBy_Params params;
	params.WorldContext = WorldContext;
	params.ByCharacterClass = ByCharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetStateAtTier
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// EPerkTierState                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPerkTierState UPerkAsset::GetStateAtTier(class UObject** WorldContext, int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetStateAtTier");

	UPerkAsset_GetStateAtTier_Params params;
	params.WorldContext = WorldContext;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetRankTier
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPerkAsset::GetRankTier(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetRankTier");

	UPerkAsset_GetRankTier_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetRankDescription
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPerkAsset::GetRankDescription(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetRankDescription");

	UPerkAsset_GetRankDescription_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetRankCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPerkAsset::GetRankCost(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetRankCost");

	UPerkAsset_GetRankCost_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetRankAtTier
// (Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Tier                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            Rank                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkAsset::GetRankAtTier(int* Tier, int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetRankAtTier");

	UPerkAsset_GetRankAtTier_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Rank != nullptr)
		*Rank = params.Rank;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetPerkHUDWidgetClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPerkAsset::GetPerkHUDWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetPerkHUDWidgetClass");

	UPerkAsset_GetPerkHUDWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetCurrentRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPerkAsset::GetCurrentRank(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetCurrentRank");

	UPerkAsset_GetCurrentRank_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.GetAdditionalRankDescription
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UPerkAsset::GetAdditionalRankDescription(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.GetAdditionalRankDescription");

	UPerkAsset_GetAdditionalRankDescription_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.Equip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkAsset::Equip(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.Equip");

	UPerkAsset_Equip_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkAsset.BuyPerkAtTier
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPerkAsset::BuyPerkAtTier(class UObject** WorldContext, int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkAsset.BuyPerkAtTier");

	UPerkAsset_BuyPerkAtTier_Params params;
	params.WorldContext = WorldContext;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FloatPerkAsset.GetPerkValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFloatPerkAsset::GetPerkValue(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FloatPerkAsset.GetPerkValue");

	UFloatPerkAsset_GetPerkValue_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FloatPerkAsset.GetLastTierValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFloatPerkAsset::GetLastTierValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FloatPerkAsset.GetLastTierValue");

	UFloatPerkAsset_GetLastTierValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FloatPerkAsset.GetFloatPerkValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFloatPerkAsset**        Perk                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         UnclaimedValue                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFloatPerkAsset::STATIC_GetFloatPerkValue(class UObject** WorldContext, class UFloatPerkAsset** Perk, float* UnclaimedValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FloatPerkAsset.GetFloatPerkValue");

	UFloatPerkAsset_GetFloatPerkValue_Params params;
	params.WorldContext = WorldContext;
	params.Perk = Perk;
	params.UnclaimedValue = UnclaimedValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FloatPerkComponent.Receive_OnInitialized
// (Event, Protected, BlueprintEvent)

void UFloatPerkComponent::Receive_OnInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FloatPerkComponent.Receive_OnInitialized");

	UFloatPerkComponent_Receive_OnInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BezerkPerkComponent.OnHealthChanged
// (Final, Native, Protected)
// Parameters:
// float*                         Health                         (Parm, ZeroConstructor, IsPlainOldData)

void UBezerkPerkComponent::OnHealthChanged(float* Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BezerkPerkComponent.OnHealthChanged");

	UBezerkPerkComponent_OnHealthChanged_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThornsPerkComponent.OnHit
// (Final, Native, Protected)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           inDamageClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          anyHealthLost                  (Parm, ZeroConstructor, IsPlainOldData)

void UThornsPerkComponent::OnHit(float* Damage, class UDamageClass** inDamageClass, class AActor** DamageCauser, bool* anyHealthLost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThornsPerkComponent.OnHit");

	UThornsPerkComponent_OnHit_Params params;
	params.Damage = Damage;
	params.inDamageClass = inDamageClass;
	params.DamageCauser = DamageCauser;
	params.anyHealthLost = anyHealthLost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalutePerkComponent.OnSalute
// (Final, Native, Protected)

void USalutePerkComponent::OnSalute()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalutePerkComponent.OnSalute");

	USalutePerkComponent_OnSalute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HeightenedSensesComponent.TriggerPerk
// (Final, Native, Public, BlueprintCallable)

void UHeightenedSensesComponent::TriggerPerk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HeightenedSensesComponent.TriggerPerk");

	UHeightenedSensesComponent_TriggerPerk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HeightenedSensesComponent.OnGrabbed
// (Final, Native, Protected)
// Parameters:
// ECharacterState*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UHeightenedSensesComponent::OnGrabbed(ECharacterState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HeightenedSensesComponent.OnGrabbed");

	UHeightenedSensesComponent_OnGrabbed_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ForgingFunctionLibrary.SortSchematicDelegate__DelegateSignature
// (Public, Delegate, HasOutParms)
// Parameters:
// class USchematic**             Schematic1                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class USchematic**             Schematic2                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           FirstIsLarger                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UForgingFunctionLibrary::SortSchematicDelegate__DelegateSignature(class USchematic** Schematic1, class USchematic** Schematic2, bool* FirstIsLarger)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ForgingFunctionLibrary.SortSchematicDelegate__DelegateSignature");

	UForgingFunctionLibrary_SortSchematicDelegate__DelegateSignature_Params params;
	params.Schematic1 = Schematic1;
	params.Schematic2 = Schematic2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FirstIsLarger != nullptr)
		*FirstIsLarger = params.FirstIsLarger;
}


// Function FSD.ForgingFunctionLibrary.GiveForginMasteryReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USchematic*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USchematic* UForgingFunctionLibrary::STATIC_GiveForginMasteryReward(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GiveForginMasteryReward");

	UForgingFunctionLibrary_GiveForginMasteryReward_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GiveForgingXP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UForgingFunctionLibrary::STATIC_GiveForgingXP(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GiveForgingXP");

	UForgingFunctionLibrary_GiveForgingXP_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetOwnedSchematicsSorted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          SmallestFirst                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        IsLargerThan                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> UForgingFunctionLibrary::STATIC_GetOwnedSchematicsSorted(class UObject** WorldContextObject, bool* SmallestFirst, struct FScriptDelegate* IsLargerThan)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetOwnedSchematicsSorted");

	UForgingFunctionLibrary_GetOwnedSchematicsSorted_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SmallestFirst = SmallestFirst;
	params.IsLargerThan = IsLargerThan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetOwnedSchematics
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> UForgingFunctionLibrary::STATIC_GetOwnedSchematics(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetOwnedSchematics");

	UForgingFunctionLibrary_GetOwnedSchematics_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetNextForgingMasterRewardType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// ESchematicType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESchematicType UForgingFunctionLibrary::STATIC_GetNextForgingMasterRewardType(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetNextForgingMasterRewardType");

	UForgingFunctionLibrary_GetNextForgingMasterRewardType_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetForgingXP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UForgingFunctionLibrary::STATIC_GetForgingXP(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetForgingXP");

	UForgingFunctionLibrary_GetForgingXP_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetForgingLevelProgress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UForgingFunctionLibrary::STATIC_GetForgingLevelProgress(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetForgingLevelProgress");

	UForgingFunctionLibrary_GetForgingLevelProgress_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetForgingLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UForgingFunctionLibrary::STATIC_GetForgingLevel(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetForgingLevel");

	UForgingFunctionLibrary_GetForgingLevel_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetForgedSchematics
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> UForgingFunctionLibrary::STATIC_GetForgedSchematics(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetForgedSchematics");

	UForgingFunctionLibrary_GetForgedSchematics_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetAllSchematicsSorted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          SmallestFirst                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        IsLargerThan                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> UForgingFunctionLibrary::STATIC_GetAllSchematicsSorted(class UObject** WorldContextObject, bool* SmallestFirst, struct FScriptDelegate* IsLargerThan)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetAllSchematicsSorted");

	UForgingFunctionLibrary_GetAllSchematicsSorted_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SmallestFirst = SmallestFirst;
	params.IsLargerThan = IsLargerThan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ForgingFunctionLibrary.GetAllSchematics
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> UForgingFunctionLibrary::STATIC_GetAllSchematics(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ForgingFunctionLibrary.GetAllSchematics");

	UForgingFunctionLibrary_GetAllSchematics_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlameThrowerItem.TriggerAoEHeat
// (Final, Native, Protected)

void AFlameThrowerItem::TriggerAoEHeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.TriggerAoEHeat");

	AFlameThrowerItem_TriggerAoEHeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlameThrowerItem.ServerMeltIce
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FVector>*        meltPoints                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AFlameThrowerItem::ServerMeltIce(TArray<struct FVector>* meltPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.ServerMeltIce");

	AFlameThrowerItem_ServerMeltIce_Params params;
	params.meltPoints = meltPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlameThrowerItem.ServerDoDamage
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Start                          (Parm)
// struct FVector_NetQuantize*    End                            (Parm)

void AFlameThrowerItem::ServerDoDamage(struct FVector_NetQuantize* Start, struct FVector_NetQuantize* End)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.ServerDoDamage");

	AFlameThrowerItem_ServerDoDamage_Params params;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlameThrowerItem.OnTargetKilled
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void AFlameThrowerItem::OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.OnTargetKilled");

	AFlameThrowerItem_OnTargetKilled_Params params;
	params.Target = Target;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlameThrowerItem.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void AFlameThrowerItem::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.OnTargetDamaged");

	AFlameThrowerItem_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlameThrowerItem.All_ShowTargetBurstIntoFire
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void AFlameThrowerItem::All_ShowTargetBurstIntoFire(struct FVector_NetQuantize* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.All_ShowTargetBurstIntoFire");

	AFlameThrowerItem_All_ShowTargetBurstIntoFire_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlameThrowerItem.All_FlameFeedback
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void AFlameThrowerItem::All_FlameFeedback(struct FVector_NetQuantize* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerItem.All_FlameFeedback");

	AFlameThrowerItem_All_FlameFeedback_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FrozenStateComponent.Server_ThawPlayer
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UFrozenStateComponent::Server_ThawPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FrozenStateComponent.Server_ThawPlayer");

	UFrozenStateComponent_Server_ThawPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FrozenStateComponent.ReceiveOnDefrosting
// (Event, Protected, BlueprintEvent)

void UFrozenStateComponent::ReceiveOnDefrosting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FrozenStateComponent.ReceiveOnDefrosting");

	UFrozenStateComponent_ReceiveOnDefrosting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAchievement.SetAchievementProgressForEntireServer
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDAchievement::SetAchievementProgressForEntireServer(float* Progress, class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAchievement.SetAchievementProgressForEntireServer");

	UFSDAchievement_SetAchievementProgressForEntireServer_Params params;
	params.Progress = Progress;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAchievement.SetAchievementProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerController**   Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDAchievement::SetAchievementProgress(float* Progress, class AFSDPlayerController** Player, class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAchievement.SetAchievementProgress");

	UFSDAchievement_SetAchievementProgress_Params params;
	params.Progress = Progress;
	params.Player = Player;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAchievement.ResetStatForAchievement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFSDAchievement**        AchievementToReset             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerController**   Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFSDAchievement::STATIC_ResetStatForAchievement(class UFSDAchievement** AchievementToReset, class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAchievement.ResetStatForAchievement");

	UFSDAchievement_ResetStatForAchievement_Params params;
	params.AchievementToReset = AchievementToReset;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAchievement.GetAchievementTargetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDAchievement::GetAchievementTargetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAchievement.GetAchievementTargetValue");

	UFSDAchievement_GetAchievementTargetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText*                  NewText                        (Parm)
// struct FText*                  OverrideControllerText         (Parm)

void UFSDAdvancedLabel::SetText(struct FText* NewText, struct FText* OverrideControllerText)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.SetText");

	UFSDAdvancedLabel_SetText_Params params;
	params.NewText = NewText;
	params.OverrideControllerText = OverrideControllerText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.Refresh
// (Final, Native, Public, BlueprintCallable)

void UFSDAdvancedLabel::Refresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.Refresh");

	UFSDAdvancedLabel_Refresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnReset
// (Event, Protected, BlueprintEvent)

void UFSDAdvancedLabel::OnReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnReset");

	UFSDAdvancedLabel_OnReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnNewLine
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDAdvancedLabel::OnNewLine(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnNewLine");

	UFSDAdvancedLabel_OnNewLine_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnLanguageChanged
// (Final, Native, Protected)
// Parameters:
// struct FString*                NewCulture                     (Parm, ZeroConstructor)

void UFSDAdvancedLabel::OnLanguageChanged(struct FString* NewCulture)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnLanguageChanged");

	UFSDAdvancedLabel_OnLanguageChanged_Params params;
	params.NewCulture = NewCulture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnInputSourceChanged
// (Final, Native, Protected)
// Parameters:
// EInputSource*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDAdvancedLabel::OnInputSourceChanged(EInputSource* Source)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnInputSourceChanged");

	UFSDAdvancedLabel_OnInputSourceChanged_Params params;
	params.Source = Source;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnAddString
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FString*                Value                          (Parm, ZeroConstructor)

void UFSDAdvancedLabel::OnAddString(struct FString* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnAddString");

	UFSDAdvancedLabel_OnAddString_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnAddKeyName
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FString*                Name                           (Parm, ZeroConstructor)

void UFSDAdvancedLabel::OnAddKeyName(struct FString* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnAddKeyName");

	UFSDAdvancedLabel_OnAddKeyName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.OnAddIcon
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FString*                Name                           (Parm, ZeroConstructor)
// struct FActionIconMapping*     Icon                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFSDAdvancedLabel::OnAddIcon(struct FString* Name, struct FActionIconMapping* Icon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.OnAddIcon");

	UFSDAdvancedLabel_OnAddIcon_Params params;
	params.Name = Name;
	params.Icon = Icon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDAdvancedLabel.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFSDAdvancedLabel::GetText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.GetText");

	UFSDAdvancedLabel_GetText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.GetIsDesignTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDAdvancedLabel::GetIsDesignTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.GetIsDesignTime");

	UFSDAdvancedLabel_GetIsDesignTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.GetCurrentInputSource
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EInputSource                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EInputSource UFSDAdvancedLabel::GetCurrentInputSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.GetCurrentInputSource");

	UFSDAdvancedLabel_GetCurrentInputSource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.CreateTextBlock
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString*                Text                           (Parm, ZeroConstructor)
// struct FSlateFontInfo*         InFontInfo                     (Parm)
// struct FLinearColor*           Color                          (Parm, ZeroConstructor, IsPlainOldData)
// class UTextBlock*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTextBlock* UFSDAdvancedLabel::CreateTextBlock(struct FString* Text, struct FSlateFontInfo* InFontInfo, struct FLinearColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.CreateTextBlock");

	UFSDAdvancedLabel_CreateTextBlock_Params params;
	params.Text = Text;
	params.InFontInfo = InFontInfo;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.CreateImageSized
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTexture2D**             Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Width                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Height                         (Parm, ZeroConstructor, IsPlainOldData)
// class UImage*                  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UImage* UFSDAdvancedLabel::CreateImageSized(class UTexture2D** Texture, int* Width, int* Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.CreateImageSized");

	UFSDAdvancedLabel_CreateImageSized_Params params;
	params.Texture = Texture;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.CreateImage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTexture2D**             Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MatchSize                      (Parm, ZeroConstructor, IsPlainOldData)
// class UImage*                  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UImage* UFSDAdvancedLabel::CreateImage(class UTexture2D** Texture, bool* MatchSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.CreateImage");

	UFSDAdvancedLabel_CreateImage_Params params;
	params.Texture = Texture;
	params.MatchSize = MatchSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDAdvancedLabel.CreateHorizontalBox
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UHorizontalBox*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHorizontalBox* UFSDAdvancedLabel::CreateHorizontalBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDAdvancedLabel.CreateHorizontalBox");

	UFSDAdvancedLabel_CreateHorizontalBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpawnReleasedActor.Released
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USpawnReleasedActor::Released()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawnReleasedActor.Released");

	USpawnReleasedActor_Released_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpawnReleasedActor.Attached
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                 Parent                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USpawnReleasedActor::Attached(class AActor** Parent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawnReleasedActor.Attached");

	USpawnReleasedActor_Attached_Params params;
	params.Parent = Parent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDCheatManager.SwitchCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 NewCharacter                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SwitchCharacter(class UClass** NewCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SwitchCharacter");

	UFSDCheatManager_SwitchCharacter_Params params;
	params.NewCharacter = NewCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SpawnEnemies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEnemyDescriptor**       desscriptor                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SpawnEnemies(class UEnemyDescriptor** desscriptor, int* count)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SpawnEnemies");

	UFSDCheatManager_SpawnEnemies_Params params;
	params.desscriptor = desscriptor;
	params.count = count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SpawnCritters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCritterDescriptor**     Descriptor                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SpawnCritters(class UCritterDescriptor** Descriptor, int* count)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SpawnCritters");

	UFSDCheatManager_SpawnCritters_Params params;
	params.Descriptor = Descriptor;
	params.count = count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SpawnBosco
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 aControllerClass               (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SpawnBosco(class UClass** aControllerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SpawnBosco");

	UFSDCheatManager_SpawnBosco_Params params;
	params.aControllerClass = aControllerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.ShowTutorialDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::ShowTutorialDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.ShowTutorialDebug");

	UFSDCheatManager_ShowTutorialDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SetStandingDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          standingDown                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SetStandingDown(bool* standingDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SetStandingDown");

	UFSDCheatManager_SetStandingDown_Params params;
	params.standingDown = standingDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SetSpawnEnemies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          SpawnEnemies                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SetSpawnEnemies(bool* SpawnEnemies)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SetSpawnEnemies");

	UFSDCheatManager_SetSpawnEnemies_Params params;
	params.SpawnEnemies = SpawnEnemies;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SetQuadPickAxe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          quad                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SetQuadPickAxe(bool* quad)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SetQuadPickAxe");

	UFSDCheatManager_SetQuadPickAxe_Params params;
	params.quad = quad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SetHUDVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          ShowHUD                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SetHUDVisible(bool* ShowHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SetHUDVisible");

	UFSDCheatManager_SetHUDVisible_Params params;
	params.ShowHUD = ShowHUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SetGodMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          God                            (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SetGodMode(bool* God)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SetGodMode");

	UFSDCheatManager_SetGodMode_Params params;
	params.God = God;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.SetFastMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          fast                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::SetFastMovement(bool* fast)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.SetFastMovement");

	UFSDCheatManager_SetFastMovement_Params params;
	params.fast = fast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.ResetTutorials
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::ResetTutorials()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.ResetTutorials");

	UFSDCheatManager_ResetTutorials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.ResetSpacerigIntroMessage
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::ResetSpacerigIntroMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.ResetSpacerigIntroMessage");

	UFSDCheatManager_ResetSpacerigIntroMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_RemoveResources
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_RemoveResources(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_RemoveResources");

	UFSDCheatManager_R_RemoveResources_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_RemoveCredits
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_RemoveCredits(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_RemoveCredits");

	UFSDCheatManager_R_RemoveCredits_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddResources
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddResources(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddResources");

	UFSDCheatManager_R_AddResources_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddPerkPoints
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddPerkPoints(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddPerkPoints");

	UFSDCheatManager_R_AddPerkPoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddNitra
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddNitra(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddNitra");

	UFSDCheatManager_R_AddNitra_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddMOM
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddMOM(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddMOM");

	UFSDCheatManager_R_AddMOM_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddMatrixCores
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddMatrixCores(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddMatrixCores");

	UFSDCheatManager_R_AddMatrixCores_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddGold
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddGold(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddGold");

	UFSDCheatManager_R_AddGold_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddCredits
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddCredits(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddCredits");

	UFSDCheatManager_R_AddCredits_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_AddCraftingResource
// (Final, Exec, Native, Public)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_AddCraftingResource(int* amount, int* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_AddCraftingResource");

	UFSDCheatManager_R_AddCraftingResource_Params params;
	params.amount = amount;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_Add_Jadiz
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_Add_Jadiz(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_Add_Jadiz");

	UFSDCheatManager_R_Add_Jadiz_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_Add_BitterGem
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_Add_BitterGem(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_Add_BitterGem");

	UFSDCheatManager_R_Add_BitterGem_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.R_Add_Aquarq
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::R_Add_Aquarq(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.R_Add_Aquarq");

	UFSDCheatManager_R_Add_Aquarq_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.IsInGodMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDCheatManager::IsInGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.IsInGodMode");

	UFSDCheatManager_IsInGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDCheatManager.GetListOfRoomNames
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FString>         roomNames                      (Parm, OutParm, ZeroConstructor)

void UFSDCheatManager::GetListOfRoomNames(TArray<struct FString>* roomNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.GetListOfRoomNames");

	UFSDCheatManager_GetListOfRoomNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (roomNames != nullptr)
		*roomNames = params.roomNames;
}


// Function FSD.FSDCheatManager.DestroyAllInstances
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 destroy                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::DestroyAllInstances(class UClass** destroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.DestroyAllInstances");

	UFSDCheatManager_DestroyAllInstances_Params params;
	params.destroy = destroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_UnlockAllWeapons
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_UnlockAllWeapons(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_UnlockAllWeapons");

	UFSDCheatManager_Cheat_UnlockAllWeapons_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_UnlockAllUpgrades
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_UnlockAllUpgrades(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_UnlockAllUpgrades");

	UFSDCheatManager_Cheat_UnlockAllUpgrades_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_UnlockAll_Poses
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_UnlockAll_Poses(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_UnlockAll_Poses");

	UFSDCheatManager_Cheat_UnlockAll_Poses_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_UnlockAll_Beers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_UnlockAll_Beers(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_UnlockAll_Beers");

	UFSDCheatManager_Cheat_UnlockAll_Beers_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_SetHealth
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float*                         NewHealthValue                 (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::Cheat_SetHealth(float* NewHealthValue, class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_SetHealth");

	UFSDCheatManager_Cheat_SetHealth_Params params;
	params.NewHealthValue = NewHealthValue;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_Schematic_UnlockAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_Schematic_UnlockAll(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_Schematic_UnlockAll");

	UFSDCheatManager_Cheat_Schematic_UnlockAll_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_Schematic_ResetAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_Schematic_ResetAll(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_Schematic_ResetAll");

	UFSDCheatManager_Cheat_Schematic_ResetAll_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_Schematic_GiveRandom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_Schematic_GiveRandom(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_Schematic_GiveRandom");

	UFSDCheatManager_Cheat_Schematic_GiveRandom_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_Schematic_ForgeAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_Schematic_ForgeAll(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_Schematic_ForgeAll");

	UFSDCheatManager_Cheat_Schematic_ForgeAll_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_Resources
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_Resources(class UObject** WorldContextObject, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_Resources");

	UFSDCheatManager_Cheat_Resources_Params params;
	params.WorldContextObject = WorldContextObject;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_ResetEquippedUpgrades
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_ResetEquippedUpgrades(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_ResetEquippedUpgrades");

	UFSDCheatManager_Cheat_ResetEquippedUpgrades_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_RemoveResources
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_RemoveResources(class UObject** WorldContextObject, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_RemoveResources");

	UFSDCheatManager_Cheat_RemoveResources_Params params;
	params.WorldContextObject = WorldContextObject;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_GenerateNewMissionSeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_GenerateNewMissionSeed(class UObject** WorldContextObject, bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_GenerateNewMissionSeed");

	UFSDCheatManager_Cheat_GenerateNewMissionSeed_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_ForceTreasure
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_ForceTreasure(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_ForceTreasure");

	UFSDCheatManager_Cheat_ForceTreasure_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_Campaign_Advance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_Campaign_Advance(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_Campaign_Advance");

	UFSDCheatManager_Cheat_Campaign_Advance_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_AddXP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_AddXP(class UObject** WorldContextObject, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_AddXP");

	UFSDCheatManager_Cheat_AddXP_Params params;
	params.WorldContextObject = WorldContextObject;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_AddPerkPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_AddPerkPoints(class UObject** WorldContextObject, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_AddPerkPoints");

	UFSDCheatManager_Cheat_AddPerkPoints_Params params;
	params.WorldContextObject = WorldContextObject;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.Cheat_AddCredits
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_Cheat_AddCredits(class UObject** WorldContextObject, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.Cheat_AddCredits");

	UFSDCheatManager_Cheat_AddCredits_Params params;
	params.WorldContextObject = WorldContextObject;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockOverclocking
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_UnlockOverclocking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockOverclocking");

	UFSDCheatManager_C_UnlockOverclocking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAllWeapons
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_UnlockAllWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAllWeapons");

	UFSDCheatManager_C_UnlockAllWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAllUpgrades
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_UnlockAllUpgrades()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAllUpgrades");

	UFSDCheatManager_C_UnlockAllUpgrades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAllDrinks
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_UnlockAllDrinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAllDrinks");

	UFSDCheatManager_C_UnlockAllDrinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAllDeepDives
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_UnlockAllDeepDives()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAllDeepDives");

	UFSDCheatManager_C_UnlockAllDeepDives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAll_Poses
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_UnlockAll_Poses()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAll_Poses");

	UFSDCheatManager_C_UnlockAll_Poses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAll_Beers
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_UnlockAll_Beers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAll_Beers");

	UFSDCheatManager_C_UnlockAll_Beers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_UnlockAll
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_UnlockAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_UnlockAll");

	UFSDCheatManager_C_UnlockAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ToggleHoopGameMovement
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ToggleHoopGameMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ToggleHoopGameMovement");

	UFSDCheatManager_C_ToggleHoopGameMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ToggleFadingEnabled
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ToggleFadingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ToggleFadingEnabled");

	UFSDCheatManager_C_ToggleFadingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ToggleFadingDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ToggleFadingDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ToggleFadingDebug");

	UFSDCheatManager_C_ToggleFadingDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ToggleCanShowBlood
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ToggleCanShowBlood()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ToggleCanShowBlood");

	UFSDCheatManager_C_ToggleCanShowBlood_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SpawnScriptedWaveIndex
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SpawnScriptedWaveIndex(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SpawnScriptedWaveIndex");

	UFSDCheatManager_C_SpawnScriptedWaveIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SpawnScriptedWave
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_SpawnScriptedWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SpawnScriptedWave");

	UFSDCheatManager_C_SpawnScriptedWave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SpawnNormalWave
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_SpawnNormalWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SpawnNormalWave");

	UFSDCheatManager_C_SpawnNormalWave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SpawnEvenRewarder
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_SpawnEvenRewarder()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SpawnEvenRewarder");

	UFSDCheatManager_C_SpawnEvenRewarder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SpawnBarrelOnPlayer
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SpawnBarrelOnPlayer(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SpawnBarrelOnPlayer");

	UFSDCheatManager_C_SpawnBarrelOnPlayer_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Skin_ResetAll
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_Skin_ResetAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Skin_ResetAll");

	UFSDCheatManager_C_Skin_ResetAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Skin_GiveAll
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_Skin_GiveAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Skin_GiveAll");

	UFSDCheatManager_C_Skin_GiveAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetTestMission
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           missionIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SetTestMission(int* missionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetTestMission");

	UFSDCheatManager_C_SetTestMission_Params params;
	params.missionIndex = missionIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetRetiredCount
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SetRetiredCount(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetRetiredCount");

	UFSDCheatManager_C_SetRetiredCount_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetPlayers
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SetPlayers(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetPlayers");

	UFSDCheatManager_C_SetPlayers_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetHealth
// (Final, Exec, Native, Public)
// Parameters:
// float*                         Health                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SetHealth(float* Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetHealth");

	UFSDCheatManager_C_SetHealth_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetFastFlares
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_SetFastFlares()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetFastFlares");

	UFSDCheatManager_C_SetFastFlares_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetEnglish
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SetEnglish(int* Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetEnglish");

	UFSDCheatManager_C_SetEnglish_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_SetAmmoCostEnabled
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_SetAmmoCostEnabled(class UObject** WorldContextObject, bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_SetAmmoCostEnabled");

	UFSDCheatManager_C_SetAmmoCostEnabled_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ScoutFlareInfiniteDuration
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_ScoutFlareInfiniteDuration(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ScoutFlareInfiniteDuration");

	UFSDCheatManager_C_ScoutFlareInfiniteDuration_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Schematics_UnlockAll
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_Schematics_UnlockAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Schematics_UnlockAll");

	UFSDCheatManager_C_Schematics_UnlockAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Schematics_ResetAll
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_Schematics_ResetAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Schematics_ResetAll");

	UFSDCheatManager_C_Schematics_ResetAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Schematics_ForgeAll
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_Schematics_ForgeAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Schematics_ForgeAll");

	UFSDCheatManager_C_Schematics_ForgeAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Schematics_ClearHasSeenFirstMessage
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Schematics_ClearHasSeenFirstMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Schematics_ClearHasSeenFirstMessage");

	UFSDCheatManager_C_Schematics_ClearHasSeenFirstMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Schematic_GiveRandom
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_Schematic_GiveRandom()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Schematic_GiveRandom");

	UFSDCheatManager_C_Schematic_GiveRandom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Revive
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Revive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Revive");

	UFSDCheatManager_C_Revive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Retirement_SetLevel
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_Retirement_SetLevel(int* Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Retirement_SetLevel");

	UFSDCheatManager_C_Retirement_SetLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Retirement_SetCampaignComplete
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Retirement_SetCampaignComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Retirement_SetCampaignComplete");

	UFSDCheatManager_C_Retirement_SetCampaignComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Retirement_ClearHasSeenRewards
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Retirement_ClearHasSeenRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Retirement_ClearHasSeenRewards");

	UFSDCheatManager_C_Retirement_ClearHasSeenRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Resupply
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Resupply()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Resupply");

	UFSDCheatManager_C_Resupply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetSteamAchievementStats
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ResetSteamAchievementStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetSteamAchievementStats");

	UFSDCheatManager_C_ResetSteamAchievementStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetSkinsAndUpgrades
// (Final, Exec, Native, Public)

void UFSDCheatManager::C_ResetSkinsAndUpgrades()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetSkinsAndUpgrades");

	UFSDCheatManager_C_ResetSkinsAndUpgrades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetForgingXP
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ResetForgingXP()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetForgingXP");

	UFSDCheatManager_C_ResetForgingXP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetDeepDives
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ResetDeepDives()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetDeepDives");

	UFSDCheatManager_C_ResetDeepDives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetCheatedResources
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           newAmount                      (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_ResetCheatedResources(int* newAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetCheatedResources");

	UFSDCheatManager_C_ResetCheatedResources_Params params;
	params.newAmount = newAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetAllDrinks
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ResetAllDrinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetAllDrinks");

	UFSDCheatManager_C_ResetAllDrinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ResetAchievements
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ResetAchievements()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ResetAchievements");

	UFSDCheatManager_C_ResetAchievements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_RemoveRetiredCount
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_RemoveRetiredCount(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_RemoveRetiredCount");

	UFSDCheatManager_C_RemoveRetiredCount_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_RemovePlayerRanks
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_RemovePlayerRanks(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_RemovePlayerRanks");

	UFSDCheatManager_C_RemovePlayerRanks_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_RemoveAllWidgets
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_RemoveAllWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_RemoveAllWidgets");

	UFSDCheatManager_C_RemoveAllWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_RefreshDeepDives
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_RefreshDeepDives()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_RefreshDeepDives");

	UFSDCheatManager_C_RefreshDeepDives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_RecordMode
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_RecordMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_RecordMode");

	UFSDCheatManager_C_RecordMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_MachineEvents_Track
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Track                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_MachineEvents_Track(bool* Track)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_MachineEvents_Track");

	UFSDCheatManager_C_MachineEvents_Track_Params params;
	params.Track = Track;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_MachineEvents_FinishCurrent
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_MachineEvents_FinishCurrent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_MachineEvents_FinishCurrent");

	UFSDCheatManager_C_MachineEvents_FinishCurrent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_LevelUpCharacter
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_LevelUpCharacter(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_LevelUpCharacter");

	UFSDCheatManager_C_LevelUpCharacter_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_KillAll
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_KillAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_KillAll");

	UFSDCheatManager_C_KillAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_JumpToNextRoom
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_JumpToNextRoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_JumpToNextRoom");

	UFSDCheatManager_C_JumpToNextRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_IncrementAllMissionStats
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_IncrementAllMissionStats(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_IncrementAllMissionStats");

	UFSDCheatManager_C_IncrementAllMissionStats_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_GodMode
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_GodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_GodMode");

	UFSDCheatManager_C_GodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_GiveAll
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_GiveAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_GiveAll");

	UFSDCheatManager_C_GiveAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_GenerateNewMissions
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_GenerateNewMissions(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_GenerateNewMissions");

	UFSDCheatManager_C_GenerateNewMissions_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_FixedPLSSeed
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Seed                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_FixedPLSSeed(int* Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_FixedPLSSeed");

	UFSDCheatManager_C_FixedPLSSeed_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_FixedMissionSeed
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Seed                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_FixedMissionSeed(int* Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_FixedMissionSeed");

	UFSDCheatManager_C_FixedMissionSeed_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_FailMission
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_FailMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_FailMission");

	UFSDCheatManager_C_FailMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_FadeFromBlack
// (Final, Exec, Native, Static, Public)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::STATIC_C_FadeFromBlack(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_FadeFromBlack");

	UFSDCheatManager_C_FadeFromBlack_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_CompleteObjectives
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_CompleteObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_CompleteObjectives");

	UFSDCheatManager_C_CompleteObjectives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_CompleteMission
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_CompleteMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_CompleteMission");

	UFSDCheatManager_C_CompleteMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ClearAllMissionStats
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ClearAllMissionStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ClearAllMissionStats");

	UFSDCheatManager_C_ClearAllMissionStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ClearAllMilestones
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_ClearAllMilestones()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ClearAllMilestones");

	UFSDCheatManager_C_ClearAllMilestones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_ChangeIntoxication
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_ChangeIntoxication(int* Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_ChangeIntoxication");

	UFSDCheatManager_C_ChangeIntoxication_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Campaign_ResetProgress
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Campaign_ResetProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Campaign_ResetProgress");

	UFSDCheatManager_C_Campaign_ResetProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Campaign_ResetCompleted
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Campaign_ResetCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Campaign_ResetCompleted");

	UFSDCheatManager_C_Campaign_ResetCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_Campaign_Advance
// (Final, Exec, Native, Public, BlueprintCallable)

void UFSDCheatManager::C_Campaign_Advance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_Campaign_Advance");

	UFSDCheatManager_C_Campaign_Advance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_AddXP
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_AddXP(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_AddXP");

	UFSDCheatManager_C_AddXP_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_AddUncappedXP
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_AddUncappedXP(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_AddUncappedXP");

	UFSDCheatManager_C_AddUncappedXP_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCheatManager.C_AddForgingXP
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Number                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDCheatManager::C_AddForgingXP(int* Number)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCheatManager.C_AddForgingXP");

	UFSDCheatManager_C_AddForgingXP_Params params;
	params.Number = Number;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCloudLoadSave.StartCloudLoadAll
// (Final, Native, Public, BlueprintCallable)

void UFSDCloudLoadSave::StartCloudLoadAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCloudLoadSave.StartCloudLoadAll");

	UFSDCloudLoadSave_StartCloudLoadAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDFindSessionsCallbackProxy.OnFSDCompleted
// (Final, Native, Private, HasOutParms)
// Parameters:
// bool*                          bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBlueprintSessionResult>* Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFSDFindSessionsCallbackProxy::OnFSDCompleted(bool* bSuccess, TArray<struct FBlueprintSessionResult>* Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFindSessionsCallbackProxy.OnFSDCompleted");

	UFSDFindSessionsCallbackProxy_OnFSDCompleted_Params params;
	params.bSuccess = bSuccess;
	params.Results = Results;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDFindSessionsCallbackProxy.FSDFindSessions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// int*                           MaxResults                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bUseLAN                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDFindSessionsCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDFindSessionsCallbackProxy* UFSDFindSessionsCallbackProxy::STATIC_FSDFindSessions(class UObject** WorldContextObject, class APlayerController** PlayerController, int* MaxResults, bool* bUseLAN)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFindSessionsCallbackProxy.FSDFindSessions");

	UFSDFindSessionsCallbackProxy_FSDFindSessions_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.MaxResults = MaxResults;
	params.bUseLAN = bUseLAN;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDFindSessionsCallbackProxy.FSDFindFullSessions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// int*                           MaxResults                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDFindSessionsCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDFindSessionsCallbackProxy* UFSDFindSessionsCallbackProxy::STATIC_FSDFindFullSessions(class UObject** WorldContextObject, class APlayerController** PlayerController, int* MaxResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFindSessionsCallbackProxy.FSDFindFullSessions");

	UFSDFindSessionsCallbackProxy_FSDFindFullSessions_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.MaxResults = MaxResults;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDFlyingBugController.OnSeePawn
// (Final, Native, Protected)
// Parameters:
// class APawn**                  SeenPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDFlyingBugController::OnSeePawn(class APawn** SeenPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFlyingBugController.OnSeePawn");

	AFSDFlyingBugController_OnSeePawn_Params params;
	params.SeenPawn = SeenPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDFlyingBugController.OnDamage
// (Final, Native, Protected)
// Parameters:
// float*                         aDamage                        (Parm, ZeroConstructor, IsPlainOldData)

void AFSDFlyingBugController::OnDamage(float* aDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFlyingBugController.OnDamage");

	AFSDFlyingBugController_OnDamage_Params params;
	params.aDamage = aDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDFlyingBugController.AlertOnlyMe
// (Final, Native, Protected, BlueprintCallable)

void AFSDFlyingBugController::AlertOnlyMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFlyingBugController.AlertOnlyMe");

	AFSDFlyingBugController_AlertOnlyMe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDFlyingBugController.Alerted
// (Native, Protected)

void AFSDFlyingBugController::Alerted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFlyingBugController.Alerted");

	AFSDFlyingBugController_Alerted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDFriendsAndInvites.Init
// (Event, Public, BlueprintEvent)

void UFSDFriendsAndInvites::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDFriendsAndInvites.Init");

	UFSDFriendsAndInvites_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.UpdateSteamPresence
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::UpdateSteamPresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.UpdateSteamPresence");

	UFSDGameInstance_UpdateSteamPresence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.UpdatePresences
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::UpdatePresences()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.UpdatePresences");

	UFSDGameInstance_UpdatePresences_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.UpdateGlobelMissionSeed
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::UpdateGlobelMissionSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.UpdateGlobelMissionSeed");

	UFSDGameInstance_UpdateGlobelMissionSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.UpdateDiscordPresence
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::UpdateDiscordPresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.UpdateDiscordPresence");

	UFSDGameInstance_UpdateDiscordPresence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.StopPhotographyInputProcessor
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::StopPhotographyInputProcessor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.StopPhotographyInputProcessor");

	UFSDGameInstance_StopPhotographyInputProcessor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.StopPersonalAnalytics
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::StopPersonalAnalytics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.StopPersonalAnalytics");

	UFSDGameInstance_StopPersonalAnalytics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDGameInstance.SteamServerJoinStatusDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESteamServerJoinStatus*        Status                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SteamServerJoinStatusDelegate__DelegateSignature(ESteamServerJoinStatus* Status)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDGameInstance.SteamServerJoinStatusDelegate__DelegateSignature");

	UFSDGameInstance_SteamServerJoinStatusDelegate__DelegateSignature_Params params;
	params.Status = Status;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDGameInstance.SteamSearchRegionDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESteamSearchRegion*            Region                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SteamSearchRegionDelegate__DelegateSignature(ESteamSearchRegion* Region)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDGameInstance.SteamSearchRegionDelegate__DelegateSignature");

	UFSDGameInstance_SteamSearchRegionDelegate__DelegateSignature_Params params;
	params.Region = Region;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.StartPhotographyInputProcessor
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::StartPhotographyInputProcessor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.StartPhotographyInputProcessor");

	UFSDGameInstance_StartPhotographyInputProcessor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.StartPersonalAnalytics
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::StartPersonalAnalytics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.StartPersonalAnalytics");

	UFSDGameInstance_StartPersonalAnalytics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SpawnProcedural
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AProceduralSetup*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AProceduralSetup* UFSDGameInstance::SpawnProcedural()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SpawnProcedural");

	UFSDGameInstance_SpawnProcedural_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.ShouldPendingRewardsBeShown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::ShouldPendingRewardsBeShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ShouldPendingRewardsBeShown");

	UFSDGameInstance_ShouldPendingRewardsBeShown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.ShouldPendingRewardsBeGiven
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::ShouldPendingRewardsBeGiven()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ShouldPendingRewardsBeGiven");

	UFSDGameInstance_ShouldPendingRewardsBeGiven_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.SetViewer3DClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 NewClass                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetViewer3DClass(class UClass** NewClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetViewer3DClass");

	UFSDGameInstance_SetViewer3DClass_Params params;
	params.NewClass = NewClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetSteamServerJoinStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESteamServerJoinStatus*        NewStatus                      (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetSteamServerJoinStatus(ESteamServerJoinStatus* NewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetSteamServerJoinStatus");

	UFSDGameInstance_SetSteamServerJoinStatus_Params params;
	params.NewStatus = NewStatus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetSteamSearchRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESteamSearchRegion*            NewRegion                      (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetSteamSearchRegion(ESteamSearchRegion* NewRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetSteamSearchRegion");

	UFSDGameInstance_SetSteamSearchRegion_Params params;
	params.NewRegion = NewRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetSelectedMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          updateSessionSettings          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetSelectedMission(class UGeneratedMission** mission, bool* updateSessionSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetSelectedMission");

	UFSDGameInstance_SetSelectedMission_Params params;
	params.mission = mission;
	params.updateSessionSettings = updateSessionSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetProceduralMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 procedural                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetProceduralMap(class UClass** procedural)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetProceduralMap");

	UFSDGameInstance_SetProceduralMap_Params params;
	params.procedural = procedural;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetLoaderWorldVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          V                              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          resetHud                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetLoaderWorldVisible(bool* V, bool* resetHud)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetLoaderWorldVisible");

	UFSDGameInstance_SetLoaderWorldVisible_Params params;
	params.V = V;
	params.resetHud = resetHud;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetHasSeenInfoScreen
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::SetHasSeenInfoScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetHasSeenInfoScreen");

	UFSDGameInstance_SetHasSeenInfoScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetFSDPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                pw                             (Parm, ZeroConstructor)

void UFSDGameInstance::SetFSDPassword(struct FString* pw)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetFSDPassword");

	UFSDGameInstance_SetFSDPassword_Params params;
	params.pw = pw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetDiscordPresence
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDiscordRichPresenceData* presence                       (ConstParm, Parm, OutParm, ReferenceParm)

void UFSDGameInstance::SetDiscordPresence(struct FDiscordRichPresenceData* presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetDiscordPresence");

	UFSDGameInstance_SetDiscordPresence_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetCharacterSelectionWorldVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          V                              (Parm, ZeroConstructor, IsPlainOldData)
// ECharselectionCameraLocation*  cameraLocation                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          resetHud                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          resetToDefaultWeapon           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetCharacterSelectionWorldVisible(bool* V, ECharselectionCameraLocation* cameraLocation, bool* resetHud, bool* resetToDefaultWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetCharacterSelectionWorldVisible");

	UFSDGameInstance_SetCharacterSelectionWorldVisible_Params params;
	params.V = V;
	params.cameraLocation = cameraLocation;
	params.resetHud = resetHud;
	params.resetToDefaultWeapon = resetToDefaultWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SetCharacterSelectionSwitcher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacterSelectionSwitcher** switcher                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::SetCharacterSelectionSwitcher(class ACharacterSelectionSwitcher** switcher)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SetCharacterSelectionSwitcher");

	UFSDGameInstance_SetCharacterSelectionSwitcher_Params params;
	params.switcher = switcher;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.SendSteamInfo
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::SendSteamInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.SendSteamInfo");

	UFSDGameInstance_SendSteamInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.RestoreCursors
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::RestoreCursors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.RestoreCursors");

	UFSDGameInstance_RestoreCursors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.ResetSaveGame
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::ResetSaveGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ResetSaveGame");

	UFSDGameInstance_ResetSaveGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.RemoveRemporaryBuff
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::RemoveRemporaryBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.RemoveRemporaryBuff");

	UFSDGameInstance_RemoveRemporaryBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.RemoveBosco
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::RemoveBosco()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.RemoveBosco");

	UFSDGameInstance_RemoveBosco_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.RegisterBossFight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 boss                           (Parm, ZeroConstructor, IsPlainOldData)
// class UEnemyHealthComponent**  Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UEnemyComponent**        enemy                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFSDGameInstance::RegisterBossFight(class AActor** boss, class UEnemyHealthComponent** Health, class UEnemyComponent** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.RegisterBossFight");

	UFSDGameInstance_RegisterBossFight_Params params;
	params.boss = boss;
	params.Health = Health;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.PostInit
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool*                          reload                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::PostInit(bool* reload)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.PostInit");

	UFSDGameInstance_PostInit_Params params;
	params.reload = reload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.PairingUsePreviousProfile
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::PairingUsePreviousProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.PairingUsePreviousProfile");

	UFSDGameInstance_PairingUsePreviousProfile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.PairingUseNewProfile
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::PairingUseNewProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.PairingUseNewProfile");

	UFSDGameInstance_PairingUseNewProfile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.OnNewFSDSessionID
// (Final, Native, Private)
// Parameters:
// struct FString*                sessionId                      (Parm, ZeroConstructor)

void UFSDGameInstance::OnNewFSDSessionID(struct FString* sessionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.OnNewFSDSessionID");

	UFSDGameInstance_OnNewFSDSessionID_Params params;
	params.sessionId = sessionId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.OnNetworkFailure
// (Final, Native, Protected)
// Parameters:
// class UWorld**                 World                          (Parm, ZeroConstructor, IsPlainOldData)
// class UNetDriver**             NetDriver                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ENetworkFailure>*  failType                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                errorMessage                   (Parm, ZeroConstructor)

void UFSDGameInstance::OnNetworkFailure(class UWorld** World, class UNetDriver** NetDriver, TEnumAsByte<ENetworkFailure>* failType, struct FString* errorMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.OnNetworkFailure");

	UFSDGameInstance_OnNetworkFailure_Params params;
	params.World = World;
	params.NetDriver = NetDriver;
	params.failType = failType;
	params.errorMessage = errorMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.OnLoadComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString*                MapName                        (Parm, ZeroConstructor)

void UFSDGameInstance::OnLoadComplete(struct FString* MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.OnLoadComplete");

	UFSDGameInstance_OnLoadComplete_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.MessageAge
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FFSDChatMessage*        Msg                            (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameInstance::STATIC_MessageAge(struct FFSDChatMessage* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.MessageAge");

	UFSDGameInstance_MessageAge_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.LoadSaveGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFSDSaveGame**           toLoad                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::LoadSaveGame(class UFSDSaveGame** toLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.LoadSaveGame");

	UFSDGameInstance_LoadSaveGame_Params params;
	params.toLoad = toLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.LatestMessages
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           Num                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          resetAge                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FFSDChatMessage> OutMessages                    (Parm, OutParm, ZeroConstructor)

void UFSDGameInstance::LatestMessages(int* Num, bool* resetAge, TArray<struct FFSDChatMessage>* OutMessages)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.LatestMessages");

	UFSDGameInstance_LatestMessages_Params params;
	params.Num = Num;
	params.resetAge = resetAge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMessages != nullptr)
		*OutMessages = params.OutMessages;
}


// Function FSD.FSDGameInstance.IsScreenFadingToBlack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::STATIC_IsScreenFadingToBlack(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.IsScreenFadingToBlack");

	UFSDGameInstance_IsScreenFadingToBlack_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.IsScreenFadingFromBlack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::STATIC_IsScreenFadingFromBlack(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.IsScreenFadingFromBlack");

	UFSDGameInstance_IsScreenFadingFromBlack_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.IsScreenFading
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::STATIC_IsScreenFading(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.IsScreenFading");

	UFSDGameInstance_IsScreenFading_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.IsMutatorActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 mutatorClass                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::IsMutatorActive(class UClass** mutatorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.IsMutatorActive");

	UFSDGameInstance_IsMutatorActive_Params params;
	params.mutatorClass = mutatorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.IsCampaignMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::IsCampaignMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.IsCampaignMission");

	UFSDGameInstance_IsCampaignMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.HasSignedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::HasSignedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.HasSignedIn");

	UFSDGameInstance_HasSignedIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.HasPendingInvite
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::HasPendingInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.HasPendingInvite");

	UFSDGameInstance_HasPendingInvite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.HasAnalytics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::HasAnalytics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.HasAnalytics");

	UFSDGameInstance_HasAnalytics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GraphicsUserSettingsChanged
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::GraphicsUserSettingsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GraphicsUserSettingsChanged");

	UFSDGameInstance_GraphicsUserSettingsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.GiveTemporaryBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTemporaryBuff**         buff                           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::GiveTemporaryBuff(class UTemporaryBuff** buff, class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GiveTemporaryBuff");

	UFSDGameInstance_GiveTemporaryBuff_Params params;
	params.buff = buff;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.GetViewportSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFSDGameInstance::GetViewportSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetViewportSize");

	UFSDGameInstance_GetViewportSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetSoftReferenceToPLS
// (Final, Native, Public, BlueprintCallable, BlueprintPure)

void UFSDGameInstance::GetSoftReferenceToPLS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetSoftReferenceToPLS");

	UFSDGameInstance_GetSoftReferenceToPLS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.GetPendingRewards
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPendingRewardsStats    OutStats                       (Parm, OutParm)
// struct FPendingRewards         OutRewards                     (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::GetPendingRewards(struct FPendingRewardsStats* OutStats, struct FPendingRewards* OutRewards)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetPendingRewards");

	UFSDGameInstance_GetPendingRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutStats != nullptr)
		*OutStats = params.OutStats;
	if (OutRewards != nullptr)
		*OutRewards = params.OutRewards;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetNextSpaceRigNotification
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSpaceRigNotification   NextNotification               (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::GetNextSpaceRigNotification(struct FSpaceRigNotification* NextNotification)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetNextSpaceRigNotification");

	UFSDGameInstance_GetNextSpaceRigNotification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (NextNotification != nullptr)
		*NextNotification = params.NextNotification;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetMutators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 mutatorClass                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UMutator*>        ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UMutator*> UFSDGameInstance::GetMutators(class UClass** mutatorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetMutators");

	UFSDGameInstance_GetMutators_Params params;
	params.mutatorClass = mutatorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetLocalFSDPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerController* UFSDGameInstance::GetLocalFSDPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetLocalFSDPlayerController");

	UFSDGameInstance_GetLocalFSDPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetHasSeenInfoScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameInstance::GetHasSeenInfoScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetHasSeenInfoScreen");

	UFSDGameInstance_GetHasSeenInfoScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetGlobalMissionSeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDGameInstance::GetGlobalMissionSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetGlobalMissionSeed");

	UFSDGameInstance_GetGlobalMissionSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetGeneratedMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeneratedMission*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGeneratedMission* UFSDGameInstance::GetGeneratedMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetGeneratedMission");

	UFSDGameInstance_GetGeneratedMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetFirstMutator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 mutatorClass                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMutator*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMutator* UFSDGameInstance::GetFirstMutator(class UClass** mutatorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetFirstMutator");

	UFSDGameInstance_GetFirstMutator_Params params;
	params.mutatorClass = mutatorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetCurrentFadeAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameInstance::GetCurrentFadeAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetCurrentFadeAmount");

	UFSDGameInstance_GetCurrentFadeAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GetCharacterSelectorCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UFSDGameInstance::GetCharacterSelectorCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GetCharacterSelectorCharacter");

	UFSDGameInstance_GetCharacterSelectorCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameInstance.GameUserSettingsChanged
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::GameUserSettingsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.GameUserSettingsChanged");

	UFSDGameInstance_GameUserSettingsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.FadeScreenToBlack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         FadeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ResetExistingFades             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          CapFramerate                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FadeWorldOnly                  (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::STATIC_FadeScreenToBlack(class UObject** WorldContext, float* FadeTime, float* Delay, bool* ResetExistingFades, bool* CapFramerate, bool* FadeWorldOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.FadeScreenToBlack");

	UFSDGameInstance_FadeScreenToBlack_Params params;
	params.WorldContext = WorldContext;
	params.FadeTime = FadeTime;
	params.Delay = Delay;
	params.ResetExistingFades = ResetExistingFades;
	params.CapFramerate = CapFramerate;
	params.FadeWorldOnly = FadeWorldOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.FadeScreenFromBlack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         FadeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ResetExistingFades             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          CapFramerate                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FadeWorldOnly                  (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::STATIC_FadeScreenFromBlack(class UObject** WorldContext, float* FadeTime, float* Delay, bool* ResetExistingFades, bool* CapFramerate, bool* FadeWorldOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.FadeScreenFromBlack");

	UFSDGameInstance_FadeScreenFromBlack_Params params;
	params.WorldContext = WorldContext;
	params.FadeTime = FadeTime;
	params.Delay = Delay;
	params.ResetExistingFades = ResetExistingFades;
	params.CapFramerate = CapFramerate;
	params.FadeWorldOnly = FadeWorldOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.DeregisterBossFight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 boss                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::DeregisterBossFight(class AActor** boss)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.DeregisterBossFight");

	UFSDGameInstance_DeregisterBossFight_Params params;
	params.boss = boss;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.CloseSessionLobby
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::CloseSessionLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.CloseSessionLobby");

	UFSDGameInstance_CloseSessionLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.ClearPendingRewards
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::ClearPendingRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ClearPendingRewards");

	UFSDGameInstance_ClearPendingRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.ClearMessages
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::ClearMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ClearMessages");

	UFSDGameInstance_ClearMessages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.ClearGameStateSeamlessTravelStorage
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::ClearGameStateSeamlessTravelStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ClearGameStateSeamlessTravelStorage");

	UFSDGameInstance_ClearGameStateSeamlessTravelStorage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.ClearCampaignNotifications
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::ClearCampaignNotifications()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ClearCampaignNotifications");

	UFSDGameInstance_ClearCampaignNotifications_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.ChangeSkinPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemSkin**              PreviewSkin                    (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::ChangeSkinPreview(class UItemSkin** PreviewSkin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.ChangeSkinPreview");

	UFSDGameInstance_ChangeSkinPreview_Params params;
	params.PreviewSkin = PreviewSkin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.CancelJoin
// (Final, Native, Public, BlueprintCallable)

void UFSDGameInstance::CancelJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.CancelJoin");

	UFSDGameInstance_CancelJoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDGameInstance.BossFightDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FBossFight*             BossFight                      (ConstParm, Parm, OutParm, ReferenceParm)

void UFSDGameInstance::BossFightDelegate__DelegateSignature(struct FBossFight* BossFight)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDGameInstance.BossFightDelegate__DelegateSignature");

	UFSDGameInstance_BossFightDelegate__DelegateSignature_Params params;
	params.BossFight = BossFight;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.BlackoutScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FadeWorldOnly                  (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::STATIC_BlackoutScreen(class UObject** WorldContext, bool* FadeWorldOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.BlackoutScreen");

	UFSDGameInstance_BlackoutScreen_Params params;
	params.WorldContext = WorldContext;
	params.FadeWorldOnly = FadeWorldOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.AddStatValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Key                            (Parm, ZeroConstructor)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::AddStatValue(struct FString* Key, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.AddStatValue");

	UFSDGameInstance_AddStatValue_Params params;
	params.Key = Key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.AddStatCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Key                            (Parm, ZeroConstructor)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::AddStatCount(struct FString* Key, int* count)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.AddStatCount");

	UFSDGameInstance_AddStatCount_Params params;
	params.Key = Key;
	params.count = count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameInstance.AddSpaceRigNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSpaceRigNotification*  NewNotification                (Parm)
// struct FString*                ID                             (Parm, ZeroConstructor)
// bool*                          TriggerEvent                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameInstance::AddSpaceRigNotification(struct FSpaceRigNotification* NewNotification, struct FString* ID, bool* TriggerEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameInstance.AddSpaceRigNotification");

	UFSDGameInstance_AddSpaceRigNotification_Params params;
	params.NewNotification = NewNotification;
	params.ID = ID;
	params.TriggerEvent = TriggerEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.StartGame
// (Final, Native, Public, BlueprintCallable)

void AFSDGameMode::StartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.StartGame");

	AFSDGameMode_StartGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.SpawnMissionCriticalItems
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFSDGameMode::SpawnMissionCriticalItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.SpawnMissionCriticalItems");

	AFSDGameMode_SpawnMissionCriticalItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.SignalEndLevelToClients
// (Final, Native, Protected, BlueprintCallable)

void AFSDGameMode::SignalEndLevelToClients()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.SignalEndLevelToClients");

	AFSDGameMode_SignalEndLevelToClients_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.ResetDeaths
// (Final, Native, Public, BlueprintCallable)

void AFSDGameMode::ResetDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.ResetDeaths");

	AFSDGameMode_ResetDeaths_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.RecieveEndLevel
// (Event, Public, BlueprintEvent)

void AFSDGameMode::RecieveEndLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.RecieveEndLevel");

	AFSDGameMode_RecieveEndLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.RecieveAllDwarvesDown
// (Event, Public, BlueprintEvent)

void AFSDGameMode::RecieveAllDwarvesDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.RecieveAllDwarvesDown");

	AFSDGameMode_RecieveAllDwarvesDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.Recieve_ContinueTimerEnded
// (Event, Protected, BlueprintEvent)

void AFSDGameMode::Recieve_ContinueTimerEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.Recieve_ContinueTimerEnded");

	AFSDGameMode_Recieve_ContinueTimerEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.ReceivePostSeamlessTravel
// (Event, Protected, BlueprintEvent)

void AFSDGameMode::ReceivePostSeamlessTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.ReceivePostSeamlessTravel");

	AFSDGameMode_ReceivePostSeamlessTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.OnLevelGenerationComplete
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int*                           pass                           (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameMode::OnLevelGenerationComplete(int* pass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.OnLevelGenerationComplete");

	AFSDGameMode_OnLevelGenerationComplete_Params params;
	params.pass = pass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.OnControllerDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameMode::OnControllerDestroyed(class AActor** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.OnControllerDestroyed");

	AFSDGameMode_OnControllerDestroyed_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.LoadMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                MapName                        (Parm, ZeroConstructor)

void AFSDGameMode::LoadMission(struct FString* MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.LoadMission");

	AFSDGameMode_LoadMission_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.GetPlayerStart
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFSDPlayerController**   Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFSDGameMode::GetPlayerStart(class AFSDPlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetPlayerStart");

	AFSDGameMode_GetPlayerStart_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetEncounterManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEncounterManager*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UEncounterManager* AFSDGameMode::GetEncounterManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetEncounterManager");

	AFSDGameMode_GetEncounterManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetDropPodEscapePath
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSoftObjectPath         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FSoftObjectPath AFSDGameMode::GetDropPodEscapePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetDropPodEscapePath");

	AFSDGameMode_GetDropPodEscapePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetDropPodEscapeClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFSDGameMode::GetDropPodEscapeClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetDropPodEscapeClass");

	AFSDGameMode_GetDropPodEscapeClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetDropPodClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFSDGameMode::GetDropPodClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetDropPodClass");

	AFSDGameMode_GetDropPodClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetDroneClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFSDGameMode::GetDroneClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetDroneClass");

	AFSDGameMode_GetDroneClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetDifficultyManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDifficultyManager*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDifficultyManager* AFSDGameMode::GetDifficultyManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetDifficultyManager");

	AFSDGameMode_GetDifficultyManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.GetCurrentLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameMode::GetCurrentLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.GetCurrentLevel");

	AFSDGameMode_GetCurrentLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.FSDSetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      PC                             (Parm, ZeroConstructor, IsPlainOldData)
// EPauseReason*                  pauseReason                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameMode::FSDSetPause(class APlayerController** PC, EPauseReason* pauseReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.FSDSetPause");

	AFSDGameMode_FSDSetPause_Params params;
	params.PC = PC;
	params.pauseReason = pauseReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.FSDKickPlayer
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController**      KickedPlayer                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  KickReason                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameMode::FSDKickPlayer(class APlayerController** KickedPlayer, struct FText* KickReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.FSDKickPlayer");

	AFSDGameMode_FSDKickPlayer_Params params;
	params.KickedPlayer = KickedPlayer;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.FSDClearPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPauseReason*                  pauseReason                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameMode::FSDClearPause(EPauseReason* pauseReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.FSDClearPause");

	AFSDGameMode_FSDClearPause_Params params;
	params.pauseReason = pauseReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.EndLevel
// (Final, Native, Public, BlueprintCallable)

void AFSDGameMode::EndLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.EndLevel");

	AFSDGameMode_EndLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.DonkeyButtonPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFSDGameMode::DonkeyButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.DonkeyButtonPressed");

	AFSDGameMode_DonkeyButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.DestroyNonLocalPlayers
// (Final, Native, Public, BlueprintCallable)

void AFSDGameMode::DestroyNonLocalPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.DestroyNonLocalPlayers");

	AFSDGameMode_DestroyNonLocalPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.Debug_ShowPlayerSpheres
// (Final, Exec, Native, Public)

void AFSDGameMode::Debug_ShowPlayerSpheres()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.Debug_ShowPlayerSpheres");

	AFSDGameMode_Debug_ShowPlayerSpheres_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.AllPlayersHaveSelectedCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameMode::AllPlayersHaveSelectedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.AllPlayersHaveSelectedCharacter");

	AFSDGameMode_AllPlayersHaveSelectedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.AllPlayersHaveGeneratedLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameMode::AllPlayersHaveGeneratedLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.AllPlayersHaveGeneratedLevel");

	AFSDGameMode_AllPlayersHaveGeneratedLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameMode.AddControllerForGracePeriod
// (Final, Native, Protected)
// Parameters:
// class APlayerCharacter**       APlayerCharacter               (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameMode::AddControllerForGracePeriod(class APlayerCharacter** APlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.AddControllerForGracePeriod");

	AFSDGameMode_AddControllerForGracePeriod_Params params;
	params.APlayerCharacter = APlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameMode.AboutMission
// (Final, Native, Public, BlueprintCallable)

void AFSDGameMode::AboutMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameMode.AboutMission");

	AFSDGameMode_AboutMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameModeSpaceRig.GetFreeSpawnOfType
// (Native, Public, BlueprintCallable)
// Parameters:
// ESpacerigStartType*            aType                          (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerController**   AController                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFSDGameModeSpaceRig::GetFreeSpawnOfType(ESpacerigStartType* aType, class AFSDPlayerController** AController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameModeSpaceRig.GetFreeSpawnOfType");

	AFSDGameModeSpaceRig_GetFreeSpawnOfType_Params params;
	params.aType = aType;
	params.AController = AController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionGenerationManager.GetMissions
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Seed                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UGeneratedMission*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UGeneratedMission*> UMissionGenerationManager::GetMissions(int* Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionGenerationManager.GetMissions");

	UMissionGenerationManager_GetMissions_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionGenerationManager.GetMissionFromSeeds
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           GlobalSeed                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           MissionSeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UGeneratedMission*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGeneratedMission* UMissionGenerationManager::GetMissionFromSeeds(int* GlobalSeed, int* MissionSeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionGenerationManager.GetMissionFromSeeds");

	UMissionGenerationManager_GetMissionFromSeeds_Params params;
	params.GlobalSeed = GlobalSeed;
	params.MissionSeed = MissionSeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionGenerationManager.GetAvailableMissions
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UGeneratedMission*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UGeneratedMission*> UMissionGenerationManager::GetAvailableMissions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionGenerationManager.GetAvailableMissions");

	UMissionGenerationManager_GetAvailableMissions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameStats.OnPlayerMinedGold
// (Final, Native, Public)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AGameStats::OnPlayerMinedGold(class UCappedResource** Resource, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameStats.OnPlayerMinedGold");

	AGameStats_OnPlayerMinedGold_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.StartCountdown
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  countdownName                  (ConstParm, Parm, OutParm, ReferenceParm)

void AFSDGameState::StartCountdown(int* Duration, struct FText* countdownName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.StartCountdown");

	AFSDGameState_StartCountdown_Params params;
	params.Duration = Duration;
	params.countdownName = countdownName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.SetPreventLatejoinCharacterDuplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          prevent                        (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameState::SetPreventLatejoinCharacterDuplication(bool* prevent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.SetPreventLatejoinCharacterDuplication");

	AFSDGameState_SetPreventLatejoinCharacterDuplication_Params params;
	params.prevent = prevent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.SetPlayersHaveReachedDroppod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newHasPlayerReached            (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameState::SetPlayersHaveReachedDroppod(bool* newHasPlayerReached)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.SetPlayersHaveReachedDroppod");

	AFSDGameState_SetPlayersHaveReachedDroppod_Params params;
	params.newHasPlayerReached = newHasPlayerReached;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.SetCurrentDifficulty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDifficultySetting**     Setting                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          updateSessionSettings          (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameState::SetCurrentDifficulty(class UDifficultySetting** Setting, bool* updateSessionSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.SetCurrentDifficulty");

	AFSDGameState_SetCurrentDifficulty_Params params;
	params.Setting = Setting;
	params.updateSessionSettings = updateSessionSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.SetCompletionData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          objectivesCompleted            (Parm, ZeroConstructor, IsPlainOldData)
// int*                           playersInPod                   (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameState::SetCompletionData(bool* objectivesCompleted, int* playersInPod)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.SetCompletionData");

	AFSDGameState_SetCompletionData_Params params;
	params.objectivesCompleted = objectivesCompleted;
	params.playersInPod = playersInPod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.ReceiveGeneratedMissionReplicated
// (Event, Protected, BlueprintEvent)

void AFSDGameState::ReceiveGeneratedMissionReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.ReceiveGeneratedMissionReplicated");

	AFSDGameState_ReceiveGeneratedMissionReplicated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.PostLocalizedGameMessage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Msg                            (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<struct FText>*          Arguments                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFSDGameState::PostLocalizedGameMessage(struct FText* Msg, TArray<struct FText>* Arguments)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.PostLocalizedGameMessage");

	AFSDGameState_PostLocalizedGameMessage_Params params;
	params.Msg = Msg;
	params.Arguments = Arguments;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.PostGameMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Msg                            (Parm, ZeroConstructor)

void AFSDGameState::PostGameMessage(struct FString* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.PostGameMessage");

	AFSDGameState_PostGameMessage_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_StartPressed
// (Final, Native, Public)
// Parameters:
// bool*                          oldStartPressed                (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameState::OnRep_StartPressed(bool* oldStartPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_StartPressed");

	AFSDGameState_OnRep_StartPressed_Params params;
	params.oldStartPressed = oldStartPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_ObjectivesCompleted
// (Final, Native, Protected)

void AFSDGameState::OnRep_ObjectivesCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_ObjectivesCompleted");

	AFSDGameState_OnRep_ObjectivesCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_MusicManagerNetworkedCues
// (Final, Native, Protected)

void AFSDGameState::OnRep_MusicManagerNetworkedCues()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_MusicManagerNetworkedCues");

	AFSDGameState_OnRep_MusicManagerNetworkedCues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_MissionTime
// (Final, Native, Protected)

void AFSDGameState::OnRep_MissionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_MissionTime");

	AFSDGameState_OnRep_MissionTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_GeneratedMissionSeed
// (Final, Native, Protected)

void AFSDGameState::OnRep_GeneratedMissionSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_GeneratedMissionSeed");

	AFSDGameState_OnRep_GeneratedMissionSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_FSDSessionID
// (Final, Native, Protected)

void AFSDGameState::OnRep_FSDSessionID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_FSDSessionID");

	AFSDGameState_OnRep_FSDSessionID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_CurrentDifficultySetting
// (Final, Native, Protected)

void AFSDGameState::OnRep_CurrentDifficultySetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_CurrentDifficultySetting");

	AFSDGameState_OnRep_CurrentDifficultySetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_CountdownText
// (Final, Native, Protected)

void AFSDGameState::OnRep_CountdownText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_CountdownText");

	AFSDGameState_OnRep_CountdownText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_CountdownRemaining
// (Final, Native, Protected)
// Parameters:
// int*                           prevTime                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDGameState::OnRep_CountdownRemaining(int* prevTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_CountdownRemaining");

	AFSDGameState_OnRep_CountdownRemaining_Params params;
	params.prevTime = prevTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_ContinuePressed
// (Final, Native, Protected)

void AFSDGameState::OnRep_ContinuePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_ContinuePressed");

	AFSDGameState_OnRep_ContinuePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_ContinueCountdown
// (Final, Native, Protected)

void AFSDGameState::OnRep_ContinueCountdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_ContinueCountdown");

	AFSDGameState_OnRep_ContinueCountdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_CompletedGameEvent
// (Final, Native, Protected)

void AFSDGameState::OnRep_CompletedGameEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_CompletedGameEvent");

	AFSDGameState_OnRep_CompletedGameEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_BoscoReviveCounter
// (Final, Native, Protected)

void AFSDGameState::OnRep_BoscoReviveCounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_BoscoReviveCounter");

	AFSDGameState_OnRep_BoscoReviveCounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.OnRep_AllDwarvesDown
// (Final, Native, Protected)

void AFSDGameState::OnRep_AllDwarvesDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.OnRep_AllDwarvesDown");

	AFSDGameState_OnRep_AllDwarvesDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.MissionEndscreenSeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameState::MissionEndscreenSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.MissionEndscreenSeed");

	AFSDGameState_MissionEndscreenSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.IsCountingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::IsCountingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.IsCountingDown");

	AFSDGameState_IsCountingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.HasObjectivesReplicated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::HasObjectivesReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.HasObjectivesReplicated");

	AFSDGameState_HasObjectivesReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.HandleSeamlessTravelEvent
// (Event, Protected, BlueprintEvent)

void AFSDGameState::HandleSeamlessTravelEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.HandleSeamlessTravelEvent");

	AFSDGameState_HandleSeamlessTravelEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.GetServerPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerState* AFSDGameState::GetServerPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetServerPlayerState");

	AFSDGameState_GetServerPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetSecondaryObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObjective*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UObjective* AFSDGameState::GetSecondaryObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetSecondaryObjective");

	AFSDGameState_GetSecondaryObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetProceduralSetup
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AProceduralSetup*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AProceduralSetup* AFSDGameState::GetProceduralSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetProceduralSetup");

	AFSDGameState_GetProceduralSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetPrimaryObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObjective*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UObjective* AFSDGameState::GetPrimaryObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetPrimaryObjective");

	AFSDGameState_GetPrimaryObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetPreventLatejoinCharacterDuplication
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::GetPreventLatejoinCharacterDuplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetPreventLatejoinCharacterDuplication");

	AFSDGameState_GetPreventLatejoinCharacterDuplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetPlayersHaveReachedDroppod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::GetPlayersHaveReachedDroppod()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetPlayersHaveReachedDroppod");

	AFSDGameState_GetPlayersHaveReachedDroppod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetPlayableCharacters
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFSDGameState::GetPlayableCharacters()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetPlayableCharacters");

	AFSDGameState_GetPlayableCharacters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UObjective*>      ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UObjective*> AFSDGameState::GetObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetObjectives");

	AFSDGameState_GetObjectives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetNetworkSortedPlayerArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AFSDPlayerState*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFSDPlayerState*> AFSDGameState::GetNetworkSortedPlayerArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetNetworkSortedPlayerArray");

	AFSDGameState_GetNetworkSortedPlayerArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameState::GetMissionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionTime");

	AFSDGameState_GetMissionTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionSuccessful
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::GetMissionSuccessful()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionSuccessful");

	AFSDGameState_GetMissionSuccessful_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameState::GetMissionStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionStartTime");

	AFSDGameState_GetMissionStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionRewardXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          primary                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameState::GetMissionRewardXP(bool* primary)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionRewardXP");

	AFSDGameState_GetMissionRewardXP_Params params;
	params.primary = primary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionRewardCreditSum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameState::GetMissionRewardCreditSum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionRewardCreditSum");

	AFSDGameState_GetMissionRewardCreditSum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionRewardCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCreditsReward>  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCreditsReward> AFSDGameState::GetMissionRewardCredits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionRewardCredits");

	AFSDGameState_GetMissionRewardCredits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetMissionCompletedCreditReward
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          primary                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            OutReward                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::GetMissionCompletedCreditReward(bool* primary, int* OutReward)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetMissionCompletedCreditReward");

	AFSDGameState_GetMissionCompletedCreditReward_Params params;
	params.primary = primary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutReward != nullptr)
		*OutReward = params.OutReward;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetGlobalMissionSeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDGameState::GetGlobalMissionSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetGlobalMissionSeed");

	AFSDGameState_GetGlobalMissionSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetGameStats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGameStats*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AGameStats* AFSDGameState::GetGameStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetGameStats");

	AFSDGameState_GetGameStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.GetCollectedResources
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class UResourceData*, float> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class UResourceData*, float> AFSDGameState::GetCollectedResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.GetCollectedResources");

	AFSDGameState_GetCollectedResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.ClientNewMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FFSDChatMessage*        Msg                            (ConstParm, Parm, ReferenceParm)

void AFSDGameState::ClientNewMessage(struct FFSDChatMessage* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.ClientNewMessage");

	AFSDGameState_ClientNewMessage_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.Client_StartPressed
// (Final, Native, Public, BlueprintCallable)

void AFSDGameState::Client_StartPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.Client_StartPressed");

	AFSDGameState_Client_StartPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.Client_NewLocalizedMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FFSDLocalizedChatMessage* Msg                            (ConstParm, Parm, ReferenceParm)

void AFSDGameState::Client_NewLocalizedMessage(struct FFSDLocalizedChatMessage* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.Client_NewLocalizedMessage");

	AFSDGameState_Client_NewLocalizedMessage_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.AllMissionEndResultsReceived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDGameState::AllMissionEndResultsReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.AllMissionEndResultsReceived");

	AFSDGameState_AllMissionEndResultsReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameState.All_SpawnScaledEffectAt
// (Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FScaledEffect*          effect                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)

void AFSDGameState::All_SpawnScaledEffectAt(struct FScaledEffect* effect, struct FVector_NetQuantize* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.All_SpawnScaledEffectAt");

	AFSDGameState_All_SpawnScaledEffectAt_Params params;
	params.effect = effect;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameState.All_SpawnScaledEffectAndCueAt
// (Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FScaledEffect*          effect                         (Parm)
// class USoundCue**              Audio                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize*    Location                       (Parm)

void AFSDGameState::All_SpawnScaledEffectAndCueAt(struct FScaledEffect* effect, class USoundCue** Audio, struct FVector_NetQuantize* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameState.All_SpawnScaledEffectAndCueAt");

	AFSDGameState_All_SpawnScaledEffectAndCueAt_Params params;
	params.effect = effect;
	params.Audio = Audio;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDCreateSessionCallbackProxy.FSDCreateSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// int*                           PublicConnections              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bUseLAN                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFriendsOnly                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDCreateSessionCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDCreateSessionCallbackProxy* UFSDCreateSessionCallbackProxy::STATIC_FSDCreateSession(class UObject** WorldContextObject, class APlayerController** PlayerController, int* PublicConnections, bool* bUseLAN, bool* bFriendsOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDCreateSessionCallbackProxy.FSDCreateSession");

	UFSDCreateSessionCallbackProxy_FSDCreateSession_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.PublicConnections = PublicConnections;
	params.bUseLAN = bUseLAN;
	params.bFriendsOnly = bFriendsOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.UpdateVolumeSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundClass**            Master                         (Parm, ZeroConstructor, IsPlainOldData)
// class USoundClass**            Music                          (Parm, ZeroConstructor, IsPlainOldData)
// class USoundClass**            SFX                            (Parm, ZeroConstructor, IsPlainOldData)
// class USoundClass**            UI                             (Parm, ZeroConstructor, IsPlainOldData)
// class USoundClass**            Voice                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::UpdateVolumeSettings(class USoundClass** Master, class USoundClass** Music, class USoundClass** SFX, class USoundClass** UI, class USoundClass** Voice)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.UpdateVolumeSettings");

	UFSDGameUserSettings_UpdateVolumeSettings_Params params;
	params.Master = Master;
	params.Music = Music;
	params.SFX = SFX;
	params.UI = UI;
	params.Voice = Voice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.ToggleShowUpgradeExtraDetails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::ToggleShowUpgradeExtraDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.ToggleShowUpgradeExtraDetails");

	UFSDGameUserSettings_ToggleShowUpgradeExtraDetails_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.SetVSyncEnabledToBeApplied
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetVSyncEnabledToBeApplied(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetVSyncEnabledToBeApplied");

	UFSDGameUserSettings_SetVSyncEnabledToBeApplied_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVolumeType*                   volumeType                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetVolume(EVolumeType* volumeType, float* Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetVolume");

	UFSDGameUserSettings_SetVolume_Params params;
	params.volumeType = volumeType;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetVoiceChatEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetVoiceChatEnabled(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetVoiceChatEnabled");

	UFSDGameUserSettings_SetVoiceChatEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetUseToggleLaserpointer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          UseToggleLaserpointer          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetUseToggleLaserpointer(bool* UseToggleLaserpointer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetUseToggleLaserpointer");

	UFSDGameUserSettings_SetUseToggleLaserpointer_Params params;
	params.UseToggleLaserpointer = UseToggleLaserpointer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetUseStreamerProgram
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          UseStreamerProgram             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetUseStreamerProgram(bool* UseStreamerProgram)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetUseStreamerProgram");

	UFSDGameUserSettings_SetUseStreamerProgram_Params params;
	params.UseStreamerProgram = UseStreamerProgram;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetUseSeparateSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newSetting                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetUseSeparateSensitivity(bool* newSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetUseSeparateSensitivity");

	UFSDGameUserSettings_SetUseSeparateSensitivity_Params params;
	params.newSetting = newSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetUseHoldToRun
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          UseHoldToRun                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetUseHoldToRun(bool* UseHoldToRun)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetUseHoldToRun");

	UFSDGameUserSettings_SetUseHoldToRun_Params params;
	params.UseHoldToRun = UseHoldToRun;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetUseCustomUIScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          UseCustomScale                 (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetUseCustomUIScale(bool* UseCustomScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetUseCustomUIScale");

	UFSDGameUserSettings_SetUseCustomUIScale_Params params;
	params.UseCustomScale = UseCustomScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetUIDPIScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         uiscale                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetUIDPIScale(float* uiscale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetUIDPIScale");

	UFSDGameUserSettings_SetUIDPIScale_Params params;
	params.uiscale = uiscale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetTutorialHintsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetTutorialHintsEnabled(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetTutorialHintsEnabled");

	UFSDGameUserSettings_SetTutorialHintsEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetShowSubtitles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetShowSubtitles(bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetShowSubtitles");

	UFSDGameUserSettings_SetShowSubtitles_Params params;
	params.Show = Show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetShowNetInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetShowNetInfo(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetShowNetInfo");

	UFSDGameUserSettings_SetShowNetInfo_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetShowFPS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetShowFPS(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetShowFPS");

	UFSDGameUserSettings_SetShowFPS_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetScreenResolutionToBeApplied
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntPoint*              Resolution                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetScreenResolutionToBeApplied(struct FIntPoint* Resolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetScreenResolutionToBeApplied");

	UFSDGameUserSettings_SetScreenResolutionToBeApplied_Params params;
	params.Resolution = Resolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetPushToTalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetPushToTalk(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetPushToTalk");

	UFSDGameUserSettings_SetPushToTalk_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetPreventLatejoinCharacterDuplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          prevent                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetPreventLatejoinCharacterDuplication(bool* prevent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetPreventLatejoinCharacterDuplication");

	UFSDGameUserSettings_SetPreventLatejoinCharacterDuplication_Params params;
	params.prevent = prevent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetMouseYSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newSensitivity                 (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetMouseYSensitivity(float* newSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetMouseYSensitivity");

	UFSDGameUserSettings_SetMouseYSensitivity_Params params;
	params.newSensitivity = newSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetMouseXSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newSensitivity                 (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetMouseXSensitivity(float* newSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetMouseXSensitivity");

	UFSDGameUserSettings_SetMouseXSensitivity_Params params;
	params.newSensitivity = newSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetInvertMouseWheel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          invertMouseWheel               (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetInvertMouseWheel(bool* invertMouseWheel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetInvertMouseWheel");

	UFSDGameUserSettings_SetInvertMouseWheel_Params params;
	params.invertMouseWheel = invertMouseWheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetInvertMouse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          InvertMouse                    (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetInvertMouse(bool* InvertMouse)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetInvertMouse");

	UFSDGameUserSettings_SetInvertMouse_Params params;
	params.InvertMouse = InvertMouse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetInputSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInputSource*                  NewSource                      (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetInputSource(EInputSource* NewSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetInputSource");

	UFSDGameUserSettings_SetInputSource_Params params;
	params.NewSource = NewSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetHeadBobbingScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         HeadbobbingScale               (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetHeadBobbingScale(float* HeadbobbingScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetHeadBobbingScale");

	UFSDGameUserSettings_SetHeadBobbingScale_Params params;
	params.HeadbobbingScale = HeadbobbingScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetGrapplingHookAutoSwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          shouldAutoSwitch               (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetGrapplingHookAutoSwitch(bool* shouldAutoSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetGrapplingHookAutoSwitch");

	UFSDGameUserSettings_SetGrapplingHookAutoSwitch_Params params;
	params.shouldAutoSwitch = shouldAutoSwitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetGameServerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Name                           (Parm, ZeroConstructor)

void UFSDGameUserSettings::SetGameServerName(struct FString* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetGameServerName");

	UFSDGameUserSettings_SetGameServerName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetFullscreenModeToBeApplied
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWindowMode>*      InFullscreenMode               (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetFullscreenModeToBeApplied(TEnumAsByte<EWindowMode>* InFullscreenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetFullscreenModeToBeApplied");

	UFSDGameUserSettings_SetFullscreenModeToBeApplied_Params params;
	params.InFullscreenMode = InFullscreenMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         FOV                            (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetFOV(float* FOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetFOV");

	UFSDGameUserSettings_SetFOV_Params params;
	params.FOV = FOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetDisableMasterEQ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          B                              (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetDisableMasterEQ(bool* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetDisableMasterEQ");

	UFSDGameUserSettings_SetDisableMasterEQ_Params params;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetDifficultySelected
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UDifficultySetting**     Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsSelected                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetDifficultySelected(class UDifficultySetting** Difficulty, bool* IsSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetDifficultySelected");

	UFSDGameUserSettings_SetDifficultySelected_Params params;
	params.Difficulty = Difficulty;
	params.IsSelected = IsSelected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetCanShowBlood
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bloodAllowed                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetCanShowBlood(bool* bloodAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetCanShowBlood");

	UFSDGameUserSettings_SetCanShowBlood_Params params;
	params.bloodAllowed = bloodAllowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetAutoRefreshServerlist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetAutoRefreshServerlist(bool* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetAutoRefreshServerlist");

	UFSDGameUserSettings_SetAutoRefreshServerlist_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetAimSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetAimSensitivity(float* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetAimSensitivity");

	UFSDGameUserSettings_SetAimSensitivity_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetAimOuterAcceleration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetAimOuterAcceleration(float* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetAimOuterAcceleration");

	UFSDGameUserSettings_SetAimOuterAcceleration_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.SetAimDeadZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::SetAimDeadZone(float* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.SetAimDeadZone");

	UFSDGameUserSettings_SetAimDeadZone_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.ResetGraphicsChanges
// (Final, Native, Public, BlueprintCallable)

void UFSDGameUserSettings::ResetGraphicsChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.ResetGraphicsChanges");

	UFSDGameUserSettings_ResetGraphicsChanges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.ResetControllerSettings
// (Final, Native, Public, BlueprintCallable)

void UFSDGameUserSettings::ResetControllerSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.ResetControllerSettings");

	UFSDGameUserSettings_ResetControllerSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.RemoveCustomKeyBinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// EKeyBindingAxis*               Axis                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDGameUserSettings::RemoveCustomKeyBinding(struct FName* ActionName, EKeyBindingAxis* Axis, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.RemoveCustomKeyBinding");

	UFSDGameUserSettings_RemoveCustomKeyBinding_Params params;
	params.ActionName = ActionName;
	params.Axis = Axis;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.IsVoiceChatEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::IsVoiceChatEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.IsVoiceChatEnabled");

	UFSDGameUserSettings_IsVoiceChatEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.IsCurrentInputSource
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputSource*                  InputSource                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::STATIC_IsCurrentInputSource(EInputSource* InputSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.IsCurrentInputSource");

	UFSDGameUserSettings_IsCurrentInputSource_Params params;
	params.InputSource = InputSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.InitializeDifficultySelection
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UDifficultySetting*>* StartSelection                 (ConstParm, Parm, ZeroConstructor)

void UFSDGameUserSettings::InitializeDifficultySelection(class UObject** WorldContext, TArray<class UDifficultySetting*>* StartSelection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.InitializeDifficultySelection");

	UFSDGameUserSettings_InitializeDifficultySelection_Params params;
	params.WorldContext = WorldContext;
	params.StartSelection = StartSelection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.GetVSyncEnabledToBeApplied
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetVSyncEnabledToBeApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetVSyncEnabledToBeApplied");

	UFSDGameUserSettings_GetVSyncEnabledToBeApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EVolumeType*                   volumeType                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetVolume(EVolumeType* volumeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetVolume");

	UFSDGameUserSettings_GetVolume_Params params;
	params.volumeType = volumeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetUseToggleLaserpointer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetUseToggleLaserpointer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetUseToggleLaserpointer");

	UFSDGameUserSettings_GetUseToggleLaserpointer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetUseStreamerProgram
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetUseStreamerProgram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetUseStreamerProgram");

	UFSDGameUserSettings_GetUseStreamerProgram_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetUseSeparateSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetUseSeparateSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetUseSeparateSensitivity");

	UFSDGameUserSettings_GetUseSeparateSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetUseHoldToRun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetUseHoldToRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetUseHoldToRun");

	UFSDGameUserSettings_GetUseHoldToRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetUseCustomUIScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetUseCustomUIScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetUseCustomUIScale");

	UFSDGameUserSettings_GetUseCustomUIScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetUIDPIScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetUIDPIScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetUIDPIScale");

	UFSDGameUserSettings_GetUIDPIScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetTutorialHintsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetTutorialHintsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetTutorialHintsEnabled");

	UFSDGameUserSettings_GetTutorialHintsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetShowSubtitles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetShowSubtitles()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetShowSubtitles");

	UFSDGameUserSettings_GetShowSubtitles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetShowNetInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetShowNetInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetShowNetInfo");

	UFSDGameUserSettings_GetShowNetInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetShowFPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetShowFPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetShowFPS");

	UFSDGameUserSettings_GetShowFPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetScreenResolutionToBeApplied
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FIntPoint               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FIntPoint UFSDGameUserSettings::GetScreenResolutionToBeApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetScreenResolutionToBeApplied");

	UFSDGameUserSettings_GetScreenResolutionToBeApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetPushToTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetPushToTalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetPushToTalk");

	UFSDGameUserSettings_GetPushToTalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetPreventLatejoinCharacterDuplication
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetPreventLatejoinCharacterDuplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetPreventLatejoinCharacterDuplication");

	UFSDGameUserSettings_GetPreventLatejoinCharacterDuplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetMouseYSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetMouseYSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetMouseYSensitivity");

	UFSDGameUserSettings_GetMouseYSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetMouseXSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetMouseXSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetMouseXSensitivity");

	UFSDGameUserSettings_GetMouseXSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetKeyBinding
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// EKeyBindingAxis*               Axis                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey                    outKey                         (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetKeyBinding(struct FName* ActionName, EKeyBindingAxis* Axis, int* Index, struct FKey* outKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetKeyBinding");

	UFSDGameUserSettings_GetKeyBinding_Params params;
	params.ActionName = ActionName;
	params.Axis = Axis;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outKey != nullptr)
		*outKey = params.outKey;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetIsDifficultySelected
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDifficultySetting**     Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetIsDifficultySelected(class UDifficultySetting** Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetIsDifficultySelected");

	UFSDGameUserSettings_GetIsDifficultySelected_Params params;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetInvertMouseWheel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetInvertMouseWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetInvertMouseWheel");

	UFSDGameUserSettings_GetInvertMouseWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetInvertMouse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetInvertMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetInvertMouse");

	UFSDGameUserSettings_GetInvertMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetInputSource
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputSource                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EInputSource UFSDGameUserSettings::STATIC_GetInputSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetInputSource");

	UFSDGameUserSettings_GetInputSource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetHeadBobbingScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetHeadBobbingScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetHeadBobbingScale");

	UFSDGameUserSettings_GetHeadBobbingScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetGrapplingHookAutoSwitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetGrapplingHookAutoSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetGrapplingHookAutoSwitch");

	UFSDGameUserSettings_GetGrapplingHookAutoSwitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetFullscreenModeToBeApplied
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EWindowMode>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWindowMode> UFSDGameUserSettings::GetFullscreenModeToBeApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetFullscreenModeToBeApplied");

	UFSDGameUserSettings_GetFullscreenModeToBeApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetFSDGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFSDGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDGameUserSettings* UFSDGameUserSettings::STATIC_GetFSDGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetFSDGameUserSettings");

	UFSDGameUserSettings_GetFSDGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetFOV");

	UFSDGameUserSettings_GetFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetDisableMasterEQ
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetDisableMasterEQ()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetDisableMasterEQ");

	UFSDGameUserSettings_GetDisableMasterEQ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetCurrentInputSource
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputSource                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EInputSource UFSDGameUserSettings::GetCurrentInputSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetCurrentInputSource");

	UFSDGameUserSettings_GetCurrentInputSource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetAutoRefreshServerlist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetAutoRefreshServerlist()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetAutoRefreshServerlist");

	UFSDGameUserSettings_GetAutoRefreshServerlist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetAllKeyBindings
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// EKeyBindingAxis*               Axis                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FKey>            OutKeys                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::GetAllKeyBindings(struct FName* ActionName, EKeyBindingAxis* Axis, TArray<struct FKey>* OutKeys)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetAllKeyBindings");

	UFSDGameUserSettings_GetAllKeyBindings_Params params;
	params.ActionName = ActionName;
	params.Axis = Axis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutKeys != nullptr)
		*OutKeys = params.OutKeys;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetAllActionBindings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey*                   Key                            (Parm)
// TArray<struct FCustomKeyBinding> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomKeyBinding> UFSDGameUserSettings::GetAllActionBindings(struct FKey* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetAllActionBindings");

	UFSDGameUserSettings_GetAllActionBindings_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetAimSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetAimSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetAimSensitivity");

	UFSDGameUserSettings_GetAimSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetAimOuterAcceleration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetAimOuterAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetAimOuterAcceleration");

	UFSDGameUserSettings_GetAimOuterAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GetAimDeadZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDGameUserSettings::GetAimDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GetAimDeadZone");

	UFSDGameUserSettings_GetAimDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.GameServerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDGameUserSettings::GameServerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.GameServerName");

	UFSDGameUserSettings_GameServerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.FSDSetCurrentLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                Culture                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::STATIC_FSDSetCurrentLanguage(class UObject** WorldContextObject, struct FString* Culture)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.FSDSetCurrentLanguage");

	UFSDGameUserSettings_FSDSetCurrentLanguage_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Culture = Culture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.FSDGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFSDGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDGameUserSettings* UFSDGameUserSettings::STATIC_FSDGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.FSDGameUserSettings");

	UFSDGameUserSettings_FSDGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.ClearCustomKeyBindings
// (Final, Native, Public, BlueprintCallable)

void UFSDGameUserSettings::ClearCustomKeyBindings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.ClearCustomKeyBindings");

	UFSDGameUserSettings_ClearCustomKeyBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.CanShowBlood
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::CanShowBlood()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.CanShowBlood");

	UFSDGameUserSettings_CanShowBlood_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameUserSettings.ApplyGraphicsChanges
// (Final, Native, Public, BlueprintCallable)

void UFSDGameUserSettings::ApplyGraphicsChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.ApplyGraphicsChanges");

	UFSDGameUserSettings_ApplyGraphicsChanges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDGameUserSettings.AddCustomKeyBinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// EKeyBindingAxis*               Axis                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey*                   Key                            (Parm)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDGameUserSettings::AddCustomKeyBinding(struct FName* ActionName, EKeyBindingAxis* Axis, struct FKey* Key, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameUserSettings.AddCustomKeyBinding");

	UFSDGameUserSettings_AddCustomKeyBinding_Params params;
	params.ActionName = ActionName;
	params.Axis = Axis;
	params.Key = Key;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDHUD.ToggleHUDVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHUDVisibilityReason*          reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDHUD::ToggleHUDVisibility(EHUDVisibilityReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.ToggleHUDVisibility");

	AFSDHUD_ToggleHUDVisibility_Params params;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDHUD.SetHUDVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)
// EHUDVisibilityReason*          reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AFSDHUD::SetHUDVisible(bool* IsVisible, EHUDVisibilityReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.SetHUDVisible");

	AFSDHUD_SetHUDVisible_Params params;
	params.IsVisible = IsVisible;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDHUD.RadarPointAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class URadarPointComponent**   radarPoint                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AFSDHUD::RadarPointAdded(class URadarPointComponent** radarPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.RadarPointAdded");

	AFSDHUD_RadarPointAdded_Params params;
	params.radarPoint = radarPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDHUD.PlayerSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFSDHUD::PlayerSpawned(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.PlayerSpawned");

	AFSDHUD_PlayerSpawned_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDHUD.OnVisibilityChanged
// (Event, Protected, BlueprintEvent)

void AFSDHUD::OnVisibilityChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.OnVisibilityChanged");

	AFSDHUD_OnVisibilityChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDHUD.IsHUDVisibleFlagSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHUDVisibilityReason*          reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDHUD::IsHUDVisibleFlagSet(EHUDVisibilityReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.IsHUDVisibleFlagSet");

	AFSDHUD_IsHUDVisibleFlagSet_Params params;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDHUD.HandleSeamlessTravel
// (Event, Public, BlueprintEvent)

void AFSDHUD::HandleSeamlessTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.HandleSeamlessTravel");

	AFSDHUD_HandleSeamlessTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDHUD.GetHUDVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDHUD::GetHUDVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDHUD.GetHUDVisible");

	AFSDHUD_GetHUDVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDMainHUDWidget.OnRadarPointAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class URadarPointComponent**   Point                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFSDMainHUDWidget::OnRadarPointAdded(class URadarPointComponent** Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMainHUDWidget.OnRadarPointAdded");

	UFSDMainHUDWidget_OnRadarPointAdded_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDMainHUDWidget.AddRadarPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URadarPointComponent**   Point                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFSDMainHUDWidget::AddRadarPoint(class URadarPointComponent** Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMainHUDWidget.AddRadarPoint");

	UFSDMainHUDWidget_AddRadarPoint_Params params;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDJoinSessionCallbackProxy.FSDJoinSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FBlueprintSessionResult* SearchResult                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString*                FSDPassword                    (Parm, ZeroConstructor)
// bool*                          fromInvite                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDJoinSessionCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDJoinSessionCallbackProxy* UFSDJoinSessionCallbackProxy::STATIC_FSDJoinSession(class UObject** WorldContextObject, class APlayerController** PlayerController, struct FBlueprintSessionResult* SearchResult, struct FString* FSDPassword, bool* fromInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDJoinSessionCallbackProxy.FSDJoinSession");

	UFSDJoinSessionCallbackProxy_FSDJoinSession_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.SearchResult = SearchResult;
	params.FSDPassword = FSDPassword;
	params.fromInvite = fromInvite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDLiveUtils.ShowAccountPicker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFSDGameInstance**       gInstance                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           GamePlayerID                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFSDLiveUtils::STATIC_ShowAccountPicker(class UFSDGameInstance** gInstance, int* GamePlayerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLiveUtils.ShowAccountPicker");

	UFSDLiveUtils_ShowAccountPicker_Params params;
	params.gInstance = gInstance;
	params.GamePlayerID = GamePlayerID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDLiveUtils.OpenGamerCard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerState**           Requestor                      (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState**           Requestee                      (Parm, ZeroConstructor, IsPlainOldData)

void UFSDLiveUtils::STATIC_OpenGamerCard(class APlayerState** Requestor, class APlayerState** Requestee)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLiveUtils.OpenGamerCard");

	UFSDLiveUtils_OpenGamerCard_Params params;
	params.Requestor = Requestor;
	params.Requestee = Requestee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDMatchmakingCallbackProxy.FSDMatchmaking
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        FailDelegate                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UDifficultySetting**     DesiredDifficulty              (Parm, ZeroConstructor, IsPlainOldData)
// class UBiome**                 desiredBiome                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMissionTemplate**       desiredMission                 (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDMatchmakingCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDMatchmakingCallbackProxy* UFSDMatchmakingCallbackProxy::STATIC_FSDMatchmaking(class UObject** WorldContextObject, class APlayerController** PlayerController, struct FScriptDelegate* FailDelegate, class UDifficultySetting** DesiredDifficulty, class UBiome** desiredBiome, class UMissionTemplate** desiredMission)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMatchmakingCallbackProxy.FSDMatchmaking");

	UFSDMatchmakingCallbackProxy_FSDMatchmaking_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.FailDelegate = FailDelegate;
	params.DesiredDifficulty = DesiredDifficulty;
	params.desiredBiome = desiredBiome;
	params.desiredMission = desiredMission;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDMatchmakingCallbackProxy.CancelMatchmaking
// (Final, Native, Static, Public, BlueprintCallable)

void UFSDMatchmakingCallbackProxy::STATIC_CancelMatchmaking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMatchmakingCallbackProxy.CancelMatchmaking");

	UFSDMatchmakingCallbackProxy_CancelMatchmaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDMath.SphericalToCartesian
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         azimuth                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         elecation                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFSDMath::STATIC_SphericalToCartesian(float* Radius, float* azimuth, float* elecation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMath.SphericalToCartesian");

	UFSDMath_SphericalToCartesian_Params params;
	params.Radius = Radius;
	params.azimuth = azimuth;
	params.elecation = elecation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDMath.PercentageCheck
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDMath::STATIC_PercentageCheck(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMath.PercentageCheck");

	UFSDMath_PercentageCheck_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDMath.GetAzimuthAndElevation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FTransform*             coordinateSystem               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          azimuth                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          elevation                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFSDMath::STATIC_GetAzimuthAndElevation(struct FVector* Direction, struct FTransform* coordinateSystem, float* azimuth, float* elevation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMath.GetAzimuthAndElevation");

	UFSDMath_GetAzimuthAndElevation_Params params;
	params.Direction = Direction;
	params.coordinateSystem = coordinateSystem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (azimuth != nullptr)
		*azimuth = params.azimuth;
	if (elevation != nullptr)
		*elevation = params.elevation;
}


// Function FSD.FSDMath.CartesianToSpherical
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          outAzimuth                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outElevation                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outRadius                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFSDMath::STATIC_CartesianToSpherical(struct FVector* Location, float* outAzimuth, float* outElevation, float* outRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMath.CartesianToSpherical");

	UFSDMath_CartesianToSpherical_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outAzimuth != nullptr)
		*outAzimuth = params.outAzimuth;
	if (outElevation != nullptr)
		*outElevation = params.outElevation;
	if (outRadius != nullptr)
		*outRadius = params.outRadius;
}


// Function FSD.FSDPhysicalMaterial.SpawnImpactParticles
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Normal                         (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UFSDPhysicalMaterial::SpawnImpactParticles(class UObject** WorldContextObject, struct FVector* Location, struct FVector* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPhysicalMaterial.SpawnImpactParticles");

	UFSDPhysicalMaterial_SpawnImpactParticles_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPhysicalMaterial.GetPhysicalMaterialFromPrimitive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDPhysicalMaterial* UFSDPhysicalMaterial::STATIC_GetPhysicalMaterialFromPrimitive(class UPrimitiveComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPhysicalMaterial.GetPhysicalMaterialFromPrimitive");

	UFSDPhysicalMaterial_GetPhysicalMaterialFromPrimitive_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerControllerBase.ToggleAnalogCursor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerControllerBase::ToggleAnalogCursor(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.ToggleAnalogCursor");

	AFSDPlayerControllerBase_ToggleAnalogCursor_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.StopAspectRatioAxisConstraint
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerControllerBase::StopAspectRatioAxisConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.StopAspectRatioAxisConstraint");

	AFSDPlayerControllerBase_StopAspectRatioAxisConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.StartAspectRatioAxisConstraint
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerControllerBase::StartAspectRatioAxisConstraint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.StartAspectRatioAxisConstraint");

	AFSDPlayerControllerBase_StartAspectRatioAxisConstraint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.SetHUDVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)
// EHUDVisibilityReason*          reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerControllerBase::SetHUDVisible(bool* IsVisible, EHUDVisibilityReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.SetHUDVisible");

	AFSDPlayerControllerBase_SetHUDVisible_Params params;
	params.IsVisible = IsVisible;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.Server_Cheat_SwitchCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class UClass**                 NewCharacter                   (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerControllerBase::Server_Cheat_SwitchCharacter(class UClass** NewCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.Server_Cheat_SwitchCharacter");

	AFSDPlayerControllerBase_Server_Cheat_SwitchCharacter_Params params;
	params.NewCharacter = NewCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.RequestPLSData
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFSDPlayerControllerBase::RequestPLSData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.RequestPLSData");

	AFSDPlayerControllerBase_RequestPLSData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.RecievePreClientTravel
// (Event, Protected, BlueprintEvent)

void AFSDPlayerControllerBase::RecievePreClientTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.RecievePreClientTravel");

	AFSDPlayerControllerBase_RecievePreClientTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.RecieveHUDVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerControllerBase::RecieveHUDVisibilityChanged(bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.RecieveHUDVisibilityChanged");

	AFSDPlayerControllerBase_RecieveHUDVisibilityChanged_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerControllerBase.IsHUDVisibleFlagSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHUDVisibilityReason*          reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerControllerBase::IsHUDVisibleFlagSet(EHUDVisibilityReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.IsHUDVisibleFlagSet");

	AFSDPlayerControllerBase_IsHUDVisibleFlagSet_Params params;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerControllerBase.Client_WasKicked
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EDisconnectReason*             reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerControllerBase::Client_WasKicked(EDisconnectReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerControllerBase.Client_WasKicked");

	AFSDPlayerControllerBase_Client_WasKicked_Params params;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.ToggleVoiceOn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::ToggleVoiceOn(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.ToggleVoiceOn");

	AFSDPlayerController_ToggleVoiceOn_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.SpawnSupplyPod
// (Final, Exec, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass**                 SupplyBeacon                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 SupplyPod                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                atLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ViewerName                     (Parm, ZeroConstructor)
// struct FString*                Description                    (Parm, ZeroConstructor)

void AFSDPlayerController::SpawnSupplyPod(class UClass** SupplyBeacon, class UClass** SupplyPod, struct FVector* atLocation, float* Radius, struct FString* ViewerName, struct FString* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.SpawnSupplyPod");

	AFSDPlayerController_SpawnSupplyPod_Params params;
	params.SupplyBeacon = SupplyBeacon;
	params.SupplyPod = SupplyPod;
	params.atLocation = atLocation;
	params.Radius = Radius;
	params.ViewerName = ViewerName;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.SpawnEnemyPack
// (Final, Exec, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                atLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int*                           packSize                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ViewerName                     (Parm, ZeroConstructor)
// struct FString*                Description                    (Parm, ZeroConstructor)

void AFSDPlayerController::SpawnEnemyPack(struct FVector* atLocation, float* Radius, int* packSize, struct FString* ViewerName, struct FString* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.SpawnEnemyPack");

	AFSDPlayerController_SpawnEnemyPack_Params params;
	params.atLocation = atLocation;
	params.Radius = Radius;
	params.packSize = packSize;
	params.ViewerName = ViewerName;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.ShowTutorialHint
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Text                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  ControllerOverrideText         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::ShowTutorialHint(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.ShowTutorialHint");

	AFSDPlayerController_ShowTutorialHint_Params params;
	params.Text = Text;
	params.ControllerOverrideText = ControllerOverrideText;
	params.Title = Title;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.SetPlayerStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Start                          (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::SetPlayerStart(class AActor** Start)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.SetPlayerStart");

	AFSDPlayerController_SetPlayerStart_Params params;
	params.Start = Start;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.SetAchievementProgressFromServer
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class UFSDAchievement**        AchievementToSet               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::SetAchievementProgressFromServer(class UFSDAchievement** AchievementToSet, float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.SetAchievementProgressFromServer");

	AFSDPlayerController_SetAchievementProgressFromServer_Params params;
	params.AchievementToSet = AchievementToSet;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.ServerSetUserHoldToRun
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool*                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::ServerSetUserHoldToRun(bool* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.ServerSetUserHoldToRun");

	AFSDPlayerController_ServerSetUserHoldToRun_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_TravelDone
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFSDPlayerController::Server_TravelDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_TravelDone");

	AFSDPlayerController_Server_TravelDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_TerrainLateJoinPartReceived
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFSDPlayerController::Server_TerrainLateJoinPartReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_TerrainLateJoinPartReceived");

	AFSDPlayerController_Server_TerrainLateJoinPartReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SpawnSupplyPod
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class UClass**                 SupplyBeacon                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 SupplyPod                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                atLocation                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ViewerName                     (Parm, ZeroConstructor)
// struct FString*                Description                    (Parm, ZeroConstructor)

void AFSDPlayerController::Server_SpawnSupplyPod(class UClass** SupplyBeacon, class UClass** SupplyPod, struct FVector* atLocation, float* Radius, struct FString* ViewerName, struct FString* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SpawnSupplyPod");

	AFSDPlayerController_Server_SpawnSupplyPod_Params params;
	params.SupplyBeacon = SupplyBeacon;
	params.SupplyPod = SupplyPod;
	params.atLocation = atLocation;
	params.Radius = Radius;
	params.ViewerName = ViewerName;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SpawnEnemies
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class UClass**                 enemyClass                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                atLocation                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int*                           packSize                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ViewerName                     (Parm, ZeroConstructor)
// struct FString*                Description                    (Parm, ZeroConstructor)

void AFSDPlayerController::Server_SpawnEnemies(class UClass** enemyClass, struct FVector* atLocation, float* Radius, int* packSize, struct FString* ViewerName, struct FString* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SpawnEnemies");

	AFSDPlayerController_Server_SpawnEnemies_Params params;
	params.enemyClass = enemyClass;
	params.atLocation = atLocation;
	params.Radius = Radius;
	params.packSize = packSize;
	params.ViewerName = ViewerName;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SetLateJoinDone
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFSDPlayerController::Server_SetLateJoinDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SetLateJoinDone");

	AFSDPlayerController_Server_SetLateJoinDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SetGenerationStatus
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FString*                Status                         (Parm, ZeroConstructor)
// float*                         Fraction                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Server_SetGenerationStatus(struct FString* Status, float* Fraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SetGenerationStatus");

	AFSDPlayerController_Server_SetGenerationStatus_Params params;
	params.Status = Status;
	params.Fraction = Fraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SetGenerationFraction
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float*                         Fraction                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Server_SetGenerationFraction(float* Fraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SetGenerationFraction");

	AFSDPlayerController_Server_SetGenerationFraction_Params params;
	params.Fraction = Fraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SetGenerationDone
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFSDPlayerController::Server_SetGenerationDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SetGenerationDone");

	AFSDPlayerController_Server_SetGenerationDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_SetControllerReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFSDPlayerController::Server_SetControllerReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_SetControllerReady");

	AFSDPlayerController_Server_SetControllerReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_ResetHUD
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFSDPlayerController::Server_ResetHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_ResetHUD");

	AFSDPlayerController_Server_ResetHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_NewMessage
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FString*                Sender                         (Parm, ZeroConstructor)
// struct FString*                Text                           (Parm, ZeroConstructor)
// EChatSenderType*               SenderType                     (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Server_NewMessage(struct FString* Sender, struct FString* Text, EChatSenderType* SenderType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_NewMessage");

	AFSDPlayerController_Server_NewMessage_Params params;
	params.Sender = Sender;
	params.Text = Text;
	params.SenderType = SenderType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_AddTeamResources
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UResourceData**          ResourceData                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ViewerName                     (Parm, ZeroConstructor)
// struct FString*                Description                    (Parm, ZeroConstructor)

void AFSDPlayerController::Server_AddTeamResources(class UResourceData** ResourceData, float* amount, struct FString* ViewerName, struct FString* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_AddTeamResources");

	AFSDPlayerController_Server_AddTeamResources_Params params;
	params.ResourceData = ResourceData;
	params.amount = amount;
	params.ViewerName = ViewerName;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Server_ActivateTemporaryBuff
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UTemporaryBuff**         buff                           (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Server_ActivateTemporaryBuff(class UTemporaryBuff** buff)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Server_ActivateTemporaryBuff");

	AFSDPlayerController_Server_ActivateTemporaryBuff_Params params;
	params.buff = buff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.SendRequestedPLSData
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerController::SendRequestedPLSData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.SendRequestedPLSData");

	AFSDPlayerController_SendRequestedPLSData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.SendLevelUpStatistics
// (Final, Native, Protected)
// Parameters:
// int*                           currentRank                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::SendLevelUpStatistics(int* currentRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.SendLevelUpStatistics");

	AFSDPlayerController_SendLevelUpStatistics_Params params;
	params.currentRank = currentRank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.RecievePawnDestroyed
// (Event, Protected, BlueprintEvent)

void AFSDPlayerController::RecievePawnDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.RecievePawnDestroyed");

	AFSDPlayerController_RecievePawnDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.RecieveOnControllerReady
// (Event, Protected, BlueprintEvent)

void AFSDPlayerController::RecieveOnControllerReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.RecieveOnControllerReady");

	AFSDPlayerController_RecieveOnControllerReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.RecieveClientTravelDone
// (Event, Public, BlueprintEvent)

void AFSDPlayerController::RecieveClientTravelDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.RecieveClientTravelDone");

	AFSDPlayerController_RecieveClientTravelDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDPlayerController.ReceivingVoiceSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool*                          isRecieving                    (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::ReceivingVoiceSignature__DelegateSignature(bool* isRecieving)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDPlayerController.ReceivingVoiceSignature__DelegateSignature");

	AFSDPlayerController_ReceivingVoiceSignature__DelegateSignature_Params params;
	params.isRecieving = isRecieving;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.ReceiveEndLevel
// (Event, Protected, BlueprintEvent)

void AFSDPlayerController::ReceiveEndLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.ReceiveEndLevel");

	AFSDPlayerController_ReceiveEndLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDPlayerController.ReceivedEndLevelDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void AFSDPlayerController::ReceivedEndLevelDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDPlayerController.ReceivedEndLevelDelegate__DelegateSignature");

	AFSDPlayerController_ReceivedEndLevelDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Receive_EndLevel_WaitForData
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          areObjectivesCompleted         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numberOfPlayersInPod           (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Receive_EndLevel_WaitForData(bool* areObjectivesCompleted, int* numberOfPlayersInPod)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Receive_EndLevel_WaitForData");

	AFSDPlayerController_Receive_EndLevel_WaitForData_Params params;
	params.areObjectivesCompleted = areObjectivesCompleted;
	params.numberOfPlayersInPod = numberOfPlayersInPod;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.ReadyToContinueFromEndScreen
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFSDPlayerController::ReadyToContinueFromEndScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.ReadyToContinueFromEndScreen");

	AFSDPlayerController_ReadyToContinueFromEndScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDPlayerController.OnShowTutorialHint__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FText*                  Text                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  ControllerOverrideText         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnShowTutorialHint__DelegateSignature(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDPlayerController.OnShowTutorialHint__DelegateSignature");

	AFSDPlayerController_OnShowTutorialHint__DelegateSignature_Params params;
	params.Text = Text;
	params.ControllerOverrideText = ControllerOverrideText;
	params.Title = Title;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.OnSaveGamePlayerProgressChanged
// (Final, Native, Protected)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Stars                          (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnSaveGamePlayerProgressChanged(int* Rank, int* Stars)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.OnSaveGamePlayerProgressChanged");

	AFSDPlayerController_OnSaveGamePlayerProgressChanged_Params params;
	params.Rank = Rank;
	params.Stars = Stars;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.OnSaveGameCreditsChanged
// (Final, Native, Protected)
// Parameters:
// int*                           Credits                        (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnSaveGameCreditsChanged(int* Credits)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.OnSaveGameCreditsChanged");

	AFSDPlayerController_OnSaveGameCreditsChanged_Params params;
	params.Credits = Credits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.OnSaveGameCharacterProgressChanged
// (Final, Native, Protected)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnSaveGameCharacterProgressChanged(class UClass** CharacterClass, int* Level, float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.OnSaveGameCharacterProgressChanged");

	AFSDPlayerController_OnSaveGameCharacterProgressChanged_Params params;
	params.CharacterClass = CharacterClass;
	params.Level = Level;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.OnPlayerStateSelectedCharacterChanged
// (Final, Native, Protected)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnPlayerStateSelectedCharacterChanged(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.OnPlayerStateSelectedCharacterChanged");

	AFSDPlayerController_OnPlayerStateSelectedCharacterChanged_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.OnPlayerSpawnBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// int*                           PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnPlayerSpawnBegin(int* PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.OnPlayerSpawnBegin");

	AFSDPlayerController_OnPlayerSpawnBegin_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDPlayerController.OnHideTutorialHint__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void AFSDPlayerController::OnHideTutorialHint__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDPlayerController.OnHideTutorialHint__DelegateSignature");

	AFSDPlayerController_OnHideTutorialHint__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.OnGenerationDone
// (Event, Public, BlueprintEvent)

void AFSDPlayerController::OnGenerationDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.OnGenerationDone");

	AFSDPlayerController_OnGenerationDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDPlayerController.OnChangeTutorialHintDuration__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         NewDuration                    (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::OnChangeTutorialHintDuration__DelegateSignature(float* NewDuration)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDPlayerController.OnChangeTutorialHintDuration__DelegateSignature");

	AFSDPlayerController_OnChangeTutorialHintDuration__DelegateSignature_Params params;
	params.NewDuration = NewDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.MixerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFSDMixerLoginState            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFSDMixerLoginState AFSDPlayerController::MixerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.MixerState");

	AFSDPlayerController_MixerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.MixerLogout
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerController::MixerLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.MixerLogout");

	AFSDPlayerController_MixerLogout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.MixerLogin
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerController::MixerLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.MixerLogin");

	AFSDPlayerController_MixerLogin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDPlayerController.LevelFinishedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void AFSDPlayerController::LevelFinishedSignature__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDPlayerController.LevelFinishedSignature__DelegateSignature");

	AFSDPlayerController_LevelFinishedSignature__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.HideTutorialHint
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerController::HideTutorialHint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.HideTutorialHint");

	AFSDPlayerController_HideTutorialHint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.HasPendingRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerController::HasPendingRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.HasPendingRewards");

	AFSDPlayerController_HasPendingRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetUseToggleLaserpointer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerController::GetUseToggleLaserpointer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetUseToggleLaserpointer");

	AFSDPlayerController_GetUseToggleLaserpointer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetUseHoldToRun
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerController::GetUseHoldToRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetUseHoldToRun");

	AFSDPlayerController_GetUseHoldToRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetSteelSeriesEffectsComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USteelSeriesComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USteelSeriesComponent* AFSDPlayerController::GetSteelSeriesEffectsComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetSteelSeriesEffectsComponent");

	AFSDPlayerController_GetSteelSeriesEffectsComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetPlayerStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFSDPlayerController::GetPlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetPlayerStart");

	AFSDPlayerController_GetPlayerStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetPendingRewards
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPendingRewardsStats    OutStats                       (Parm, OutParm)
// struct FPendingRewards         OutRewards                     (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerController::GetPendingRewards(struct FPendingRewardsStats* OutStats, struct FPendingRewards* OutRewards)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetPendingRewards");

	AFSDPlayerController_GetPendingRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutStats != nullptr)
		*OutStats = params.OutStats;
	if (OutRewards != nullptr)
		*OutRewards = params.OutRewards;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetFSDPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerState* AFSDPlayerController::GetFSDPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetFSDPlayerState");

	AFSDPlayerController_GetFSDPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.GetChromaEffectsComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UChromaComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChromaComponent* AFSDPlayerController::GetChromaEffectsComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.GetChromaEffectsComponent");

	AFSDPlayerController_GetChromaEffectsComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.FindPlayerStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFSDPlayerController::FindPlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.FindPlayerStart");

	AFSDPlayerController_FindPlayerStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerController.EndLevel
// (Final, Native, Protected, BlueprintCallable)

void AFSDPlayerController::EndLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.EndLevel");

	AFSDPlayerController_EndLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_TerrainLateJoinVisibleChunks
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<uint32_t>*              visibleChunks                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AFSDPlayerController::Client_TerrainLateJoinVisibleChunks(TArray<uint32_t>* visibleChunks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_TerrainLateJoinVisibleChunks");

	AFSDPlayerController_Client_TerrainLateJoinVisibleChunks_Params params;
	params.visibleChunks = visibleChunks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_TerrainLateJoinPart
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FGrenadeExplodeOperationData>* explosions                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FCarveWithColliderOperationData>* colliderCarves                 (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FCarveWithSTLMeshOperationData>* meshCarves                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FPickaxeDigOperationData>* pickAxe                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FRemoveFloatingIslandOperationData>* floating                       (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FDrillOperationData>* drills                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FMeltOperationData>* melts                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AFSDPlayerController::Client_TerrainLateJoinPart(TArray<struct FGrenadeExplodeOperationData>* explosions, TArray<struct FCarveWithColliderOperationData>* colliderCarves, TArray<struct FCarveWithSTLMeshOperationData>* meshCarves, TArray<struct FPickaxeDigOperationData>* pickAxe, TArray<struct FRemoveFloatingIslandOperationData>* floating, TArray<struct FDrillOperationData>* drills, TArray<struct FMeltOperationData>* melts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_TerrainLateJoinPart");

	AFSDPlayerController_Client_TerrainLateJoinPart_Params params;
	params.explosions = explosions;
	params.colliderCarves = colliderCarves;
	params.meshCarves = meshCarves;
	params.pickAxe = pickAxe;
	params.floating = floating;
	params.drills = drills;
	params.melts = melts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_TerrainLateJoinDone
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFSDPlayerController::Client_TerrainLateJoinDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_TerrainLateJoinDone");

	AFSDPlayerController_Client_TerrainLateJoinDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_TerrainLateJoinDebris
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<int>*                   instanceComponentPairs         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AFSDPlayerController::Client_TerrainLateJoinDebris(TArray<int>* instanceComponentPairs)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_TerrainLateJoinDebris");

	AFSDPlayerController_Client_TerrainLateJoinDebris_Params params;
	params.instanceComponentPairs = instanceComponentPairs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_RecievePLSSizes
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int*                           influenceCount                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           carverCount                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           levelCarverCount               (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_RecievePLSSizes(int* influenceCount, int* carverCount, int* levelCarverCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_RecievePLSSizes");

	AFSDPlayerController_Client_RecievePLSSizes_Params params;
	params.influenceCount = influenceCount;
	params.carverCount = carverCount;
	params.levelCarverCount = levelCarverCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_RecievePLSLevelCarver
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FLevelGenerationCarverLists* levelCarvers                   (ConstParm, Parm, ReferenceParm)

void AFSDPlayerController::Client_RecievePLSLevelCarver(struct FLevelGenerationCarverLists* levelCarvers)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_RecievePLSLevelCarver");

	AFSDPlayerController_Client_RecievePLSLevelCarver_Params params;
	params.levelCarvers = levelCarvers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_RecievePLSInstantCarver
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FGeneratedInstantCarverLists* instantCarvers                 (ConstParm, Parm, ReferenceParm)

void AFSDPlayerController::Client_RecievePLSInstantCarver(struct FGeneratedInstantCarverLists* instantCarvers)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_RecievePLSInstantCarver");

	AFSDPlayerController_Client_RecievePLSInstantCarver_Params params;
	params.instantCarvers = instantCarvers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_RecievePLSInfluencers
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FGeneratedInfluenceSets* influenceSet                   (ConstParm, Parm, ReferenceParm)

void AFSDPlayerController::Client_RecievePLSInfluencers(struct FGeneratedInfluenceSets* influenceSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_RecievePLSInfluencers");

	AFSDPlayerController_Client_RecievePLSInfluencers_Params params;
	params.influenceSet = influenceSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_PlayCue
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class USoundCue**              SoundCue                       (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_PlayCue(class USoundCue** SoundCue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_PlayCue");

	AFSDPlayerController_Client_PlayCue_Params params;
	params.SoundCue = SoundCue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_EndLevel_WaitForData
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool*                          areObjectivesCompleted         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numberOfPlayersInPod           (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_EndLevel_WaitForData(bool* areObjectivesCompleted, int* numberOfPlayersInPod)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_EndLevel_WaitForData");

	AFSDPlayerController_Client_EndLevel_WaitForData_Params params;
	params.areObjectivesCompleted = areObjectivesCompleted;
	params.numberOfPlayersInPod = numberOfPlayersInPod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_DeductResource
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class UResourceData**          Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_DeductResource(class UResourceData** Resource, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_DeductResource");

	AFSDPlayerController_Client_DeductResource_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_CollectTreasureVictoryPose
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UTreasureRewarder**      rewarder                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UVictoryPose**           targetPose                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     targetCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_CollectTreasureVictoryPose(class UTreasureRewarder** rewarder, class UVictoryPose** targetPose, class UPlayerCharacterID** targetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_CollectTreasureVictoryPose");

	AFSDPlayerController_Client_CollectTreasureVictoryPose_Params params;
	params.rewarder = rewarder;
	params.targetPose = targetPose;
	params.targetCharacter = targetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_CollectTreasureSkin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UTreasureRewarder**      rewarder                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UItemSkin**              targetSkin                     (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                targetItem                     (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_CollectTreasureSkin(class UTreasureRewarder** rewarder, class UItemSkin** targetSkin, class UItemID** targetItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_CollectTreasureSkin");

	AFSDPlayerController_Client_CollectTreasureSkin_Params params;
	params.rewarder = rewarder;
	params.targetSkin = targetSkin;
	params.targetItem = targetItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.Client_CollectTreasureDrink
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UTreasureRewarder**      rewarder                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UDrinkableDataAsset**    Drinkable                      (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerController::Client_CollectTreasureDrink(class UTreasureRewarder** rewarder, class UDrinkableDataAsset** Drinkable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.Client_CollectTreasureDrink");

	AFSDPlayerController_Client_CollectTreasureDrink_Params params;
	params.rewarder = rewarder;
	params.Drinkable = Drinkable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.ApplyPendingRewards
// (Final, Native, Public, BlueprintCallable)

void AFSDPlayerController::ApplyPendingRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.ApplyPendingRewards");

	AFSDPlayerController_ApplyPendingRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerController.AddTeamResources
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class UResourceData**          ResourceData                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ViewerName                     (Parm, ZeroConstructor)
// struct FString*                Description                    (Parm, ZeroConstructor)

void AFSDPlayerController::AddTeamResources(class UResourceData** ResourceData, float* amount, struct FString* ViewerName, struct FString* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerController.AddTeamResources");

	AFSDPlayerController_AddTeamResources_Params params;
	params.ResourceData = ResourceData;
	params.amount = amount;
	params.ViewerName = ViewerName;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerStatsComponent.SendMissionAnalytics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          trackMorkite                   (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerStatsComponent::SendMissionAnalytics(bool* trackMorkite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerStatsComponent.SendMissionAnalytics");

	UPlayerStatsComponent_SendMissionAnalytics_Params params;
	params.trackMorkite = trackMorkite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerStatsComponent.SendEndMissionResult
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEndMissionResult*      Result                         (ConstParm, Parm, ReferenceParm)

void UPlayerStatsComponent::SendEndMissionResult(struct FEndMissionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerStatsComponent.SendEndMissionResult");

	UPlayerStatsComponent_SendEndMissionResult_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerStatsComponent.OnResourceMined
// (Final, Native, Public)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerStatsComponent::OnResourceMined(class UCappedResource** Resource, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerStatsComponent.OnResourceMined");

	UPlayerStatsComponent_OnResourceMined_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerStatsComponent.OnRep_EndMissionResult
// (Final, Native, Protected)

void UPlayerStatsComponent::OnRep_EndMissionResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerStatsComponent.OnRep_EndMissionResult");

	UPlayerStatsComponent_OnRep_EndMissionResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerStatsComponent.IsEndMissionResultReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerStatsComponent::IsEndMissionResultReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerStatsComponent.IsEndMissionResultReady");

	UPlayerStatsComponent_IsEndMissionResultReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerStatsComponent.GetSurvivedInPod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerStatsComponent::GetSurvivedInPod()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerStatsComponent.GetSurvivedInPod");

	UPlayerStatsComponent_GetSurvivedInPod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.PlayerStatsComponent.EndMissionResultDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FEndMissionResult*      Result                         (ConstParm, Parm, OutParm, ReferenceParm)

void UPlayerStatsComponent::EndMissionResultDelegate__DelegateSignature(struct FEndMissionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PlayerStatsComponent.EndMissionResultDelegate__DelegateSignature");

	UPlayerStatsComponent_EndMissionResultDelegate__DelegateSignature_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.SetSelectedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 NewCharacter                   (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerState::SetSelectedCharacter(class UClass** NewCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.SetSelectedCharacter");

	AFSDPlayerState_SetSelectedCharacter_Params params;
	params.NewCharacter = NewCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.ServerSetSelectedCharacter
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UClass**                 NewCharacter                   (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerState::ServerSetSelectedCharacter(class UClass** NewCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.ServerSetSelectedCharacter");

	AFSDPlayerState_ServerSetSelectedCharacter_Params params;
	params.NewCharacter = NewCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.Server_SetSupplyStatus
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// unsigned char*                 StatusHealth                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 StatusAmmo                     (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerState::Server_SetSupplyStatus(unsigned char* StatusHealth, unsigned char* StatusAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.Server_SetSupplyStatus");

	AFSDPlayerState_Server_SetSupplyStatus_Params params;
	params.StatusHealth = StatusHealth;
	params.StatusAmmo = StatusAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.Server_SetGameOwnerStatus
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int*                           gameOwnerStatus                (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPlayerState::Server_SetGameOwnerStatus(int* gameOwnerStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.Server_SetGameOwnerStatus");

	AFSDPlayerState_Server_SetGameOwnerStatus_Params params;
	params.gameOwnerStatus = gameOwnerStatus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_SupplyHealthStatus
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_SupplyHealthStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_SupplyHealthStatus");

	AFSDPlayerState_OnRep_SupplyHealthStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_SupplyAmmoStatus
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_SupplyAmmoStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_SupplyAmmoStatus");

	AFSDPlayerState_OnRep_SupplyAmmoStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_SelectedCharacter
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_SelectedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_SelectedCharacter");

	AFSDPlayerState_OnRep_SelectedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_PlayerCharacter
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_PlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_PlayerCharacter");

	AFSDPlayerState_OnRep_PlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_LevelGenerationState
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_LevelGenerationState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_LevelGenerationState");

	AFSDPlayerState_OnRep_LevelGenerationState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_GameOwnerStatus
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_GameOwnerStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_GameOwnerStatus");

	AFSDPlayerState_OnRep_GameOwnerStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnRep_FractionLevelGenerated
// (Final, Native, Protected)

void AFSDPlayerState::OnRep_FractionLevelGenerated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnRep_FractionLevelGenerated");

	AFSDPlayerState_OnRep_FractionLevelGenerated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.OnLateJoinFinished
// (Event, Public, BlueprintEvent)

void AFSDPlayerState::OnLateJoinFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.OnLateJoinFinished");

	AFSDPlayerState_OnLateJoinFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPlayerState.HasNormalOwnerStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerState::HasNormalOwnerStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.HasNormalOwnerStatus");

	AFSDPlayerState_HasNormalOwnerStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetXPRewardsSum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDPlayerState::GetXPRewardsSum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetXPRewardsSum");

	AFSDPlayerState_GetXPRewardsSum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetXPRewardsCustom
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<class UResourceData*, float>* Resources                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int*                           EnemiesKilled                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FailPrimaryObjectiveCompleted  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FailSecondaryObjectiveCompleted (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FXPReward>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FXPReward> AFSDPlayerState::GetXPRewardsCustom(TMap<class UResourceData*, float>* Resources, int* EnemiesKilled, bool* FailPrimaryObjectiveCompleted, bool* FailSecondaryObjectiveCompleted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetXPRewardsCustom");

	AFSDPlayerState_GetXPRewardsCustom_Params params;
	params.Resources = Resources;
	params.EnemiesKilled = EnemiesKilled;
	params.FailPrimaryObjectiveCompleted = FailPrimaryObjectiveCompleted;
	params.FailSecondaryObjectiveCompleted = FailSecondaryObjectiveCompleted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetXPRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FXPReward>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FXPReward> AFSDPlayerState::GetXPRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetXPRewards");

	AFSDPlayerState_GetXPRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetXPRewardDeepDive
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int*                           StagesCompleted                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FXPReward>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FXPReward> AFSDPlayerState::GetXPRewardDeepDive(int* StagesCompleted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetXPRewardDeepDive");

	AFSDPlayerState_GetXPRewardDeepDive_Params params;
	params.StagesCompleted = StagesCompleted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetSupplyHealthStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFSDPlayerState::GetSupplyHealthStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetSupplyHealthStatus");

	AFSDPlayerState_GetSupplyHealthStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetSupplyAmmoStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFSDPlayerState::GetSupplyAmmoStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetSupplyAmmoStatus");

	AFSDPlayerState_GetSupplyAmmoStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetSelectedCharacterLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDPlayerState::GetSelectedCharacterLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetSelectedCharacterLevel");

	AFSDPlayerState_GetSelectedCharacterLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetSelectCharacterProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterProgress      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCharacterProgress AFSDPlayerState::GetSelectCharacterProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetSelectCharacterProgress");

	AFSDPlayerState_GetSelectCharacterProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetPlayerResourceComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerResourceComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPlayerResourceComponent* AFSDPlayerState::GetPlayerResourceComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetPlayerResourceComponent");

	AFSDPlayerState_GetPlayerResourceComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetPlayerRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDPlayerState::GetPlayerRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetPlayerRank");

	AFSDPlayerState_GetPlayerRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerController* AFSDPlayerState::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetPlayerController");

	AFSDPlayerState_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetGameOwnerStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGameOwnerStatus*              Status                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFSDPlayerState::GetGameOwnerStatus(EGameOwnerStatus* Status)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetGameOwnerStatus");

	AFSDPlayerState_GetGameOwnerStatus_Params params;
	params.Status = Status;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetDeepDiveCreditsReward
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int*                           StagesCompleted                (Parm, ZeroConstructor, IsPlainOldData)
// int*                           goldCollected                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FCreditsReward>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCreditsReward> AFSDPlayerState::GetDeepDiveCreditsReward(int* StagesCompleted, int* goldCollected)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetDeepDiveCreditsReward");

	AFSDPlayerState_GetDeepDiveCreditsReward_Params params;
	params.StagesCompleted = StagesCompleted;
	params.goldCollected = goldCollected;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetChatSenderType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EChatSenderType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EChatSenderType AFSDPlayerState::GetChatSenderType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetChatSenderType");

	AFSDPlayerState_GetChatSenderType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetCharacterProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FCharacterProgress      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCharacterProgress AFSDPlayerState::GetCharacterProgress(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetCharacterProgress");

	AFSDPlayerState_GetCharacterProgress_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.GetCharacterLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFSDPlayerState::GetCharacterLevel(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.GetCharacterLevel");

	AFSDPlayerState_GetCharacterLevel_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPlayerState.CharacterSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFSDPlayerState::CharacterSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPlayerState.CharacterSelected");

	AFSDPlayerState_CharacterSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemUpgradePreviewComponent.SetPreviewUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemUpgrade**           InUpgrade                      (Parm, ZeroConstructor, IsPlainOldData)

void UItemUpgradePreviewComponent::SetPreviewUpgrade(class UItemUpgrade** InUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgradePreviewComponent.SetPreviewUpgrade");

	UItemUpgradePreviewComponent_SetPreviewUpgrade_Params params;
	params.InUpgrade = InUpgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemUpgradePreviewComponent.RefreshPreviewUpgrade
// (Final, Native, Public, BlueprintCallable)

void UItemUpgradePreviewComponent::RefreshPreviewUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgradePreviewComponent.RefreshPreviewUpgrade");

	UItemUpgradePreviewComponent_RefreshPreviewUpgrade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ItemUpgradePreviewComponent.ItemUpgradeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UItemUpgrade**           PreviewUpgrade                 (Parm, ZeroConstructor, IsPlainOldData)

void UItemUpgradePreviewComponent::ItemUpgradeDelegate__DelegateSignature(class UItemUpgrade** PreviewUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ItemUpgradePreviewComponent.ItemUpgradeDelegate__DelegateSignature");

	UItemUpgradePreviewComponent_ItemUpgradeDelegate__DelegateSignature_Params params;
	params.PreviewUpgrade = PreviewUpgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPostProcessingActor.UnapplyPostProcessingBlendablesByType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// EPostProcessingType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPostProcessingActor::STATIC_UnapplyPostProcessingBlendablesByType(class UObject** WorldContext, EPostProcessingType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.UnapplyPostProcessingBlendablesByType");

	AFSDPostProcessingActor_UnapplyPostProcessingBlendablesByType_Params params;
	params.WorldContext = WorldContext;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPostProcessingActor.UnapplyPostProcessingBlendablesByID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  InID                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AFSDPostProcessingActor::STATIC_UnapplyPostProcessingBlendablesByID(class UObject** WorldContext, struct FName* InID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.UnapplyPostProcessingBlendablesByID");

	AFSDPostProcessingActor_UnapplyPostProcessingBlendablesByID_Params params;
	params.WorldContext = WorldContext;
	params.InID = InID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPostProcessingActor.UnapplyPostProcessingBlendable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// EPostProcessingType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UBlendableInterface>* InBlendableObject              (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPostProcessingActor::STATIC_UnapplyPostProcessingBlendable(class UObject** WorldContext, EPostProcessingType* Type, TScriptInterface<class UBlendableInterface>* InBlendableObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.UnapplyPostProcessingBlendable");

	AFSDPostProcessingActor_UnapplyPostProcessingBlendable_Params params;
	params.WorldContext = WorldContext;
	params.Type = Type;
	params.InBlendableObject = InBlendableObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPostProcessingActor.UnapplyAllPostProcessingBlendables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPostProcessingActor::STATIC_UnapplyAllPostProcessingBlendables(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.UnapplyAllPostProcessingBlendables");

	AFSDPostProcessingActor_UnapplyAllPostProcessingBlendables_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPostProcessingActor.SetPostProcessManager
// (Final, Native, Protected)
// Parameters:
// class APostProcessingManager** InManager                      (Parm, ZeroConstructor, IsPlainOldData)

void AFSDPostProcessingActor::SetPostProcessManager(class APostProcessingManager** InManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.SetPostProcessManager");

	AFSDPostProcessingActor_SetPostProcessManager_Params params;
	params.InManager = InManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDPostProcessingActor.GetPostProcessingMaterialInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface**     Material                       (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* AFSDPostProcessingActor::STATIC_GetPostProcessingMaterialInstance(class UObject** WorldContext, class UMaterialInterface** Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.GetPostProcessingMaterialInstance");

	AFSDPostProcessingActor_GetPostProcessingMaterialInstance_Params params;
	params.WorldContext = WorldContext;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPostProcessingActor.ApplyPostProcessingMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// EPostProcessingType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface**     Material                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InWeight                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  InID                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* AFSDPostProcessingActor::STATIC_ApplyPostProcessingMaterial(class UObject** WorldContext, EPostProcessingType* Type, class UMaterialInterface** Material, float* InWeight, struct FName* InID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.ApplyPostProcessingMaterial");

	AFSDPostProcessingActor_ApplyPostProcessingMaterial_Params params;
	params.WorldContext = WorldContext;
	params.Type = Type;
	params.Material = Material;
	params.InWeight = InWeight;
	params.InID = InID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDPostProcessingActor.ApplyPostProcessingBlendable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// EPostProcessingType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UBlendableInterface>* InBlendableObject              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InWeight                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  InID                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AFSDPostProcessingActor::STATIC_ApplyPostProcessingBlendable(class UObject** WorldContext, EPostProcessingType* Type, TScriptInterface<class UBlendableInterface>* InBlendableObject, float* InWeight, struct FName* InID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDPostProcessingActor.ApplyPostProcessingBlendable");

	AFSDPostProcessingActor_ApplyPostProcessingBlendable_Params params;
	params.WorldContext = WorldContext;
	params.Type = Type;
	params.InBlendableObject = InBlendableObject;
	params.InWeight = InWeight;
	params.InID = InID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.TutorialsResetDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFSDSaveGame::TutorialsResetDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.TutorialsResetDelegate__DelegateSignature");

	UFSDSaveGame_TutorialsResetDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.TrySellResource
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UResourceData**          Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Price                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::TrySellResource(class UResourceData** Resource, int* amount, int* Price)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.TrySellResource");

	UFSDSaveGame_TrySellResource_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Price != nullptr)
		*Price = params.Price;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.TryDeductResources
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TMap<class UResourceData*, int>* Resources                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::TryDeductResources(TMap<class UResourceData*, int>* Resources)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.TryDeductResources");

	UFSDSaveGame_TryDeductResources_Params params;
	params.Resources = Resources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.TryDeductCredits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::TryDeductCredits(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.TryDeductCredits");

	UFSDSaveGame_TryDeductCredits_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.TryBuyResource
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UResourceData**          Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Price                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::TryBuyResource(class UResourceData** Resource, int* amount, int* Price)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.TryBuyResource");

	UFSDSaveGame_TryBuyResource_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Price != nullptr)
		*Price = params.Price;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDSaveGame.SkinSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UItemSkin**              Skin                           (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                ItemID                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::SkinSignature__DelegateSignature(class UItemSkin** Skin, class UItemID** ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.SkinSignature__DelegateSignature");

	UFSDSaveGame_SkinSignature__DelegateSignature_Params params;
	params.Skin = Skin;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.ShouldDisplayFirstSchematicMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::ShouldDisplayFirstSchematicMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.ShouldDisplayFirstSchematicMessage");

	UFSDSaveGame_ShouldDisplayFirstSchematicMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.SetPersonalAnalytics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::SetPersonalAnalytics(bool* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetPersonalAnalytics");

	UFSDSaveGame_SetPersonalAnalytics_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.SetHasSentSteamInfo
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::SetHasSentSteamInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetHasSentSteamInfo");

	UFSDSaveGame_SetHasSentSteamInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetHasJoinedXboxClub
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::SetHasJoinedXboxClub()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetHasJoinedXboxClub");

	UFSDSaveGame_SetHasJoinedXboxClub_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetHasClaimSteamGroupLoot
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::SetHasClaimSteamGroupLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetHasClaimSteamGroupLoot");

	UFSDSaveGame_SetHasClaimSteamGroupLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetFaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFSDFaction*                   newFaction                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Reasign                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::SetFaction(EFSDFaction* newFaction, bool* Reasign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetFaction");

	UFSDSaveGame_SetFaction_Params params;
	params.newFaction = newFaction;
	params.Reasign = Reasign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetEquippedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::SetEquippedItem(EItemCategory* Category, class UPlayerCharacterID** PlayerId, class UClass** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetEquippedItem");

	UFSDSaveGame_SetEquippedItem_Params params;
	params.Category = Category;
	params.PlayerId = PlayerId;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetDiscordReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          State                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::SetDiscordReward(bool* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetDiscordReward");

	UFSDSaveGame_SetDiscordReward_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetCharacterLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           loadoutNumber                  (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::SetCharacterLoadout(class UClass** CharacterClass, int* loadoutNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetCharacterLoadout");

	UFSDSaveGame_SetCharacterLoadout_Params params;
	params.CharacterClass = CharacterClass;
	params.loadoutNumber = loadoutNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetBoscoAllowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aIsBoscoAllowed                (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::SetBoscoAllowed(bool* aIsBoscoAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetBoscoAllowed");

	UFSDSaveGame_SetBoscoAllowed_Params params;
	params.aIsBoscoAllowed = aIsBoscoAllowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.SetAnonymousAnalytics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::SetAnonymousAnalytics(bool* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SetAnonymousAnalytics");

	UFSDSaveGame_SetAnonymousAnalytics_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.SaveToDisk
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::SaveToDisk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.SaveToDisk");

	UFSDSaveGame_SaveToDisk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.RetirementSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           RetirementCount                (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::RetirementSignature__DelegateSignature(class UClass** CharacterClass, int* RetirementCount)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.RetirementSignature__DelegateSignature");

	UFSDSaveGame_RetirementSignature__DelegateSignature_Params params;
	params.CharacterClass = CharacterClass;
	params.RetirementCount = RetirementCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.RetireCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::RetireCharacter(class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.RetireCharacter");

	UFSDSaveGame_RetireCharacter_Params params;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDSaveGame.ResourceAmountChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UResourceData**          Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         currentAmount                  (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::ResourceAmountChangedDelegate__DelegateSignature(class UResourceData** Resource, float* currentAmount)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.ResourceAmountChangedDelegate__DelegateSignature");

	UFSDSaveGame_ResourceAmountChangedDelegate__DelegateSignature_Params params;
	params.Resource = Resource;
	params.currentAmount = currentAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.ResetTutorials
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::ResetTutorials()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.ResetTutorials");

	UFSDSaveGame_ResetTutorials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.ResetRejoinSessionId
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::ResetRejoinSessionId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.ResetRejoinSessionId");

	UFSDSaveGame_ResetRejoinSessionId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.RejoinAttempted
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::RejoinAttempted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.RejoinAttempted");

	UFSDSaveGame_RejoinAttempted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.RefreshLoadoutFromCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::RefreshLoadoutFromCharacter(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.RefreshLoadoutFromCharacter");

	UFSDSaveGame_RefreshLoadoutFromCharacter_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.RecievedDiscordReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::RecievedDiscordReward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.RecievedDiscordReward");

	UFSDSaveGame_RecievedDiscordReward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.PromotedClassesString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSaveGame::PromotedClassesString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.PromotedClassesString");

	UFSDSaveGame_PromotedClassesString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDSaveGame.PlayerProgressChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Stars                          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::PlayerProgressChangedSignature__DelegateSignature(int* Rank, int* Stars)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.PlayerProgressChangedSignature__DelegateSignature");

	UFSDSaveGame_PlayerProgressChangedSignature__DelegateSignature_Params params;
	params.Rank = Rank;
	params.Stars = Stars;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.PersonalMatricsChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool*                          AllowPersonalMetrics           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::PersonalMatricsChangedSignature__DelegateSignature(bool* AllowPersonalMetrics)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.PersonalMatricsChangedSignature__DelegateSignature");

	UFSDSaveGame_PersonalMatricsChangedSignature__DelegateSignature_Params params;
	params.AllowPersonalMetrics = AllowPersonalMetrics;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.PerkPointsChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int*                           PerkPoints                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Change                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::PerkPointsChangedSignature__DelegateSignature(int* PerkPoints, int* Change)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.PerkPointsChangedSignature__DelegateSignature");

	UFSDSaveGame_PerkPointsChangedSignature__DelegateSignature_Params params;
	params.PerkPoints = PerkPoints;
	params.Change = Change;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.MarkRetirementRewardScreenSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::MarkRetirementRewardScreenSeen(class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.MarkRetirementRewardScreenSeen");

	UFSDSaveGame_MarkRetirementRewardScreenSeen_Params params;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.MarkFirstSchematicMessageSeen
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::MarkFirstSchematicMessageSeen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.MarkFirstSchematicMessageSeen");

	UFSDSaveGame_MarkFirstSchematicMessageSeen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.ItemUnlockedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFSDSaveGame::ItemUnlockedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.ItemUnlockedDelegate__DelegateSignature");

	UFSDSaveGame_ItemUnlockedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.ItemUINotificationDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFSDSaveGame::ItemUINotificationDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.ItemUINotificationDelegate__DelegateSignature");

	UFSDSaveGame_ItemUINotificationDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.IsObsolete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::IsObsolete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.IsObsolete");

	UFSDSaveGame_IsObsolete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.IsFirstRejoinAttempt
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::IsFirstRejoinAttempt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.IsFirstRejoinAttempt");

	UFSDSaveGame_IsFirstRejoinAttempt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.HasSeenRetirementRewardScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::HasSeenRetirementRewardScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.HasSeenRetirementRewardScreen");

	UFSDSaveGame_HasSeenRetirementRewardScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.HasCharacterRetired
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::HasCharacterRetired(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.HasCharacterRetired");

	UFSDSaveGame_HasCharacterRetired_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.HasCharacterCompletedRetirementCampaign
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 characerClass                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::HasCharacterCompletedRetirementCampaign(class UClass** characerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.HasCharacterCompletedRetirementCampaign");

	UFSDSaveGame_HasCharacterCompletedRetirementCampaign_Params params;
	params.characerClass = characerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.HasBackupWithMoreProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFSDGameInstance**       GameInstance                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::STATIC_HasBackupWithMoreProgress(class UFSDGameInstance** GameInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.HasBackupWithMoreProgress");

	UFSDSaveGame_HasBackupWithMoreProgress_Params params;
	params.GameInstance = GameInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.HasAnyCharacterRetired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::HasAnyCharacterRetired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.HasAnyCharacterRetired");

	UFSDSaveGame_HasAnyCharacterRetired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetTotalGamesPlayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetTotalGamesPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetTotalGamesPlayed");

	UFSDSaveGame_GetTotalGamesPlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetSlotTimeStamp
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FDateTime UFSDSaveGame::GetSlotTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetSlotTimeStamp");

	UFSDSaveGame_GetSlotTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetSlotLoadedFrom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSaveGame::GetSlotLoadedFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetSlotLoadedFrom");

	UFSDSaveGame_GetSlotLoadedFrom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetSelectedLoadoutIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetSelectedLoadoutIndex(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetSelectedLoadoutIndex");

	UFSDSaveGame_GetSelectedLoadoutIndex_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetResourceSellingPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UResourceData**          Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetResourceSellingPrice(class UResourceData** Resource, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetResourceSellingPrice");

	UFSDSaveGame_GetResourceSellingPrice_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetResourceBuyingPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UResourceData**          Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetResourceBuyingPrice(class UResourceData** Resource, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetResourceBuyingPrice");

	UFSDSaveGame_GetResourceBuyingPrice_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetResourceAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UResourceData**          Resource                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDSaveGame::GetResourceAmount(class UResourceData** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetResourceAmount");

	UFSDSaveGame_GetResourceAmount_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetRequiredXPForLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetRequiredXPForLevel(int* Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetRequiredXPForLevel");

	UFSDSaveGame_GetRequiredXPForLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetRejoinSessionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSaveGame::GetRejoinSessionId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetRejoinSessionId");

	UFSDSaveGame_GetRejoinSessionId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetPurchasableItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetPurchasableItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetPurchasableItemCount");

	UFSDSaveGame_GetPurchasableItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetPlayerRetirementRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetPlayerRetirementRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetPlayerRetirementRank");

	UFSDSaveGame_GetPlayerRetirementRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetPlayerRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetPlayerRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetPlayerRank");

	UFSDSaveGame_GetPlayerRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetPerkPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetPerkPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetPerkPoints");

	UFSDSaveGame_GetPerkPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetHasSentSteamInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::GetHasSentSteamInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetHasSentSteamInfo");

	UFSDSaveGame_GetHasSentSteamInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetHasClaimedSteamGroupLoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::GetHasClaimedSteamGroupLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetHasClaimedSteamGroupLoot");

	UFSDSaveGame_GetHasClaimedSteamGroupLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFSDFaction                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFSDFaction UFSDSaveGame::GetFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetFaction");

	UFSDSaveGame_GetFaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetEquippedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFSDSaveGame::GetEquippedItem(EItemCategory* Category, class UPlayerCharacterID** PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetEquippedItem");

	UFSDSaveGame_GetEquippedItem_Params params;
	params.Category = Category;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetCredits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetCredits");

	UFSDSaveGame_GetCredits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetClassLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetClassLevel(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetClassLevel");

	UFSDSaveGame_GetClassLevel_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetCharacterRetirementCount
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid*                  PlayerId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::GetCharacterRetirementCount(struct FGuid* PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetCharacterRetirementCount");

	UFSDSaveGame_GetCharacterRetirementCount_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetBoscoAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::GetBoscoAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetBoscoAllowed");

	UFSDSaveGame_GetBoscoAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSaveGame.GetAllSavesFromDisk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFSDGameInstance**       GameInstance                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFSDSaveGame*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFSDSaveGame*> UFSDSaveGame::STATIC_GetAllSavesFromDisk(class UFSDGameInstance** GameInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.GetAllSavesFromDisk");

	UFSDSaveGame_GetAllSavesFromDisk_Params params;
	params.GameInstance = GameInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDSaveGame.ForgingXPDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         XP                             (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::ForgingXPDelegate__DelegateSignature(float* XP)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.ForgingXPDelegate__DelegateSignature");

	UFSDSaveGame_ForgingXPDelegate__DelegateSignature_Params params;
	params.XP = XP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.DeductPerkPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::DeductPerkPoints(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.DeductPerkPoints");

	UFSDSaveGame_DeductPerkPoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDSaveGame.CreditsChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int*                           Credits                        (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::CreditsChangedSignature__DelegateSignature(int* Credits)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.CreditsChangedSignature__DelegateSignature");

	UFSDSaveGame_CreditsChangedSignature__DelegateSignature_Params params;
	params.Credits = Credits;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.CheckPromotionAchievementProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::CheckPromotionAchievementProgress(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.CheckPromotionAchievementProgress");

	UFSDSaveGame_CheckPromotionAchievementProgress_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.CharacterSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::CharacterSignature__DelegateSignature(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.CharacterSignature__DelegateSignature");

	UFSDSaveGame_CharacterSignature__DelegateSignature_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDSaveGame.CharacterProgressChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::CharacterProgressChangedSignature__DelegateSignature(class UClass** CharacterClass, int* Level, float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.CharacterProgressChangedSignature__DelegateSignature");

	UFSDSaveGame_CharacterProgressChangedSignature__DelegateSignature_Params params;
	params.CharacterClass = CharacterClass;
	params.Level = Level;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.CanAfford
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class UResourceData*, int>* Resources                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSaveGame::CanAfford(TMap<class UResourceData*, int>* Resources)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.CanAfford");

	UFSDSaveGame_CanAfford_Params params;
	params.Resources = Resources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDSaveGame.AnonymousMatricsChangedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool*                          AllowAnonymousMetrics          (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::AnonymousMatricsChangedSignature__DelegateSignature(bool* AllowAnonymousMetrics)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDSaveGame.AnonymousMatricsChangedSignature__DelegateSignature");

	UFSDSaveGame_AnonymousMatricsChangedSignature__DelegateSignature_Params params;
	params.AllowAnonymousMetrics = AllowAnonymousMetrics;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.AddPerkPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDSaveGame::AddPerkPoints(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.AddPerkPoints");

	UFSDSaveGame_AddPerkPoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.AddGamePlayed
// (Final, Native, Public, BlueprintCallable)

void UFSDSaveGame::AddGamePlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.AddGamePlayed");

	UFSDSaveGame_AddGamePlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSaveGame.AddCredits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDSaveGame::AddCredits(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSaveGame.AddCredits");

	UFSDSaveGame_AddCredits_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.OptionalUICategory.VisibilityChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOptionalUICategory**    Category                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UOptionalUICategory::VisibilityChanged__DelegateSignature(class UOptionalUICategory** Category, bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.OptionalUICategory.VisibilityChanged__DelegateSignature");

	UOptionalUICategory_VisibilityChanged__DelegateSignature_Params params;
	params.Category = Category;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OptionalUICategory.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsCategoryVisible              (Parm, ZeroConstructor, IsPlainOldData)

void UOptionalUICategory::SetVisible(class UObject** WorldContext, bool* IsCategoryVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OptionalUICategory.SetVisible");

	UOptionalUICategory_SetVisible_Params params;
	params.WorldContext = WorldContext;
	params.IsCategoryVisible = IsCategoryVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OptionalUICategory.IsVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOptionalUICategory::IsVisible(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OptionalUICategory.IsVisible");

	UOptionalUICategory_IsVisible_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDLookupSessionId.FSDLookupSessionId
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                sessionKey                     (Parm, ZeroConstructor)
// class UFSDLookupSessionId*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDLookupSessionId* UFSDLookupSessionId::STATIC_FSDLookupSessionId(class UObject** WorldContextObject, struct FString* sessionKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLookupSessionId.FSDLookupSessionId");

	UFSDLookupSessionId_FSDLookupSessionId_Params params;
	params.WorldContextObject = WorldContextObject;
	params.sessionKey = sessionKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.PlayerIsFollowingUsOnSteam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSteamUtils::STATIC_PlayerIsFollowingUsOnSteam()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.PlayerIsFollowingUsOnSteam");

	UFSDSteamUtils_PlayerIsFollowingUsOnSteam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.OpenURLInSteamBrowser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString*                URL                            (Parm, ZeroConstructor)

void UFSDSteamUtils::STATIC_OpenURLInSteamBrowser(struct FString* URL)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.OpenURLInSteamBrowser");

	UFSDSteamUtils_OpenURLInSteamBrowser_Params params;
	params.URL = URL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDSteamUtils.IsSteamLoaded
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSteamUtils::STATIC_IsSteamLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.IsSteamLoaded");

	UFSDSteamUtils_IsSteamLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.IsDev
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState**           PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSteamUtils::STATIC_IsDev(class APlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.IsDev");

	UFSDSteamUtils_IsDev_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.HasDeluxeEdition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSteamUtils::STATIC_HasDeluxeEdition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.HasDeluxeEdition");

	UFSDSteamUtils_HasDeluxeEdition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.HasContentCreatorEdition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDSteamUtils::STATIC_HasContentCreatorEdition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.HasContentCreatorEdition");

	UFSDSteamUtils_HasContentCreatorEdition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.GetSteamRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSteamUtils::STATIC_GetSteamRegion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.GetSteamRegion");

	UFSDSteamUtils_GetSteamRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.GetSteamLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSteamUtils::STATIC_GetSteamLanguage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.GetSteamLanguage");

	UFSDSteamUtils_GetSteamLanguage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.GetSteamBranchString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSteamUtils::STATIC_GetSteamBranchString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.GetSteamBranchString");

	UFSDSteamUtils_GetSteamBranchString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.GetSteamBranch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ESteamBranch                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESteamBranch UFSDSteamUtils::STATIC_GetSteamBranch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.GetSteamBranch");

	UFSDSteamUtils_GetSteamBranch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.GetPlayerSteamName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSteamUtils::STATIC_GetPlayerSteamName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.GetPlayerSteamName");

	UFSDSteamUtils_GetPlayerSteamName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDSteamUtils.GetPlayerSteamID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDSteamUtils::STATIC_GetPlayerSteamID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDSteamUtils.GetPlayerSteamID");

	UFSDSteamUtils_GetPlayerSteamID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDXboxUtils.ShowCheatTerminal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDXboxUtils::STATIC_ShowCheatTerminal()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDXboxUtils.ShowCheatTerminal");

	UFSDXboxUtils_ShowCheatTerminal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDOddishUtils.IsOddishLoaded
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDOddishUtils::STATIC_IsOddishLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDOddishUtils.IsOddishLoaded");

	UFSDOddishUtils_IsOddishLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDOddishUtils.GetOddishUserId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDOddishUtils::STATIC_GetOddishUserId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDOddishUtils.GetOddishUserId");

	UFSDOddishUtils_GetOddishUserId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDLabelWidget.SetWrapTextAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         WrapAt                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDLabelWidget::SetWrapTextAt(float* WrapAt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLabelWidget.SetWrapTextAt");

	UFSDLabelWidget_SetWrapTextAt_Params params;
	params.WrapAt = WrapAt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDLabelWidget.SetWrappingPolicy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextWrappingPolicy*           Policy                         (Parm, ZeroConstructor, IsPlainOldData)

void UFSDLabelWidget::SetWrappingPolicy(ETextWrappingPolicy* Policy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLabelWidget.SetWrappingPolicy");

	UFSDLabelWidget_SetWrappingPolicy_Params params;
	params.Policy = Policy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDLabelWidget.SetMargin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin*                NewMargin                      (Parm, ZeroConstructor, IsPlainOldData)

void UFSDLabelWidget::SetMargin(struct FMargin* NewMargin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLabelWidget.SetMargin");

	UFSDLabelWidget_SetMargin_Params params;
	params.NewMargin = NewMargin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDLabelWidget.SetLineHeightPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDLabelWidget::SetLineHeightPercentage(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLabelWidget.SetLineHeightPercentage");

	UFSDLabelWidget_SetLineHeightPercentage_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDLabelWidget.SetFontSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Size                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDLabelWidget::SetFontSize(int* Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLabelWidget.SetFontSize");

	UFSDLabelWidget_SetFontSize_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDLabelWidget.GetFontSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDLabelWidget::GetFontSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDLabelWidget.GetFontSize");

	UFSDLabelWidget_GetFontSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.FSDWidgetBlueprintLibrary.WidgetDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::WidgetDelegate__DelegateSignature(class UUserWidget** Widget)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDWidgetBlueprintLibrary.WidgetDelegate__DelegateSignature");

	UFSDWidgetBlueprintLibrary_WidgetDelegate__DelegateSignature_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.FSDWidgetBlueprintLibrary.WidgetCreatedOrReusedDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool*                          WasCreated                     (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           ActiveIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::WidgetCreatedOrReusedDelegate__DelegateSignature(bool* WasCreated, class UUserWidget** Widget, int* ActiveIndex)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.FSDWidgetBlueprintLibrary.WidgetCreatedOrReusedDelegate__DelegateSignature");

	UFSDWidgetBlueprintLibrary_WidgetCreatedOrReusedDelegate__DelegateSignature_Params params;
	params.WasCreated = WasCreated;
	params.Widget = Widget;
	params.ActiveIndex = ActiveIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetBlueprintLibrary.TextSmallerThan
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText*                  Text1                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Text2                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_TextSmallerThan(struct FText* Text1, struct FText* Text2)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.TextSmallerThan");

	UFSDWidgetBlueprintLibrary_TextSmallerThan_Params params;
	params.Text1 = Text1;
	params.Text2 = Text2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.TextGreaterThan
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText*                  Text1                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Text2                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_TextGreaterThan(struct FText* Text1, struct FText* Text2)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.TextGreaterThan");

	UFSDWidgetBlueprintLibrary_TextGreaterThan_Params params;
	params.Text1 = Text1;
	params.Text2 = Text2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.SimpleBox
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm)
// struct FVector2D*              Position                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           Tint                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::STATIC_SimpleBox(struct FVector2D* Position, struct FVector2D* Size, struct FLinearColor* Tint, struct FPaintContext* Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.SimpleBox");

	UFSDWidgetBlueprintLibrary_SimpleBox_Params params;
	params.Position = Position;
	params.Size = Size;
	params.Tint = Tint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;
}


// Function FSD.FSDWidgetBlueprintLibrary.SetMousePosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           X                              (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Y                              (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::STATIC_SetMousePosition(class UObject** WorldContextObject, int* X, int* Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.SetMousePosition");

	UFSDWidgetBlueprintLibrary_SetMousePosition_Params params;
	params.WorldContextObject = WorldContextObject;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetBlueprintLibrary.SetChildrenVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget**           Panel                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// ESlateVisibility*              Visibility                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           StartIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 OptionalClassFilter            (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::STATIC_SetChildrenVisibility(class UPanelWidget** Panel, ESlateVisibility* Visibility, int* StartIndex, class UClass** OptionalClassFilter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.SetChildrenVisibility");

	UFSDWidgetBlueprintLibrary_SetChildrenVisibility_Params params;
	params.Panel = Panel;
	params.Visibility = Visibility;
	params.StartIndex = StartIndex;
	params.OptionalClassFilter = OptionalClassFilter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetBlueprintLibrary.PrintStrings
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FString>*        InStrings                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          bPrintToScreen                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bPrintToLog                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TextColor                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::STATIC_PrintStrings(class UObject** WorldContextObject, TArray<struct FString>* InStrings, bool* bPrintToScreen, bool* bPrintToLog, struct FLinearColor* TextColor, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.PrintStrings");

	UFSDWidgetBlueprintLibrary_PrintStrings_Params params;
	params.WorldContextObject = WorldContextObject;
	params.InStrings = InStrings;
	params.bPrintToScreen = bPrintToScreen;
	params.bPrintToLog = bPrintToLog;
	params.TextColor = TextColor;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetBlueprintLibrary.MidIgnoringWhiteSpace
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString*                Source                         (Parm, ZeroConstructor)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDWidgetBlueprintLibrary::STATIC_MidIgnoringWhiteSpace(struct FString* Source, int* Index, int* count)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.MidIgnoringWhiteSpace");

	UFSDWidgetBlueprintLibrary_MidIgnoringWhiteSpace_Params params;
	params.Source = Source;
	params.Index = Index;
	params.count = count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.Line
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           Context                        (Parm, OutParm)
// struct FVector2D*              Pos1                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              Pos2                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           Tint                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::STATIC_Line(struct FVector2D* Pos1, struct FVector2D* Pos2, struct FLinearColor* Tint, struct FPaintContext* Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.Line");

	UFSDWidgetBlueprintLibrary_Line_Params params;
	params.Pos1 = Pos1;
	params.Pos2 = Pos2;
	params.Tint = Tint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;
}


// Function FSD.FSDWidgetBlueprintLibrary.LengthIgnoringWhitespace
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString*                Source                         (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFSDWidgetBlueprintLibrary::STATIC_LengthIgnoringWhitespace(struct FString* Source)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.LengthIgnoringWhitespace");

	UFSDWidgetBlueprintLibrary_LengthIgnoringWhitespace_Params params;
	params.Source = Source;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.IsWindowsPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_IsWindowsPlatform(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.IsWindowsPlatform");

	UFSDWidgetBlueprintLibrary_IsWindowsPlatform_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.IsWhiteSpaceAt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString*                Source                         (Parm, ZeroConstructor)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_IsWhiteSpaceAt(struct FString* Source, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.IsWhiteSpaceAt");

	UFSDWidgetBlueprintLibrary_IsWhiteSpaceAt_Params params;
	params.Source = Source;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.IsWhiteSpace
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString*                Source                         (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_IsWhiteSpace(struct FString* Source)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.IsWhiteSpace");

	UFSDWidgetBlueprintLibrary_IsWhiteSpace_Params params;
	params.Source = Source;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.IsHUDVisible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_IsHUDVisible(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.IsHUDVisible");

	UFSDWidgetBlueprintLibrary_IsHUDVisible_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.IntToRomanNumeral
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Value                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDWidgetBlueprintLibrary::STATIC_IntToRomanNumeral(int* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.IntToRomanNumeral");

	UFSDWidgetBlueprintLibrary_IntToRomanNumeral_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.HasAnyVisibleChildren
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPanelWidget**           Panel                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           StartIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 OptionalClassFilter            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFSDWidgetBlueprintLibrary::STATIC_HasAnyVisibleChildren(class UPanelWidget** Panel, int* StartIndex, class UClass** OptionalClassFilter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.HasAnyVisibleChildren");

	UFSDWidgetBlueprintLibrary_HasAnyVisibleChildren_Params params;
	params.Panel = Panel;
	params.StartIndex = StartIndex;
	params.OptionalClassFilter = OptionalClassFilter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.GetShortTimeString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           TotalSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          BlinkDelimiter                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFSDWidgetBlueprintLibrary::STATIC_GetShortTimeString(int* TotalSeconds, bool* BlinkDelimiter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.GetShortTimeString");

	UFSDWidgetBlueprintLibrary_GetShortTimeString_Params params;
	params.TotalSeconds = TotalSeconds;
	params.BlinkDelimiter = BlinkDelimiter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.GetOwningFSDPlayerState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget**                Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AFSDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerState* UFSDWidgetBlueprintLibrary::STATIC_GetOwningFSDPlayerState(class UWidget** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.GetOwningFSDPlayerState");

	UFSDWidgetBlueprintLibrary_GetOwningFSDPlayerState_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.GetKeyName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey*                   Key                            (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFSDWidgetBlueprintLibrary::STATIC_GetKeyName(struct FKey* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.GetKeyName");

	UFSDWidgetBlueprintLibrary_GetKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.GetFocusedWidget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFSDWidgetBlueprintLibrary::STATIC_GetFocusedWidget(class UObject** WorldContextObject, class APlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.GetFocusedWidget");

	UFSDWidgetBlueprintLibrary_GetFocusedWidget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.GetDrawSize
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           InContext                      (Parm, OutParm, ReferenceParm)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFSDWidgetBlueprintLibrary::STATIC_GetDrawSize(struct FPaintContext* InContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.GetDrawSize");

	UFSDWidgetBlueprintLibrary_GetDrawSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InContext != nullptr)
		*InContext = params.InContext;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.GetCheatManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDCheatManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDCheatManager* UFSDWidgetBlueprintLibrary::STATIC_GetCheatManager(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.GetCheatManager");

	UFSDWidgetBlueprintLibrary_GetCheatManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.FindChildWidget
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPanelWidget*            ParentWidget                   (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData)
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          SearchChildren                 (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFSDWidgetBlueprintLibrary::STATIC_FindChildWidget(class UClass** WidgetClass, bool* SearchChildren, class UPanelWidget** ParentWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.FindChildWidget");

	UFSDWidgetBlueprintLibrary_FindChildWidget_Params params;
	params.WidgetClass = WidgetClass;
	params.SearchChildren = SearchChildren;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ParentWidget != nullptr)
		*ParentWidget = params.ParentWidget;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateVerticalBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UVerticalBox*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVerticalBox* UFSDWidgetBlueprintLibrary::STATIC_CreateVerticalBox(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateVerticalBox");

	UFSDWidgetBlueprintLibrary_CreateVerticalBox_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateTextBlock
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Text                           (Parm)
// struct FSlateFontInfo*         Font                           (Parm)
// TEnumAsByte<ETextJustify>*     Justification                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           Color                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          WrapText                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTextBlock*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTextBlock* UFSDWidgetBlueprintLibrary::STATIC_CreateTextBlock(class UObject** WorldContext, struct FText* Text, struct FSlateFontInfo* Font, TEnumAsByte<ETextJustify>* Justification, struct FLinearColor* Color, bool* WrapText)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateTextBlock");

	UFSDWidgetBlueprintLibrary_CreateTextBlock_Params params;
	params.WorldContext = WorldContext;
	params.Text = Text;
	params.Font = Font;
	params.Justification = Justification;
	params.Color = Color;
	params.WrapText = WrapText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateSpacer
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              Size                           (Parm, ZeroConstructor, IsPlainOldData)
// class USpacer*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpacer* UFSDWidgetBlueprintLibrary::STATIC_CreateSpacer(class UObject** WorldContext, struct FVector2D* Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateSpacer");

	UFSDWidgetBlueprintLibrary_CreateSpacer_Params params;
	params.WorldContext = WorldContext;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateOrReuseChildrenWithCallbackEx
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UPanelWidget**           Panel                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        OnCreatedOrReused              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FScriptDelegate*        OnCollapsed                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UUserWidget*>     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UUserWidget*> UFSDWidgetBlueprintLibrary::STATIC_CreateOrReuseChildrenWithCallbackEx(class UPanelWidget** Panel, int* count, class UClass** WidgetClass, struct FScriptDelegate* OnCreatedOrReused, struct FScriptDelegate* OnCollapsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateOrReuseChildrenWithCallbackEx");

	UFSDWidgetBlueprintLibrary_CreateOrReuseChildrenWithCallbackEx_Params params;
	params.Panel = Panel;
	params.count = count;
	params.WidgetClass = WidgetClass;
	params.OnCreatedOrReused = OnCreatedOrReused;
	params.OnCollapsed = OnCollapsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateOrReuseChildrenWithCallback
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UPanelWidget**           Panel                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        OnCreatedOrReused              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UUserWidget*>     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UUserWidget*> UFSDWidgetBlueprintLibrary::STATIC_CreateOrReuseChildrenWithCallback(class UPanelWidget** Panel, int* count, class UClass** WidgetClass, struct FScriptDelegate* OnCreatedOrReused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateOrReuseChildrenWithCallback");

	UFSDWidgetBlueprintLibrary_CreateOrReuseChildrenWithCallback_Params params;
	params.Panel = Panel;
	params.count = count;
	params.WidgetClass = WidgetClass;
	params.OnCreatedOrReused = OnCreatedOrReused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateOrReuseChildren
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget**           Panel                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UUserWidget*>     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UUserWidget*> UFSDWidgetBlueprintLibrary::STATIC_CreateOrReuseChildren(class UPanelWidget** Panel, int* count, class UClass** WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateOrReuseChildren");

	UFSDWidgetBlueprintLibrary_CreateOrReuseChildren_Params params;
	params.Panel = Panel;
	params.count = count;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateImageSized
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           Tint                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              Size                           (Parm, ZeroConstructor, IsPlainOldData)
// class UImage*                  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UImage* UFSDWidgetBlueprintLibrary::STATIC_CreateImageSized(class UObject** WorldContext, class UTexture2D** Texture, struct FLinearColor* Tint, struct FVector2D* Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateImageSized");

	UFSDWidgetBlueprintLibrary_CreateImageSized_Params params;
	params.WorldContext = WorldContext;
	params.Texture = Texture;
	params.Tint = Tint;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateImage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           Tint                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          AutoSize                       (Parm, ZeroConstructor, IsPlainOldData)
// class UImage*                  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UImage* UFSDWidgetBlueprintLibrary::STATIC_CreateImage(class UObject** WorldContext, class UTexture2D** Texture, struct FLinearColor* Tint, bool* AutoSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateImage");

	UFSDWidgetBlueprintLibrary_CreateImage_Params params;
	params.WorldContext = WorldContext;
	params.Texture = Texture;
	params.Tint = Tint;
	params.AutoSize = AutoSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.CreateHorizontalBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UHorizontalBox*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHorizontalBox* UFSDWidgetBlueprintLibrary::STATIC_CreateHorizontalBox(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.CreateHorizontalBox");

	UFSDWidgetBlueprintLibrary_CreateHorizontalBox_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.Box
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm)
// struct FVector2D*              Position                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush*            Brush                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLinearColor*           Tint                           (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetBlueprintLibrary::STATIC_Box(struct FVector2D* Position, struct FVector2D* Size, struct FSlateBrush* Brush, struct FLinearColor* Tint, struct FPaintContext* Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.Box");

	UFSDWidgetBlueprintLibrary_Box_Params params;
	params.Position = Position;
	params.Size = Size;
	params.Brush = Brush;
	params.Tint = Tint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;
}


// Function FSD.FSDWidgetBlueprintLibrary.AddChildToVerticalBoxEx
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UVerticalBox**           VerticalBox                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget**                Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<EHorizontalAlignment>* HorizontalAlignment            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EVerticalAlignment>* VerticalAlignment              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMargin*                Padding                        (Parm, ZeroConstructor, IsPlainOldData)
// class UVerticalBoxSlot*        OutSlot                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UVerticalBox*            OutVerticalBox                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFSDWidgetBlueprintLibrary::STATIC_AddChildToVerticalBoxEx(class UVerticalBox** VerticalBox, class UWidget** Widget, TEnumAsByte<EHorizontalAlignment>* HorizontalAlignment, TEnumAsByte<EVerticalAlignment>* VerticalAlignment, float* Size, struct FMargin* Padding, class UVerticalBoxSlot** OutSlot, class UVerticalBox** OutVerticalBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.AddChildToVerticalBoxEx");

	UFSDWidgetBlueprintLibrary_AddChildToVerticalBoxEx_Params params;
	params.VerticalBox = VerticalBox;
	params.Widget = Widget;
	params.HorizontalAlignment = HorizontalAlignment;
	params.VerticalAlignment = VerticalAlignment;
	params.Size = Size;
	params.Padding = Padding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSlot != nullptr)
		*OutSlot = params.OutSlot;
	if (OutVerticalBox != nullptr)
		*OutVerticalBox = params.OutVerticalBox;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetBlueprintLibrary.AddChildToHorizontalBoxEx
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UHorizontalBox**         HorizontalBox                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget**                Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<EHorizontalAlignment>* HorizontalAlignment            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EVerticalAlignment>* VerticalAlignment              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMargin*                Padding                        (Parm, ZeroConstructor, IsPlainOldData)
// class UHorizontalBoxSlot*      OutSlot                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UHorizontalBox*          OutHorizontalBox               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFSDWidgetBlueprintLibrary::STATIC_AddChildToHorizontalBoxEx(class UHorizontalBox** HorizontalBox, class UWidget** Widget, TEnumAsByte<EHorizontalAlignment>* HorizontalAlignment, TEnumAsByte<EVerticalAlignment>* VerticalAlignment, float* Size, struct FMargin* Padding, class UHorizontalBoxSlot** OutSlot, class UHorizontalBox** OutHorizontalBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetBlueprintLibrary.AddChildToHorizontalBoxEx");

	UFSDWidgetBlueprintLibrary_AddChildToHorizontalBoxEx_Params params;
	params.HorizontalBox = HorizontalBox;
	params.Widget = Widget;
	params.HorizontalAlignment = HorizontalAlignment;
	params.VerticalAlignment = VerticalAlignment;
	params.Size = Size;
	params.Padding = Padding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSlot != nullptr)
		*OutSlot = params.OutSlot;
	if (OutHorizontalBox != nullptr)
		*OutHorizontalBox = params.OutHorizontalBox;

	return params.ReturnValue;
}


// Function FSD.FSDWidgetEffectsComponent.StartTextCounter
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTextBlock*              Widget                         (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData)
// float*                         Start                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         End                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           MaxDigits                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_StartTextCounter(class UObject** WorldContext, float* Start, float* End, float* Duration, int* MaxDigits, float* StartDelay, class UTextBlock** Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.StartTextCounter");

	UFSDWidgetEffectsComponent_StartTextCounter_Params params;
	params.WorldContext = WorldContext;
	params.Start = Start;
	params.End = End;
	params.Duration = Duration;
	params.MaxDigits = MaxDigits;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Widget != nullptr)
		*Widget = params.Widget;
}


// Function FSD.FSDWidgetEffectsComponent.StartCounter
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Start                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         End                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        OnCount                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_StartCounter(class UObject** WorldContext, class UObject** Owner, float* Start, float* End, float* Duration, struct FScriptDelegate* OnCount, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.StartCounter");

	UFSDWidgetEffectsComponent_StartCounter_Params params;
	params.WorldContext = WorldContext;
	params.Owner = Owner;
	params.Start = Start;
	params.End = End;
	params.Duration = Duration;
	params.OnCount = OnCount;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.PingWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget**                Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// EPingType*                     PingType                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_PingWidget(class UObject** WorldContext, class UWidget** Widget, float* amount, float* Duration, EPingType* PingType, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.PingWidget");

	UFSDWidgetEffectsComponent_PingWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.amount = amount;
	params.Duration = Duration;
	params.PingType = PingType;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.MoveWidget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D*              Start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              End                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// EMoveType*                     MoveType                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_MoveWidget(class UObject** WorldContext, class UUserWidget** Widget, struct FVector2D* Start, struct FVector2D* End, float* Duration, EMoveType* MoveType, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.MoveWidget");

	UFSDWidgetEffectsComponent_MoveWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.Start = Start;
	params.End = End;
	params.Duration = Duration;
	params.MoveType = MoveType;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.MoveOutWidget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D*              MoveToOffset                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_MoveOutWidget(class UObject** WorldContext, class UUserWidget** Widget, struct FVector2D* MoveToOffset, float* Duration, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.MoveOutWidget");

	UFSDWidgetEffectsComponent_MoveOutWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.MoveToOffset = MoveToOffset;
	params.Duration = Duration;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.MoveInWidget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D*              MoveFromOffset                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_MoveInWidget(class UObject** WorldContext, class UUserWidget** Widget, struct FVector2D* MoveFromOffset, float* Duration, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.MoveInWidget");

	UFSDWidgetEffectsComponent_MoveInWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.MoveFromOffset = MoveFromOffset;
	params.Duration = Duration;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.FadeWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         StartFade                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         EndFade                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_FadeWidget(class UObject** WorldContext, class UUserWidget** Widget, float* StartFade, float* EndFade, float* Duration, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.FadeWidget");

	UFSDWidgetEffectsComponent_FadeWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.StartFade = StartFade;
	params.EndFade = EndFade;
	params.Duration = Duration;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.FadeOutWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_FadeOutWidget(class UObject** WorldContext, class UUserWidget** Widget, float* Duration, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.FadeOutWidget");

	UFSDWidgetEffectsComponent_FadeOutWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.Duration = Duration;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDWidgetEffectsComponent.FadeInWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void UFSDWidgetEffectsComponent::STATIC_FadeInWidget(class UObject** WorldContext, class UUserWidget** Widget, float* Duration, float* StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDWidgetEffectsComponent.FadeInWidget");

	UFSDWidgetEffectsComponent_FadeInWidget_Params params;
	params.WorldContext = WorldContext;
	params.Widget = Widget;
	params.Duration = Duration;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UpgradeSettings.AddUpgradesFromItems
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>*         Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUpgradeSettings::STATIC_AddUpgradesFromItems(TArray<class UClass*>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradeSettings.AddUpgradesFromItems");

	UUpgradeSettings_AddUpgradesFromItems_Params params;
	params.Items = Items;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CommunityGoalSettings.GetGoal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommunityGoalIndex*           Goal                           (Parm, ZeroConstructor, IsPlainOldData)
// class UCommunityGoal*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCommunityGoal* UCommunityGoalSettings::GetGoal(ECommunityGoalIndex* Goal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalSettings.GetGoal");

	UCommunityGoalSettings_GetGoal_Params params;
	params.Goal = Goal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CommunityGoalSettings.FindGoal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString*                Goal                           (Parm, ZeroConstructor)
// class UCommunityGoal*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCommunityGoal* UCommunityGoalSettings::FindGoal(struct FString* Goal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CommunityGoalSettings.FindGoal");

	UCommunityGoalSettings_FindGoal_Params params;
	params.Goal = Goal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.UnloadPreloadedAssets
// (Final, Native, Public, BlueprintCallable)

void UGameData::UnloadPreloadedAssets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.UnloadPreloadedAssets");

	UGameData_UnloadPreloadedAssets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameData.IsPerkTierUnLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameData::IsPerkTierUnLocked(class UObject** WorldContext, int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.IsPerkTierUnLocked");

	UGameData_IsPerkTierUnLocked_Params params;
	params.WorldContext = WorldContext;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.IsCheatConsolesEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameData::IsCheatConsolesEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.IsCheatConsolesEnabled");

	UGameData_IsCheatConsolesEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetRequiredPerkClaimsForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameData::GetRequiredPerkClaimsForTier(int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetRequiredPerkClaimsForTier");

	UGameData_GetRequiredPerkClaimsForTier_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetRankedHeroClasses
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UClass*> UGameData::GetRankedHeroClasses()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetRankedHeroClasses");

	UGameData_GetRankedHeroClasses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetPlayerRankName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UGameData::GetPlayerRankName(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetPlayerRankName");

	UGameData_GetPlayerRankName_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetPlayerClassFromID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerCharacterID**     ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UGameData::GetPlayerClassFromID(class UPlayerCharacterID** ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetPlayerClassFromID");

	UGameData_GetPlayerClassFromID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetPlayerCharacterID
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid*                  ID                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPlayerCharacterID*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlayerCharacterID* UGameData::GetPlayerCharacterID(struct FGuid* ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetPlayerCharacterID");

	UGameData_GetPlayerCharacterID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetPerkTierState
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           TierUnLocked                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            NextRequiredCount              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            NextProgressCount              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UGameData::GetPerkTierState(class UObject** WorldContext, int* Tier, bool* TierUnLocked, int* NextRequiredCount, int* NextProgressCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetPerkTierState");

	UGameData_GetPerkTierState_Params params;
	params.WorldContext = WorldContext;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TierUnLocked != nullptr)
		*TierUnLocked = params.TierUnLocked;
	if (NextRequiredCount != nullptr)
		*NextRequiredCount = params.NextRequiredCount;
	if (NextProgressCount != nullptr)
		*NextProgressCount = params.NextProgressCount;
}


// Function FSD.GameData.GetOwnedPerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UPerkAsset*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UPerkAsset*> UGameData::GetOwnedPerks(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetOwnedPerks");

	UGameData_GetOwnedPerks_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetInventoryList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// class UInventoryList*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UInventoryList* UGameData::GetInventoryList(class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetInventoryList");

	UGameData_GetInventoryList_Params params;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetHighestPerkTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameData::GetHighestPerkTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetHighestPerkTier");

	UGameData_GetHighestPerkTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetDifficultySetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UDifficultySetting*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDifficultySetting* UGameData::GetDifficultySetting(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetDifficultySetting");

	UGameData_GetDifficultySetting_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetDifficultyIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDifficultySetting**     Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameData::GetDifficultyIndex(class UDifficultySetting** Difficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetDifficultyIndex");

	UGameData_GetDifficultyIndex_Params params;
	params.Difficulty = Difficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetDefaultCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UGameData::GetDefaultCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetDefaultCharacter");

	UGameData_GetDefaultCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetCharacterRetirementCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     ID                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FRetirementCostItem     ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FRetirementCostItem UGameData::GetCharacterRetirementCost(class UObject** WorldContext, class UPlayerCharacterID** ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetCharacterRetirementCost");

	UGameData_GetCharacterRetirementCost_Params params;
	params.WorldContext = WorldContext;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetCharacterNonEquippedPerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UPerkAsset*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UPerkAsset*> UGameData::GetCharacterNonEquippedPerks(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetCharacterNonEquippedPerks");

	UGameData_GetCharacterNonEquippedPerks_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetCharacterEquippedPerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UPerkAsset*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UPerkAsset*> UGameData::GetCharacterEquippedPerks(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetCharacterEquippedPerks");

	UGameData_GetCharacterEquippedPerks_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetBarDrinkables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IncludeDailySpecial            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          includeNotUnlocked             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          includePlayerRankTooLow        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UDrinkableDataAsset*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UDrinkableDataAsset*> UGameData::GetBarDrinkables(class UObject** WorldContext, bool* IncludeDailySpecial, bool* includeNotUnlocked, bool* includePlayerRankTooLow)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetBarDrinkables");

	UGameData_GetBarDrinkables_Params params;
	params.WorldContext = WorldContext;
	params.IncludeDailySpecial = IncludeDailySpecial;
	params.includeNotUnlocked = includeNotUnlocked;
	params.includePlayerRankTooLow = includePlayerRankTooLow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetBarDailySpecial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDrinkableDataAsset*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDrinkableDataAsset* UGameData::GetBarDailySpecial(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetBarDailySpecial");

	UGameData_GetBarDailySpecial_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetAvailablePerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UPerkAsset*>      ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UPerkAsset*> UGameData::GetAvailablePerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetAvailablePerks");

	UGameData_GetAvailablePerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetAmountOfPurchasedPerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameData::GetAmountOfPurchasedPerks(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetAmountOfPurchasedPerks");

	UGameData_GetAmountOfPurchasedPerks_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetAllVisibilityGroups
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UHUDVisibilityGroup*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UHUDVisibilityGroup*> UGameData::GetAllVisibilityGroups()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetAllVisibilityGroups");

	UGameData_GetAllVisibilityGroups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetAllMissionStats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UMissionStat*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMissionStat*> UGameData::GetAllMissionStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetAllMissionStats");

	UGameData_GetAllMissionStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.GetAllInfirmaryStats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UMissionStat*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMissionStat*> UGameData::GetAllInfirmaryStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.GetAllInfirmaryStats");

	UGameData_GetAllInfirmaryStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameData.CalculateClaimablePerkPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameData::CalculateClaimablePerkPoints(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameData.CalculateClaimablePerkPoints");

	UGameData_CalculateClaimablePerkPoints_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventRewardFrame.SetKeyInserted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          keyInserted                    (Parm, ZeroConstructor, IsPlainOldData)

void AEventRewardFrame::SetKeyInserted(bool* keyInserted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardFrame.SetKeyInserted");

	AEventRewardFrame_SetKeyInserted_Params params;
	params.keyInserted = keyInserted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardFrame.SetDispenseRewards
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          dispensRewards                 (Parm, ZeroConstructor, IsPlainOldData)

void AEventRewardFrame::SetDispenseRewards(bool* dispensRewards)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardFrame.SetDispenseRewards");

	AEventRewardFrame_SetDispenseRewards_Params params;
	params.dispensRewards = dispensRewards;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardFrame.RegisterDispenser
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AEventRewardDispenser**  Dispenser                      (Parm, ZeroConstructor, IsPlainOldData)

void AEventRewardFrame::RegisterDispenser(class AEventRewardDispenser** Dispenser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardFrame.RegisterDispenser");

	AEventRewardFrame_RegisterDispenser_Params params;
	params.Dispenser = Dispenser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardFrame.GetDispensRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEventRewardFrame::GetDispensRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardFrame.GetDispensRewards");

	AEventRewardFrame_GetDispensRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventRewardDispenser.SetSelectedReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USchematic**             InReward                       (Parm, ZeroConstructor, IsPlainOldData)

void AEventRewardDispenser::SetSelectedReward(class USchematic** InReward)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.SetSelectedReward");

	AEventRewardDispenser_SetSelectedReward_Params params;
	params.InReward = InReward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.PowerUp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       InPlayerCharacter              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEventRewardDispenser::PowerUp(class APlayerCharacter** InPlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.PowerUp");

	AEventRewardDispenser_PowerUp_Params params;
	params.InPlayerCharacter = InPlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventRewardDispenser.OnRewardSelected
// (Event, Protected, BlueprintEvent)

void AEventRewardDispenser::OnRewardSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnRewardSelected");

	AEventRewardDispenser_OnRewardSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnRep_SelectedReward
// (Final, Native, Protected)

void AEventRewardDispenser::OnRep_SelectedReward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnRep_SelectedReward");

	AEventRewardDispenser_OnRep_SelectedReward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnRep_PoweredUp
// (Final, Native, Protected)

void AEventRewardDispenser::OnRep_PoweredUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnRep_PoweredUp");

	AEventRewardDispenser_OnRep_PoweredUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnRep_PlayerId
// (Final, Native, Protected)

void AEventRewardDispenser::OnRep_PlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnRep_PlayerId");

	AEventRewardDispenser_OnRep_PlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnRep_IsActivated
// (Final, Native, Protected)

void AEventRewardDispenser::OnRep_IsActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnRep_IsActivated");

	AEventRewardDispenser_OnRep_IsActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnPoweredUp
// (Event, Protected, BlueprintEvent)

void AEventRewardDispenser::OnPoweredUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnPoweredUp");

	AEventRewardDispenser_OnPoweredUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnOwnerAssigned
// (Event, Protected, BlueprintEvent)

void AEventRewardDispenser::OnOwnerAssigned()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnOwnerAssigned");

	AEventRewardDispenser_OnOwnerAssigned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.OnOpenDispenser
// (Event, Protected, BlueprintEvent)

void AEventRewardDispenser::OnOpenDispenser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.OnOpenDispenser");

	AEventRewardDispenser_OnOpenDispenser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewardDispenser.IsOwningPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter**       PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEventRewardDispenser::IsOwningPlayer(class APlayerCharacter** PlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.IsOwningPlayer");

	AEventRewardDispenser_IsOwningPlayer_Params params;
	params.PlayerCharacter = PlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventRewardDispenser.GetPlayerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* AEventRewardDispenser::GetPlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.GetPlayerCharacter");

	AEventRewardDispenser_GetPlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventRewardDispenser.GetPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerState* AEventRewardDispenser::GetPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewardDispenser.GetPlayer");

	AEventRewardDispenser_GetPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventStarterButton.SetIsEventActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsEventActive                  (Parm, ZeroConstructor, IsPlainOldData)

void AEventStarterButton::SetIsEventActive(bool* IsEventActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.SetIsEventActive");

	AEventStarterButton_SetIsEventActive_Params params;
	params.IsEventActive = IsEventActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.OnUseProgress
// (Final, Native, Public)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void AEventStarterButton::OnUseProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.OnUseProgress");

	AEventStarterButton_OnUseProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.OnRep_OpenForUse
// (Final, Native, Protected)

void AEventStarterButton::OnRep_OpenForUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.OnRep_OpenForUse");

	AEventStarterButton_OnRep_OpenForUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.OnRep_Booted
// (Final, Native, Protected)

void AEventStarterButton::OnRep_Booted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.OnRep_Booted");

	AEventStarterButton_OnRep_Booted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.OnOpenedForUse
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          wasOpened                      (Parm, ZeroConstructor, IsPlainOldData)

void AEventStarterButton::OnOpenedForUse(bool* wasOpened)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.OnOpenedForUse");

	AEventStarterButton_OnOpenedForUse_Params params;
	params.wasOpened = wasOpened;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.OnBooted
// (Event, Protected, BlueprintEvent)

void AEventStarterButton::OnBooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.OnBooted");

	AEventStarterButton_OnBooted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.CloseForUse
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void AEventStarterButton::CloseForUse(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.CloseForUse");

	AEventStarterButton_CloseForUse_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventStarterButton.BootUpEvent
// (Final, Native, Public, BlueprintCallable)

void AEventStarterButton::BootUpEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventStarterButton.BootUpEvent");

	AEventStarterButton_BootUpEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CoreInfuserAnimInstance.OnRewardSelected
// (Event, Protected, BlueprintEvent)

void UCoreInfuserAnimInstance::OnRewardSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CoreInfuserAnimInstance.OnRewardSelected");

	UCoreInfuserAnimInstance_OnRewardSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventParticipant.SetupEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGameEvent**             GameEvent                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEventParticipant::SetupEvent(class AGameEvent** GameEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.SetupEvent");

	UEventParticipant_SetupEvent_Params params;
	params.GameEvent = GameEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventParticipant.OnEventTriggered
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UEventParticipant::OnEventTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.OnEventTriggered");

	UEventParticipant_OnEventTriggered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventParticipant.OnEventProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UEventParticipant::OnEventProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.OnEventProgress");

	UEventParticipant_OnEventProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventParticipant.OnEventOpened
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UEventParticipant::OnEventOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.OnEventOpened");

	UEventParticipant_OnEventOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventParticipant.OnEventFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          eventSuccess                   (Parm, ZeroConstructor, IsPlainOldData)

void UEventParticipant::OnEventFinished(bool* eventSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.OnEventFinished");

	UEventParticipant_OnEventFinished_Params params;
	params.eventSuccess = eventSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventParticipant.AdvanceOneObjective
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEventParticipant::AdvanceOneObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.AdvanceOneObjective");

	UEventParticipant_AdvanceOneObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.EventParticipant.AddEventProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEventParticipant::AddEventProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventParticipant.AddEventProgress");

	UEventParticipant_AddEventProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.SpawnOrUpdateAudio2D
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UAudioComponent*         AudioComponent                 (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData)
// class USoundBase**             Sound                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         VolumeMultiplier               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         PitchMultiplier                (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  FloatParamName                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         FloatParam                     (Parm, ZeroConstructor, IsPlainOldData)

void UGameFunctionLibrary::STATIC_SpawnOrUpdateAudio2D(class UObject** WorldContext, class USoundBase** Sound, float* VolumeMultiplier, float* PitchMultiplier, struct FName* FloatParamName, float* FloatParam, class UAudioComponent** AudioComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.SpawnOrUpdateAudio2D");

	UGameFunctionLibrary_SpawnOrUpdateAudio2D_Params params;
	params.WorldContext = WorldContext;
	params.Sound = Sound;
	params.VolumeMultiplier = VolumeMultiplier;
	params.PitchMultiplier = PitchMultiplier;
	params.FloatParamName = FloatParamName;
	params.FloatParam = FloatParam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AudioComponent != nullptr)
		*AudioComponent = params.AudioComponent;
}


// Function FSD.GameFunctionLibrary.SetUsePushToTalk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UGameFunctionLibrary::STATIC_SetUsePushToTalk(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.SetUsePushToTalk");

	UGameFunctionLibrary_SetUsePushToTalk_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameFunctionLibrary.SetGlobalGravityZ
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         GravityZ                       (Parm, ZeroConstructor, IsPlainOldData)

void UGameFunctionLibrary::STATIC_SetGlobalGravityZ(class UObject** WorldContextObject, float* GravityZ)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.SetGlobalGravityZ");

	UGameFunctionLibrary_SetGlobalGravityZ_Params params;
	params.WorldContextObject = WorldContextObject;
	params.GravityZ = GravityZ;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameFunctionLibrary.SetGlobalGravityScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         GravityScale                   (Parm, ZeroConstructor, IsPlainOldData)

void UGameFunctionLibrary::STATIC_SetGlobalGravityScale(class UObject** WorldContextObject, float* GravityScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.SetGlobalGravityScale");

	UGameFunctionLibrary_SetGlobalGravityScale_Params params;
	params.WorldContextObject = WorldContextObject;
	params.GravityScale = GravityScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GameFunctionLibrary.IsWorldTickEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameFunctionLibrary::STATIC_IsWorldTickEnabled(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.IsWorldTickEnabled");

	UGameFunctionLibrary_IsWorldTickEnabled_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.IsPlayingOffline
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameFunctionLibrary::STATIC_IsPlayingOffline(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.IsPlayingOffline");

	UGameFunctionLibrary_IsPlayingOffline_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.IsPlayInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameFunctionLibrary::STATIC_IsPlayInEditor(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.IsPlayInEditor");

	UGameFunctionLibrary_IsPlayInEditor_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetWindowManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UWindowManager*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWindowManager* UGameFunctionLibrary::STATIC_GetWindowManager(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetWindowManager");

	UGameFunctionLibrary_GetWindowManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetUsePushToTalk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameFunctionLibrary::STATIC_GetUsePushToTalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetUsePushToTalk");

	UGameFunctionLibrary_GetUsePushToTalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetProjectVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UGameFunctionLibrary::STATIC_GetProjectVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetProjectVersion");

	UGameFunctionLibrary_GetProjectVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetMixerWrapper
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UMixerWrapper*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMixerWrapper* UGameFunctionLibrary::STATIC_GetMixerWrapper(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetMixerWrapper");

	UGameFunctionLibrary_GetMixerWrapper_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetMajorProjectVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UGameFunctionLibrary::STATIC_GetMajorProjectVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetMajorProjectVersion");

	UGameFunctionLibrary_GetMajorProjectVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetLocalPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UGameFunctionLibrary::STATIC_GetLocalPlayerCharacter(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetLocalPlayerCharacter");

	UGameFunctionLibrary_GetLocalPlayerCharacter_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetGoogleAnalyticsWrapper
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UGoogleAnalyticsWrapper* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGoogleAnalyticsWrapper* UGameFunctionLibrary::STATIC_GetGoogleAnalyticsWrapper(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetGoogleAnalyticsWrapper");

	UGameFunctionLibrary_GetGoogleAnalyticsWrapper_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetGlobalGravityZ
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UGameFunctionLibrary::STATIC_GetGlobalGravityZ(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetGlobalGravityZ");

	UGameFunctionLibrary_GetGlobalGravityZ_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetFSDSRGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDGameModeSpaceRig*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDGameModeSpaceRig* UGameFunctionLibrary::STATIC_GetFSDSRGameMode(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetFSDSRGameMode");

	UGameFunctionLibrary_GetFSDSRGameMode_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetFSDSaveGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDSaveGame*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDSaveGame* UGameFunctionLibrary::STATIC_GetFSDSaveGame(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetFSDSaveGame");

	UGameFunctionLibrary_GetFSDSaveGame_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetFSDGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDGameState*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDGameState* UGameFunctionLibrary::STATIC_GetFSDGameState(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetFSDGameState");

	UGameFunctionLibrary_GetFSDGameState_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetFSDGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDGameMode*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDGameMode* UGameFunctionLibrary::STATIC_GetFSDGameMode(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetFSDGameMode");

	UGameFunctionLibrary_GetFSDGameMode_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetFSDGameInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDGameInstance*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFSDGameInstance* UGameFunctionLibrary::STATIC_GetFSDGameInstance(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetFSDGameInstance");

	UGameFunctionLibrary_GetFSDGameInstance_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetFSDGameData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGameData*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGameData* UGameFunctionLibrary::STATIC_GetFSDGameData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetFSDGameData");

	UGameFunctionLibrary_GetFSDGameData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetDiscordWrapper
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UDiscordWrapper*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDiscordWrapper* UGameFunctionLibrary::STATIC_GetDiscordWrapper(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetDiscordWrapper");

	UGameFunctionLibrary_GetDiscordWrapper_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetDeepDiveManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UDeepDiveManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDeepDiveManager* UGameFunctionLibrary::STATIC_GetDeepDiveManager(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetDeepDiveManager");

	UGameFunctionLibrary_GetDeepDiveManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetCSGWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ADeepCSGWorld*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ADeepCSGWorld* UGameFunctionLibrary::STATIC_GetCSGWorld(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetCSGWorld");

	UGameFunctionLibrary_GetCSGWorld_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetCommunityGoalWrapper
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UCommunityGoalWrapper*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCommunityGoalWrapper* UGameFunctionLibrary::STATIC_GetCommunityGoalWrapper(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetCommunityGoalWrapper");

	UGameFunctionLibrary_GetCommunityGoalWrapper_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetChangelist
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGameFunctionLibrary::STATIC_GetChangelist()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetChangelist");

	UGameFunctionLibrary_GetChangelist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GameFunctionLibrary.GetCampaingManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UCampaignManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCampaignManager* UGameFunctionLibrary::STATIC_GetCampaingManager(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GameFunctionLibrary.GetCampaingManager");

	UGameFunctionLibrary_GetCampaingManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FSDGameplayStatics.SpawnScaledEmitterAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FScaledEffect*          ScaledEffect                   (Parm)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UFSDGameplayStatics::STATIC_SpawnScaledEmitterAtLocation(class UObject** WorldContextObject, struct FScaledEffect* ScaledEffect, struct FVector* Location, struct FRotator* Rotation, bool* bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDGameplayStatics.SpawnScaledEmitterAtLocation");

	UFSDGameplayStatics_SpawnScaledEmitterAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ScaledEffect = ScaledEffect;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GatherGemsObjective.OnResourceChanged
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        CappedResource                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UGatherGemsObjective::OnResourceChanged(class UCappedResource** CappedResource, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatherGemsObjective.OnResourceChanged");

	UGatherGemsObjective_OnResourceChanged_Params params;
	params.CappedResource = CappedResource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatherGemsObjective.OnRep_GemsCollected
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UGatherGemsObjective::OnRep_GemsCollected(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatherGemsObjective.OnRep_GemsCollected");

	UGatherGemsObjective_OnRep_GemsCollected_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatheItemsObjective.OnResourceChanged
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        CappedResource                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UGatheItemsObjective::OnResourceChanged(class UCappedResource** CappedResource, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatheItemsObjective.OnResourceChanged");

	UGatheItemsObjective_OnResourceChanged_Params params;
	params.CappedResource = CappedResource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GatheItemsObjective.OnRep_ItemsCollected
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UGatheItemsObjective::OnRep_ItemsCollected(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatheItemsObjective.OnRep_ItemsCollected");

	UGatheItemsObjective_OnRep_ItemsCollected_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CarriableItem.Throw
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                force                          (Parm, ZeroConstructor, IsPlainOldData)

void ACarriableItem::Throw(struct FVector* force)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CarriableItem.Throw");

	ACarriableItem_Throw_Params params;
	params.force = force;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CarriableItem.Receive_OnDeposited
// (Event, Protected, BlueprintEvent)

void ACarriableItem::Receive_OnDeposited()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CarriableItem.Receive_OnDeposited");

	ACarriableItem_Receive_OnDeposited_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourcePouch.ActorWasHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AResourcePouch::ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcePouch.ActorWasHit");

	AResourcePouch_ActorWasHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GemResourceData.GetCollectedGemsCreditValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDGameState**          GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGemResourceData::STATIC_GetCollectedGemsCreditValue(class AFSDGameState** GameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GemResourceData.GetCollectedGemsCreditValue");

	UGemResourceData_GetCollectedGemsCreditValue_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GemResourceData.GetCollectedGemsAmount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDGameState**          GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UGemResourceData::STATIC_GetCollectedGemsAmount(class AFSDGameState** GameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GemResourceData.GetCollectedGemsAmount");

	UGemResourceData_GetCollectedGemsAmount_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.Recieve_SetupPLS
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AProceduralSetup**       pls                            (Parm, ZeroConstructor, IsPlainOldData)

void UGeneratedMission::Recieve_SetupPLS(class AProceduralSetup** pls)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.Recieve_SetupPLS");

	UGeneratedMission_Recieve_SetupPLS_Params params;
	params.pls = pls;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GeneratedMission.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGeneratedMission::IsLocked(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.IsLocked");

	UGeneratedMission_IsLocked_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.GetPLS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UGeneratedMission::GetPLS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.GetPLS");

	UGeneratedMission_GetPLS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.GetMutators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 mutatorClass                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UMutator*>        ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UMutator*> UGeneratedMission::GetMutators(class UClass** mutatorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.GetMutators");

	UGeneratedMission_GetMutators_Params params;
	params.mutatorClass = mutatorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.GetMissionScale
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UGeneratedMission::GetMissionScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.GetMissionScale");

	UGeneratedMission_GetMissionScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.GetMissionDNA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMissionDNA*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMissionDNA* UGeneratedMission::GetMissionDNA()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.GetMissionDNA");

	UGeneratedMission_GetMissionDNA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.CreatePLS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Seed                           (Parm, ZeroConstructor, IsPlainOldData)
// class AProceduralSetup*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AProceduralSetup* UGeneratedMission::CreatePLS(int* Seed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.CreatePLS");

	UGeneratedMission_CreatePLS_Params params;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GeneratedMission.AreMissionsEqual
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeneratedMission**      Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGeneratedMission::AreMissionsEqual(class UGeneratedMission** Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GeneratedMission.AreMissionsEqual");

	UGeneratedMission_AreMissionsEqual_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Gem.SetHasBeenReleased
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          hasBeenReleased                (Parm, ZeroConstructor, IsPlainOldData)

void AGem::SetHasBeenReleased(bool* hasBeenReleased)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Gem.SetHasBeenReleased");

	AGem_SetHasBeenReleased_Params params;
	params.hasBeenReleased = hasBeenReleased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Gem.GetHasBeenReleased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGem::GetHasBeenReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Gem.GetHasBeenReleased");

	AGem_GetHasBeenReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GetFriendsListBlueprintCallProxy.GetFriendsList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ListName                       (Parm, ZeroConstructor)
// class UGetFriendsListBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGetFriendsListBlueprintCallProxy* UGetFriendsListBlueprintCallProxy::STATIC_GetFriendsList(class UObject** WorldContextObject, struct FString* ListName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GetFriendsListBlueprintCallProxy.GetFriendsList");

	UGetFriendsListBlueprintCallProxy_GetFriendsList_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ListName = ListName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GlowPlant.OnDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void AGlowPlant::OnDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GlowPlant.OnDeath");

	AGlowPlant_OnDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GlowPlant.OnDamage
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    hitSphere                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AGlowPlant::OnDamage(class UPrimitiveComponent** hitSphere)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GlowPlant.OnDamage");

	AGlowPlant_OnDamage_Params params;
	params.hitSphere = hitSphere;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.StartMissionPartyInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFSDGameState**          GameState                      (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::StartMissionPartyInfo(class AFSDGameState** GameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.StartMissionPartyInfo");

	UGoogleAnalyticsWrapper_StartMissionPartyInfo_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.SetShouldUpdateSchematicInformation
// (Final, Native, Public, BlueprintCallable)

void UGoogleAnalyticsWrapper::SetShouldUpdateSchematicInformation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.SetShouldUpdateSchematicInformation");

	UGoogleAnalyticsWrapper_SetShouldUpdateSchematicInformation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.ResetBoscoLoadout
// (Final, Native, Public, BlueprintCallable)

void UGoogleAnalyticsWrapper::ResetBoscoLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.ResetBoscoLoadout");

	UGoogleAnalyticsWrapper_ResetBoscoLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordTotalTimeHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Key                            (Parm, ZeroConstructor)
// struct FString*                Campaign                       (Parm, ZeroConstructor)
// bool*                          Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordTotalTimeHit(struct FString* Key, struct FString* Campaign, bool* Rank, int* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordTotalTimeHit");

	UGoogleAnalyticsWrapper_RecordTotalTimeHit_Params params;
	params.Key = Key;
	params.Campaign = Campaign;
	params.Rank = Rank;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordOpenScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Key                            (Parm, ZeroConstructor)
// bool*                          Rank                           (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordOpenScreen(struct FString* Key, bool* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordOpenScreen");

	UGoogleAnalyticsWrapper_RecordOpenScreen_Params params;
	params.Key = Key;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordMachineEventEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                EventName                      (Parm, ZeroConstructor)
// bool*                          WasCompleted                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         completionTime                 (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordMachineEventEnd(struct FString* EventName, bool* WasCompleted, float* completionTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordMachineEventEnd");

	UGoogleAnalyticsWrapper_RecordMachineEventEnd_Params params;
	params.EventName = EventName;
	params.WasCompleted = WasCompleted;
	params.completionTime = completionTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordKickPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                reason                         (Parm, ZeroConstructor)
// class APlayerController**      KickedPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordKickPlayer(struct FString* reason, class APlayerController** KickedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordKickPlayer");

	UGoogleAnalyticsWrapper_RecordKickPlayer_Params params;
	params.reason = reason;
	params.KickedPlayer = KickedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordGAUserTiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                TimingCategory                 (Parm, ZeroConstructor)
// int*                           TimingValue                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                TimingName                     (Parm, ZeroConstructor)

void UGoogleAnalyticsWrapper::RecordGAUserTiming(struct FString* TimingCategory, int* TimingValue, struct FString* TimingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordGAUserTiming");

	UGoogleAnalyticsWrapper_RecordGAUserTiming_Params params;
	params.TimingCategory = TimingCategory;
	params.TimingValue = TimingValue;
	params.TimingName = TimingName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordGAMissionTotalTimeHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Key                            (Parm, ZeroConstructor)
// struct FString*                Campaign                       (Parm, ZeroConstructor)
// bool*                          Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           totalTime                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Progress                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           XP                             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Credits                        (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordGAMissionTotalTimeHit(struct FString* Key, struct FString* Campaign, bool* Rank, int* totalTime, int* Progress, int* XP, int* Credits)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordGAMissionTotalTimeHit");

	UGoogleAnalyticsWrapper_RecordGAMissionTotalTimeHit_Params params;
	params.Key = Key;
	params.Campaign = Campaign;
	params.Rank = Rank;
	params.totalTime = totalTime;
	params.Progress = Progress;
	params.XP = XP;
	params.Credits = Credits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordGAMissionTimeEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordGAMissionTimeEvent(int* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordGAMissionTimeEvent");

	UGoogleAnalyticsWrapper_RecordGAMissionTimeEvent_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordGAEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                EventCategory                  (Parm, ZeroConstructor)
// struct FString*                EventAction                    (Parm, ZeroConstructor)
// struct FString*                EventLabel                     (Parm, ZeroConstructor)
// int*                           EventValue                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EFSDGoogleAnalyticsProperties* Property                       (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordGAEvent(struct FString* EventCategory, struct FString* EventAction, struct FString* EventLabel, int* EventValue, EFSDGoogleAnalyticsProperties* Property)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordGAEvent");

	UGoogleAnalyticsWrapper_RecordGAEvent_Params params;
	params.EventCategory = EventCategory;
	params.EventAction = EventAction;
	params.EventLabel = EventLabel;
	params.EventValue = EventValue;
	params.Property = Property;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordGADeepDiveStageHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Key                            (Parm, ZeroConstructor)
// bool*                          Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           stageTime                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           timeSinceStartOfDive           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           totalTime                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           nitraLeft                      (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::RecordGADeepDiveStageHit(struct FString* Key, bool* Rank, int* stageTime, int* timeSinceStartOfDive, int* totalTime, int* nitraLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordGADeepDiveStageHit");

	UGoogleAnalyticsWrapper_RecordGADeepDiveStageHit_Params params;
	params.Key = Key;
	params.Rank = Rank;
	params.stageTime = stageTime;
	params.timeSinceStartOfDive = timeSinceStartOfDive;
	params.totalTime = totalTime;
	params.nitraLeft = nitraLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.RecordCustomGAEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                EventCategory                  (Parm, ZeroConstructor)
// struct FString*                EventAction                    (Parm, ZeroConstructor)
// struct FString*                EventLabel                     (Parm, ZeroConstructor)
// int*                           EventValue                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                TrackingId                     (Parm, ZeroConstructor)

void UGoogleAnalyticsWrapper::RecordCustomGAEvent(struct FString* EventCategory, struct FString* EventAction, struct FString* EventLabel, int* EventValue, struct FString* TrackingId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.RecordCustomGAEvent");

	UGoogleAnalyticsWrapper_RecordCustomGAEvent_Params params;
	params.EventCategory = EventCategory;
	params.EventAction = EventAction;
	params.EventLabel = EventLabel;
	params.EventValue = EventValue;
	params.TrackingId = TrackingId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.ProcessCampaignName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Campaign                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UGoogleAnalyticsWrapper::ProcessCampaignName(class UClass** Campaign)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.ProcessCampaignName");

	UGoogleAnalyticsWrapper_ProcessCampaignName_Params params;
	params.Campaign = Campaign;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GoogleAnalyticsWrapper.PlayerLatejoin
// (Final, Native, Public, BlueprintCallable)

void UGoogleAnalyticsWrapper::PlayerLatejoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.PlayerLatejoin");

	UGoogleAnalyticsWrapper_PlayerLatejoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.PlayerDropout
// (Final, Native, Public, BlueprintCallable)

void UGoogleAnalyticsWrapper::PlayerDropout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.PlayerDropout");

	UGoogleAnalyticsWrapper_PlayerDropout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.OnPlayerLeaveBind
// (Final, Native, Public)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::OnPlayerLeaveBind(class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.OnPlayerLeaveBind");

	UGoogleAnalyticsWrapper_OnPlayerLeaveBind_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.OnPlayerJoinBind
// (Final, Native, Public)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UGoogleAnalyticsWrapper::OnPlayerJoinBind(class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.OnPlayerJoinBind");

	UGoogleAnalyticsWrapper_OnPlayerJoinBind_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.HandleMatchStarted
// (Final, Native, Public)

void UGoogleAnalyticsWrapper::HandleMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.HandleMatchStarted");

	UGoogleAnalyticsWrapper_HandleMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GoogleAnalyticsWrapper.GetAnalyticsFText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText*                  Text                           (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UGoogleAnalyticsWrapper::GetAnalyticsFText(struct FText* Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.GetAnalyticsFText");

	UGoogleAnalyticsWrapper_GetAnalyticsFText_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GoogleAnalyticsWrapper.EndMissionPartyInfo
// (Final, Native, Public, BlueprintCallable)

void UGoogleAnalyticsWrapper::EndMissionPartyInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GoogleAnalyticsWrapper.EndMissionPartyInfo");

	UGoogleAnalyticsWrapper_EndMissionPartyInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrabbedStateComponent.OnRep_Grabber
// (Final, Native, Protected)

void UGrabbedStateComponent::OnRep_Grabber()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabbedStateComponent.OnRep_Grabber");

	UGrabbedStateComponent_OnRep_Grabber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.SetLight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UPointLightComponent**   ALight                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AFlyingLifter::SetLight(class UPointLightComponent** ALight)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.SetLight");

	AFlyingLifter_SetLight_Params params;
	params.ALight = ALight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.SelectAnotherTarget
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFlyingLifter::SelectAnotherTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.SelectAnotherTarget");

	AFlyingLifter_SelectAnotherTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlyingLifter.OnStateBroke
// (Final, Native, Public)
// Parameters:
// class AActor**                 aReleasedPlayer                (Parm, ZeroConstructor, IsPlainOldData)

void AFlyingLifter::OnStateBroke(class AActor** aReleasedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.OnStateBroke");

	AFlyingLifter_OnStateBroke_Params params;
	params.aReleasedPlayer = aReleasedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.OnRep_State
// (Final, Native, Public)

void AFlyingLifter::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.OnRep_State");

	AFlyingLifter_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.OnRep_ShouldScream
// (Final, Native, Public)

void AFlyingLifter::OnRep_ShouldScream()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.OnRep_ShouldScream");

	AFlyingLifter_OnRep_ShouldScream_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.OnInDanger
// (Native, Public)

void AFlyingLifter::OnInDanger()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.OnInDanger");

	AFlyingLifter_OnInDanger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.OnGrabberCollide
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFlyingLifter::OnGrabberCollide(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.OnGrabberCollide");

	AFlyingLifter_OnGrabberCollide_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.GetJustGrabbed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFlyingLifter::GetJustGrabbed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.GetJustGrabbed");

	AFlyingLifter_GetJustGrabbed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlyingLifter.DropTarget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFlyingLifter::DropTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.DropTarget");

	AFlyingLifter_DropTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FlyingLifter.ChangeState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGrabberState*                 aGrabberState                  (Parm, ZeroConstructor, IsPlainOldData)

void AFlyingLifter::ChangeState(EGrabberState* aGrabberState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlyingLifter.ChangeState");

	AFlyingLifter_ChangeState_Params params;
	params.aGrabberState = aGrabberState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrabberComponent.SetPlayerReleased
// (Final, Native, Protected)

void UGrabberComponent::SetPlayerReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabberComponent.SetPlayerReleased");

	UGrabberComponent_SetPlayerReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrabberComponent.SetPlayerGrabbed
// (Final, Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGrabberComponent::SetPlayerGrabbed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabberComponent.SetPlayerGrabbed");

	UGrabberComponent_SetPlayerGrabbed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GrabberComponent.OnPrimWake
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    WakingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void UGrabberComponent::OnPrimWake(class UPrimitiveComponent** WakingComponent, struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabberComponent.OnPrimWake");

	UGrabberComponent_OnPrimWake_Params params;
	params.WakingComponent = WakingComponent;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrabberComponent.HasGrabbed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGrabberComponent::HasGrabbed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabberComponent.HasGrabbed");

	UGrabberComponent_HasGrabbed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GrabberComponent.All_ReleasedTarget
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor**                 releasedTarget                 (Parm, ZeroConstructor, IsPlainOldData)

void UGrabberComponent::All_ReleasedTarget(class AActor** releasedTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabberComponent.All_ReleasedTarget");

	UGrabberComponent_All_ReleasedTarget_Params params;
	params.releasedTarget = releasedTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrabberComponent.All_GrabbedTarget
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor**                 grabbedTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UGrabberComponent::All_GrabbedTarget(class AActor** grabbedTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrabberComponent.All_GrabbedTarget");

	UGrabberComponent_All_GrabbedTarget_Params params;
	params.grabbedTarget = grabbedTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrapplingHookGun.OnReleaseHook
// (Final, Native, Public, BlueprintCallable)

void AGrapplingHookGun::OnReleaseHook()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrapplingHookGun.OnReleaseHook");

	AGrapplingHookGun_OnReleaseHook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrapplingHookGun.GetCooldownDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 GrapplingHookGun               (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AGrapplingHookGun::STATIC_GetCooldownDuration(class UClass** GrapplingHookGun)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrapplingHookGun.GetCooldownDuration");

	AGrapplingHookGun_GetCooldownDuration_Params params;
	params.GrapplingHookGun = GrapplingHookGun;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GravityChangedComponent.OnGravityChanged
// (Final, Native, Protected)
// Parameters:
// float*                         Gravity                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Change                         (Parm, ZeroConstructor, IsPlainOldData)

void UGravityChangedComponent::OnGravityChanged(float* Gravity, float* Change)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GravityChangedComponent.OnGravityChanged");

	UGravityChangedComponent_OnGravityChanged_Params params;
	params.Gravity = Gravity;
	params.Change = Change;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Grenade.OnRep_HasExploded
// (Final, Native, Protected)

void AGrenade::OnRep_HasExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.OnRep_HasExploded");

	AGrenade_OnRep_HasExploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Grenade.OnExploded
// (Event, Protected, BlueprintEvent)

void AGrenade::OnExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.OnExploded");

	AGrenade_OnExploded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Grenade.IsNonFriendlyPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGrenade::IsNonFriendlyPawn(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.IsNonFriendlyPawn");

	AGrenade_IsNonFriendlyPawn_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Grenade.IsNonFriendly
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGrenade::IsNonFriendly(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.IsNonFriendly");

	AGrenade_IsNonFriendly_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Grenade.GetWeaponViewClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AGrenade::GetWeaponViewClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.GetWeaponViewClass");

	AGrenade_GetWeaponViewClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Grenade.GetGrenadeDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 grenadeClass                   (Parm, ZeroConstructor, IsPlainOldData)
// class AGrenade*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AGrenade* AGrenade::STATIC_GetGrenadeDefaultObject(class UClass** grenadeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.GetGrenadeDefaultObject");

	AGrenade_GetGrenadeDefaultObject_Params params;
	params.grenadeClass = grenadeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Grenade.ActorWasHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AGrenade::ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Grenade.ActorWasHit");

	AGrenade_ActorWasHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MolotovComponent.Trigger
// (Final, Native, Public, BlueprintCallable)

void UMolotovComponent::Trigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MolotovComponent.Trigger");

	UMolotovComponent_Trigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AreaSpawnerComponent.SpawnInArea
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxVerticalDistance            (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UAreaSpawnerComponent::SpawnInArea(struct FVector* Origin, float* Radius, float* maxVerticalDistance, class APawn** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AreaSpawnerComponent.SpawnInArea");

	UAreaSpawnerComponent_SpawnInArea_Params params;
	params.Origin = Origin;
	params.Radius = Radius;
	params.maxVerticalDistance = maxVerticalDistance;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HugeExplosionComponent.TriggerExplosion
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void UHugeExplosionComponent::TriggerExplosion(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HugeExplosionComponent.TriggerExplosion");

	UHugeExplosionComponent_TriggerExplosion_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundLeechEnemy.ReceiveMoved
// (Event, Protected, BlueprintEvent)

void AGroundLeechEnemy::ReceiveMoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundLeechEnemy.ReceiveMoved");

	AGroundLeechEnemy_ReceiveMoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundLeechEnemy.OnRep_Target
// (Final, Native, Protected)

void AGroundLeechEnemy::OnRep_Target()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundLeechEnemy.OnRep_Target");

	AGroundLeechEnemy_OnRep_Target_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundLeechEnemy.OnRep_State
// (Final, Native, Protected)

void AGroundLeechEnemy::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundLeechEnemy.OnRep_State");

	AGroundLeechEnemy_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundLeechEnemy.HasTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGroundLeechEnemy::HasTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundLeechEnemy.HasTarget");

	AGroundLeechEnemy_HasTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GroundLeechEnemy.GetSplineComponent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USplineMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineMeshComponent* AGroundLeechEnemy::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundLeechEnemy.GetSplineComponent");

	AGroundLeechEnemy_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GroundLeechEnemy.GetMouthLocation
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AGroundLeechEnemy::GetMouthLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundLeechEnemy.GetMouthLocation");

	AGroundLeechEnemy_GetMouthLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GroundToAirComponent.SetIsFlying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aIsFlying                      (Parm, ZeroConstructor, IsPlainOldData)

void UGroundToAirComponent::SetIsFlying(bool* aIsFlying)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundToAirComponent.SetIsFlying");

	UGroundToAirComponent_SetIsFlying_Params params;
	params.aIsFlying = aIsFlying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundToAirComponent.SetAllowedToChangeState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aIsAllowed                     (Parm, ZeroConstructor, IsPlainOldData)

void UGroundToAirComponent::SetAllowedToChangeState(bool* aIsAllowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundToAirComponent.SetAllowedToChangeState");

	UGroundToAirComponent_SetAllowedToChangeState_Params params;
	params.aIsAllowed = aIsAllowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundToAirComponent.OnRep_StateChange
// (Final, Native, Protected)

void UGroundToAirComponent::OnRep_StateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundToAirComponent.OnRep_StateChange");

	UGroundToAirComponent_OnRep_StateChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GroundToAirComponent.GetIsWalking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGroundToAirComponent::GetIsWalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundToAirComponent.GetIsWalking");

	UGroundToAirComponent_GetIsWalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GroundToAirComponent.GetIsFlying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGroundToAirComponent::GetIsFlying()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundToAirComponent.GetIsFlying");

	UGroundToAirComponent_GetIsFlying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GroundToAirComponent.Engage
// (Final, Native, Public, BlueprintCallable)

void UGroundToAirComponent::Engage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GroundToAirComponent.Engage");

	UGroundToAirComponent_Engage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrowthComponent.StopGrow
// (Final, Native, Public, BlueprintCallable)

void UGrowthComponent::StopGrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrowthComponent.StopGrow");

	UGrowthComponent_StopGrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GrowthComponent.StartGrow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent**        aComponentToScale              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FRuntimeFloatCurve*     aCurve                         (Parm)

void UGrowthComponent::StartGrow(class USceneComponent** aComponentToScale, struct FRuntimeFloatCurve* aCurve)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrowthComponent.StartGrow");

	UGrowthComponent_StartGrow_Params params;
	params.aComponentToScale = aComponentToScale;
	params.aCurve = aCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.Shutdown
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AGuntowerActivationPlatform::Shutdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.Shutdown");

	AGuntowerActivationPlatform_Shutdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.SetPlatformActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerActivationPlatform::SetPlatformActive(bool* IsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.SetPlatformActive");

	AGuntowerActivationPlatform_SetPlatformActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.ReEnable
// (Final, Native, Protected)

void AGuntowerActivationPlatform::ReEnable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.ReEnable");

	AGuntowerActivationPlatform_ReEnable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnShutDown
// (Event, Protected, BlueprintEvent)

void AGuntowerActivationPlatform::OnShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnShutDown");

	AGuntowerActivationPlatform_OnShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnRep_PlayersInside
// (Final, Native, Protected)

void AGuntowerActivationPlatform::OnRep_PlayersInside()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnRep_PlayersInside");

	AGuntowerActivationPlatform_OnRep_PlayersInside_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnRep_IsShutDown
// (Final, Native, Protected)

void AGuntowerActivationPlatform::OnRep_IsShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnRep_IsShutDown");

	AGuntowerActivationPlatform_OnRep_IsShutDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnRep_Disabled
// (Final, Native, Protected)

void AGuntowerActivationPlatform::OnRep_Disabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnRep_Disabled");

	AGuntowerActivationPlatform_OnRep_Disabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnPlayersInsideChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           PlayersInside                  (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerActivationPlatform::OnPlayersInsideChanged(int* PlayersInside)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnPlayersInsideChanged");

	AGuntowerActivationPlatform_OnPlayersInsideChanged_Params params;
	params.PlayersInside = PlayersInside;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AGuntowerActivationPlatform::OnOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnOverlap");

	AGuntowerActivationPlatform_OnOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnFinished
// (Event, Protected, BlueprintEvent)

void AGuntowerActivationPlatform::OnFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnFinished");

	AGuntowerActivationPlatform_OnFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.OnDisabledChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          IsDisabled                     (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerActivationPlatform::OnDisabledChanged(bool* IsDisabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.OnDisabledChanged");

	AGuntowerActivationPlatform_OnDisabledChanged_Params params;
	params.IsDisabled = IsDisabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.ModuleDestroyed
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AGuntowerActivationPlatform::ModuleDestroyed(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.ModuleDestroyed");

	AGuntowerActivationPlatform_ModuleDestroyed_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.GetAssignedModule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGuntowerModule*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AGuntowerModule* AGuntowerActivationPlatform::GetAssignedModule()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.GetAssignedModule");

	AGuntowerActivationPlatform_GetAssignedModule_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GuntowerActivationPlatform.EndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerActivationPlatform::EndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.EndOverlap");

	AGuntowerActivationPlatform_EndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerActivationPlatform.CanWidgetAppear
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AGuntowerActivationPlatform::CanWidgetAppear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.CanWidgetAppear");

	AGuntowerActivationPlatform_CanWidgetAppear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GuntowerActivationPlatform.AssignModule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AGuntowerModule**        towerModule                    (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerActivationPlatform::AssignModule(class AGuntowerModule** towerModule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerActivationPlatform.AssignModule");

	AGuntowerActivationPlatform_AssignModule_Params params;
	params.towerModule = towerModule;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerEvent.OnRep_ModuleActive
// (Native, Public)

void AGuntowerEvent::OnRep_ModuleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerEvent.OnRep_ModuleActive");

	AGuntowerEvent_OnRep_ModuleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerEvent.OnModuleExploded
// (Event, Public, BlueprintEvent)
// Parameters:
// class AGuntowerModule**        explodedModule                 (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerEvent::OnModuleExploded(class AGuntowerModule** explodedModule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerEvent.OnModuleExploded");

	AGuntowerEvent_OnModuleExploded_Params params;
	params.explodedModule = explodedModule;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.SpawnNewChildModule
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           modulesLeftToSpawn             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AGuntowerActivationPlatform*>* activationPlatforms            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AGuntowerModule::SpawnNewChildModule(int* modulesLeftToSpawn, TArray<class AGuntowerActivationPlatform*>* activationPlatforms)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.SpawnNewChildModule");

	AGuntowerModule_SpawnNewChildModule_Params params;
	params.modulesLeftToSpawn = modulesLeftToSpawn;
	params.activationPlatforms = activationPlatforms;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.ShootOutArmor
// (Final, Native, Public, BlueprintCallable)

void AGuntowerModule::ShootOutArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.ShootOutArmor");

	AGuntowerModule_ShootOutArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.SetModuleActive
// (Final, Native, Protected)

void AGuntowerModule::SetModuleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.SetModuleActive");

	AGuntowerModule_SetModuleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.OnTearArmor
// (Event, Public, BlueprintEvent)

void AGuntowerModule::OnTearArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.OnTearArmor");

	AGuntowerModule_OnTearArmor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.OnRep_IsModuleActive
// (Native, Protected)

void AGuntowerModule::OnRep_IsModuleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.OnRep_IsModuleActive");

	AGuntowerModule_OnRep_IsModuleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.OnRep_IsArmorOff
// (Native, Protected)

void AGuntowerModule::OnRep_IsArmorOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.OnRep_IsArmorOff");

	AGuntowerModule_OnRep_IsArmorOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.OnRep_Exploded
// (Native, Protected)

void AGuntowerModule::OnRep_Exploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.OnRep_Exploded");

	AGuntowerModule_OnRep_Exploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.OnRep_AreWeakpointExposed
// (Native, Protected)

void AGuntowerModule::OnRep_AreWeakpointExposed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.OnRep_AreWeakpointExposed");

	AGuntowerModule_OnRep_AreWeakpointExposed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.OnActivationChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          IsActivated                    (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerModule::OnActivationChanged(bool* IsActivated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.OnActivationChanged");

	AGuntowerModule_OnActivationChanged_Params params;
	params.IsActivated = IsActivated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.Introduce
// (Final, Native, Public)

void AGuntowerModule::Introduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.Introduce");

	AGuntowerModule_Introduce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.HideWeakpoints
// (Final, Native, Protected)

void AGuntowerModule::HideWeakpoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.HideWeakpoints");

	AGuntowerModule_HideWeakpoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.HideArmor
// (Final, Native, Protected)

void AGuntowerModule::HideArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.HideArmor");

	AGuntowerModule_HideArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.GetModuleID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AGuntowerModule::GetModuleID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.GetModuleID");

	AGuntowerModule_GetModuleID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GuntowerModule.DoExplosion
// (Native, Protected)

void AGuntowerModule::DoExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.DoExplosion");

	AGuntowerModule_DoExplosion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.DeactivateTowerModule
// (Native, Public)

void AGuntowerModule::DeactivateTowerModule()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.DeactivateTowerModule");

	AGuntowerModule_DeactivateTowerModule_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.All_PlayIntroductionAnim
// (Net, Native, Event, NetMulticast, Public)

void AGuntowerModule::All_PlayIntroductionAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.All_PlayIntroductionAnim");

	AGuntowerModule_All_PlayIntroductionAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerModule.ActivateTowerModule
// (Native, Public)

void AGuntowerModule::ActivateTowerModule()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerModule.ActivateTowerModule");

	AGuntowerModule_ActivateTowerModule_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HostileGuntowerModule.OnWeakpointDied
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AHostileGuntowerModule::OnWeakpointDied(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HostileGuntowerModule.OnWeakpointDied");

	AHostileGuntowerModule_OnWeakpointDied_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HostileGuntowerModule.OnRep_ModuleMaxHealth
// (Final, Native, Protected)

void AHostileGuntowerModule::OnRep_ModuleMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HostileGuntowerModule.OnRep_ModuleMaxHealth");

	AHostileGuntowerModule_OnRep_ModuleMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HostileGuntowerModule.OnModuleDied
// (Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AHostileGuntowerModule::OnModuleDied(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HostileGuntowerModule.OnModuleDied");

	AHostileGuntowerModule_OnModuleDied_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HostileTargetingGuntowerModule.OnPerceptionUpdated
// (Native, Public)
// Parameters:
// class AActor**                 sensedActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FAIStimulus*            Stimulus                       (Parm)

void AHostileTargetingGuntowerModule::OnPerceptionUpdated(class AActor** sensedActor, struct FAIStimulus* Stimulus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HostileTargetingGuntowerModule.OnPerceptionUpdated");

	AHostileTargetingGuntowerModule_OnPerceptionUpdated_Params params;
	params.sensedActor = sensedActor;
	params.Stimulus = Stimulus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LMGGuntoweModule.ShowShot
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FHitResult*             Result                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ALMGGuntoweModule::ShowShot(struct FHitResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LMGGuntoweModule.ShowShot");

	ALMGGuntoweModule_ShowShot_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RadialFireModule.OnFire
// (Event, Protected, BlueprintEvent)

void ARadialFireModule::OnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RadialFireModule.OnFire");

	ARadialFireModule_OnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HomingDroneBomb.UpdateHomingSpeed
// (Final, Native, Public)

void AHomingDroneBomb::UpdateHomingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HomingDroneBomb.UpdateHomingSpeed");

	AHomingDroneBomb_UpdateHomingSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HomingDroneBomb.SearchForTarget
// (Final, Native, Public)

void AHomingDroneBomb::SearchForTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HomingDroneBomb.SearchForTarget");

	AHomingDroneBomb_SearchForTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerWeakPoint.OnExposedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          isExposed                      (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerWeakPoint::OnExposedChanged(bool* isExposed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerWeakPoint.OnExposedChanged");

	AGuntowerWeakPoint_OnExposedChanged_Params params;
	params.isExposed = isExposed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerWeakPoint.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AGuntowerWeakPoint::OnDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerWeakPoint.OnDeath");

	AGuntowerWeakPoint_OnDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerWeakPoint.DamageParent
// (Final, Native, Protected)
// Parameters:
// float*                         ammount                        (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerWeakPoint::DamageParent(float* ammount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerWeakPoint.DamageParent");

	AGuntowerWeakPoint_DamageParent_Params params;
	params.ammount = ammount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthDamageTracker.ResetTrackedDamage
// (Final, Native, Public, BlueprintCallable)

void UHealthDamageTracker::ResetTrackedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthDamageTracker.ResetTrackedDamage");

	UHealthDamageTracker_ResetTrackedDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HealthDamageTracker.OnDamageTaken
// (Final, Native, Protected)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UHealthDamageTracker::OnDamageTaken(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HealthDamageTracker.OnDamageTaken");

	UHealthDamageTracker_OnDamageTaken_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanBaseComponent.Server_StopFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UHitscanBaseComponent::Server_StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanBaseComponent.Server_StopFire");

	UHitscanBaseComponent_Server_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanBaseComponent.Server_RemoveDebris
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           instance                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Component                      (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanBaseComponent::Server_RemoveDebris(int* instance, int* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanBaseComponent.Server_RemoveDebris");

	UHitscanBaseComponent_Server_RemoveDebris_Params params;
	params.instance = instance;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanBaseComponent.GetCurrentVerticalSpread
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHitscanBaseComponent::GetCurrentVerticalSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanBaseComponent.GetCurrentVerticalSpread");

	UHitscanBaseComponent_GetCurrentVerticalSpread_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HitscanBaseComponent.GetCurrentHorizontalSpread
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHitscanBaseComponent::GetCurrentHorizontalSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanBaseComponent.GetCurrentHorizontalSpread");

	UHitscanBaseComponent_GetCurrentHorizontalSpread_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HitscanComponent.Server_RegisterRicochetHit_Terrain
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::Server_RegisterRicochetHit_Terrain(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.Server_RegisterRicochetHit_Terrain");

	UHitscanComponent_Server_RegisterRicochetHit_Terrain_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.Server_RegisterRicochetHit_Destructable
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::Server_RegisterRicochetHit_Destructable(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.Server_RegisterRicochetHit_Destructable");

	UHitscanComponent_Server_RegisterRicochetHit_Destructable_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;
	params.Target = Target;
	params.PhysMaterial = PhysMaterial;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.Server_RegisterRicochetHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::Server_RegisterRicochetHit(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.Server_RegisterRicochetHit");

	UHitscanComponent_Server_RegisterRicochetHit_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;
	params.Target = Target;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.Server_RegisterHit_Terrain
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::Server_RegisterHit_Terrain(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.Server_RegisterHit_Terrain");

	UHitscanComponent_Server_RegisterHit_Terrain_Params params;
	params.Location = Location;
	params.Normal = Normal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.Server_RegisterHit_Destructable
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::Server_RegisterHit_Destructable(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.Server_RegisterHit_Destructable");

	UHitscanComponent_Server_RegisterHit_Destructable_Params params;
	params.Location = Location;
	params.Normal = Normal;
	params.Target = Target;
	params.PhysMaterial = PhysMaterial;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.Server_RegisterHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::Server_RegisterHit(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.Server_RegisterHit");

	UHitscanComponent_Server_RegisterHit_Params params;
	params.Location = Location;
	params.Normal = Normal;
	params.Target = Target;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.All_ShowRicochetHit_Terrain
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// unsigned char*                 MaterialID                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::All_ShowRicochetHit_Terrain(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, unsigned char* MaterialID, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.All_ShowRicochetHit_Terrain");

	UHitscanComponent_All_ShowRicochetHit_Terrain_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;
	params.MaterialID = MaterialID;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.All_ShowRicochetHit_Destructable
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::All_ShowRicochetHit_Destructable(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.All_ShowRicochetHit_Destructable");

	UHitscanComponent_All_ShowRicochetHit_Destructable_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;
	params.Target = Target;
	params.PhysMaterial = PhysMaterial;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.All_ShowRicochetHit
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// bool*                          SpawnDecal                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::All_ShowRicochetHit(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, bool* SpawnDecal, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.All_ShowRicochetHit");

	UHitscanComponent_All_ShowRicochetHit_Params params;
	params.Origin = Origin;
	params.Location = Location;
	params.Normal = Normal;
	params.SpawnDecal = SpawnDecal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.All_ShowHit_Terrain
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// unsigned char*                 MaterialID                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::All_ShowHit_Terrain(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, unsigned char* MaterialID, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.All_ShowHit_Terrain");

	UHitscanComponent_All_ShowHit_Terrain_Params params;
	params.Location = Location;
	params.Normal = Normal;
	params.MaterialID = MaterialID;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.All_ShowHit_Destructable
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::All_ShowHit_Destructable(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.All_ShowHit_Destructable");

	UHitscanComponent_All_ShowHit_Destructable_Params params;
	params.Location = Location;
	params.Normal = Normal;
	params.Target = Target;
	params.PhysMaterial = PhysMaterial;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HitscanComponent.All_ShowHit
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)
// bool*                          SpawnDecal                     (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitscanComponent::All_ShowHit(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, bool* SpawnDecal, class UFSDPhysicalMaterial** PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanComponent.All_ShowHit");

	UHitscanComponent_All_ShowHit_Params params;
	params.Location = Location;
	params.Normal = Normal;
	params.SpawnDecal = SpawnDecal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HostileGuntowerModuleController.OnPerceptionUpdated
// (Native, Public)
// Parameters:
// class AActor**                 sensedActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FAIStimulus*            Stimulus                       (Parm)

void AHostileGuntowerModuleController::OnPerceptionUpdated(class AActor** sensedActor, struct FAIStimulus* Stimulus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HostileGuntowerModuleController.OnPerceptionUpdated");

	AHostileGuntowerModuleController_OnPerceptionUpdated_Params params;
	params.sensedActor = sensedActor;
	params.Stimulus = Stimulus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDHealthBar.SetHealthComponent
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TScriptInterface<class UHealth>* Health                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UHUDHealthBar::SetHealthComponent(TScriptInterface<class UHealth>* Health, float* Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDHealthBar.SetHealthComponent");

	UHUDHealthBar_SetHealthComponent_Params params;
	params.Health = Health;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDHealthBar.GetCurrentHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHUDHealthBar::GetCurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDHealthBar.GetCurrentHealth");

	UHUDHealthBar_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.HUDVisibilityGroup.VisibilityDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UHUDVisibilityGroup**    Group                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::VisibilityDelegate__DelegateSignature(class UHUDVisibilityGroup** Group, bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.HUDVisibilityGroup.VisibilityDelegate__DelegateSignature");

	UHUDVisibilityGroup_VisibilityDelegate__DelegateSignature_Params params;
	params.Group = Group;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.SetModeFromPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHUDVisibilityPresets*         Preset                         (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::SetModeFromPreset(EHUDVisibilityPresets* Preset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.SetModeFromPreset");

	UHUDVisibilityGroup_SetModeFromPreset_Params params;
	params.Preset = Preset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.SetMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHUDVisibilityMode*            InMode                         (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::SetMode(EHUDVisibilityMode* InMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.SetMode");

	UHUDVisibilityGroup_SetMode_Params params;
	params.InMode = InMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.SetHudGroupDynamicallyVisible
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// class UHUDVisibilityGroup**    Group                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::STATIC_SetHudGroupDynamicallyVisible(class UHUDVisibilityGroup** Group, bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.SetHudGroupDynamicallyVisible");

	UHUDVisibilityGroup_SetHudGroupDynamicallyVisible_Params params;
	params.Group = Group;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.SetGroupDynamicallyVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::SetGroupDynamicallyVisible(bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.SetGroupDynamicallyVisible");

	UHUDVisibilityGroup_SetGroupDynamicallyVisible_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.RegisterWidgetWithVisibilityGroup
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// class UWidget**                Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UHUDVisibilityGroup**    Group                          (Parm, ZeroConstructor, IsPlainOldData)
// ESlateVisibility*              VisibleMode                    (Parm, ZeroConstructor, IsPlainOldData)
// ESlateVisibility*              HiddenMode                     (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::STATIC_RegisterWidgetWithVisibilityGroup(class UWidget** Widget, class UHUDVisibilityGroup** Group, ESlateVisibility* VisibleMode, ESlateVisibility* HiddenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.RegisterWidgetWithVisibilityGroup");

	UHUDVisibilityGroup_RegisterWidgetWithVisibilityGroup_Params params;
	params.Widget = Widget;
	params.Group = Group;
	params.VisibleMode = VisibleMode;
	params.HiddenMode = HiddenMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.RegisterMultipleWidgetsWithVisibilityGroup
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// TArray<class UWidget*>*        Widgets                        (Parm, ZeroConstructor)
// class UHUDVisibilityGroup**    Group                          (Parm, ZeroConstructor, IsPlainOldData)
// ESlateVisibility*              VisibleMode                    (Parm, ZeroConstructor, IsPlainOldData)
// ESlateVisibility*              HiddenMode                     (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::STATIC_RegisterMultipleWidgetsWithVisibilityGroup(TArray<class UWidget*>* Widgets, class UHUDVisibilityGroup** Group, ESlateVisibility* VisibleMode, ESlateVisibility* HiddenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.RegisterMultipleWidgetsWithVisibilityGroup");

	UHUDVisibilityGroup_RegisterMultipleWidgetsWithVisibilityGroup_Params params;
	params.Widgets = Widgets;
	params.Group = Group;
	params.VisibleMode = VisibleMode;
	params.HiddenMode = HiddenMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.HUDVisibilityGroup.ModeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UHUDVisibilityGroup**    Group                          (Parm, ZeroConstructor, IsPlainOldData)
// EHUDVisibilityMode*            Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UHUDVisibilityGroup::ModeDelegate__DelegateSignature(class UHUDVisibilityGroup** Group, EHUDVisibilityMode* Mode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.HUDVisibilityGroup.ModeDelegate__DelegateSignature");

	UHUDVisibilityGroup_ModeDelegate__DelegateSignature_Params params;
	params.Group = Group;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HUDVisibilityGroup.IsModeAllowed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHUDVisibilityMode*            InMode                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHUDVisibilityGroup::IsModeAllowed(EHUDVisibilityMode* InMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.IsModeAllowed");

	UHUDVisibilityGroup_IsModeAllowed_Params params;
	params.InMode = InMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HUDVisibilityGroup.IsInDynamicMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHUDVisibilityGroup::IsInDynamicMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.IsInDynamicMode");

	UHUDVisibilityGroup_IsInDynamicMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HUDVisibilityGroup.IsHudGroupVisible
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHUDVisibilityGroup**    Group                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHUDVisibilityGroup::STATIC_IsHudGroupVisible(class UHUDVisibilityGroup** Group)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.IsHudGroupVisible");

	UHUDVisibilityGroup_IsHudGroupVisible_Params params;
	params.Group = Group;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HUDVisibilityGroup.IsGroupVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHUDVisibilityGroup::IsGroupVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.IsGroupVisible");

	UHUDVisibilityGroup_IsGroupVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HUDVisibilityGroup.GetMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHUDVisibilityMode             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHUDVisibilityMode UHUDVisibilityGroup::GetMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.GetMode");

	UHUDVisibilityGroup_GetMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HUDVisibilityGroup.GetAllowedModes
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EHUDVisibilityMode>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EHUDVisibilityMode> UHUDVisibilityGroup::GetAllowedModes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HUDVisibilityGroup.GetAllowedModes");

	UHUDVisibilityGroup_GetAllowedModes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HydraHead.UpdateSpline
// (Final, Native, Protected)

void AHydraHead::UpdateSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HydraHead.UpdateSpline");

	AHydraHead_UpdateSpline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HydraHead.MoveHydraHead
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform*             newDesiredTransform            (Parm, IsPlainOldData)
// float*                         newCanSwayCooldown             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         newHeadMovementDuration        (Parm, ZeroConstructor, IsPlainOldData)

void AHydraHead::MoveHydraHead(struct FTransform* newDesiredTransform, float* newCanSwayCooldown, float* newHeadMovementDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HydraHead.MoveHydraHead");

	AHydraHead_MoveHydraHead_Params params;
	params.newDesiredTransform = newDesiredTransform;
	params.newCanSwayCooldown = newCanSwayCooldown;
	params.newHeadMovementDuration = newHeadMovementDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HydraHead.LookAtActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AHydraHead::LookAtActor(class AActor** TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HydraHead.LookAtActor");

	AHydraHead_LookAtActor_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TriggerAI.OnTriggerAI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FName*                  TriggerName                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTriggerAI::OnTriggerAI(struct FName* TriggerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TriggerAI.OnTriggerAI");

	UTriggerAI_OnTriggerAI_Params params;
	params.TriggerName = TriggerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TriggerAI.OnMessageAI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FName*                  TriggerName                    (Parm, ZeroConstructor, IsPlainOldData)

void UTriggerAI::OnMessageAI(struct FName* TriggerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TriggerAI.OnMessageAI");

	UTriggerAI_OnMessageAI_Params params;
	params.TriggerName = TriggerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Craftable.PreviewItem
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UCraftable::PreviewItem(class AFSDPlayerState** PlayerState, bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.PreviewItem");

	UCraftable_PreviewItem_Params params;
	params.PlayerState = PlayerState;
	params.Show = Show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Craftable.IsOwned
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCraftable::IsOwned(class UClass** CharacterClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.IsOwned");

	UCraftable_IsOwned_Params params;
	params.CharacterClass = CharacterClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.GetResourceCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCraftingCost>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCraftingCost> UCraftable::GetResourceCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.GetResourceCost");

	UCraftable_GetResourceCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.GetRequiredPlayerRank
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCraftable::GetRequiredPlayerRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.GetRequiredPlayerRank");

	UCraftable_GetRequiredPlayerRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.GetCraftingCreditsCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCraftable::GetCraftingCreditsCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.GetCraftingCreditsCost");

	UCraftable_GetCraftingCreditsCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.GetCraftableName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UCraftable::GetCraftableName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.GetCraftableName");

	UCraftable_GetCraftableName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.GetCraftableIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UCraftable::GetCraftableIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.GetCraftableIcon");

	UCraftable_GetCraftableIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.GetCraftableDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UCraftable::GetCraftableDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.GetCraftableDescription");

	UCraftable_GetCraftableDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Craftable.CraftItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UCraftable::CraftItem(class UClass** CharacterClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.CraftItem");

	UCraftable_CraftItem_Params params;
	params.CharacterClass = CharacterClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Craftable.CanCraft
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCraftable::CanCraft(class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Craftable.CanCraft");

	UCraftable_CanCraft_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Health.IsDead
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealth::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Health.IsDead");

	UHealth_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Health.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHealth::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Health.IsAlive");

	UHealth_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Health.GetOwner
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UHealth::GetOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Health.GetOwner");

	UHealth_GetOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Health.GetMaxHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealth::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Health.GetMaxHealth");

	UHealth_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Health.GetHealthbarType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHealthbarType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHealthbarType UHealth::GetHealthbarType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Health.GetHealthbarType");

	UHealth_GetHealthbarType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Health.GetHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealth::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Health.GetHealth");

	UHealth_GetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ImpactComponent.SetCheckVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aCheckVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void UImpactComponent::SetCheckVelocity(bool* aCheckVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ImpactComponent.SetCheckVelocity");

	UImpactComponent_SetCheckVelocity_Params params;
	params.aCheckVelocity = aCheckVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ImpactComponent.SetCheckAcceleration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aCheckAcceleration             (Parm, ZeroConstructor, IsPlainOldData)

void UImpactComponent::SetCheckAcceleration(bool* aCheckAcceleration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ImpactComponent.SetCheckAcceleration");

	UImpactComponent_SetCheckAcceleration_Params params;
	params.aCheckAcceleration = aCheckAcceleration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ImpactComponent.EnableImpactCheckhing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent**        cmp                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UImpactComponent::EnableImpactCheckhing(class USceneComponent** cmp)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ImpactComponent.EnableImpactCheckhing");

	UImpactComponent_EnableImpactCheckhing_Params params;
	params.cmp = cmp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ImpactComponent.DisableImpactChecking
// (Final, Native, Public, BlueprintCallable)

void UImpactComponent::DisableImpactChecking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ImpactComponent.DisableImpactChecking");

	UImpactComponent_DisableImpactChecking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponImpactComponent.EnableImpactCheckhing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent** cmp                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UWeaponImpactComponent::EnableImpactCheckhing(class USkeletalMeshComponent** cmp)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponImpactComponent.EnableImpactCheckhing");

	UWeaponImpactComponent_EnableImpactCheckhing_Params params;
	params.cmp = cmp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponImpactComponent.DisableImpactChecking
// (Final, Native, Public, BlueprintCallable)

void UWeaponImpactComponent::DisableImpactChecking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponImpactComponent.DisableImpactChecking");

	UWeaponImpactComponent_DisableImpactChecking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ImpactAudioComponent.OnOwnerDeath
// (Final, Native, Public)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UImpactAudioComponent::OnOwnerDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ImpactAudioComponent.OnOwnerDeath");

	UImpactAudioComponent_OnOwnerDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ImpactAudioComponent.AddImpactAudioToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UImpactAudioComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UImpactAudioComponent* UImpactAudioComponent::STATIC_AddImpactAudioToActor(class AActor** Actor, class USceneComponent** AttachToComponent, class UClass** ComponentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ImpactAudioComponent.AddImpactAudioToActor");

	UImpactAudioComponent_AddImpactAudioToActor_Params params;
	params.Actor = Actor;
	params.AttachToComponent = AttachToComponent;
	params.ComponentClass = ComponentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InDangerComponent.SetIsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aFlag                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UInDangerComponent::SetIsActive(bool* aFlag)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InDangerComponent.SetIsActive");

	UInDangerComponent_SetIsActive_Params params;
	params.aFlag = aFlag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InDangerComponent.OnDamage
// (Native, Public)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UInDangerComponent::OnDamage(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InDangerComponent.OnDamage");

	UInDangerComponent_OnDamage_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InDangerComponent.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInDangerComponent::GetIsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InDangerComponent.GetIsActive");

	UInDangerComponent_GetIsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NetMontageAble.QueueMontage
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage**           Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UNetMontageAble::QueueMontage(class UAnimMontage** Montage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NetMontageAble.QueueMontage");

	UNetMontageAble_QueueMontage_Params params;
	params.Montage = Montage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NetMontageAble.GetSkeletalMesh
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UNetMontageAble::GetSkeletalMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NetMontageAble.GetSkeletalMesh");

	UNetMontageAble_GetSkeletalMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NetMontageAble.GetAnimInstance
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimInstance*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimInstance* UNetMontageAble::GetAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NetMontageAble.GetAnimInstance");

	UNetMontageAble_GetAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.SetMouseSmoothingOn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool*                          smoothingOn                    (Parm, ZeroConstructor, IsPlainOldData)

void UInputFunctionLibrary::STATIC_SetMouseSmoothingOn(bool* smoothingOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.SetMouseSmoothingOn");

	UInputFunctionLibrary_SetMouseSmoothingOn_Params params;
	params.smoothingOn = smoothingOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InputFunctionLibrary.IsMouseSmoothingOn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInputFunctionLibrary::STATIC_IsMouseSmoothingOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.IsMouseSmoothingOn");

	UInputFunctionLibrary_IsMouseSmoothingOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.IsKeyEventAction
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKeyEvent*              KeyEvent                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName*                  ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool*                          IgnoreCustomBindings           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInputFunctionLibrary::STATIC_IsKeyEventAction(struct FKeyEvent* KeyEvent, struct FName* ActionName, bool* IgnoreCustomBindings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.IsKeyEventAction");

	UInputFunctionLibrary_IsKeyEventAction_Params params;
	params.KeyEvent = KeyEvent;
	params.ActionName = ActionName;
	params.IgnoreCustomBindings = IgnoreCustomBindings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.IsAxisMappedToDirectional
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey*                   Key                            (Parm)
// int*                           Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IgnoreCustomBindings           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInputFunctionLibrary::STATIC_IsAxisMappedToDirectional(struct FName* Name, struct FKey* Key, int* Direction, bool* IgnoreCustomBindings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.IsAxisMappedToDirectional");

	UInputFunctionLibrary_IsAxisMappedToDirectional_Params params;
	params.Name = Name;
	params.Key = Key;
	params.Direction = Direction;
	params.IgnoreCustomBindings = IgnoreCustomBindings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.IsActionMappedTo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey*                   Key                            (Parm)
// bool*                          IgnoreCustomBindings           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInputFunctionLibrary::STATIC_IsActionMappedTo(struct FName* Name, struct FKey* Key, bool* IgnoreCustomBindings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.IsActionMappedTo");

	UInputFunctionLibrary_IsActionMappedTo_Params params;
	params.Name = Name;
	params.Key = Key;
	params.IgnoreCustomBindings = IgnoreCustomBindings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.GetControllerActionMapping
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputActionKeyMapping  Mapping                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInputFunctionLibrary::STATIC_GetControllerActionMapping(struct FName* Name, struct FInputActionKeyMapping* Mapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.GetControllerActionMapping");

	UInputFunctionLibrary_GetControllerActionMapping_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Mapping != nullptr)
		*Mapping = params.Mapping;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.GetAxisMapping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Axis                           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputAxisKeyMapping    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInputAxisKeyMapping UInputFunctionLibrary::STATIC_GetAxisMapping(struct FName* Name, int* Axis, class APlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.GetAxisMapping");

	UInputFunctionLibrary_GetAxisMapping_Params params;
	params.Name = Name;
	params.Axis = Axis;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InputFunctionLibrary.GetActionMapping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputActionKeyMapping  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInputActionKeyMapping UInputFunctionLibrary::STATIC_GetActionMapping(struct FName* Name, class APlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InputFunctionLibrary.GetActionMapping");

	UInputFunctionLibrary_GetActionMapping_Params params;
	params.Name = Name;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InsectSwarmSpawner.OnSwarmSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AInsectSwarmEnemy**      Swarm                          (Parm, ZeroConstructor, IsPlainOldData)

void AInsectSwarmSpawner::OnSwarmSpawned(class AInsectSwarmEnemy** Swarm)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InsectSwarmSpawner.OnSwarmSpawned");

	AInsectSwarmSpawner_OnSwarmSpawned_Params params;
	params.Swarm = Swarm;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InsectSwarmSpawner.OnSwarmDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AInsectSwarmSpawner::OnSwarmDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InsectSwarmSpawner.OnSwarmDestroyed");

	AInsectSwarmSpawner_OnSwarmDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.StartGrenadeThrow
// (Final, Native, Public)

void UInventoryComponent::StartGrenadeThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.StartGrenadeThrow");

	UInventoryComponent_StartGrenadeThrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.Server_ThrowFlare
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UInventoryComponent::Server_ThrowFlare()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.Server_ThrowFlare");

	UInventoryComponent_Server_ThrowFlare_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.Server_Equip
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::Server_Equip(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.Server_Equip");

	UInventoryComponent_Server_Equip_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.Server_DropCarriedItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UInventoryComponent::Server_DropCarriedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.Server_DropCarriedItem");

	UInventoryComponent_Server_DropCarriedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.Resupply
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::Resupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.Resupply");

	UInventoryComponent_Resupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.PickupItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AItem* UInventoryComponent::PickupItem(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.PickupItem");

	UInventoryComponent_PickupItem_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryComponent.OnRep_PickedUpItem
// (Final, Native, Protected)

void UInventoryComponent::OnRep_PickedUpItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.OnRep_PickedUpItem");

	UInventoryComponent_OnRep_PickedUpItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.OnRep_Items
// (Final, Native, Protected)

void UInventoryComponent::OnRep_Items()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.OnRep_Items");

	UInventoryComponent_OnRep_Items_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.OnRep_EquippedItem
// (Final, Native, Protected)
// Parameters:
// class AItem**                  oldItem                        (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::OnRep_EquippedItem(class AItem** oldItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.OnRep_EquippedItem");

	UInventoryComponent_OnRep_EquippedItem_Params params;
	params.oldItem = oldItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.OnRep_CarriedItem
// (Final, Native, Protected)

void UInventoryComponent::OnRep_CarriedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.OnRep_CarriedItem");

	UInventoryComponent_OnRep_CarriedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.OnCharacterStateChanged
// (Final, Native, Protected)
// Parameters:
// ECharacterState*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::OnCharacterStateChanged(ECharacterState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.OnCharacterStateChanged");

	UInventoryComponent_OnCharacterStateChanged_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.GetTotalAmmoLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UInventoryComponent::GetTotalAmmoLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.GetTotalAmmoLeft");

	UInventoryComponent_GetTotalAmmoLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryComponent.GetRecallableSentryGunItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ARecallableSentryGunItem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ARecallableSentryGunItem* UInventoryComponent::GetRecallableSentryGunItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.GetRecallableSentryGunItem");

	UInventoryComponent_GetRecallableSentryGunItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryComponent.GetAllItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AItem*>           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class AItem*> UInventoryComponent::GetAllItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.GetAllItems");

	UInventoryComponent_GetAllItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryComponent.EquipLastItem
// (Final, Native, Public, BlueprintCallable)

void UInventoryComponent::EquipLastItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.EquipLastItem");

	UInventoryComponent_EquipLastItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.EquipAtIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::EquipAtIndex(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.EquipAtIndex");

	UInventoryComponent_EquipAtIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.Equip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::Equip(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.Equip");

	UInventoryComponent_Equip_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.EndGrenadeThrow
// (Final, Native, Public)

void UInventoryComponent::EndGrenadeThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.EndGrenadeThrow");

	UInventoryComponent_EndGrenadeThrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.DropPickedupItem
// (Final, Native, Public, BlueprintCallable)

void UInventoryComponent::DropPickedupItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.DropPickedupItem");

	UInventoryComponent_DropPickedupItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.CreateStartingEquipmentWhenItemsLoaded
// (Final, Native, Protected)

void UInventoryComponent::CreateStartingEquipmentWhenItemsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.CreateStartingEquipmentWhenItemsLoaded");

	UInventoryComponent_CreateStartingEquipmentWhenItemsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.Client_Resupply
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::Client_Resupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.Client_Resupply");

	UInventoryComponent_Client_Resupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.AnimationNotify2
// (Final, Native, Public, BlueprintCallable)

void UInventoryComponent::AnimationNotify2()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.AnimationNotify2");

	UInventoryComponent_AnimationNotify2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryComponent.AnimationNotify1
// (Final, Native, Public, BlueprintCallable)

void UInventoryComponent::AnimationNotify1()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryComponent.AnimationNotify1");

	UInventoryComponent_AnimationNotify1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InventoryList.GetPreviousUnlockedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                currentItem                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     ItemOwner                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemID* UInventoryList::GetPreviousUnlockedItem(class UObject** WorldContextObject, EItemCategory* Category, class UItemID** currentItem, class UPlayerCharacterID** ItemOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetPreviousUnlockedItem");

	UInventoryList_GetPreviousUnlockedItem_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Category = Category;
	params.currentItem = currentItem;
	params.ItemOwner = ItemOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetPreviousItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                currentItem                    (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemID* UInventoryList::GetPreviousItem(EItemCategory* Category, class UItemID** currentItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetPreviousItem");

	UInventoryList_GetPreviousItem_Params params;
	params.Category = Category;
	params.currentItem = currentItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetNumberOfItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UInventoryList::GetNumberOfItems(EItemCategory* Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetNumberOfItems");

	UInventoryList_GetNumberOfItems_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetNextUnlockedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                currentItem                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     ItemOwner                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemID* UInventoryList::GetNextUnlockedItem(class UObject** WorldContextObject, EItemCategory* Category, class UItemID** currentItem, class UPlayerCharacterID** ItemOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetNextUnlockedItem");

	UInventoryList_GetNextUnlockedItem_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Category = Category;
	params.currentItem = currentItem;
	params.ItemOwner = ItemOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetNextItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                currentItem                    (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemID* UInventoryList::GetNextItem(EItemCategory* Category, class UItemID** currentItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetNextItem");

	UInventoryList_GetNextItem_Params params;
	params.Category = Category;
	params.currentItem = currentItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetLoadedItemListFiltered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        Filter                         (Parm, ZeroConstructor)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UInventoryList::GetLoadedItemListFiltered(EItemCategory* Category, struct FScriptDelegate* Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetLoadedItemListFiltered");

	UInventoryList_GetLoadedItemListFiltered_Params params;
	params.Category = Category;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetLoadedItemList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UInventoryList::GetLoadedItemList(EItemCategory* Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetLoadedItemList");

	UInventoryList_GetLoadedItemList_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetItemList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UItemID*>         ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UItemID*> UInventoryList::GetItemList(EItemCategory* Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetItemList");

	UInventoryList_GetItemList_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.GetItemIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory*                 Category                       (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UInventoryList::GetItemIndex(EItemCategory* Category, class UItemID** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.GetItemIndex");

	UInventoryList_GetItemIndex_Params params;
	params.Category = Category;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryList.CheckForInventoryAchievements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryList::CheckForInventoryAchievements(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryList.CheckForInventoryAchievements");

	UInventoryList_CheckForInventoryAchievements_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Targetable.ShowDamageEffects
// (BlueprintAuthorityOnly, Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UParticleSystem**        particles                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Orientation                    (Parm, ZeroConstructor, IsPlainOldData)

void UTargetable::ShowDamageEffects(class UParticleSystem** particles, struct FVector* Location, struct FRotator* Orientation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Targetable.ShowDamageEffects");

	UTargetable_ShowDamageEffects_Params params;
	params.particles = particles;
	params.Location = Location;
	params.Orientation = Orientation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Targetable.GetTargetHealthComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UHealthComponentBase*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHealthComponentBase* UTargetable::GetTargetHealthComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Targetable.GetTargetHealthComponent");

	UTargetable_GetTargetHealthComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Targetable.GetTargetCenterMass
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UTargetable::GetTargetCenterMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Targetable.GetTargetCenterMass");

	UTargetable_GetTargetCenterMass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Targetable.GetIsTargetable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetable::GetIsTargetable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Targetable.GetIsTargetable");

	UTargetable_GetIsTargetable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HeatMaterialComponent.OnTemperatureChanged
// (Final, Native, Protected)
// Parameters:
// float*                         Temperature                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Overheated                     (Parm, ZeroConstructor, IsPlainOldData)

void UHeatMaterialComponent::OnTemperatureChanged(float* Temperature, bool* Overheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HeatMaterialComponent.OnTemperatureChanged");

	UHeatMaterialComponent_OnTemperatureChanged_Params params;
	params.Temperature = Temperature;
	params.Overheated = Overheated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.HeatMaterialComponent.AddHeatMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic** MaterialInstance               (Parm, ZeroConstructor, IsPlainOldData)

void UHeatMaterialComponent::AddHeatMaterial(class UMaterialInstanceDynamic** MaterialInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HeatMaterialComponent.AddHeatMaterial");

	UHeatMaterialComponent_AddHeatMaterial_Params params;
	params.MaterialInstance = MaterialInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemMarker.OnMarkerVisibilityChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AItemMarker::OnMarkerVisibilityChanged(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemMarker.OnMarkerVisibilityChanged");

	AItemMarker_OnMarkerVisibilityChanged_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemMarker.OnMarkerValidChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          Valid                          (Parm, ZeroConstructor, IsPlainOldData)

void AItemMarker::OnMarkerValidChanged(bool* Valid)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemMarker.OnMarkerValidChanged");

	AItemMarker_OnMarkerValidChanged_Params params;
	params.Valid = Valid;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemPlacerAggregator.ToggleValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Valid                          (Parm, ZeroConstructor, IsPlainOldData)

void UItemPlacerAggregator::ToggleValid(bool* Valid)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemPlacerAggregator.ToggleValid");

	UItemPlacerAggregator_ToggleValid_Params params;
	params.Valid = Valid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemPlacerAggregator.ToggleMarker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UItemPlacerAggregator::ToggleMarker(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemPlacerAggregator.ToggleMarker");

	UItemPlacerAggregator_ToggleMarker_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemPlacerAggregator.GetPlacement
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              Placement                      (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItemPlacerAggregator::GetPlacement(struct FTransform* Placement)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemPlacerAggregator.GetPlacement");

	UItemPlacerAggregator_GetPlacement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Placement != nullptr)
		*Placement = params.Placement;

	return params.ReturnValue;
}


// Function FSD.ItemsBarIcon.OnUnselect
// (Event, Protected, BlueprintEvent)

void UItemsBarIcon::OnUnselect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBarIcon.OnUnselect");

	UItemsBarIcon_OnUnselect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBarIcon.OnSelect
// (Event, Protected, BlueprintEvent)

void UItemsBarIcon::OnSelect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBarIcon.OnSelect");

	UItemsBarIcon_OnSelect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBarIcon.OnInit
// (Event, Protected, BlueprintEvent)

void UItemsBarIcon::OnInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBarIcon.OnInit");

	UItemsBarIcon_OnInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnSupplyItemUnequipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemsBarIcon**          ItemIcon                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemsBar::OnSupplyItemUnequipped(class UItemsBarIcon** ItemIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnSupplyItemUnequipped");

	UItemsBar_OnSupplyItemUnequipped_Params params;
	params.ItemIcon = ItemIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnSupplyItemEquipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemsBarIcon**          ItemIcon                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemsBar::OnSupplyItemEquipped(class UItemsBarIcon** ItemIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnSupplyItemEquipped");

	UItemsBar_OnSupplyItemEquipped_Params params;
	params.ItemIcon = ItemIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnSupplyItemAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemsBarIcon**          ItemIcon                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemsBar::OnSupplyItemAdded(class UItemsBarIcon** ItemIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnSupplyItemAdded");

	UItemsBar_OnSupplyItemAdded_Params params;
	params.ItemIcon = ItemIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnItemUnequipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemsBarIcon**          ItemIcon                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemsBar::OnItemUnequipped(class UItemsBarIcon** ItemIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnItemUnequipped");

	UItemsBar_OnItemUnequipped_Params params;
	params.ItemIcon = ItemIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnItemsLoaded
// (Final, Native, Protected)

void UItemsBar::OnItemsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnItemsLoaded");

	UItemsBar_OnItemsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnItemEquipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemsBarIcon**          ItemIcon                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemsBar::OnItemEquipped(class UItemsBarIcon** ItemIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnItemEquipped");

	UItemsBar_OnItemEquipped_Params params;
	params.ItemIcon = ItemIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnItemClicked
// (Event, Protected, BlueprintEvent)

void UItemsBar::OnItemClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnItemClicked");

	UItemsBar_OnItemClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnItemAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemsBarIcon**          ItemIcon                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemsBar::OnItemAdded(class UItemsBarIcon** ItemIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnItemAdded");

	UItemsBar_OnItemAdded_Params params;
	params.ItemIcon = ItemIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.OnClear
// (Event, Protected, BlueprintEvent)

void UItemsBar::OnClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.OnClear");

	UItemsBar_OnClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.ItemEquipped
// (Final, Native, Protected)
// Parameters:
// class AItem**                  NewItem                        (Parm, ZeroConstructor, IsPlainOldData)

void UItemsBar::ItemEquipped(class AItem** NewItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.ItemEquipped");

	UItemsBar_ItemEquipped_Params params;
	params.NewItem = NewItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemsBar.ItemClicked
// (Final, Native, Protected)
// Parameters:
// class AItem**                  NewItem                        (Parm, ZeroConstructor, IsPlainOldData)

void UItemsBar::ItemClicked(class AItem** NewItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemsBar.ItemClicked");

	UItemsBar_ItemClicked_Params params;
	params.NewItem = NewItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SkinBank.SortSkins
// (Final, Native, Public, BlueprintCallable)

void USkinBank::SortSkins()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinBank.SortSkins");

	USkinBank_SortSkins_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SkinBank.AddSkins
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UItemSkin*>*      skinsToAdd                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void USkinBank::AddSkins(TArray<class UItemSkin*>* skinsToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinBank.AddSkins");

	USkinBank_AddSkins_Params params;
	params.skinsToAdd = skinsToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SkinnableComponent.UpdateSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)

void USkinnableComponent::UpdateSkin(class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinnableComponent.UpdateSkin");

	USkinnableComponent_UpdateSkin_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SkinnableComponent.OnLoadoutChanged
// (Final, Native, Protected)

void USkinnableComponent::OnLoadoutChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinnableComponent.OnLoadoutChanged");

	USkinnableComponent_OnLoadoutChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SkinnableComponent.GetSkinsForItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UItemID**                ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UItemSkin*>       ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UItemSkin*> USkinnableComponent::STATIC_GetSkinsForItem(class UItemID** ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinnableComponent.GetSkinsForItem");

	USkinnableComponent_GetSkinsForItem_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SkinnableComponent.GetEquippedSkin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UItemID**                ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UItemSkin*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemSkin* USkinnableComponent::STATIC_GetEquippedSkin(class UItemID** ItemID, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinnableComponent.GetEquippedSkin");

	USkinnableComponent_GetEquippedSkin_Params params;
	params.ItemID = ItemID;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SkinnableComponent.EquipSkin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UItemSkin**              Skin                           (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)

void USkinnableComponent::STATIC_EquipSkin(class UItemSkin** Skin, class UItemID** ItemID, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinnableComponent.EquipSkin");

	USkinnableComponent_EquipSkin_Params params;
	params.Skin = Skin;
	params.ItemID = ItemID;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemSkin.Unlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          broadcast                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItemSkin::Unlock(class UObject** WorldContext, class UItemID** ItemID, bool* broadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemSkin.Unlock");

	UItemSkin_Unlock_Params params;
	params.WorldContext = WorldContext;
	params.ItemID = ItemID;
	params.broadcast = broadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemSkin.Receive_SkinItem
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UObject**                Skinnable                      (Parm, ZeroConstructor, IsPlainOldData)

void UItemSkin::Receive_SkinItem(class UObject** Skinnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemSkin.Receive_SkinItem");

	UItemSkin_Receive_SkinItem_Params params;
	params.Skinnable = Skinnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ItemSkin.ItemSkinSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UItemSkin**              Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void UItemSkin::ItemSkinSignature__DelegateSignature(class UItemSkin** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ItemSkin.ItemSkinSignature__DelegateSignature");

	UItemSkin_ItemSkinSignature__DelegateSignature_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ItemSkin.ItemSkinEquipSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UItemSkin**              Skin                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UItemSkin::ItemSkinEquipSignature__DelegateSignature(class UItemSkin** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ItemSkin.ItemSkinEquipSignature__DelegateSignature");

	UItemSkin_ItemSkinEquipSignature__DelegateSignature_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemSkin.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                skinnableID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItemSkin::IsLocked(class UObject** WorldContext, class UItemID** skinnableID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemSkin.IsLocked");

	UItemSkin_IsLocked_Params params;
	params.WorldContext = WorldContext;
	params.skinnableID = skinnableID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemSkin.IsEquippedOnItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItemID**                ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItemSkin::IsEquippedOnItem(class UItemID** ItemID, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemSkin.IsEquippedOnItem");

	UItemSkin_IsEquippedOnItem_Params params;
	params.ItemID = ItemID;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SkinEffect.Receive_RemoveFromItem
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UMeshComponent**         Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Skinnable                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFirstPerson                  (Parm, ZeroConstructor, IsPlainOldData)

void USkinEffect::Receive_RemoveFromItem(class UMeshComponent** Mesh, class AActor** Skinnable, bool* IsFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinEffect.Receive_RemoveFromItem");

	USkinEffect_Receive_RemoveFromItem_Params params;
	params.Mesh = Mesh;
	params.Skinnable = Skinnable;
	params.IsFirstPerson = IsFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SkinEffect.Receive_AddToItem
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UMeshComponent**         Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Skinnable                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsFirstPerson                  (Parm, ZeroConstructor, IsPlainOldData)

void USkinEffect::Receive_AddToItem(class UMeshComponent** Mesh, class AActor** Skinnable, bool* IsFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SkinEffect.Receive_AddToItem");

	USkinEffect_Receive_AddToItem_Params params;
	params.Mesh = Mesh;
	params.Skinnable = Skinnable;
	params.IsFirstPerson = IsFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.UnSkinItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class USkinEffect**            Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::UnSkinItem(class USkinEffect** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.UnSkinItem");

	APreviewActor_UnSkinItem_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.SkinItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class USkinEffect**            Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::SkinItem(class USkinEffect** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.SkinItem");

	APreviewActor_SkinItem_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.SetItemClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::SetItemClass(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.SetItemClass");

	APreviewActor_SetItemClass_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.OnUnSkinItem
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class USkinEffect**            Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::OnUnSkinItem(class USkinEffect** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.OnUnSkinItem");

	APreviewActor_OnUnSkinItem_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.OnSkinPreviewChanged
// (Final, Native, Protected)
// Parameters:
// class UItemSkin**              PreviewSkin                    (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::OnSkinPreviewChanged(class UItemSkin** PreviewSkin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.OnSkinPreviewChanged");

	APreviewActor_OnSkinPreviewChanged_Params params;
	params.PreviewSkin = PreviewSkin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.OnSkinItem
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class USkinEffect**            Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::OnSkinItem(class USkinEffect** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.OnSkinItem");

	APreviewActor_OnSkinItem_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.OnSkinChanged
// (Final, Native, Protected)

void APreviewActor::OnSkinChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.OnSkinChanged");

	APreviewActor_OnSkinChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PreviewActor.ChangeSkin
// (Final, Native, Protected)
// Parameters:
// class UItemSkin**              NewSkin                        (Parm, ZeroConstructor, IsPlainOldData)

void APreviewActor::ChangeSkin(class UItemSkin** NewSkin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PreviewActor.ChangeSkin");

	APreviewActor_ChangeSkin_Params params;
	params.NewSkin = NewSkin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemUpgrade.UnequipUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UItemUpgrade::UnequipUpgrade(class UClass** itemClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.UnequipUpgrade");

	UItemUpgrade_UnequipUpgrade_Params params;
	params.itemClass = itemClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ItemUpgrade.ItemUpgradeSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)

void UItemUpgrade::ItemUpgradeSignature__DelegateSignature(class UItemUpgrade** Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ItemUpgrade.ItemUpgradeSignature__DelegateSignature");

	UItemUpgrade_ItemUpgradeSignature__DelegateSignature_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemUpgrade.GetUpgradeStatTexts
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FItemUpgradeStatText> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemUpgradeStatText> UItemUpgrade::GetUpgradeStatTexts()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.GetUpgradeStatTexts");

	UItemUpgrade_GetUpgradeStatTexts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemUpgrade.GetUpgradeName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UItemUpgrade::STATIC_GetUpgradeName(class UItemUpgrade** Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.GetUpgradeName");

	UItemUpgrade_GetUpgradeName_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemUpgrade.GetUpgradeCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCraftingCost>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCraftingCost> UItemUpgrade::GetUpgradeCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.GetUpgradeCost");

	UItemUpgrade_GetUpgradeCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemUpgrade.GetSourceName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UItemUpgrade::GetSourceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.GetSourceName");

	UItemUpgrade_GetSourceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemUpgrade.GetGenericUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           upgradeClass                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UItemUpgrade::STATIC_GetGenericUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UItemUpgrade** upgradeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.GetGenericUpgradedValue");

	UItemUpgrade_GetGenericUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeClass = upgradeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemUpgrade.GetCreditsCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UItemUpgrade::GetCreditsCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.GetCreditsCost");

	UItemUpgrade_GetCreditsCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemUpgrade.EquipUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UItemUpgrade::EquipUpgrade(class UClass** itemClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.EquipUpgrade");

	UItemUpgrade_EquipUpgrade_Params params;
	params.itemClass = itemClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ItemUpgrade.CraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerController**   PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 previewedCharacter             (Parm, ZeroConstructor, IsPlainOldData)

void UItemUpgrade::CraftItem(class UClass** itemClass, class AFSDPlayerController** PlayerController, class UClass** previewedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemUpgrade.CraftItem");

	UItemUpgrade_CraftItem_Params params;
	params.itemClass = itemClass;
	params.PlayerController = PlayerController;
	params.previewedCharacter = previewedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CombinedUpgrade.GetUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UItemUpgrade*>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UItemUpgrade*> UCombinedUpgrade::GetUpgrades()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CombinedUpgrade.GetUpgrades");

	UCombinedUpgrade_GetUpgrades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BeltDrivenWeaponUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EBeltDrivenWeaponUpgrade*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UBeltDrivenWeaponUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBeltDrivenWeaponUpgrade* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BeltDrivenWeaponUpgrade.GetUpgradedValue");

	UBeltDrivenWeaponUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GatlingGunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EGatlingGunUpgrade*            upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UGatlingGunUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EGatlingGunUpgrade* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingGunUpgrade.GetUpgradedValue");

	UGatlingGunUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AmmoDrivenWeaponUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EAmmoDrivenWeapnUpgradeType*   upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UAmmoDrivenWeaponUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAmmoDrivenWeapnUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AmmoDrivenWeaponUpgrade.GetUpgradedValue");

	UAmmoDrivenWeaponUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoltActionRifleUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EBoltActionRifleUpgrades*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UBoltActionRifleUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBoltActionRifleUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoltActionRifleUpgrade.GetUpgradedValue");

	UBoltActionRifleUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DualMachinePistolsUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EDualMachinePistolsUpgrades*   upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UDualMachinePistolsUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EDualMachinePistolsUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DualMachinePistolsUpgrade.GetUpgradedValue");

	UDualMachinePistolsUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AssaultRifleUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EAssaultRifleUpgrade*          upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UAssaultRifleUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAssaultRifleUpgrade* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AssaultRifleUpgrade.GetUpgradedValue");

	UAssaultRifleUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AutoCannonUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EAutoCannonUpgrades*           upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UAutoCannonUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAutoCannonUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoCannonUpgrade.GetUpgradedValue");

	UAutoCannonUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SawedOffShotgunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// ESawedOffShotgunUpgrades*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues USawedOffShotgunUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ESawedOffShotgunUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SawedOffShotgunUpgrade.GetUpgradedValue");

	USawedOffShotgunUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BurstWeaponUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EBurstWeaponUpgrades*          upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UBurstWeaponUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBurstWeaponUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BurstWeaponUpgrade.GetUpgradedValue");

	UBurstWeaponUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AutoShotgunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EAutoShotgunUpgrades*          upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UAutoShotgunUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAutoShotgunUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoShotgunUpgrade.GetUpgradedValue");

	UAutoShotgunUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ChargedWeaponUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EChargedWeaponUpgrades*        upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UChargedWeaponUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EChargedWeaponUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedWeaponUpgrade.GetUpgradedValue");

	UChargedWeaponUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BasicPistolUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EBasicPistol*                  upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UBasicPistolUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBasicPistol* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BasicPistolUpgrade.GetUpgradedValue");

	UBasicPistolUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RevolverUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// ERevolerUpgrades*              upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues URevolverUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ERevolerUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RevolverUpgrade.GetUpgradedValue");

	URevolverUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CryoSprayUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// ECryoSprayUpgrades*            upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UCryoSprayUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ECryoSprayUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryoSprayUpgrade.GetUpgradedValue");

	UCryoSprayUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CryoSprayProjectileUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 projectileClass                (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UCryoSprayProjectileUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** projectileClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CryoSprayProjectileUpgrade.GetUpgradedValue");

	UCryoSprayProjectileUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.projectileClass = projectileClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeaponHitCounterUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UWeaponHitCounterUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, class UClass** ComponentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitCounterUpgrade.GetUpgradedValue");

	UWeaponHitCounterUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.ComponentClass = ComponentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlameThrowerUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EFlameThrowerUpgradeType*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UFlameThrowerUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EFlameThrowerUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlameThrowerUpgrade.GetUpgradedValue");

	UFlameThrowerUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StickyFlameStatusEffectUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UStickyFlameStatusEffectUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StickyFlameStatusEffectUpgrade.GetUpgradedValue");

	UStickyFlameStatusEffectUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AutoMinerUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EAutoMinerUpgradeType*         upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UAutoMinerUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAutoMinerUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoMinerUpgrade.GetUpgradedValue");

	UAutoMinerUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.InventoryItemUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EInventoryItemUpgradeType*     upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UInventoryItemUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EInventoryItemUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InventoryItemUpgrade.GetUpgradedValue");

	UInventoryItemUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CapacityUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UCapacityUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CapacityUpgrade.GetUpgradedValue");

	UCapacityUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CooldownUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UCooldownUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CooldownUpgrade.GetUpgradedValue");

	UCooldownUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MultiHitscanUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EMultiHitscanUpgradeType*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EItemPreviewStatus             outPreviewStatus               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMultiHitscanUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EMultiHitscanUpgradeType* upgradeType, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MultiHitscanUpgrade.GetUpgradedValue");

	UMultiHitscanUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;
	if (outPreviewStatus != nullptr)
		*outPreviewStatus = params.outPreviewStatus;

	return params.ReturnValue;
}


// Function FSD.ManualMiningUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EManualMiningUpgradeType*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UManualMiningUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EManualMiningUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningUpgrade.GetUpgradedValue");

	UManualMiningUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.HitscanBaseUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EHitScanBaseUpgradeType*       upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UHitscanBaseUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EHitScanBaseUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.HitscanBaseUpgrade.GetUpgradedValue");

	UHitscanBaseUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DamageUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 upgradedItem                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EDamageUpgrade*                upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// EDamageComponentType*          DamageComponentType            (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UDamageUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, EDamageUpgrade* upgradeType, EDamageComponentType* DamageComponentType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DamageUpgrade.GetUpgradedValue");

	UDamageUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.upgradedItem = upgradedItem;
	params.Player = Player;
	params.upgradeType = upgradeType;
	params.DamageComponentType = DamageComponentType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlatDamageUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EItemPreviewStatus             outPreviewStatus               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFlatDamageUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UDamageClass** DamageClass, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlatDamageUpgrade.GetUpgradedValue");

	UFlatDamageUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.DamageClass = DamageClass;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;
	if (outPreviewStatus != nullptr)
		*outPreviewStatus = params.outPreviewStatus;

	return params.ReturnValue;
}


// Function FSD.RandomDamageUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues URandomDamageUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandomDamageUpgrade.GetUpgradedValue");

	URandomDamageUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DamageConversionUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 upgradedItem                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UDamageConversionUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DamageConversionUpgrade.GetUpgradedValue");

	UDamageConversionUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.upgradedItem = upgradedItem;
	params.Player = Player;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TargetStateDamageBonusUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// ETargetStateDamageBonusType*   TargetState                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UTargetStateDamageBonusUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ETargetStateDamageBonusType* TargetState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TargetStateDamageBonusUpgrade.GetUpgradedValue");

	UTargetStateDamageBonusUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.TargetState = TargetState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusDamageBonusUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EItemPreviewStatus             outPreviewStatus               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStatusDamageBonusUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** StatusEffect, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusDamageBonusUpgrade.GetUpgradedValue");

	UStatusDamageBonusUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.StatusEffect = StatusEffect;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;
	if (outPreviewStatus != nullptr)
		*outPreviewStatus = params.outPreviewStatus;

	return params.ReturnValue;
}


// Function FSD.TargetSpecificDamageBonusUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  Key                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EItemPreviewStatus             outPreviewStatus               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTargetSpecificDamageBonusUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, struct FName* Key, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TargetSpecificDamageBonusUpgrade.GetUpgradedValue");

	UTargetSpecificDamageBonusUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.Key = Key;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;
	if (outPreviewStatus != nullptr)
		*outPreviewStatus = params.outPreviewStatus;

	return params.ReturnValue;
}


// Function FSD.PushSatusEffectDamageBonusUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EItemPreviewStatus             outPreviewStatus               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPushSatusEffectDamageBonusUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** StatusEffect, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PushSatusEffectDamageBonusUpgrade.GetUpgradedValue");

	UPushSatusEffectDamageBonusUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.StatusEffect = StatusEffect;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;
	if (outPreviewStatus != nullptr)
		*outPreviewStatus = params.outPreviewStatus;

	return params.ReturnValue;
}


// Function FSD.GatlingHotShellsBonusUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UGatlingHotShellsBonusUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UDamageClass** DamageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GatlingHotShellsBonusUpgrade.GetUpgradedValue");

	UGatlingHotShellsBonusUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.DamageClass = DamageClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ExplosionUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 upgradedItem                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 componentItem                  (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EExplosionUpgrade*             upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UExplosionUpgrade::STATIC_GetUpgradedValue(class UClass** upgradedItem, class UClass** componentItem, class AFSDPlayerState** Player, EExplosionUpgrade* upgradeType, bool* includePreview, float* outBaseValue, float* outUpgradeValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExplosionUpgrade.GetUpgradedValue");

	UExplosionUpgrade_GetUpgradedValue_Params params;
	params.upgradedItem = upgradedItem;
	params.componentItem = componentItem;
	params.Player = Player;
	params.upgradeType = upgradeType;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;

	return params.ReturnValue;
}


// Function FSD.SingleUsableUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 subItem                        (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// ESingleUsableUpgradeType*      upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues USingleUsableUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class UClass** subItem, class AFSDPlayerState** Player, ESingleUsableUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableUpgrade.GetUpgradedValue");

	USingleUsableUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.subItem = subItem;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlareUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 flareClass                     (Parm, ZeroConstructor, IsPlainOldData)
// EFlareUpgradeType*             upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UFlareUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** flareClass, EFlareUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareUpgrade.GetUpgradedValue");

	UFlareUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.flareClass = flareClass;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FearAoEBonusUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UFearAoEBonusUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FearAoEBonusUpgrade.GetUpgradedValue");

	UFearAoEBonusUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GrenadeUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 flareClass                     (Parm, ZeroConstructor, IsPlainOldData)
// EGrenadeUpgradeType*           upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UGrenadeUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** flareClass, EGrenadeUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrenadeUpgrade.GetUpgradedValue");

	UGrenadeUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.flareClass = flareClass;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LineCutterProjectileUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// ELineCutterProjectileUpgradeType* upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues ULineCutterProjectileUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, ELineCutterProjectileUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectileUpgrade.GetUpgradedValue");

	ULineCutterProjectileUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LineCutterUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// ELineCutterUpgradeType*        upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues ULineCutterUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, ELineCutterUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterUpgrade.GetUpgradedValue");

	ULineCutterUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProjectileUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 upgradedItem                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EProjectileUpgrade*            upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UProjectileUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, EProjectileUpgrade* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileUpgrade.GetUpgradedValue");

	UProjectileUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.upgradedItem = upgradedItem;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlareGunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EFlaregunUpgrades*             upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UFlareGunUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EFlaregunUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlareGunUpgrade.GetUpgradedValue");

	UFlareGunUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.FlaregunProjectileUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 upgradedItem                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EFlaregunProjectileUpgrades*   upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UFlaregunProjectileUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, EFlaregunProjectileUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FlaregunProjectileUpgrade.GetUpgradedValue");

	UFlaregunProjectileUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.upgradedItem = upgradedItem;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ChargedProjectileUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 upgradedActor                  (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EChargedProjectileUpgrades*    upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UChargedProjectileUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedActor, class AFSDPlayerState** Player, EChargedProjectileUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ChargedProjectileUpgrade.GetUpgradedValue");

	UChargedProjectileUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.upgradedActor = upgradedActor;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ElectricalSMGUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// EElectricalSMGUpgrades*        upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UElectricalSMGUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EElectricalSMGUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectricalSMGUpgrade.GetUpgradedValue");

	UElectricalSMGUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.GrapplingHookUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// EGrapplingHookUpgrade*         upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UGrapplingHookUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EGrapplingHookUpgrade* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GrapplingHookUpgrade.GetUpgradedValue");

	UGrapplingHookUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ZiplineGunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// EZiplineGunUpgrades*           upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UZiplineGunUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EZiplineGunUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZiplineGunUpgrade.GetUpgradedValue");

	UZiplineGunUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// ESentryGunUpgradeType*         upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues USentryGunUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ESentryGunUpgradeType* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGunUpgrade.GetUpgradedValue");

	USentryGunUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ArmorRegeneratorUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EArmorRegeneratorUpgrades*     upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          outBaseValue                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          outUpgradeValue                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EItemPreviewStatus             outPreviewStatus               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UArmorRegeneratorUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EArmorRegeneratorUpgrades* upgradeType, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorRegeneratorUpgrade.GetUpgradedValue");

	UArmorRegeneratorUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outBaseValue != nullptr)
		*outBaseValue = params.outBaseValue;
	if (outUpgradeValue != nullptr)
		*outUpgradeValue = params.outUpgradeValue;
	if (outPreviewStatus != nullptr)
		*outPreviewStatus = params.outPreviewStatus;

	return params.ReturnValue;
}


// Function FSD.AddComponentUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          includePreview                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAddComponentUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** ComponentClass, bool* includePreview)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AddComponentUpgrade.GetUpgradedValue");

	UAddComponentUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.ComponentClass = ComponentClass;
	params.includePreview = includePreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TriggeredStatusEffectUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// ETriggeredStatusEffectType*    aUpgradeType                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UTriggeredStatusEffectUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, class UClass** StatusEffect, ETriggeredStatusEffectType* aUpgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TriggeredStatusEffectUpgrade.GetUpgradedValue");

	UTriggeredStatusEffectUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.StatusEffect = StatusEffect;
	params.aUpgradeType = aUpgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TriggeredStatusEffectUpgrade.All_OnAoETriggered
// (Net, Native, Event, NetMulticast, Public, Const)
// Parameters:
// struct FVector_NetQuantize*    Location                       (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal* Normal                         (ConstParm, Parm, ReferenceParm)

void UTriggeredStatusEffectUpgrade::All_OnAoETriggered(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TriggeredStatusEffectUpgrade.All_OnAoETriggered");

	UTriggeredStatusEffectUpgrade_All_OnAoETriggered_Params params;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ArmorUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 armorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// EArmorUpgradeType*             aUpgradeType                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UArmorUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** armorClass, EArmorUpgradeType* aUpgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorUpgrade.GetUpgradedValue");

	UArmorUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.armorClass = armorClass;
	params.aUpgradeType = aUpgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ArmorUpgrade.GetUpgradedStatValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 armorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPawnStat**              Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UArmorUpgrade::STATIC_GetUpgradedStatValue(class AFSDPlayerState** Player, class UClass** armorClass, class UPawnStat** Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ArmorUpgrade.GetUpgradedStatValue");

	UArmorUpgrade_GetUpgradedStatValue_Params params;
	params.Player = Player;
	params.armorClass = armorClass;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BoscoUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// EBoscoUpgrades*                upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UBoscoUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EBoscoUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BoscoUpgrade.GetUpgradedValue");

	UBoscoUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlatformGunUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// EPlatformGunUpgrades*          aUpgradeType                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UPlatformGunUpgrade::STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EPlatformGunUpgrades* aUpgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlatformGunUpgrade.GetUpgradedValue");

	UPlatformGunUpgrade_GetUpgradedValue_Params params;
	params.Player = Player;
	params.Item = Item;
	params.aUpgradeType = aUpgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.DetPackUpgrade.GetUpgradedValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EDetPackUpgrades*              upgradeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUpgradeValues          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUpgradeValues UDetPackUpgrade::STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EDetPackUpgrades* upgradeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DetPackUpgrade.GetUpgradedValue");

	UDetPackUpgrade_GetUpgradedValue_Params params;
	params.Item = Item;
	params.Player = Player;
	params.upgradeType = upgradeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Upgradable.Upgraded
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<class UItemUpgrade*>*   Upgrades                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUpgradable::Upgraded(TArray<class UItemUpgrade*>* Upgrades)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Upgradable.Upgraded");

	UUpgradable_Upgraded_Params params;
	params.Upgrades = Upgrades;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UpgradableGear.GetGearStatEntry
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FGearStatEntry>  Stats                          (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUpgradableGear::GetGearStatEntry(class AFSDPlayerState** PlayerState, TArray<struct FGearStatEntry>* Stats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGear.GetGearStatEntry");

	UUpgradableGear_GetGearStatEntry_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Stats != nullptr)
		*Stats = params.Stats;
}


// Function FSD.JellyBreeder.TookDamage
// (Final, Native, Protected)
// Parameters:
// float*                         aAmount                        (Parm, ZeroConstructor, IsPlainOldData)

void AJellyBreeder::TookDamage(float* aAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.TookDamage");

	AJellyBreeder_TookDamage_Params params;
	params.aAmount = aAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JellyBreeder.SpawnEnemies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AProjectile**            aEgg                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           aAmountToSpawn                 (Parm, ZeroConstructor, IsPlainOldData)

void AJellyBreeder::SpawnEnemies(class AProjectile** aEgg, int* aAmountToSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.SpawnEnemies");

	AJellyBreeder_SpawnEnemies_Params params;
	params.aEgg = aEgg;
	params.aAmountToSpawn = aAmountToSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JellyBreeder.SawPawn
// (Final, Native, Protected)
// Parameters:
// class APawn**                  aSeenPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void AJellyBreeder::SawPawn(class APawn** aSeenPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.SawPawn");

	AJellyBreeder_SawPawn_Params params;
	params.aSeenPawn = aSeenPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JellyBreeder.PlaySpawnEggAnim
// (Net, Native, Event, NetMulticast, Public)

void AJellyBreeder::PlaySpawnEggAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.PlaySpawnEggAnim");

	AJellyBreeder_PlaySpawnEggAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JellyBreeder.OnRep_BreedMode
// (Final, Native, Protected)

void AJellyBreeder::OnRep_BreedMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.OnRep_BreedMode");

	AJellyBreeder_OnRep_BreedMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JellyBreeder.OnJellyDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 AActor                         (Parm, ZeroConstructor, IsPlainOldData)

void AJellyBreeder::OnJellyDestroyed(class AActor** AActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.OnJellyDestroyed");

	AJellyBreeder_OnJellyDestroyed_Params params;
	params.AActor = AActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JellyBreeder.BreedModeFlipped
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          aIsLayingEggs                  (Parm, ZeroConstructor, IsPlainOldData)

void AJellyBreeder::BreedModeFlipped(bool* aIsLayingEggs)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JellyBreeder.BreedModeFlipped");

	AJellyBreeder_BreedModeFlipped_Params params;
	params.aIsLayingEggs = aIsLayingEggs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JetPackItem.Server_StopThruster
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AJetPackItem::Server_StopThruster()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JetPackItem.Server_StopThruster");

	AJetPackItem_Server_StopThruster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JetPackItem.Server_StartThruster
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AJetPackItem::Server_StartThruster()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JetPackItem.Server_StartThruster");

	AJetPackItem_Server_StartThruster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JetPackItem.OnRep_Fuel
// (Final, Native, Protected)
// Parameters:
// float*                         OldFuel                        (Parm, ZeroConstructor, IsPlainOldData)

void AJetPackItem::OnRep_Fuel(float* OldFuel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JetPackItem.OnRep_Fuel");

	AJetPackItem_OnRep_Fuel_Params params;
	params.OldFuel = OldFuel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JetPackItem.OnRep_Active
// (Event, Protected, BlueprintEvent)

void AJetPackItem::OnRep_Active()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JetPackItem.OnRep_Active");

	AJetPackItem_OnRep_Active_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.JetPackItem.OnFuelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void AJetPackItem::OnFuelChanged(float* Value, float* Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.JetPackItem.OnFuelChanged");

	AJetPackItem_OnFuelChanged_Params params;
	params.Value = Value;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.KeepInsideWorld.UnregisterForKeepInsideWorld
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UKeepInsideWorld::STATIC_UnregisterForKeepInsideWorld(class UObject** WorldContextObject, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.KeepInsideWorld.UnregisterForKeepInsideWorld");

	UKeepInsideWorld_UnregisterForKeepInsideWorld_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.KeepInsideWorld.RegisterForKeepInsideWorld
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UKeepInsideWorld::STATIC_RegisterForKeepInsideWorld(class UObject** WorldContextObject, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.KeepInsideWorld.RegisterForKeepInsideWorld");

	UKeepInsideWorld_RegisterForKeepInsideWorld_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerWaypoint.OnShow
// (Event, Protected, BlueprintEvent)

void ALaserPointerWaypoint::OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerWaypoint.OnShow");

	ALaserPointerWaypoint_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerWaypoint.OnHide
// (Event, Protected, BlueprintEvent)

void ALaserPointerWaypoint::OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerWaypoint.OnHide");

	ALaserPointerWaypoint_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerItem.ToggleLaserVisible
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool*                          aVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void ALaserPointerItem::ToggleLaserVisible(bool* aVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerItem.ToggleLaserVisible");

	ALaserPointerItem_ToggleLaserVisible_Params params;
	params.aVisible = aVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerItem.ServerPlaceMarker
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Name                           (ConstParm, Parm, ReferenceParm)
// struct FLinearColor*           Color                          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// ELaserPointerTargetType*       TypeOfTarget                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             Icon                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 aMarkerType                    (Parm, ZeroConstructor, IsPlainOldData)

void ALaserPointerItem::ServerPlaceMarker(struct FVector* Location, struct FText* Name, struct FLinearColor* Color, class AActor** Target, ELaserPointerTargetType* TypeOfTarget, class UTexture2D** Icon, class UClass** aMarkerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerItem.ServerPlaceMarker");

	ALaserPointerItem_ServerPlaceMarker_Params params;
	params.Location = Location;
	params.Name = Name;
	params.Color = Color;
	params.Target = Target;
	params.TypeOfTarget = TypeOfTarget;
	params.Icon = Icon;
	params.aMarkerType = aMarkerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerItem.Server_SecondaryUse
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ALaserPointerItem::Server_SecondaryUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerItem.Server_SecondaryUse");

	ALaserPointerItem_Server_SecondaryUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerItem.OnPointOfInterest
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                TargetLocation                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             TargetIcon                     (Parm, ZeroConstructor, IsPlainOldData)

void ALaserPointerItem::OnPointOfInterest(class AActor** TargetActor, struct FVector* TargetLocation, class UTexture2D** TargetIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerItem.OnPointOfInterest");

	ALaserPointerItem_OnPointOfInterest_Params params;
	params.TargetActor = TargetActor;
	params.TargetLocation = TargetLocation;
	params.TargetIcon = TargetIcon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerItem.OnMarkerPlaced
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Name                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLinearColor*           Color                          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// ELaserPointerTargetType*       TypeOfTarget                   (Parm, ZeroConstructor, IsPlainOldData)

void ALaserPointerItem::OnMarkerPlaced(struct FVector* Location, struct FText* Name, struct FLinearColor* Color, class AActor** Target, ELaserPointerTargetType* TypeOfTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerItem.OnMarkerPlaced");

	ALaserPointerItem_OnMarkerPlaced_Params params;
	params.Location = Location;
	params.Name = Name;
	params.Color = Color;
	params.Target = Target;
	params.TypeOfTarget = TypeOfTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LaserPointerItem.GetPointTransform
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform              PointTransform                 (Parm, OutParm, IsPlainOldData)

void ALaserPointerItem::GetPointTransform(struct FTransform* PointTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LaserPointerItem.GetPointTransform");

	ALaserPointerItem_GetPointTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PointTransform != nullptr)
		*PointTransform = params.PointTransform;
}


// Function FSD.LineCutterProjectile.UpdateBeamLocations
// (Final, Native, Protected, BlueprintCallable)

void ALineCutterProjectile::UpdateBeamLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.UpdateBeamLocations");

	ALineCutterProjectile_UpdateBeamLocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutterProjectile.TerrainSweep
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Left                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Right                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ALineCutterProjectile::TerrainSweep(struct FVector* Left, struct FVector* Right)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.TerrainSweep");

	ALineCutterProjectile_TerrainSweep_Params params;
	params.Left = Left;
	params.Right = Right;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutterProjectile.SpawnDecal
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              Result                         (Parm, OutParm, IsPlainOldData)

void ALineCutterProjectile::SpawnDecal(struct FHitResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.SpawnDecal");

	ALineCutterProjectile_SpawnDecal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Result != nullptr)
		*Result = params.Result;
}


// Function FSD.LineCutterProjectile.SetExtraBeamVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutterProjectile::SetExtraBeamVisibility(bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.SetExtraBeamVisibility");

	ALineCutterProjectile_SetExtraBeamVisibility_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutterProjectile.Server_RemoveDebris
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           instance                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Component                      (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutterProjectile::Server_RemoveDebris(int* instance, int* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.Server_RemoveDebris");

	ALineCutterProjectile_Server_RemoveDebris_Params params;
	params.instance = instance;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.PerformHit__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             Result                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ALineCutterProjectile::PerformHit__DelegateSignature(struct FHitResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.PerformHit__DelegateSignature");

	ALineCutterProjectile_PerformHit__DelegateSignature_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutterProjectile.OnRep_LineRotation
// (Final, Native, Protected)

void ALineCutterProjectile::OnRep_LineRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.OnRep_LineRotation");

	ALineCutterProjectile_OnRep_LineRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.LineSetMaxSize__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         MaxSize                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxSizeVisual                  (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutterProjectile::LineSetMaxSize__DelegateSignature(float* MaxSize, float* MaxSizeVisual)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.LineSetMaxSize__DelegateSignature");

	ALineCutterProjectile_LineSetMaxSize__DelegateSignature_Params params;
	params.MaxSize = MaxSize;
	params.MaxSizeVisual = MaxSizeVisual;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.LineMuliMaxSize__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutterProjectile::LineMuliMaxSize__DelegateSignature(float* Multiplier)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.LineMuliMaxSize__DelegateSignature");

	ALineCutterProjectile_LineMuliMaxSize__DelegateSignature_Params params;
	params.Multiplier = Multiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.LineLifeSpanDestroy__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ALineCutterProjectile::LineLifeSpanDestroy__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.LineLifeSpanDestroy__DelegateSignature");

	ALineCutterProjectile_LineLifeSpanDestroy__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.LineEffectHide__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ALineCutterProjectile::LineEffectHide__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.LineEffectHide__DelegateSignature");

	ALineCutterProjectile_LineEffectHide__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.LineDestroy__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             Result                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ALineCutterProjectile::LineDestroy__DelegateSignature(struct FHitResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.LineDestroy__DelegateSignature");

	ALineCutterProjectile_LineDestroy__DelegateSignature_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.LineCutterProjectile.LineAddMaxSize__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         Size                           (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutterProjectile::LineAddMaxSize__DelegateSignature(float* Size)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.LineCutterProjectile.LineAddMaxSize__DelegateSignature");

	ALineCutterProjectile_LineAddMaxSize__DelegateSignature_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutterProjectile.Fire
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutterProjectile::Fire(struct FVector* Origin, struct FVector* Direction, float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutterProjectile.Fire");

	ALineCutterProjectile_Fire_Params params;
	params.Origin = Origin;
	params.Direction = Direction;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerLineProjectile.TurnOffParticles
// (Final, Native, Protected)

void AGuntowerLineProjectile::TurnOffParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerLineProjectile.TurnOffParticles");

	AGuntowerLineProjectile_TurnOffParticles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.GuntowerLineProjectile.LineDestroy__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FHitResult*             Result                         (Parm, IsPlainOldData)

void AGuntowerLineProjectile::LineDestroy__DelegateSignature(struct FHitResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.GuntowerLineProjectile.LineDestroy__DelegateSignature");

	AGuntowerLineProjectile_LineDestroy__DelegateSignature_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GuntowerLineProjectile.Fire
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)

void AGuntowerLineProjectile::Fire(struct FVector* Origin, struct FVector* Direction, float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GuntowerLineProjectile.Fire");

	AGuntowerLineProjectile_Fire_Params params;
	params.Origin = Origin;
	params.Direction = Direction;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LocalizationFunctionLibrary.GetLocalizedLanguages
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FLocalizedLanguageInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FLocalizedLanguageInfo> ULocalizationFunctionLibrary::STATIC_GetLocalizedLanguages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LocalizationFunctionLibrary.GetLocalizedLanguages");

	ULocalizationFunctionLibrary_GetLocalizedLanguages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LoginBlueprintCallProxy.Login
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ULoginBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULoginBlueprintCallProxy* ULoginBlueprintCallProxy::STATIC_Login(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LoginBlueprintCallProxy.Login");

	ULoginBlueprintCallProxy_Login_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LookingAtWidget.SetCurrentTarget
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor**                 NewActor                       (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UHealth>* HealthComponent                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         OverrideTargetLostTime         (Parm, ZeroConstructor, IsPlainOldData)

void ULookingAtWidget::SetCurrentTarget(class AActor** NewActor, TScriptInterface<class UHealth>* HealthComponent, float* OverrideTargetLostTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.SetCurrentTarget");

	ULookingAtWidget_SetCurrentTarget_Params params;
	params.NewActor = NewActor;
	params.HealthComponent = HealthComponent;
	params.OverrideTargetLostTime = OverrideTargetLostTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LookingAtWidget.ResetCurrentTarget
// (Final, Native, Protected, BlueprintCallable)

void ULookingAtWidget::ResetCurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.ResetCurrentTarget");

	ULookingAtWidget_ResetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LookingAtWidget.ReceiveUpdateTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 InCurrentTarget                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ULookingAtWidget::ReceiveUpdateTarget(class AActor** InCurrentTarget, float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.ReceiveUpdateTarget");

	ULookingAtWidget_ReceiveUpdateTarget_Params params;
	params.InCurrentTarget = InCurrentTarget;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LookingAtWidget.ReceiveTargetLost
// (Event, Protected, BlueprintEvent)

void ULookingAtWidget::ReceiveTargetLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.ReceiveTargetLost");

	ULookingAtWidget_ReceiveTargetLost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LookingAtWidget.ReceiveNewTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 InCurrentTarget                (Parm, ZeroConstructor, IsPlainOldData)

void ULookingAtWidget::ReceiveNewTarget(class AActor** InCurrentTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.ReceiveNewTarget");

	ULookingAtWidget_ReceiveNewTarget_Params params;
	params.InCurrentTarget = InCurrentTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LookingAtWidget.IsValidTarget
// (Native, Event, Protected, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UHealth>* TargetHealth                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULookingAtWidget::IsValidTarget(class AActor** TargetActor, TScriptInterface<class UHealth>* TargetHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.IsValidTarget");

	ULookingAtWidget_IsValidTarget_Params params;
	params.TargetActor = TargetActor;
	params.TargetHealth = TargetHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LookingAtWidget.IsBossFight
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UHealth>* Health                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULookingAtWidget::IsBossFight(TScriptInterface<class UHealth>* Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.IsBossFight");

	ULookingAtWidget_IsBossFight_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LookingAtWidget.GetLookingAtHealth
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHealthComponentBase*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHealthComponentBase* ULookingAtWidget::GetLookingAtHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.GetLookingAtHealth");

	ULookingAtWidget_GetLookingAtHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LookingAtWidget.GetLookingAtActor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ULookingAtWidget::GetLookingAtActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.GetLookingAtActor");

	ULookingAtWidget_GetLookingAtActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.LookingAtWidget.GetCharacterTemperatureEffect
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          TemperatureEffect              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULookingAtWidget::GetCharacterTemperatureEffect(float* TemperatureEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LookingAtWidget.GetCharacterTemperatureEffect");

	ULookingAtWidget_GetCharacterTemperatureEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TemperatureEffect != nullptr)
		*TemperatureEffect = params.TemperatureEffect;

	return params.ReturnValue;
}


// Function FSD.ManualMiningItem.SpecialTargetDamageEffects
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                ImpactPoint                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                ImpactNormal                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AManualMiningItem::SpecialTargetDamageEffects(struct FVector* ImpactPoint, struct FVector* ImpactNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.SpecialTargetDamageEffects");

	AManualMiningItem_SpecialTargetDamageEffects_Params params;
	params.ImpactPoint = ImpactPoint;
	params.ImpactNormal = ImpactNormal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.SetSpecialCoolDownDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newCooldownDuration            (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::SetSpecialCoolDownDuration(float* newCooldownDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.SetSpecialCoolDownDuration");

	AManualMiningItem_SetSpecialCoolDownDuration_Params params;
	params.newCooldownDuration = newCooldownDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.Server_SetState
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// EManualMiningState*            NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::Server_SetState(EManualMiningState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.Server_SetState");

	AManualMiningItem_Server_SetState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.Server_RemoveDebrisInstance
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    HitPos                         (Parm)
// int*                           DebrisIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           remappedIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::Server_RemoveDebrisInstance(struct FVector_NetQuantize* HitPos, int* DebrisIndex, int* remappedIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.Server_RemoveDebrisInstance");

	AManualMiningItem_Server_RemoveDebrisInstance_Params params;
	params.HitPos = HitPos;
	params.DebrisIndex = DebrisIndex;
	params.remappedIndex = remappedIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.Server_HitBlock
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Position                       (Parm)
// int*                           Material                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          removeDebris                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isSpecial                      (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::Server_HitBlock(struct FVector_NetQuantize* Position, int* Material, bool* removeDebris, bool* isSpecial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.Server_HitBlock");

	AManualMiningItem_Server_HitBlock_Params params;
	params.Position = Position;
	params.Material = Material;
	params.removeDebris = removeDebris;
	params.isSpecial = isSpecial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.Server_DoPowerAttack
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AManualMiningItem::Server_DoPowerAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.Server_DoPowerAttack");

	AManualMiningItem_Server_DoPowerAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.Server_DigBlock2
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                carvePos                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                carveDirection                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           TerrainMaterial                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isSpecial                      (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::Server_DigBlock2(struct FVector* carvePos, struct FVector* carveDirection, int* TerrainMaterial, bool* isSpecial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.Server_DigBlock2");

	AManualMiningItem_Server_DigBlock2_Params params;
	params.carvePos = carvePos;
	params.carveDirection = carveDirection;
	params.TerrainMaterial = TerrainMaterial;
	params.isSpecial = isSpecial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.Server_DamageTarget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UPrimitiveComponent**    TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          isSpecial                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize*    ImpactPoint                    (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal* ImpactNormal                   (ConstParm, Parm, ReferenceParm)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::Server_DamageTarget(class UPrimitiveComponent** TargetComponent, bool* isSpecial, struct FVector_NetQuantize* ImpactPoint, struct FVector_NetQuantizeNormal* ImpactNormal, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.Server_DamageTarget");

	AManualMiningItem_Server_DamageTarget_Params params;
	params.TargetComponent = TargetComponent;
	params.isSpecial = isSpecial;
	params.ImpactPoint = ImpactPoint;
	params.ImpactNormal = ImpactNormal;
	params.PhysMaterial = PhysMaterial;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.RefreshSpecialCooldown
// (Final, Native, Public, BlueprintCallable)

void AManualMiningItem::RefreshSpecialCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.RefreshSpecialCooldown");

	AManualMiningItem_RefreshSpecialCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.OnRep_State
// (Final, Native, Protected)
// Parameters:
// EManualMiningState*            oldState                       (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::OnRep_State(EManualMiningState* oldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.OnRep_State");

	AManualMiningItem_OnRep_State_Params params;
	params.oldState = oldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.GetSpecialCooldownProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AManualMiningItem::GetSpecialCooldownProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.GetSpecialCooldownProgress");

	AManualMiningItem_GetSpecialCooldownProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ManualMiningItem.All_SimulateHitBlock
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Position                       (Parm)
// int*                           materia                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          removeDebris                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isSpecial                      (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::All_SimulateHitBlock(struct FVector_NetQuantize* Position, int* materia, bool* removeDebris, bool* isSpecial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.All_SimulateHitBlock");

	AManualMiningItem_All_SimulateHitBlock_Params params;
	params.Position = Position;
	params.materia = materia;
	params.removeDebris = removeDebris;
	params.isSpecial = isSpecial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.All_SimulateDigDebris
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Position                       (Parm)
// class UParticleSystem**        particles                      (Parm, ZeroConstructor, IsPlainOldData)
// class USoundCue**              cue                            (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::All_SimulateDigDebris(struct FVector_NetQuantize* Position, class UParticleSystem** particles, class USoundCue** cue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.All_SimulateDigDebris");

	AManualMiningItem_All_SimulateDigDebris_Params params;
	params.Position = Position;
	params.particles = particles;
	params.cue = cue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.All_SimulateDigBlock
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FVector_NetQuantize*    Position                       (Parm)
// bool*                          spawnParticles                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Material                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Density                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isSpecial                      (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::All_SimulateDigBlock(struct FVector_NetQuantize* Position, bool* spawnParticles, int* Material, float* Density, bool* isSpecial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.All_SimulateDigBlock");

	AManualMiningItem_All_SimulateDigBlock_Params params;
	params.Position = Position;
	params.spawnParticles = spawnParticles;
	params.Material = Material;
	params.Density = Density;
	params.isSpecial = isSpecial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.All_SimulateDamageTarget
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class UPrimitiveComponent**    TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          isSpecial                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize*    ImpactPoint                    (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal* ImpactNormal                   (ConstParm, Parm, ReferenceParm)
// class UFSDPhysicalMaterial**   PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AManualMiningItem::All_SimulateDamageTarget(class UPrimitiveComponent** TargetComponent, bool* isSpecial, struct FVector_NetQuantize* ImpactPoint, struct FVector_NetQuantizeNormal* ImpactNormal, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.All_SimulateDamageTarget");

	AManualMiningItem_All_SimulateDamageTarget_Params params;
	params.TargetComponent = TargetComponent;
	params.isSpecial = isSpecial;
	params.ImpactPoint = ImpactPoint;
	params.ImpactNormal = ImpactNormal;
	params.PhysMaterial = PhysMaterial;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ManualMiningItem.All_DoPowerAttack
// (Net, Native, Event, NetMulticast, Protected)

void AManualMiningItem::All_DoPowerAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ManualMiningItem.All_DoPowerAttack");

	AManualMiningItem_All_DoPowerAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MasteryIconWidget.ReceiveUnlocked
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMasteryIconWidget::ReceiveUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MasteryIconWidget.ReceiveUnlocked");

	UMasteryIconWidget_ReceiveUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MilestoneAsset.SortMilestonesByProgress
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UMilestoneAsset*> Milestones                     (Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UMilestoneAsset*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMilestoneAsset*> UMilestoneAsset::STATIC_SortMilestonesByProgress(class UObject** WorldContext, TArray<class UMilestoneAsset*>* Milestones)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.SortMilestonesByProgress");

	UMilestoneAsset_SortMilestonesByProgress_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Milestones != nullptr)
		*Milestones = params.Milestones;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.OnMissionStatChanged
// (Final, Native, Protected)
// Parameters:
// class UMissionStat**           Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UMilestoneAsset::OnMissionStatChanged(class UMissionStat** Stat, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.OnMissionStatChanged");

	UMilestoneAsset_OnMissionStatChanged_Params params;
	params.Stat = Stat;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MilestoneAsset.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMilestoneAsset::IsCompleted(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.IsCompleted");

	UMilestoneAsset_IsCompleted_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.IsClaimable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMilestoneAsset::IsClaimable(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.IsClaimable");

	UMilestoneAsset_IsClaimable_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.GetTitleForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FText UMilestoneAsset::GetTitleForTier(int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetTitleForTier");

	UMilestoneAsset_GetTitleForTier_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FText UMilestoneAsset::GetTitle(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetTitle");

	UMilestoneAsset_GetTitle_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.GetNextPerkPointsReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMilestoneAsset::GetNextPerkPointsReward(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetNextPerkPointsReward");

	UMilestoneAsset_GetNextPerkPointsReward_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.GetCurrentProgress
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            Tier                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Progress                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          CurrentCount                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          TargetCount                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UMilestoneAsset::GetCurrentProgress(class UObject** WorldContext, int* Tier, float* Progress, float* CurrentCount, float* TargetCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetCurrentProgress");

	UMilestoneAsset_GetCurrentProgress_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Tier != nullptr)
		*Tier = params.Tier;
	if (Progress != nullptr)
		*Progress = params.Progress;
	if (CurrentCount != nullptr)
		*CurrentCount = params.CurrentCount;
	if (TargetCount != nullptr)
		*TargetCount = params.TargetCount;
}


// Function FSD.MilestoneAsset.GetClaimedTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMilestoneAsset::GetClaimedTier(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetClaimedTier");

	UMilestoneAsset_GetClaimedTier_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.GetClaimedProgress
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            Tier                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Progress                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          CurrentCount                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          TargetCount                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMilestoneAsset::GetClaimedProgress(class UObject** WorldContext, int* Tier, float* Progress, float* CurrentCount, float* TargetCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetClaimedProgress");

	UMilestoneAsset_GetClaimedProgress_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Tier != nullptr)
		*Tier = params.Tier;
	if (Progress != nullptr)
		*Progress = params.Progress;
	if (CurrentCount != nullptr)
		*CurrentCount = params.CurrentCount;
	if (TargetCount != nullptr)
		*TargetCount = params.TargetCount;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.GetCategoryIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UMilestoneAsset::GetCategoryIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.GetCategoryIcon");

	UMilestoneAsset_GetCategoryIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MilestoneAsset.ClearPendingMilestoneReached
// (Final, Native, Protected, BlueprintCallable)

void UMilestoneAsset::ClearPendingMilestoneReached()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.ClearPendingMilestoneReached");

	UMilestoneAsset_ClearPendingMilestoneReached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MilestoneAsset.ClaimNextTier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMilestoneAsset::ClaimNextTier(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MilestoneAsset.ClaimNextTier");

	UMilestoneAsset_ClaimNextTier_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MiningPod.SpawnPodAtLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 podClass                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AMiningPod*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AMiningPod* AMiningPod::STATIC_SpawnPodAtLocation(class UObject** WorldContextObject, class UClass** podClass, struct FTransform* Transform)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.SpawnPodAtLocation");

	AMiningPod_SpawnPodAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.podClass = podClass;
	params.Transform = Transform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MiningPod.SetMuleInstance
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADonkeyCharacter**       Donkey                         (Parm, ZeroConstructor, IsPlainOldData)

void AMiningPod::SetMuleInstance(class ADonkeyCharacter** Donkey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.SetMuleInstance");

	AMiningPod_SetMuleInstance_Params params;
	params.Donkey = Donkey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.RecieveReturnTimerFifteenSecondWarning
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AMiningPod::RecieveReturnTimerFifteenSecondWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.RecieveReturnTimerFifteenSecondWarning");

	AMiningPod_RecieveReturnTimerFifteenSecondWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.RecieveReturnTimerExpired
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AMiningPod::RecieveReturnTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.RecieveReturnTimerExpired");

	AMiningPod_RecieveReturnTimerExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.PrepForTakeOff
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMiningPod::PrepForTakeOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.PrepForTakeOff");

	AMiningPod_PrepForTakeOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.PowerUp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMiningPod::PowerUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.PowerUp");

	AMiningPod_PowerUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.PoweredUp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMiningPod::PoweredUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.PoweredUp");

	AMiningPod_PoweredUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnRep_State
// (Final, Native, Protected)

void AMiningPod::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnRep_State");

	AMiningPod_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnRep_RampState
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnRep_RampState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnRep_RampState");

	AMiningPod_OnRep_RampState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnPrepForTakeOff
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnPrepForTakeOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnPrepForTakeOff");

	AMiningPod_OnPrepForTakeOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnPoweringUp
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnPoweringUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnPoweringUp");

	AMiningPod_OnPoweringUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnPoweredUp
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnPoweredUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnPoweredUp");

	AMiningPod_OnPoweredUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnHostInsidePod
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          isInside                       (Parm, ZeroConstructor, IsPlainOldData)

void AMiningPod::OnHostInsidePod(bool* isInside)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnHostInsidePod");

	AMiningPod_OnHostInsidePod_Params params;
	params.isInside = isInside;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnDropStarted
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnDropStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnDropStarted");

	AMiningPod_OnDropStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnDroppodImpact
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnDroppodImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnDroppodImpact");

	AMiningPod_OnDroppodImpact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnDrillingStarted
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnDrillingStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnDrillingStarted");

	AMiningPod_OnDrillingStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnDeparting
// (Event, Protected, BlueprintEvent)

void AMiningPod::OnDeparting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnDeparting");

	AMiningPod_OnDeparting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnCountdownFinished
// (Final, Native, Protected)

void AMiningPod::OnCountdownFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnCountdownFinished");

	AMiningPod_OnCountdownFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnCountdownChanged
// (Final, Native, Protected)
// Parameters:
// int*                           newTime                        (Parm, ZeroConstructor, IsPlainOldData)

void AMiningPod::OnCountdownChanged(int* newTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnCountdownChanged");

	AMiningPod_OnCountdownChanged_Params params;
	params.newTime = newTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.OnAllDwavesInsidePod
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          AllInside                      (Parm, ZeroConstructor, IsPlainOldData)

void AMiningPod::OnAllDwavesInsidePod(bool* AllInside)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.OnAllDwavesInsidePod");

	AMiningPod_OnAllDwavesInsidePod_Params params;
	params.AllInside = AllInside;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.GetTimeToDeparture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AMiningPod::GetTimeToDeparture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.GetTimeToDeparture");

	AMiningPod_GetTimeToDeparture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MiningPod.GetHasLanded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMiningPod::GetHasLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.GetHasLanded");

	AMiningPod_GetHasLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MiningPod.GetDonkeyReturnPickupLocation
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AMiningPod::GetDonkeyReturnPickupLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.GetDonkeyReturnPickupLocation");

	AMiningPod_GetDonkeyReturnPickupLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MiningPod.ForceTakeoff
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMiningPod::ForceTakeoff()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.ForceTakeoff");

	AMiningPod_ForceTakeoff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.ExitSpacerig
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMiningPod::ExitSpacerig()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.ExitSpacerig");

	AMiningPod_ExitSpacerig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.DropToTarget
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 podClass                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             dropLocation                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int*                           DropDelay                      (Parm, ZeroConstructor, IsPlainOldData)

void AMiningPod::STATIC_DropToTarget(class UObject** WorldContextObject, class UClass** podClass, struct FTransform* dropLocation, int* DropDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.DropToTarget");

	AMiningPod_DropToTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.podClass = podClass;
	params.dropLocation = dropLocation;
	params.DropDelay = DropDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.DropToMission
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 podClass                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AMiningPod::STATIC_DropToMission(class UObject** WorldContextObject, class UClass** podClass, struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.DropToMission");

	AMiningPod_DropToMission_Params params;
	params.WorldContextObject = WorldContextObject;
	params.podClass = podClass;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.DepositAllPlayersMaterials
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMiningPod::DepositAllPlayersMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.DepositAllPlayersMaterials");

	AMiningPod_DepositAllPlayersMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.Depart
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AMiningPod::Depart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.Depart");

	AMiningPod_Depart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.CorrectLocationsForSpawnedOnLocation
// (Final, Native, Protected, BlueprintCallable)

void AMiningPod::CorrectLocationsForSpawnedOnLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.CorrectLocationsForSpawnedOnLocation");

	AMiningPod_CorrectLocationsForSpawnedOnLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiningPod.AdjustLandingLocationToGround
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObjet              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                initialLocation                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AMiningPod::STATIC_AdjustLandingLocationToGround(class UObject** WorldContextObjet, struct FVector* initialLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiningPod.AdjustLandingLocationToGround");

	AMiningPod_AdjustLandingLocationToGround_Params params;
	params.WorldContextObjet = WorldContextObjet;
	params.initialLocation = initialLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionManager.OnMatchStarted
// (Final, Native, Protected)

void UMissionManager::OnMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionManager.OnMatchStarted");

	UMissionManager_OnMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExplosiveEnemiesMutator.ExplodeEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFSDPawn**               enemy                          (Parm, ZeroConstructor, IsPlainOldData)

void UExplosiveEnemiesMutator::ExplodeEnemy(class AFSDPawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExplosiveEnemiesMutator.ExplodeEnemy");

	UExplosiveEnemiesMutator_ExplodeEnemy_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RunningMissionBP.StartLogic
// (Event, Protected, BlueprintEvent)

void URunningMissionBP::StartLogic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RunningMissionBP.StartLogic");

	URunningMissionBP_StartLogic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.InfestedEnemiesMutator.GetParticleSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPawn**               enemy                          (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UInfestedEnemiesMutator::GetParticleSystem(class AFSDPawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.InfestedEnemiesMutator.GetParticleSystem");

	UInfestedEnemiesMutator_GetParticleSystem_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectMissionBP.OnEnemySpawned
// (Final, Native, Protected)
// Parameters:
// class APawn**                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectMissionBP::OnEnemySpawned(class APawn** Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectMissionBP.OnEnemySpawned");

	UStatusEffectMissionBP_OnEnemySpawned_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionPlayerAndCharacterWidget.UpdateValues
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           PlayerRank                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           PlayerStars                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           CharacterLevel                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         CharacterProgress              (Parm, ZeroConstructor, IsPlainOldData)

void UMissionPlayerAndCharacterWidget::UpdateValues(int* PlayerRank, int* PlayerStars, int* CharacterLevel, float* CharacterProgress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionPlayerAndCharacterWidget.UpdateValues");

	UMissionPlayerAndCharacterWidget_UpdateValues_Params params;
	params.PlayerRank = PlayerRank;
	params.PlayerStars = PlayerStars;
	params.CharacterLevel = CharacterLevel;
	params.CharacterProgress = CharacterProgress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionPlayerAndCharacterWidget.StepCounter
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// float*                         TimeScale                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           CounterFinished                (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UMissionPlayerAndCharacterWidget::StepCounter(float* TimeScale, bool* CounterFinished)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionPlayerAndCharacterWidget.StepCounter");

	UMissionPlayerAndCharacterWidget_StepCounter_Params params;
	params.TimeScale = TimeScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CounterFinished != nullptr)
		*CounterFinished = params.CounterFinished;
}


// Function FSD.MissionPlayerAndCharacterWidget.PingPlayerRank
// (Event, Protected, BlueprintEvent)

void UMissionPlayerAndCharacterWidget::PingPlayerRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionPlayerAndCharacterWidget.PingPlayerRank");

	UMissionPlayerAndCharacterWidget_PingPlayerRank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionPlayerAndCharacterWidget.PingCharacterLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Stars                          (Parm, ZeroConstructor, IsPlainOldData)

void UMissionPlayerAndCharacterWidget::PingCharacterLevel(int* Level, int* Stars)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionPlayerAndCharacterWidget.PingCharacterLevel");

	UMissionPlayerAndCharacterWidget_PingCharacterLevel_Params params;
	params.Level = Level;
	params.Stars = Stars;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionPlayerAndCharacterWidget.InitCounter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FPlayerProgress*        PlayerProgressStart            (Parm)
// struct FCharacterProgress*     CharacterProgressStart         (Parm)
// struct FPlayerProgress*        PlayerProgressFinish           (Parm)
// struct FCharacterProgress*     CharacterProgressFinish        (Parm)

void UMissionPlayerAndCharacterWidget::InitCounter(struct FPlayerProgress* PlayerProgressStart, struct FCharacterProgress* CharacterProgressStart, struct FPlayerProgress* PlayerProgressFinish, struct FCharacterProgress* CharacterProgressFinish)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionPlayerAndCharacterWidget.InitCounter");

	UMissionPlayerAndCharacterWidget_InitCounter_Params params;
	params.PlayerProgressStart = PlayerProgressStart;
	params.CharacterProgressStart = CharacterProgressStart;
	params.PlayerProgressFinish = PlayerProgressFinish;
	params.CharacterProgressFinish = CharacterProgressFinish;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FSDMissionSettings.GetTotalHazardBonus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// class UDifficultySetting**     DifficultySetting              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFSDMissionSettings::STATIC_GetTotalHazardBonus(class UObject** WorldContextObject, class UGeneratedMission** mission, class UDifficultySetting** DifficultySetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FSDMissionSettings.GetTotalHazardBonus");

	UFSDMissionSettings_GetTotalHazardBonus_Params params;
	params.WorldContextObject = WorldContextObject;
	params.mission = mission;
	params.DifficultySetting = DifficultySetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.MissionStat.StatCountChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UMissionStat**           MissionStat                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UMissionStat::StatCountChanged__DelegateSignature(class UMissionStat** MissionStat, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.MissionStat.StatCountChanged__DelegateSignature");

	UMissionStat_StatCountChanged__DelegateSignature_Params params;
	params.MissionStat = MissionStat;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionStat.MissionStatToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMissionStatType*              StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UMissionStat::STATIC_MissionStatToText(EMissionStatType* StatType, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.MissionStatToText");

	UMissionStat_MissionStatToText_Params params;
	params.StatType = StatType;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.Increment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UMissionStat**           Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UMissionStat::STATIC_Increment(class UObject** WorldContext, class UMissionStat** Stat, class UClass** CharacterClass, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.Increment");

	UMissionStat_Increment_Params params;
	params.WorldContext = WorldContext;
	params.Stat = Stat;
	params.CharacterClass = CharacterClass;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionStat.GetStatMinCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionStat::GetStatMinCount(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatMinCount");

	UMissionStat_GetStatMinCount_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetStatMaxCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionStat::GetStatMaxCount(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatMaxCount");

	UMissionStat_GetStatMaxCount_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetStatCountTotalAsText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UMissionStat::GetStatCountTotalAsText(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatCountTotalAsText");

	UMissionStat_GetStatCountTotalAsText_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetStatCountTotal
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionStat::GetStatCountTotal(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatCountTotal");

	UMissionStat_GetStatCountTotal_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetStatCountPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionStat::GetStatCountPct(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatCountPct");

	UMissionStat_GetStatCountPct_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetStatCountAsText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UMissionStat::GetStatCountAsText(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatCountAsText");

	UMissionStat_GetStatCountAsText_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetStatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionStat::GetStatCount(class UObject** WorldContext, class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetStatCount");

	UMissionStat_GetStatCount_Params params;
	params.WorldContext = WorldContext;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetSourceTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UMissionStat::GetSourceTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetSourceTitle");

	UMissionStat_GetSourceTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetLowestStatCountAsText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UMissionStat::GetLowestStatCountAsText(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetLowestStatCountAsText");

	UMissionStat_GetLowestStatCountAsText_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UMissionStat::GetIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetIcon");

	UMissionStat_GetIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetHighestStatCountAsText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UMissionStat::GetHighestStatCountAsText(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetHighestStatCountAsText");

	UMissionStat_GetHighestStatCountAsText_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStat.GetCategoryTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UMissionStat::GetCategoryTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStat.GetCategoryTitle");

	UMissionStat_GetCategoryTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionStatsCollector.OnResourceIncremented
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UMissionStatsCollector::OnResourceIncremented(class UCappedResource** Resource, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionStatsCollector.OnResourceIncremented");

	UMissionStatsCollector_OnResourceIncremented_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionTemplate.Receive_SetMissionParameters
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class UGeneratedMission**      mission                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FRandomStream           Random                         (Parm, OutParm, ZeroConstructor)

void UMissionTemplate::Receive_SetMissionParameters(class UGeneratedMission** mission, struct FRandomStream* Random)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionTemplate.Receive_SetMissionParameters");

	UMissionTemplate_Receive_SetMissionParameters_Params params;
	params.mission = mission;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Random != nullptr)
		*Random = params.Random;
}


// Function FSD.MissionTemplate.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFSDSaveGame**           SaveGame                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMissionTemplate::IsLocked(class UFSDSaveGame** SaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionTemplate.IsLocked");

	UMissionTemplate_IsLocked_Params params;
	params.SaveGame = SaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionTemplate.GetSoftReferenceToPLS
// (Final, Native, Public, BlueprintCallable, BlueprintPure)

void UMissionTemplate::GetSoftReferenceToPLS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionTemplate.GetSoftReferenceToPLS");

	UMissionTemplate_GetSoftReferenceToPLS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MissionTemplate.GetPrimaryObjectiveIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FObjectiveMissionIcon   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FObjectiveMissionIcon UMissionTemplate::GetPrimaryObjectiveIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionTemplate.GetPrimaryObjectiveIcon");

	UMissionTemplate_GetPrimaryObjectiveIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionTemplate.GetPLS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UMissionTemplate::GetPLS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionTemplate.GetPLS");

	UMissionTemplate_GetPLS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionFunctionLibrary.GetMissionGenerationManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UMissionGenerationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMissionGenerationManager* UMissionFunctionLibrary::STATIC_GetMissionGenerationManager(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionFunctionLibrary.GetMissionGenerationManager");

	UMissionFunctionLibrary_GetMissionGenerationManager_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionFunctionLibrary.GetMissionGenerationComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UMissionGenerationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMissionGenerationManager* UMissionFunctionLibrary::STATIC_GetMissionGenerationComponent(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionFunctionLibrary.GetMissionGenerationComponent");

	UMissionFunctionLibrary_GetMissionGenerationComponent_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionFunctionLibrary.GetGlobalMissionSeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMissionFunctionLibrary::STATIC_GetGlobalMissionSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionFunctionLibrary.GetGlobalMissionSeed");

	UMissionFunctionLibrary_GetGlobalMissionSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionDNA.GetDurationHazardBonus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionDNA::GetDurationHazardBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionDNA.GetDurationHazardBonus");

	UMissionDNA_GetDurationHazardBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.MissionDNA.GetComplexityHazardBonus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMissionDNA::GetComplexityHazardBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MissionDNA.GetComplexityHazardBonus");

	UMissionDNA_GetComplexityHazardBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectEnemies.OnEnemySpawned
// (Final, Native, Protected)
// Parameters:
// class APawn**                  enemy                          (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectEnemies::OnEnemySpawned(class APawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectEnemies.OnEnemySpawned");

	UStatusEffectEnemies_OnEnemySpawned_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExterminationReward.OnEnemyKilled
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FGameplayTagContainer*  GameplayTags                   (ConstParm, Parm, OutParm, ReferenceParm)

void UExterminationReward::OnEnemyKilled(struct FGameplayTagContainer* GameplayTags)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExterminationReward.OnEnemyKilled");

	UExterminationReward_OnEnemyKilled_Params params;
	params.GameplayTags = GameplayTags;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MountedGun.Server_Test
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AMountedGun::Server_Test()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MountedGun.Server_Test");

	AMountedGun_Server_Test_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GunLogicComponent.SetMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent**         Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UGunLogicComponent::SetMesh(class UMeshComponent** Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GunLogicComponent.SetMesh");

	UGunLogicComponent_SetMesh_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GunLogicComponent.OnWeaponFireEnded
// (Final, Native, Protected)

void UGunLogicComponent::OnWeaponFireEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GunLogicComponent.OnWeaponFireEnded");

	UGunLogicComponent_OnWeaponFireEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.GunLogicComponent.OnWeaponFired
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UGunLogicComponent::OnWeaponFired(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.GunLogicComponent.OnWeaponFired");

	UGunLogicComponent_OnWeaponFired_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MouseCursorWidget.OnUnhover
// (Event, Protected, BlueprintEvent)

void UMouseCursorWidget::OnUnhover()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MouseCursorWidget.OnUnhover");

	UMouseCursorWidget_OnUnhover_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MouseCursorWidget.OnInputSourceChanged
// (Final, Native, Protected)
// Parameters:
// EInputSource*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)

void UMouseCursorWidget::OnInputSourceChanged(EInputSource* Source)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MouseCursorWidget.OnInputSourceChanged");

	UMouseCursorWidget_OnInputSourceChanged_Params params;
	params.Source = Source;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MouseCursorWidget.OnHover
// (Event, Protected, BlueprintEvent)

void UMouseCursorWidget::OnHover()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MouseCursorWidget.OnHover");

	UMouseCursorWidget_OnHover_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MultiHitscanComponent.Server_RegisterHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FMultiHitscanHit>* hitResults                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UMultiHitscanComponent::Server_RegisterHit(TArray<struct FMultiHitscanHit>* hitResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MultiHitscanComponent.Server_RegisterHit");

	UMultiHitscanComponent_Server_RegisterHit_Params params;
	params.hitResults = hitResults;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MultiHitscanComponent.All_ShowHit
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<struct FMultiHitscanHit>* hitResults                     (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UMultiHitscanComponent::All_ShowHit(TArray<struct FMultiHitscanHit>* hitResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MultiHitscanComponent.All_ShowHit");

	UMultiHitscanComponent_All_ShowHit_Params params;
	params.hitResults = hitResults;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MusicManager.StopNetworked
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicLibrary**          library                        (Parm, ZeroConstructor, IsPlainOldData)

void UMusicManager::StopNetworked(class UMusicLibrary** library)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MusicManager.StopNetworked");

	UMusicManager_StopNetworked_Params params;
	params.library = library;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MusicManager.PlayNetworked
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicLibrary**          library                        (Parm, ZeroConstructor, IsPlainOldData)

void UMusicManager::PlayNetworked(class UMusicLibrary** library)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MusicManager.PlayNetworked");

	UMusicManager_PlayNetworked_Params params;
	params.library = library;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MusicManager.PlayLocally
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicLibrary**          library                        (Parm, ZeroConstructor, IsPlainOldData)

void UMusicManager::PlayLocally(class UMusicLibrary** library)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MusicManager.PlayLocally");

	UMusicManager_PlayLocally_Params params;
	params.library = library;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MusicManager.OnNetworkedAudioFinished
// (Final, Native, Protected)
// Parameters:
// class UAudioComponent**        AudioComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMusicManager::OnNetworkedAudioFinished(class UAudioComponent** AudioComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MusicManager.OnNetworkedAudioFinished");

	UMusicManager_OnNetworkedAudioFinished_Params params;
	params.AudioComponent = AudioComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MusicManager.OnAudioFinished
// (Final, Native, Protected)
// Parameters:
// class UAudioComponent**        AudioComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMusicManager::OnAudioFinished(class UAudioComponent** AudioComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MusicManager.OnAudioFinished");

	UMusicManager_OnAudioFinished_Params params;
	params.AudioComponent = AudioComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenComponent.RegisterOxygenEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        OxygenCallback                 (Parm, ZeroConstructor)
// float*                         oxygenLevel                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          triggerOnOxygenLoss            (Parm, ZeroConstructor, IsPlainOldData)

void UOxygenComponent::RegisterOxygenEvent(struct FScriptDelegate* OxygenCallback, float* oxygenLevel, bool* triggerOnOxygenLoss)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenComponent.RegisterOxygenEvent");

	UOxygenComponent_RegisterOxygenEvent_Params params;
	params.OxygenCallback = OxygenCallback;
	params.oxygenLevel = oxygenLevel;
	params.triggerOnOxygenLoss = triggerOnOxygenLoss;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenComponent.OnRevived
// (Final, Native, Protected)

void UOxygenComponent::OnRevived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenComponent.OnRevived");

	UOxygenComponent_OnRevived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenComponent.OnRep_NetworkedOxygen
// (Final, Native, Protected)
// Parameters:
// int*                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UOxygenComponent::OnRep_NetworkedOxygen(int* OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenComponent.OnRep_NetworkedOxygen");

	UOxygenComponent_OnRep_NetworkedOxygen_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenComponent.OnRep_IsReplenishingOxygen
// (Final, Native, Protected)

void UOxygenComponent::OnRep_IsReplenishingOxygen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenComponent.OnRep_IsReplenishingOxygen");

	UOxygenComponent_OnRep_IsReplenishingOxygen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenComponent.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOxygenComponent::OnDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenComponent.OnDeath");

	UOxygenComponent_OnDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenSourceComponent.OnTimerTick
// (Final, Native, Protected)

void UOxygenSourceComponent::OnTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenSourceComponent.OnTimerTick");

	UOxygenSourceComponent_OnTimerTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OxygenSourceComponent.OnSourceActivated
// (Event, Protected, BlueprintEvent)

void UOxygenSourceComponent::OnSourceActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OxygenSourceComponent.OnSourceActivated");

	UOxygenSourceComponent_OnSourceActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacterID.GetCharacterClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UPlayerCharacterID::GetCharacterClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterID.GetCharacterClass");

	UPlayerCharacterID_GetCharacterClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterID.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPlayerCharacterID::GetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterID.GetCharacter");

	UPlayerCharacterID_GetCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemID.GetItemClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UItemID::GetItemClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemID.GetItemClass");

	UItemID_GetItemClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemID.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AItem* UItemID::GetItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemID.GetItem");

	UItemID_GetItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemID.GetActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UItemID::GetActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemID.GetActorClass");

	UItemID_GetActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemID.GetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UItemID::GetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemID.GetActor");

	UItemID_GetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectivesManager.OnObjectiveChanged
// (Final, Native, Protected)
// Parameters:
// class UObjective**             Obj                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UObjectivesManager::OnObjectiveChanged(class UObjective** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectivesManager.OnObjectiveChanged");

	UObjectivesManager_OnObjectiveChanged_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObjectivesManager.GetSecondaryObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObjective*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UObjective* UObjectivesManager::GetSecondaryObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectivesManager.GetSecondaryObjective");

	UObjectivesManager_GetSecondaryObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectivesManager.GetPrimaryObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObjective*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UObjective* UObjectivesManager::GetPrimaryObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectivesManager.GetPrimaryObjective");

	UObjectivesManager_GetPrimaryObjective_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObjectivesManager.ExitPodDescending
// (Final, Native, Public, BlueprintCallable)

void UObjectivesManager::ExitPodDescending()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectivesManager.ExitPodDescending");

	UObjectivesManager_ExitPodDescending_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObjectivesManager.ExitPodArrived
// (Final, Native, Public, BlueprintCallable)

void UObjectivesManager::ExitPodArrived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectivesManager.ExitPodArrived");

	UObjectivesManager_ExitPodArrived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObjectivesManager.DropPodExited
// (Final, Native, Public, BlueprintCallable)

void UObjectivesManager::DropPodExited()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectivesManager.DropPodExited");

	UObjectivesManager_DropPodExited_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.NoiseFunctionLibrary.SphericalNoiseMovementComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector*                Center                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TimeOffset                     (Parm, ZeroConstructor, IsPlainOldData)

void UNoiseFunctionLibrary::STATIC_SphericalNoiseMovementComponent(class UObject** WorldContextObject, class USceneComponent** Component, struct FVector* Center, float* Radius, float* Speed, float* TimeOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.SphericalNoiseMovementComponent");

	UNoiseFunctionLibrary_SphericalNoiseMovementComponent_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Component = Component;
	params.Center = Center;
	params.Radius = Radius;
	params.Speed = Speed;
	params.TimeOffset = TimeOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.NoiseFunctionLibrary.SphericalNoiseMovementActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Center                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TimeOffset                     (Parm, ZeroConstructor, IsPlainOldData)

void UNoiseFunctionLibrary::STATIC_SphericalNoiseMovementActor(class UObject** WorldContextObject, class AActor** Actor, struct FVector* Center, float* Radius, float* Speed, float* TimeOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.SphericalNoiseMovementActor");

	UNoiseFunctionLibrary_SphericalNoiseMovementActor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;
	params.Center = Center;
	params.Radius = Radius;
	params.Speed = Speed;
	params.TimeOffset = TimeOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.NoiseFunctionLibrary.NoiseSphere3D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UNoiseFunctionLibrary::STATIC_NoiseSphere3D(class UObject** WorldContextObject, float* Time, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.NoiseSphere3D");

	UNoiseFunctionLibrary_NoiseSphere3D_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Time = Time;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NoiseFunctionLibrary.NoiseSphere2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UNoiseFunctionLibrary::STATIC_NoiseSphere2D(class UObject** WorldContextObject, float* Time, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.NoiseSphere2D");

	UNoiseFunctionLibrary_NoiseSphere2D_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Time = Time;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NoiseFunctionLibrary.Noise3D
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         X                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Z                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UNoiseFunctionLibrary::STATIC_Noise3D(class UObject** WorldContextObject, float* X, float* Y, float* Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.Noise3D");

	UNoiseFunctionLibrary_Noise3D_Params params;
	params.WorldContextObject = WorldContextObject;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NoiseFunctionLibrary.Noise2D
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         X                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UNoiseFunctionLibrary::STATIC_Noise2D(class UObject** WorldContextObject, float* X, float* Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.Noise2D");

	UNoiseFunctionLibrary_Noise2D_Params params;
	params.WorldContextObject = WorldContextObject;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.NoiseFunctionLibrary.Noise
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UNoiseFunctionLibrary::STATIC_Noise(class UObject** WorldContextObject, float* X)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.NoiseFunctionLibrary.Noise");

	UNoiseFunctionLibrary_Noise_Params params;
	params.WorldContextObject = WorldContextObject;
	params.X = X;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ObstructionChecker.Timer_Tick
// (Final, Native, Protected)

void UObstructionChecker::Timer_Tick()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObstructionChecker.Timer_Tick");

	UObstructionChecker_Timer_Tick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObstructionChecker.Timer_Result
// (Final, Native, Protected)

void UObstructionChecker::Timer_Result()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObstructionChecker.Timer_Result");

	UObstructionChecker_Timer_Result_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObstructionChecker.CheckForObstructions
// (Final, Native, Public, BlueprintCallable)

void UObstructionChecker::CheckForObstructions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObstructionChecker.CheckForObstructions");

	UObstructionChecker_CheckForObstructions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OptionalUIWidget.OnVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// class UOptionalUICategory**    UICategory                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UOptionalUIWidget::OnVisibilityChanged(class UOptionalUICategory** UICategory, bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OptionalUIWidget.OnVisibilityChanged");

	UOptionalUIWidget_OnVisibilityChanged_Params params;
	params.UICategory = UICategory;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.UnlockOutline
// (Final, Native, Public, BlueprintCallable)

void UOutlineComponent::UnlockOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.UnlockOutline");

	UOutlineComponent_UnlockOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.ToggleDefaultOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::ToggleDefaultOutline(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.ToggleDefaultOutline");

	UOutlineComponent_ToggleDefaultOutline_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.SetOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOutline*                      Outline                        (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::SetOutline(EOutline* Outline)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.SetOutline");

	UOutlineComponent_SetOutline_Params params;
	params.Outline = Outline;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.RemoveFromOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOutlineComponent::RemoveFromOutline(class UPrimitiveComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.RemoveFromOutline");

	UOutlineComponent_RemoveFromOutline_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.OnToggleOutline
// (Final, Native, Protected)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::OnToggleOutline(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.OnToggleOutline");

	UOutlineComponent_OnToggleOutline_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.OnOwnerDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOutlineComponent::OnOwnerDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.OnOwnerDeath");

	UOutlineComponent_OnOwnerDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.OnLocalPlayerSet
// (Final, Native, Protected)
// Parameters:
// class APlayerCharacter**       PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::OnLocalPlayerSet(class APlayerCharacter** PlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.OnLocalPlayerSet");

	UOutlineComponent_OnLocalPlayerSet_Params params;
	params.PlayerCharacter = PlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.OnItemUnequipped
// (Final, Native, Protected)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::OnItemUnequipped(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.OnItemUnequipped");

	UOutlineComponent_OnItemUnequipped_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.OnItemEquipped
// (Final, Native, Protected)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::OnItemEquipped(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.OnItemEquipped");

	UOutlineComponent_OnItemEquipped_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.LockOutline
// (Final, Native, Public, BlueprintCallable)

void UOutlineComponent::LockOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.LockOutline");

	UOutlineComponent_LockOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.EnableActivateOnHoldTab
// (Final, Native, Public, BlueprintCallable)

void UOutlineComponent::EnableActivateOnHoldTab()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.EnableActivateOnHoldTab");

	UOutlineComponent_EnableActivateOnHoldTab_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.AddToOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOutlineComponent::AddToOutline(class UPrimitiveComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.AddToOutline");

	UOutlineComponent_AddToOutline_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OutlineComponent.AddActorToOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UOutlineComponent::AddActorToOutline(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OutlineComponent.AddActorToOutline");

	UOutlineComponent_AddActorToOutline_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OverheatingAggregator.Server_SetTemperature
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         NewTemperature                 (Parm, ZeroConstructor, IsPlainOldData)

void UOverheatingAggregator::Server_SetTemperature(float* NewTemperature)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.Server_SetTemperature");

	UOverheatingAggregator_Server_SetTemperature_Params params;
	params.NewTemperature = NewTemperature;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OverheatingAggregator.Server_SetIsOverheated
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          NewOverheated                  (Parm, ZeroConstructor, IsPlainOldData)

void UOverheatingAggregator::Server_SetIsOverheated(bool* NewOverheated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.Server_SetIsOverheated");

	UOverheatingAggregator_Server_SetIsOverheated_Params params;
	params.NewOverheated = NewOverheated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.OverheatingAggregator.OverheatingProgressChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void UOverheatingAggregator::OverheatingProgressChanged__DelegateSignature(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.OverheatingAggregator.OverheatingProgressChanged__DelegateSignature");

	UOverheatingAggregator_OverheatingProgressChanged__DelegateSignature_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.OverheatingAggregator.OverheatedChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool*                          Overheated                     (Parm, ZeroConstructor, IsPlainOldData)

void UOverheatingAggregator::OverheatedChanged__DelegateSignature(bool* Overheated)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.OverheatingAggregator.OverheatedChanged__DelegateSignature");

	UOverheatingAggregator_OverheatedChanged__DelegateSignature_Params params;
	params.Overheated = Overheated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OverheatingAggregator.OnRep_Temperature
// (Final, Native, Protected)

void UOverheatingAggregator::OnRep_Temperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.OnRep_Temperature");

	UOverheatingAggregator_OnRep_Temperature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OverheatingAggregator.OnRep_IsOverheated
// (Final, Native, Protected)

void UOverheatingAggregator::OnRep_IsOverheated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.OnRep_IsOverheated");

	UOverheatingAggregator_OnRep_IsOverheated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OverheatingAggregator.GetTemperature
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UOverheatingAggregator::GetTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.GetTemperature");

	UOverheatingAggregator_GetTemperature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.OverheatingAggregator.GetOverheatingProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UOverheatingAggregator::GetOverheatingProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.GetOverheatingProgress");

	UOverheatingAggregator_GetOverheatingProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.OverheatingAggregator.GetIsOverheated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOverheatingAggregator::GetIsOverheated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverheatingAggregator.GetIsOverheated");

	UOverheatingAggregator_GetIsOverheated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ParasiteEnemy.OnSelfDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   aHealthComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AParasiteEnemy::OnSelfDeath(class UHealthComponentBase** aHealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ParasiteEnemy.OnSelfDeath");

	AParasiteEnemy_OnSelfDeath_Params params;
	params.aHealthComponent = aHealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PassedOutStateComponent.ReceiveTeamPassedOut
// (Event, Protected, BlueprintEvent)

void UPassedOutStateComponent::ReceiveTeamPassedOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PassedOutStateComponent.ReceiveTeamPassedOut");

	UPassedOutStateComponent_ReceiveTeamPassedOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PathfinderCollisionComponent.DisablePFCollision
// (Final, Native, Public, BlueprintCallable)

void UPathfinderCollisionComponent::DisablePFCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderCollisionComponent.DisablePFCollision");

	UPathfinderCollisionComponent_DisablePFCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PathfinderCollisionComponent.ActivatePFCollision
// (Final, Native, Public, BlueprintCallable)

void UPathfinderCollisionComponent::ActivatePFCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderCollisionComponent.ActivatePFCollision");

	UPathfinderCollisionComponent_ActivatePFCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PathfinderFunctionLibrary.SnapToGrid
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// EDeepPathFinderType*           pathType                       (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pathSize                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         maxSnapDistance                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UPathfinderFunctionLibrary::STATIC_SnapToGrid(class UObject** WorldContextObject, struct FVector* Origin, EDeepPathFinderType* pathType, EDeepPathFinderSize* pathSize, float* maxSnapDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderFunctionLibrary.SnapToGrid");

	UPathfinderFunctionLibrary_SnapToGrid_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.pathType = pathType;
	params.pathSize = pathSize;
	params.maxSnapDistance = maxSnapDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PathfinderFunctionLibrary.IsPathfinderReady
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPathfinderFunctionLibrary::STATIC_IsPathfinderReady(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderFunctionLibrary.IsPathfinderReady");

	UPathfinderFunctionLibrary_IsPathfinderReady_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PathfinderFunctionLibrary.FindRandomPositionOnNavmeshAtDistance
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         atDistance                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UPathfinderFunctionLibrary::STATIC_FindRandomPositionOnNavmeshAtDistance(class UObject** WorldContextObject, struct FVector* Origin, float* atDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderFunctionLibrary.FindRandomPositionOnNavmeshAtDistance");

	UPathfinderFunctionLibrary_FindRandomPositionOnNavmeshAtDistance_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.atDistance = atDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PathfinderFunctionLibrary.FindRandomNearbyPositionOnNavmesh
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UPathfinderFunctionLibrary::STATIC_FindRandomNearbyPositionOnNavmesh(class UObject** WorldContextObject, struct FVector* Origin, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderFunctionLibrary.FindRandomNearbyPositionOnNavmesh");

	UPathfinderFunctionLibrary_FindRandomNearbyPositionOnNavmesh_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PathfinderFunctionLibrary.FindPointAlongPathTo
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                Destination                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         atDistance                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UPathfinderFunctionLibrary::STATIC_FindPointAlongPathTo(class UObject** WorldContextObject, struct FVector* Origin, struct FVector* Destination, float* atDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PathfinderFunctionLibrary.FindPointAlongPathTo");

	UPathfinderFunctionLibrary_FindPointAlongPathTo_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.Destination = Destination;
	params.atDistance = atDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AfflictionFunctionLibrary.PlayEnemyExplosionEffects
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFSDPawn**               enemy                          (Parm, ZeroConstructor, IsPlainOldData)

void UAfflictionFunctionLibrary::STATIC_PlayEnemyExplosionEffects(class AFSDPawn** enemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AfflictionFunctionLibrary.PlayEnemyExplosionEffects");

	UAfflictionFunctionLibrary_PlayEnemyExplosionEffects_Params params;
	params.enemy = enemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnAfflictionComponent.PushAffliction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPawnAffliction**        affliction                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          onlyIfNotActive                (Parm, ZeroConstructor, IsPlainOldData)

void UPawnAfflictionComponent::PushAffliction(class UPawnAffliction** affliction, bool* onlyIfNotActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnAfflictionComponent.PushAffliction");

	UPawnAfflictionComponent_PushAffliction_Params params;
	params.affliction = affliction;
	params.onlyIfNotActive = onlyIfNotActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnAfflictionComponent.PopAffliction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPawnAffliction**        affliction                     (Parm, ZeroConstructor, IsPlainOldData)

void UPawnAfflictionComponent::PopAffliction(class UPawnAffliction** affliction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnAfflictionComponent.PopAffliction");

	UPawnAfflictionComponent_PopAffliction_Params params;
	params.affliction = affliction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnAfflictionComponent.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPawnAfflictionComponent::OnDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnAfflictionComponent.OnDeath");

	UPawnAfflictionComponent_OnDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnAfflictionComponent.IsAfflictedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPawnAffliction**        affliction                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPawnAfflictionComponent::IsAfflictedBy(class UPawnAffliction** affliction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnAfflictionComponent.IsAfflictedBy");

	UPawnAfflictionComponent_IsAfflictedBy_Params params;
	params.affliction = affliction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PawnAfflictionComponent.GetActiveAfflictions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UPawnAffliction*> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UPawnAffliction*> UPawnAfflictionComponent::GetActiveAfflictions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnAfflictionComponent.GetActiveAfflictions");

	UPawnAfflictionComponent_GetActiveAfflictions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerAfflictionComponent.ShowPlayerOverlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayerAfflictionOverlay** Overlay                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerAfflictionComponent::ShowPlayerOverlay(class UPlayerAfflictionOverlay** Overlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAfflictionComponent.ShowPlayerOverlay");

	UPlayerAfflictionComponent_ShowPlayerOverlay_Params params;
	params.Overlay = Overlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.PlayerAfflictionComponent.OverlayDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UPlayerAfflictionOverlay** Overlay                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerAfflictionComponent::OverlayDelegate__DelegateSignature(class UPlayerAfflictionOverlay** Overlay)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PlayerAfflictionComponent.OverlayDelegate__DelegateSignature");

	UPlayerAfflictionComponent_OverlayDelegate__DelegateSignature_Params params;
	params.Overlay = Overlay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAfflictionComponent.HidePlayerOverlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayerAfflictionOverlay** Overlay                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerAfflictionComponent::HidePlayerOverlay(class UPlayerAfflictionOverlay** Overlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAfflictionComponent.HidePlayerOverlay");

	UPlayerAfflictionComponent_HidePlayerOverlay_Params params;
	params.Overlay = Overlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAfflictionOverlayWidget.ReceiveEndOverlay
// (Event, Protected, BlueprintEvent)

void UPlayerAfflictionOverlayWidget::ReceiveEndOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAfflictionOverlayWidget.ReceiveEndOverlay");

	UPlayerAfflictionOverlayWidget_ReceiveEndOverlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAfflictionOverlayWidget.ReceiveBeginOverlay
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class UTexture2D**             InTexture                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           InTint                         (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerAfflictionOverlayWidget::ReceiveBeginOverlay(class UTexture2D** InTexture, struct FLinearColor* InTint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAfflictionOverlayWidget.ReceiveBeginOverlay");

	UPlayerAfflictionOverlayWidget_ReceiveBeginOverlay_Params params;
	params.InTexture = InTexture;
	params.InTint = InTint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAfflictionOverlayWidget.EndOverlay
// (Final, Native, Public, BlueprintCallable)

void UPlayerAfflictionOverlayWidget::EndOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAfflictionOverlayWidget.EndOverlay");

	UPlayerAfflictionOverlayWidget_EndOverlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAfflictionOverlayWidget.BeginOverlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayerAfflictionOverlay** InOverlay                      (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerAfflictionOverlayWidget::BeginOverlay(class UPlayerAfflictionOverlay** InOverlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAfflictionOverlayWidget.BeginOverlay");

	UPlayerAfflictionOverlayWidget_BeginOverlay_Params params;
	params.InOverlay = InOverlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnStatsComponent.RemoveModifier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPawnStat**              Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UPawnStatsComponent::RemoveModifier(class UPawnStat** Stat, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnStatsComponent.RemoveModifier");

	UPawnStatsComponent_RemoveModifier_Params params;
	params.Stat = Stat;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnStatsComponent.GetStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPawnStat**              Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPawnStatsComponent::GetStatValue(class UPawnStat** Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnStatsComponent.GetStatValue");

	UPawnStatsComponent_GetStatValue_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PawnStatsComponent.ChangeModifier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPawnStat**              Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         CurrentValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UPawnStatsComponent::ChangeModifier(class UPawnStat** Stat, float* CurrentValue, float* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnStatsComponent.ChangeModifier");

	UPawnStatsComponent_ChangeModifier_Params params;
	params.Stat = Stat;
	params.CurrentValue = CurrentValue;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PawnStatsComponent.AddModifier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPawnStat**              Stat                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPawnStatsComponent::AddModifier(class UPawnStat** Stat, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PawnStatsComponent.AddModifier");

	UPawnStatsComponent_AddModifier_Params params;
	params.Stat = Stat;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkLogic.StartLogic
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)

void UPerkLogic::StartLogic(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkLogic.StartLogic");

	UPerkLogic_StartLogic_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PerkLogic.GetCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPerkLogic::GetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkLogic.GetCharacter");

	UPerkLogic_GetCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkLogic.GetAdditionalText
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int*                           Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UPerkLogic::GetAdditionalText(int* Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkLogic.GetAdditionalText");

	UPerkLogic_GetAdditionalText_Params params;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PerkHUDWidget.SetPerkAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPerkAsset**             InPerk                         (Parm, ZeroConstructor, IsPlainOldData)

void UPerkHUDWidget::SetPerkAsset(class UPerkAsset** InPerk)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkHUDWidget.SetPerkAsset");

	UPerkHUDWidget_SetPerkAsset_Params params;
	params.InPerk = InPerk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PerkHUDWidget.ReceivePerkAssetChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UPerkHUDWidget::ReceivePerkAssetChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PerkHUDWidget.ReceivePerkAssetChanged");

	UPerkHUDWidget_ReceivePerkAssetChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PilotingStateComponent.Server_MoveRight
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UPilotingStateComponent::Server_MoveRight(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PilotingStateComponent.Server_MoveRight");

	UPilotingStateComponent_Server_MoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PilotingStateComponent.Server_MoveForward
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UPilotingStateComponent::Server_MoveForward(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PilotingStateComponent.Server_MoveForward");

	UPilotingStateComponent_Server_MoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PilotingStateComponent.OnRep_Vehicle
// (Final, Native, Protected)

void UPilotingStateComponent::OnRep_Vehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PilotingStateComponent.OnRep_Vehicle");

	UPilotingStateComponent_OnRep_Vehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlaceableItem.Server_SpawnItem
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void APlaceableItem::Server_SpawnItem(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlaceableItem.Server_SpawnItem");

	APlaceableItem_Server_SpawnItem_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlaceableItem.ReceiveItemSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 SpawnedActor                   (Parm, ZeroConstructor, IsPlainOldData)

void APlaceableItem::ReceiveItemSpawned(class AActor** SpawnedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlaceableItem.ReceiveItemSpawned");

	APlaceableItem_ReceiveItemSpawned_Params params;
	params.SpawnedActor = SpawnedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlaceableItem.OnCarriedAmountChanged
// (Final, Native, Protected)
// Parameters:
// int*                           newAmount                      (Parm, ZeroConstructor, IsPlainOldData)

void APlaceableItem::OnCarriedAmountChanged(int* newAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlaceableItem.OnCarriedAmountChanged");

	APlaceableItem_OnCarriedAmountChanged_Params params;
	params.newAmount = newAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlanetZoneSetup.GetPlanetZoneForBiome
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBiome**                 Biome                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPlanetZone*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlanetZone* UPlanetZoneSetup::GetPlanetZoneForBiome(class UBiome** Biome)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlanetZoneSetup.GetPlanetZoneForBiome");

	UPlanetZoneSetup_GetPlanetZoneForBiome_Params params;
	params.Biome = Biome;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlanetZone.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFSDSaveGame**           SaveGame                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlanetZone::IsUnlocked(class UFSDSaveGame** SaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlanetZone.IsUnlocked");

	UPlanetZone_IsUnlocked_Params params;
	params.SaveGame = SaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlanetZone.GetBiomes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBiome*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UBiome*> UPlanetZone::GetBiomes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlanetZone.GetBiomes");

	UPlanetZone_GetBiomes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerAnimInstance.StopUseMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerAnimInstance::StopUseMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAnimInstance.StopUseMontage");

	UPlayerAnimInstance_StopUseMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerAnimInstance.StopInspectWeapon
// (Event, Protected, BlueprintEvent)

void UPlayerAnimInstance::StopInspectWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAnimInstance.StopInspectWeapon");

	UPlayerAnimInstance_StopInspectWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAnimInstance.StartInspectWeapon
// (Event, Protected, BlueprintEvent)

void UPlayerAnimInstance::StartInspectWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAnimInstance.StartInspectWeapon");

	UPlayerAnimInstance_StartInspectWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAnimInstance.SetAiming
// (Final, Native, Public, BlueprintCallable)

void UPlayerAnimInstance::SetAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAnimInstance.SetAiming");

	UPlayerAnimInstance_SetAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAnimInstance.PlayUseMontages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUseAnimationSetting**   useSetting                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerAnimInstance::PlayUseMontages(class UUseAnimationSetting** useSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAnimInstance.PlayUseMontages");

	UPlayerAnimInstance_PlayUseMontages_Params params;
	params.useSetting = useSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerAnimInstance.GetAnimationSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItemCharacterAnimationSet* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemCharacterAnimationSet* UPlayerAnimInstance::GetAnimationSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerAnimInstance.GetAnimationSet");

	UPlayerAnimInstance_GetAnimationSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.SetOverrideFullBody
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          overrideEnabled                (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTPAnimInstance::SetOverrideFullBody(bool* overrideEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.SetOverrideFullBody");

	UPlayerTPAnimInstance_SetOverrideFullBody_Params params;
	params.overrideEnabled = overrideEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTPAnimInstance.GetTPSprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPSprint");

	UPlayerTPAnimInstance_GetTPSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPLookForward_Aim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPLookForward_Aim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPLookForward_Aim");

	UPlayerTPAnimInstance_GetTPLookForward_Aim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPLookForward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPLookForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPLookForward");

	UPlayerTPAnimInstance_GetTPLookForward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPJumpStart_Aim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPJumpStart_Aim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPJumpStart_Aim");

	UPlayerTPAnimInstance_GetTPJumpStart_Aim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPJumpStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPJumpStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPJumpStart");

	UPlayerTPAnimInstance_GetTPJumpStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPJumpLoop_Aim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPJumpLoop_Aim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPJumpLoop_Aim");

	UPlayerTPAnimInstance_GetTPJumpLoop_Aim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPJumpLoop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPJumpLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPJumpLoop");

	UPlayerTPAnimInstance_GetTPJumpLoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPIdle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPIdle");

	UPlayerTPAnimInstance_GetTPIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPDowned_Aim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPDowned_Aim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPDowned_Aim");

	UPlayerTPAnimInstance_GetTPDowned_Aim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetTPDowned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* UPlayerTPAnimInstance::GetTPDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetTPDowned");

	UPlayerTPAnimInstance_GetTPDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTPAnimInstance.GetAnimationSetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterAnimSet              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterAnimSet UPlayerTPAnimInstance::GetAnimationSetType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTPAnimInstance.GetAnimationSetType");

	UPlayerTPAnimInstance_GetAnimationSetType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.UseZipLine
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AZipLineProjectile**     zipline                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Start                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                End                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void APlayerCharacter::UseZipLine(class AZipLineProjectile** zipline, struct FVector* Start, struct FVector* End)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.UseZipLine");

	APlayerCharacter_UseZipLine_Params params;
	params.zipline = zipline;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Unparalyze
// (Final, Native, Public, BlueprintCallable)

void APlayerCharacter::Unparalyze()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Unparalyze");

	APlayerCharacter_Unparalyze_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ToggleScanTool
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::ToggleScanTool(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ToggleScanTool");

	APlayerCharacter_ToggleScanTool_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ToggleHUDReleased
// (Final, Native, Protected)

void APlayerCharacter::ToggleHUDReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ToggleHUDReleased");

	APlayerCharacter_ToggleHUDReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ToggleHUDPressed
// (Final, Native, Protected)

void APlayerCharacter::ToggleHUDPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ToggleHUDPressed");

	APlayerCharacter_ToggleHUDPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ToggleHeadLight
// (Final, Native, Public, BlueprintCallable)

void APlayerCharacter::ToggleHeadLight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ToggleHeadLight");

	APlayerCharacter_ToggleHeadLight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ThrowFlareReleased
// (Final, Native, Protected)

void APlayerCharacter::ThrowFlareReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ThrowFlareReleased");

	APlayerCharacter_ThrowFlareReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ThrowFlarePressed
// (Final, Native, Protected)

void APlayerCharacter::ThrowFlarePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ThrowFlarePressed");

	APlayerCharacter_ThrowFlarePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ThrowFlare
// (Final, Native, Protected)

void APlayerCharacter::ThrowFlare()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ThrowFlare");

	APlayerCharacter_ThrowFlare_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.StartTutorials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          ResetTutorials                 (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::StartTutorials(bool* ResetTutorials)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.StartTutorials");

	APlayerCharacter_StartTutorials_Params params;
	params.ResetTutorials = ResetTutorials;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetStandingDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          standingDown                   (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetStandingDown(bool* standingDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetStandingDown");

	APlayerCharacter_SetStandingDown_Params params;
	params.standingDown = standingDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetRadarMaterialInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic** matInstance                    (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetRadarMaterialInstance(class UMaterialInstanceDynamic** matInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetRadarMaterialInstance");

	APlayerCharacter_SetRadarMaterialInstance_Params params;
	params.matInstance = matInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetOutsideShieldGenerator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AArmorRegeneratorActor** Shield                         (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetOutsideShieldGenerator(class AArmorRegeneratorActor** Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetOutsideShieldGenerator");

	APlayerCharacter_SetOutsideShieldGenerator_Params params;
	params.Shield = Shield;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetIsCharacterSelectionModel
// (Final, Native, Public, BlueprintCallable)

void APlayerCharacter::SetIsCharacterSelectionModel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetIsCharacterSelectionModel");

	APlayerCharacter_SetIsCharacterSelectionModel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetInsideShieldGenerator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AArmorRegeneratorActor** Shield                         (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetInsideShieldGenerator(class AArmorRegeneratorActor** Shield)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetInsideShieldGenerator");

	APlayerCharacter_SetInsideShieldGenerator_Params params;
	params.Shield = Shield;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetInCharacterSelectionWorld
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APlayerCharacter::SetInCharacterSelectionWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetInCharacterSelectionWorld");

	APlayerCharacter_SetInCharacterSelectionWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetHeadLight
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool*                          on                             (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetHeadLight(bool* on)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetHeadLight");

	APlayerCharacter_SetHeadLight_Params params;
	params.on = on;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetFallbackPhysicalMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetFallbackPhysicalMaterial(class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetFallbackPhysicalMaterial");

	APlayerCharacter_SetFallbackPhysicalMaterial_Params params;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SetCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterCameraMode*          NewCameraMode                  (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SetCameraMode(ECharacterCameraMode* NewCameraMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SetCameraMode");

	APlayerCharacter_SetCameraMode_Params params;
	params.NewCameraMode = NewCameraMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_ThrowCarriedItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    force                          (Parm)

void APlayerCharacter::Server_ThrowCarriedItem(struct FVector_NetQuantize* force)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_ThrowCarriedItem");

	APlayerCharacter_Server_ThrowCarriedItem_Params params;
	params.force = force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_StartSalute
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UAnimMontage**           startSalute                    (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_StartSalute(class UAnimMontage** startSalute)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_StartSalute");

	APlayerCharacter_Server_StartSalute_Params params;
	params.startSalute = startSalute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_Shouted
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void APlayerCharacter::Server_Shouted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_Shouted");

	APlayerCharacter_Server_Shouted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetUsing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          characterIsUsing               (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_SetUsing(bool* characterIsUsing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetUsing");

	APlayerCharacter_Server_SetUsing_Params params;
	params.characterIsUsing = characterIsUsing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetRunning
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          characterIsRunning             (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_SetRunning(bool* characterIsRunning)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetRunning");

	APlayerCharacter_Server_SetRunning_Params params;
	params.characterIsRunning = characterIsRunning;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetIsThrowingCarriable
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          isThrowing                     (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_SetIsThrowingCarriable(bool* isThrowing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetIsThrowingCarriable");

	APlayerCharacter_Server_SetIsThrowingCarriable_Params params;
	params.isThrowing = isThrowing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetIsPressingMovementInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool*                          aIsPushingInput                (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_SetIsPressingMovementInput(bool* aIsPushingInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetIsPressingMovementInput");

	APlayerCharacter_Server_SetIsPressingMovementInput_Params params;
	params.aIsPushingInput = aIsPushingInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetIsJumpPressed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          InJumpPressed                  (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_SetIsJumpPressed(bool* InJumpPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetIsJumpPressed");

	APlayerCharacter_Server_SetIsJumpPressed_Params params;
	params.InJumpPressed = InJumpPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetDispenserReward
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AEventRewardDispenser**  Dispenser                      (Parm, ZeroConstructor, IsPlainOldData)
// class USchematic**             Reward                         (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Server_SetDispenserReward(class AEventRewardDispenser** Dispenser, class USchematic** Reward)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetDispenserReward");

	APlayerCharacter_Server_SetDispenserReward_Params params;
	params.Dispenser = Dispenser;
	params.Reward = Reward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_SetClientReady
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APlayerCharacter::Server_SetClientReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_SetClientReady");

	APlayerCharacter_Server_SetClientReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Server_CallDonkey
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APlayerCharacter::Server_CallDonkey()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Server_CallDonkey");

	APlayerCharacter_Server_CallDonkey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.SendLevelUpStatistics
// (Final, Native, Public)
// Parameters:
// int*                           currentRank                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::SendLevelUpStatistics(int* currentRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.SendLevelUpStatistics");

	APlayerCharacter_SendLevelUpStatistics_Params params;
	params.currentRank = currentRank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ReviveProgress
// (Final, Native, Public)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::ReviveProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ReviveProgress");

	APlayerCharacter_ReviveProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.RejectInvite
// (Final, Native, Protected)

void APlayerCharacter::RejectInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.RejectInvite");

	APlayerCharacter_RejectInvite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ReceiveOnHeadlightOn
// (Event, Protected, BlueprintEvent)

void APlayerCharacter::ReceiveOnHeadlightOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ReceiveOnHeadlightOn");

	APlayerCharacter_ReceiveOnHeadlightOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.PrepareForEndScreen
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerCharacter::PrepareForEndScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.PrepareForEndScreen");

	APlayerCharacter_PrepareForEndScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.PilotVehicle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::PilotVehicle(class AActor** Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.PilotVehicle");

	APlayerCharacter_PilotVehicle_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Paralyze
// (Final, Native, Public, BlueprintCallable)

void APlayerCharacter::Paralyze()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Paralyze");

	APlayerCharacter_Paralyze_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OpenChat
// (Final, Native, Protected)

void APlayerCharacter::OpenChat()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OpenChat");

	APlayerCharacter_OpenChat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnResourceFull
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::OnResourceFull(class UCappedResource** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnResourceFull");

	APlayerCharacter_OnResourceFull_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnRep_IsStandingDown
// (Final, Native, Protected)

void APlayerCharacter::OnRep_IsStandingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnRep_IsStandingDown");

	APlayerCharacter_OnRep_IsStandingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnRep_IsDancing
// (Final, Native, Protected)

void APlayerCharacter::OnRep_IsDancing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnRep_IsDancing");

	APlayerCharacter_OnRep_IsDancing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnRep_HeadLightOn
// (Final, Native, Protected)

void APlayerCharacter::OnRep_HeadLightOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnRep_HeadLightOn");

	APlayerCharacter_OnRep_HeadLightOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnRep_DanceMove
// (Final, Native, Protected)

void APlayerCharacter::OnRep_DanceMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnRep_DanceMove");

	APlayerCharacter_OnRep_DanceMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnRep_CharacterState
// (Final, Native, Protected)
// Parameters:
// class UCharacterStateComponent** oldState                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APlayerCharacter::OnRep_CharacterState(class UCharacterStateComponent** oldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnRep_CharacterState");

	APlayerCharacter_OnRep_CharacterState_Params params;
	params.oldState = oldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnItemEquipped
// (Final, Native, Protected)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::OnItemEquipped(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnItemEquipped");

	APlayerCharacter_OnItemEquipped_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.OnCharacterUsed
// (Final, Native, Protected)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::OnCharacterUsed(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.OnCharacterUsed");

	APlayerCharacter_OnCharacterUsed_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.MouseWheelUp
// (Final, Native, Protected)

void APlayerCharacter::MouseWheelUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.MouseWheelUp");

	APlayerCharacter_MouseWheelUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.MouseWheelDown
// (Final, Native, Protected)

void APlayerCharacter::MouseWheelDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.MouseWheelDown");

	APlayerCharacter_MouseWheelDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.LockIfState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterState*               LockIf                         (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterState*               LockTo                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          canMoveAndAim                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::LockIfState(ECharacterState* LockIf, ECharacterState* LockTo, bool* canMoveAndAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.LockIfState");

	APlayerCharacter_LockIfState_Params params;
	params.LockIf = LockIf;
	params.LockTo = LockTo;
	params.canMoveAndAim = canMoveAndAim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.JumpRelease
// (Final, Native, Protected)

void APlayerCharacter::JumpRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.JumpRelease");

	APlayerCharacter_JumpRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.JumpPress
// (Final, Native, Protected)

void APlayerCharacter::JumpPress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.JumpPress");

	APlayerCharacter_JumpPress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.PlayerCharacter.ItemUseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AItem**                  Item                           (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::ItemUseDelegate__DelegateSignature(class AItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PlayerCharacter.ItemUseDelegate__DelegateSignature");

	APlayerCharacter_ItemUseDelegate__DelegateSignature_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.IsWithinDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 Source                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsWithinDistance(class AActor** Source, float* distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsWithinDistance");

	APlayerCharacter_IsWithinDistance_Params params;
	params.Source = Source;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsWalking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsWalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsWalking");

	APlayerCharacter_IsWalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsStateActive
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterState*               State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsStateActive(ECharacterState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsStateActive");

	APlayerCharacter_IsStateActive_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsSaluting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsSaluting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsSaluting");

	APlayerCharacter_IsSaluting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsParalyzed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsParalyzed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsParalyzed");

	APlayerCharacter_IsParalyzed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsMovementInputPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsMovementInputPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsMovementInputPressed");

	APlayerCharacter_IsMovementInputPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsMining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsMining");

	APlayerCharacter_IsMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsLyingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsLyingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsLyingDown");

	APlayerCharacter_IsLyingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsJumpPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsJumpPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsJumpPressed");

	APlayerCharacter_IsJumpPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsInState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterState*               aState                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsInState(ECharacterState* aState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsInState");

	APlayerCharacter_IsInState_Params params;
	params.aState = aState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsFrozen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsFrozen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsFrozen");

	APlayerCharacter_IsFrozen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsFirstPerson");

	APlayerCharacter_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsDown");

	APlayerCharacter_IsDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IsAlive");

	APlayerCharacter_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.IgnoreInvite
// (Final, Native, Protected)

void APlayerCharacter::IgnoreInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.IgnoreInvite");

	APlayerCharacter_IgnoreInvite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.HasBeenRevived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerCharacter::HasBeenRevived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.HasBeenRevived");

	APlayerCharacter_HasBeenRevived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetTrailComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTrailComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTrailComponent* APlayerCharacter::GetTrailComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetTrailComponent");

	APlayerCharacter_GetTrailComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetTPAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerTPAnimInstance*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlayerTPAnimInstance* APlayerCharacter::GetTPAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetTPAnimInstance");

	APlayerCharacter_GetTPAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetTimeSinceLastRevival
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APlayerCharacter::GetTimeSinceLastRevival()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetTimeSinceLastRevival");

	APlayerCharacter_GetTimeSinceLastRevival_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetPreviousState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterState APlayerCharacter::GetPreviousState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetPreviousState");

	APlayerCharacter_GetPreviousState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerState* APlayerCharacter::GetPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetPlayerState");

	APlayerCharacter_GetPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString APlayerCharacter::GetPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetPlayerName");

	APlayerCharacter_GetPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFSDPlayerController* APlayerCharacter::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetPlayerController");

	APlayerCharacter_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetLoadoutAnalyticsString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString APlayerCharacter::GetLoadoutAnalyticsString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetLoadoutAnalyticsString");

	APlayerCharacter_GetLoadoutAnalyticsString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetInventoryList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInventoryList*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UInventoryList* APlayerCharacter::GetInventoryList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetInventoryList");

	APlayerCharacter_GetInventoryList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetHeroName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText APlayerCharacter::GetHeroName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetHeroName");

	APlayerCharacter_GetHeroName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetHeroIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* APlayerCharacter::GetHeroIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetHeroIcon");

	APlayerCharacter_GetHeroIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetHeroColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)

struct FLinearColor APlayerCharacter::GetHeroColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetHeroColor");

	APlayerCharacter_GetHeroColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetFPAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerFPAnimInstance*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlayerFPAnimInstance* APlayerCharacter::GetFPAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetFPAnimInstance");

	APlayerCharacter_GetFPAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetDownCameraTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* APlayerCharacter::GetDownCameraTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetDownCameraTarget");

	APlayerCharacter_GetDownCameraTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetDownCameraRotationPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* APlayerCharacter::GetDownCameraRotationPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetDownCameraRotationPoint");

	APlayerCharacter_GetDownCameraRotationPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetDownCameraAttachPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* APlayerCharacter::GetDownCameraAttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetDownCameraAttachPoint");

	APlayerCharacter_GetDownCameraAttachPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterState APlayerCharacter::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetCurrentState");

	APlayerCharacter_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetClassXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APlayerCharacter::GetClassXP()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetClassXP");

	APlayerCharacter_GetClassXP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetCharacterGear
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterGearComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterGearComponent* APlayerCharacter::GetCharacterGear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetCharacterGear");

	APlayerCharacter_GetCharacterGear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetBeginRevivedProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APlayerCharacter::GetBeginRevivedProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetBeginRevivedProgress");

	APlayerCharacter_GetBeginRevivedProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetAnalyticsClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString APlayerCharacter::GetAnalyticsClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetAnalyticsClass");

	APlayerCharacter_GetAnalyticsClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetActorGroundLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector APlayerCharacter::GetActorGroundLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetActorGroundLocation");

	APlayerCharacter_GetActorGroundLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetActiveShieldGenerators
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AArmorRegeneratorActor*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AArmorRegeneratorActor*> APlayerCharacter::GetActiveShieldGenerators()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetActiveShieldGenerators");

	APlayerCharacter_GetActiveShieldGenerators_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.GetActiveAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPlayerAnimInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPlayerAnimInstance* APlayerCharacter::GetActiveAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.GetActiveAnimInstance");

	APlayerCharacter_GetActiveAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.ForceIsPressingMovementInputKey
// (Final, Native, Public, BlueprintCallable)

void APlayerCharacter::ForceIsPressingMovementInputKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ForceIsPressingMovementInputKey");

	APlayerCharacter_ForceIsPressingMovementInputKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.PlayerCharacter.FirePressedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void APlayerCharacter::FirePressedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PlayerCharacter.FirePressedDelegate__DelegateSignature");

	APlayerCharacter_FirePressedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ExitVehicle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APlayerCharacter::ExitVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ExitVehicle");

	APlayerCharacter_ExitVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.CycleItemReleased
// (Final, Native, Protected)

void APlayerCharacter::CycleItemReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.CycleItemReleased");

	APlayerCharacter_CycleItemReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.CycleItemPressed
// (Final, Native, Protected)

void APlayerCharacter::CycleItemPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.CycleItemPressed");

	APlayerCharacter_CycleItemPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.Client_TargetDamaged
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UHealth>* Health                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageModifier                 (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::Client_TargetDamaged(class AActor** Target, TScriptInterface<class UHealth>* Health, float* Damage, float* DamageModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.Client_TargetDamaged");

	APlayerCharacter_Client_TargetDamaged_Params params;
	params.Target = Target;
	params.Health = Health;
	params.Damage = Damage;
	params.DamageModifier = DamageModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.CheckWithoutAPaddleAchievement
// (Net, NetReliable, Native, Event, Protected, NetClient, BlueprintCallable)

void APlayerCharacter::CheckWithoutAPaddleAchievement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.CheckWithoutAPaddleAchievement");

	APlayerCharacter_CheckWithoutAPaddleAchievement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.CheatRevive
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void APlayerCharacter::CheatRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.CheatRevive");

	APlayerCharacter_CheatRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.CheatGodMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void APlayerCharacter::CheatGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.CheatGodMode");

	APlayerCharacter_CheatGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ChangeState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterState*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::ChangeState(ECharacterState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ChangeState");

	APlayerCharacter_ChangeState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.ChangeIfDifferentState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterState*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::ChangeIfDifferentState(ECharacterState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.ChangeIfDifferentState");

	APlayerCharacter_ChangeIfDifferentState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.BP_OnUpdateMeshes
// (Event, Protected, BlueprintEvent)

void APlayerCharacter::BP_OnUpdateMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.BP_OnUpdateMeshes");

	APlayerCharacter_BP_OnUpdateMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.BP_OnControllerReady
// (Event, Protected, BlueprintEvent)

void APlayerCharacter::BP_OnControllerReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.BP_OnControllerReady");

	APlayerCharacter_BP_OnControllerReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.AnnounceSchematicCollected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USchematic**             InSchematic                    (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::AnnounceSchematicCollected(class USchematic** InSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.AnnounceSchematicCollected");

	APlayerCharacter_AnnounceSchematicCollected_Params params;
	params.InSchematic = InSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.All_StartSalute
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class UAnimMontage**           saluteMontage                  (Parm, ZeroConstructor, IsPlainOldData)

void APlayerCharacter::All_StartSalute(class UAnimMontage** saluteMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.All_StartSalute");

	APlayerCharacter_All_StartSalute_Params params;
	params.saluteMontage = saluteMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.All_ShowImpactEffects
// (Net, Native, Event, NetMulticast, Protected, Const)
// Parameters:
// class UParticleSystem**        particles                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Orientation                    (Parm)

void APlayerCharacter::All_ShowImpactEffects(class UParticleSystem** particles, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Orientation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.All_ShowImpactEffects");

	APlayerCharacter_All_ShowImpactEffects_Params params;
	params.particles = particles;
	params.Location = Location;
	params.Orientation = Orientation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacter.AddClassXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APlayerCharacter::AddClassXP(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.AddClassXP");

	APlayerCharacter_AddClassXP_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacter.AcceptInvite
// (Final, Native, Protected)

void APlayerCharacter::AcceptInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacter.AcceptInvite");

	APlayerCharacter_AcceptInvite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerCharacterFunctionLibrary.SetPlayerVoiceMuted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Mute                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          TrySystemWide                  (Parm, ZeroConstructor, IsPlainOldData)
// int*                           LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerCharacterFunctionLibrary::STATIC_SetPlayerVoiceMuted(class UObject** WorldContextObject, class AFSDPlayerState** PlayerState, bool* Mute, bool* TrySystemWide, int* LocalUserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.SetPlayerVoiceMuted");

	UPlayerCharacterFunctionLibrary_SetPlayerVoiceMuted_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerState = PlayerState;
	params.Mute = Mute;
	params.TrySystemWide = TrySystemWide;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterFunctionLibrary.IsPlayerVoiceMuted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerCharacterFunctionLibrary::STATIC_IsPlayerVoiceMuted(class UObject** WorldContextObject, class AFSDPlayerState** PlayerState, int* LocalUserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.IsPlayerVoiceMuted");

	UPlayerCharacterFunctionLibrary_IsPlayerVoiceMuted_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerState = PlayerState;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterFunctionLibrary.GetRandomPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustNotBeParalyzed             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPlayerCharacterFunctionLibrary::STATIC_GetRandomPlayer(class UObject** WorldContextObject, bool* MustBeAlive, bool* MustNotBeParalyzed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.GetRandomPlayer");

	UPlayerCharacterFunctionLibrary_GetRandomPlayer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.MustBeAlive = MustBeAlive;
	params.MustNotBeParalyzed = MustNotBeParalyzed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterFunctionLibrary.GetNearestVisiblePlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustNotBeParalyzed             (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPlayerCharacterFunctionLibrary::STATIC_GetNearestVisiblePlayer(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustNotBeParalyzed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.GetNearestVisiblePlayer");

	UPlayerCharacterFunctionLibrary_GetNearestVisiblePlayer_Params params;
	params.From = From;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustNotBeParalyzed = MustNotBeParalyzed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterFunctionLibrary.GetNearestPlayerToPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Position                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          XYOnly                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPlayerCharacterFunctionLibrary::STATIC_GetNearestPlayerToPosition(class UObject** WorldContextObject, struct FVector* Position, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* XYOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.GetNearestPlayerToPosition");

	UPlayerCharacterFunctionLibrary_GetNearestPlayerToPosition_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.XYOnly = XYOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterFunctionLibrary.GetNearestPlayerFrom
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld**                 World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          XYOnly                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPlayerCharacterFunctionLibrary::STATIC_GetNearestPlayerFrom(class UWorld** World, struct FVector* From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* XYOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.GetNearestPlayerFrom");

	UPlayerCharacterFunctionLibrary_GetNearestPlayerFrom_Params params;
	params.World = World;
	params.From = From;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.XYOnly = XYOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerCharacterFunctionLibrary.GetNearestPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeAlive                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          MustBeUnparalyzed              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          XYOnly                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UPlayerCharacterFunctionLibrary::STATIC_GetNearestPlayer(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* XYOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerCharacterFunctionLibrary.GetNearestPlayer");

	UPlayerCharacterFunctionLibrary_GetNearestPlayer_Params params;
	params.From = From;
	params.MaxDistance = MaxDistance;
	params.MustBeAlive = MustBeAlive;
	params.MustBeUnparalyzed = MustBeUnparalyzed;
	params.XYOnly = XYOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerHealthComponent.OnRep_MaxHealth
// (Final, Native, Protected)

void UPlayerHealthComponent::OnRep_MaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.OnRep_MaxHealth");

	UPlayerHealthComponent_OnRep_MaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerHealthComponent.OnRep_MaxArmor
// (Final, Native, Protected)

void UPlayerHealthComponent::OnRep_MaxArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.OnRep_MaxArmor");

	UPlayerHealthComponent_OnRep_MaxArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerHealthComponent.OnRep_ArmorDamage
// (Final, Native, Protected)
// Parameters:
// float*                         oldDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::OnRep_ArmorDamage(float* oldDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.OnRep_ArmorDamage");

	UPlayerHealthComponent_OnRep_ArmorDamage_Params params;
	params.oldDamage = oldDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerHealthComponent.GetIsHealthRegenerating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerHealthComponent::GetIsHealthRegenerating()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.GetIsHealthRegenerating");

	UPlayerHealthComponent_GetIsHealthRegenerating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerHealthComponent.GetIronWillActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerHealthComponent::GetIronWillActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.GetIronWillActive");

	UPlayerHealthComponent_GetIronWillActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerHealthComponent.GetHealthRegeneratingTargetRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetHealthRegeneratingTargetRatio()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.GetHealthRegeneratingTargetRatio");

	UPlayerHealthComponent_GetHealthRegeneratingTargetRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerHealthComponent.Client_SetHealthRegenerating
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// bool*                          isRegenerating                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::Client_SetHealthRegenerating(bool* isRegenerating)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.Client_SetHealthRegenerating");

	UPlayerHealthComponent_Client_SetHealthRegenerating_Params params;
	params.isRegenerating = isRegenerating;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerHealthComponent.Client_HealthFullCannotHeal
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)

void UPlayerHealthComponent::Client_HealthFullCannotHeal()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerHealthComponent.Client_HealthFullCannotHeal");

	UPlayerHealthComponent_Client_HealthFullCannotHeal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerProximityTracker.Receive_RegisterForLocalPlayerProximity
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        proximityCallback              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          triggerOnlyOnce                (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerProximityTracker::STATIC_Receive_RegisterForLocalPlayerProximity(class UObject** WorldContextObject, struct FVector* Location, float* distance, struct FScriptDelegate* proximityCallback, bool* triggerOnlyOnce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerProximityTracker.Receive_RegisterForLocalPlayerProximity");

	UPlayerProximityTracker_Receive_RegisterForLocalPlayerProximity_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.distance = distance;
	params.proximityCallback = proximityCallback;
	params.triggerOnlyOnce = triggerOnlyOnce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerProximityTracker.Receive_RegisterForAnyPlayerProximity
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        proximityCallback              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          triggerOnlyOnce                (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerProximityTracker::STATIC_Receive_RegisterForAnyPlayerProximity(class UObject** WorldContextObject, struct FVector* Location, float* distance, struct FScriptDelegate* proximityCallback, bool* triggerOnlyOnce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerProximityTracker.Receive_RegisterForAnyPlayerProximity");

	UPlayerProximityTracker_Receive_RegisterForAnyPlayerProximity_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.distance = distance;
	params.proximityCallback = proximityCallback;
	params.triggerOnlyOnce = triggerOnlyOnce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerProximityTracker.GetPrimarySphere
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPlayerSphere           ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FPlayerSphere UPlayerProximityTracker::GetPrimarySphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerProximityTracker.GetPrimarySphere");

	UPlayerProximityTracker_GetPrimarySphere_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerProximityTracker.GetPlayerSpheres
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FPlayerSphere>   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FPlayerSphere> UPlayerProximityTracker::GetPlayerSpheres()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerProximityTracker.GetPlayerSpheres");

	UPlayerProximityTracker_GetPlayerSpheres_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerRejoinState.Server_Reset
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void UPlayerRejoinState::Server_Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerRejoinState.Server_Reset");

	UPlayerRejoinState_Server_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerRejoinState.Server_AddIntValue
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid*                  ItemKey                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FName*                  ValueKey                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int*                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerRejoinState::Server_AddIntValue(struct FGuid* ItemKey, struct FName* ValueKey, int* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerRejoinState.Server_AddIntValue");

	UPlayerRejoinState_Server_AddIntValue_Params params;
	params.ItemKey = ItemKey;
	params.ValueKey = ValueKey;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerRejoinState.Server_AddFloatValue
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid*                  ItemKey                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FName*                  ValueKey                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerRejoinState::Server_AddFloatValue(struct FGuid* ItemKey, struct FName* ValueKey, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerRejoinState.Server_AddFloatValue");

	UPlayerRejoinState_Server_AddFloatValue_Params params;
	params.ItemKey = ItemKey;
	params.ValueKey = ValueKey;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerRejoinState.Client_SetValues
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// TArray<struct FRejoinFloat>*   floatValues                    (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FRejoinInt>*     intValues                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UPlayerRejoinState::Client_SetValues(TArray<struct FRejoinFloat>* floatValues, TArray<struct FRejoinInt>* intValues)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerRejoinState.Client_SetValues");

	UPlayerRejoinState_Client_SetValues_Params params;
	params.floatValues = floatValues;
	params.intValues = intValues;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourcesComponent.ResourceIncreased
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void UResourcesComponent::ResourceIncreased(class UCappedResource** Resource, float* Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.ResourceIncreased");

	UResourcesComponent_ResourceIncreased_Params params;
	params.Resource = Resource;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourcesComponent.ResourceFull
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)

void UResourcesComponent::ResourceFull(class UCappedResource** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.ResourceFull");

	UResourcesComponent_ResourceFull_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourcesComponent.ResourceChanged
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         currentAmount                  (Parm, ZeroConstructor, IsPlainOldData)

void UResourcesComponent::ResourceChanged(class UCappedResource** Resource, float* currentAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.ResourceChanged");

	UResourcesComponent_ResourceChanged_Params params;
	params.Resource = Resource;
	params.currentAmount = currentAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourcesComponent.OnRep_Resources
// (Final, Native, Protected)

void UResourcesComponent::OnRep_Resources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.OnRep_Resources");

	UResourcesComponent_OnRep_Resources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourcesComponent.GetXPFromResourceMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<class UResourceData*, float>* Resources                      (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UResourcesComponent::STATIC_GetXPFromResourceMap(TMap<class UResourceData*, float>* Resources)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.GetXPFromResourceMap");

	UResourcesComponent_GetXPFromResourceMap_Params params;
	params.Resources = Resources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ResourcesComponent.GetXpFromMining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UResourcesComponent::GetXpFromMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.GetXpFromMining");

	UResourcesComponent_GetXpFromMining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ResourcesComponent.GetResource
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UResourceData**          Data                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          createIfAmountIsZero           (Parm, ZeroConstructor, IsPlainOldData)
// class UCappedResource*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCappedResource* UResourcesComponent::GetResource(class UResourceData** Data, bool* createIfAmountIsZero)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.GetResource");

	UResourcesComponent_GetResource_Params params;
	params.Data = Data;
	params.createIfAmountIsZero = createIfAmountIsZero;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ResourcesComponent.GetCapacityPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UResourcesComponent::GetCapacityPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.GetCapacityPct");

	UResourcesComponent_GetCapacityPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ResourcesComponent.GetAllResources
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UCappedResource*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UCappedResource*> UResourcesComponent::GetAllResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourcesComponent.GetAllResources");

	UResourcesComponent_GetAllResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerResourceComponent.GetFromPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerCharacter**       PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerResourceComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPlayerResourceComponent* UPlayerResourceComponent::STATIC_GetFromPlayer(class APlayerCharacter** PlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerResourceComponent.GetFromPlayer");

	UPlayerResourceComponent_GetFromPlayer_Params params;
	params.PlayerCharacter = PlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TemperatureComponent.TryPushHeatSource
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Temperature                    (Parm, ZeroConstructor, IsPlainOldData)
// ETemperatureIntensity*         Intensity                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTemperatureComponent::STATIC_TryPushHeatSource(class AActor** Target, float* Temperature, ETemperatureIntensity* Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TemperatureComponent.TryPushHeatSource");

	UTemperatureComponent_TryPushHeatSource_Params params;
	params.Target = Target;
	params.Temperature = Temperature;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TemperatureComponent.TryPopHeatSource
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Temperature                    (Parm, ZeroConstructor, IsPlainOldData)
// ETemperatureIntensity*         Intensity                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTemperatureComponent::STATIC_TryPopHeatSource(class AActor** Target, float* Temperature, ETemperatureIntensity* Intensity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TemperatureComponent.TryPopHeatSource");

	UTemperatureComponent_TryPopHeatSource_Params params;
	params.Target = Target;
	params.Temperature = Temperature;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TemperatureComponent.ChangeTemperature
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Degrees                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Source                         (Parm, ZeroConstructor, IsPlainOldData)

void UTemperatureComponent::ChangeTemperature(float* Degrees, class AActor** Source)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TemperatureComponent.ChangeTemperature");

	UTemperatureComponent_ChangeTemperature_Params params;
	params.Degrees = Degrees;
	params.Source = Source;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.SetNormalTemperature
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPlayerTemperatureComponent::SetNormalTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.SetNormalTemperature");

	UPlayerTemperatureComponent_SetNormalTemperature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.SetFrozenTemperature
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPlayerTemperatureComponent::SetFrozenTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.SetFrozenTemperature");

	UPlayerTemperatureComponent_SetFrozenTemperature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.OnRep_TemperatureState
// (Final, Native, Protected)
// Parameters:
// EPlayerTemperatureState*       oldState                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTemperatureComponent::OnRep_TemperatureState(EPlayerTemperatureState* oldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.OnRep_TemperatureState");

	UPlayerTemperatureComponent_OnRep_TemperatureState_Params params;
	params.oldState = oldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.OnRep_TemperatureChangeSpeed
// (Final, Native, Protected)
// Parameters:
// int8_t*                        OldSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTemperatureComponent::OnRep_TemperatureChangeSpeed(int8_t* OldSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.OnRep_TemperatureChangeSpeed");

	UPlayerTemperatureComponent_OnRep_TemperatureChangeSpeed_Params params;
	params.OldSpeed = OldSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.OnRep_DefrostProgress
// (Final, Native, Protected)

void UPlayerTemperatureComponent::OnRep_DefrostProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.OnRep_DefrostProgress");

	UPlayerTemperatureComponent_OnRep_DefrostProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.OnRep_CurrentTemperature
// (Final, Native, Protected)
// Parameters:
// float*                         OldTemperature                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTemperatureComponent::OnRep_CurrentTemperature(float* OldTemperature)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.OnRep_CurrentTemperature");

	UPlayerTemperatureComponent_OnRep_CurrentTemperature_Params params;
	params.OldTemperature = OldTemperature;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerTemperatureComponent::OnDeath(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.OnDeath");

	UPlayerTemperatureComponent_OnDeath_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTemperatureComponent.GetTemperatureChangedSpeed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UPlayerTemperatureComponent::GetTemperatureChangedSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.GetTemperatureChangedSpeed");

	UPlayerTemperatureComponent_GetTemperatureChangedSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTemperatureComponent.GetDefrostProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerTemperatureComponent::GetDefrostProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.GetDefrostProgress");

	UPlayerTemperatureComponent_GetDefrostProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTemperatureComponent.GetCurrentTemperatureNormalized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerTemperatureComponent::GetCurrentTemperatureNormalized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.GetCurrentTemperatureNormalized");

	UPlayerTemperatureComponent_GetCurrentTemperatureNormalized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTemperatureComponent.Defrost
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTemperatureComponent::Defrost(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTemperatureComponent.Defrost");

	UPlayerTemperatureComponent_Defrost_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.PlayerTriggerBox.TriggerBoxPlayerEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void APlayerTriggerBox::TriggerBoxPlayerEvent__DelegateSignature(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PlayerTriggerBox.TriggerBoxPlayerEvent__DelegateSignature");

	APlayerTriggerBox_TriggerBoxPlayerEvent__DelegateSignature_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.PlayerTriggerBox.TriggerBoxEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void APlayerTriggerBox::TriggerBoxEvent__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PlayerTriggerBox.TriggerBoxEvent__DelegateSignature");

	APlayerTriggerBox_TriggerBoxEvent__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerBox.IsAnyPlayerInside
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          excludingDeadPlayers           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerTriggerBox::IsAnyPlayerInside(bool* excludingDeadPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerBox.IsAnyPlayerInside");

	APlayerTriggerBox_IsAnyPlayerInside_Params params;
	params.excludingDeadPlayers = excludingDeadPlayers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTriggerBox.BP_OnPlayerExited
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void APlayerTriggerBox::BP_OnPlayerExited(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerBox.BP_OnPlayerExited");

	APlayerTriggerBox_BP_OnPlayerExited_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerBox.BP_OnPlayerEntered
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void APlayerTriggerBox::BP_OnPlayerEntered(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerBox.BP_OnPlayerEntered");

	APlayerTriggerBox_BP_OnPlayerEntered_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerBox.BP_OnAllPlayersExited
// (Event, Protected, BlueprintEvent)

void APlayerTriggerBox::BP_OnAllPlayersExited()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerBox.BP_OnAllPlayersExited");

	APlayerTriggerBox_BP_OnAllPlayersExited_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerBox.BP_OnAllPlayersEntered
// (Event, Protected, BlueprintEvent)

void APlayerTriggerBox::BP_OnAllPlayersEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerBox.BP_OnAllPlayersEntered");

	APlayerTriggerBox_BP_OnAllPlayersEntered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerBox.AreAllPlayersInside
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          excludingDeadPlayers           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APlayerTriggerBox::AreAllPlayersInside(bool* excludingDeadPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerBox.AreAllPlayersInside");

	APlayerTriggerBox_AreAllPlayersInside_Params params;
	params.excludingDeadPlayers = excludingDeadPlayers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PlayerTriggerComponent.SetCollider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    Collider                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerTriggerComponent::SetCollider(class UPrimitiveComponent** Collider)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerComponent.SetCollider");

	UPlayerTriggerComponent_SetCollider_Params params;
	params.Collider = Collider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerComponent.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTriggerComponent::OnEndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerComponent.OnEndOverlap");

	UPlayerTriggerComponent_OnEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PlayerTriggerComponent.OnBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPlayerTriggerComponent::OnBeginOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PlayerTriggerComponent.OnBeginOverlap");

	UPlayerTriggerComponent_OnBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakePhysicsProjectile.SphereBeginOverlap
// (Final, Native, Private, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFakePhysicsProjectile::SphereBeginOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakePhysicsProjectile.SphereBeginOverlap");

	AFakePhysicsProjectile_SphereBeginOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.FakePhysicsProjectile.OnRep_PosVel
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FFakeMoveState*         posVel                         (ConstParm, Parm, OutParm, ReferenceParm)

void AFakePhysicsProjectile::OnRep_PosVel(struct FFakeMoveState* posVel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.FakePhysicsProjectile.OnRep_PosVel");

	AFakePhysicsProjectile_OnRep_PosVel_Params params;
	params.posVel = posVel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExplosionBaseComponent.DamageOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UPhysicalMaterial**      PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageComponent**       DamageComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UExplosionBaseComponent::DamageOnly(struct FVector* Location, struct FName* BoneName, class UPrimitiveComponent** Target, class UPhysicalMaterial** PhysicalMaterial, class UDamageComponent** DamageComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExplosionBaseComponent.DamageOnly");

	UExplosionBaseComponent_DamageOnly_Params params;
	params.Location = Location;
	params.BoneName = BoneName;
	params.Target = Target;
	params.PhysicalMaterial = PhysicalMaterial;
	params.DamageComponent = DamageComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExplosionBaseComponent.DamageArmorClients
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageComponent**       DamageComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UExplosionBaseComponent::DamageArmorClients(class AActor** Target, struct FName* BoneName, class UDamageComponent** DamageComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExplosionBaseComponent.DamageArmorClients");

	UExplosionBaseComponent_DamageArmorClients_Params params;
	params.Target = Target;
	params.BoneName = BoneName;
	params.DamageComponent = DamageComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ExplosionBaseComponent.DamageAndCarve
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                ImpactNormal                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UPhysicalMaterial**      PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageComponent**       DamageComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UExplosionBaseComponent::DamageAndCarve(struct FVector* Location, struct FVector* ImpactNormal, struct FName* BoneName, class UPrimitiveComponent** Target, class UPhysicalMaterial** PhysicalMaterial, class UDamageComponent** DamageComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ExplosionBaseComponent.DamageAndCarve");

	UExplosionBaseComponent_DamageAndCarve_Params params;
	params.Location = Location;
	params.ImpactNormal = ImpactNormal;
	params.BoneName = BoneName;
	params.Target = Target;
	params.PhysicalMaterial = PhysicalMaterial;
	params.DamageComponent = DamageComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileExplosion.SpawnEffects
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Normal                         (Parm, ZeroConstructor, IsPlainOldData)

void UProjectileExplosion::SpawnEffects(struct FVector* Location, struct FVector* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileExplosion.SpawnEffects");

	UProjectileExplosion_SpawnEffects_Params params;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileLauncherBaseComponent.Server_StopFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UProjectileLauncherBaseComponent::Server_StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileLauncherBaseComponent.Server_StopFire");

	UProjectileLauncherBaseComponent_Server_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileLauncherBaseComponent.Server_Fire
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantizeNormal* Direction                      (Parm)

void UProjectileLauncherBaseComponent::Server_Fire(struct FVector* Origin, struct FVector_NetQuantizeNormal* Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileLauncherBaseComponent.Server_Fire");

	UProjectileLauncherBaseComponent_Server_Fire_Params params;
	params.Origin = Origin;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ProjectileLauncherBaseComponent.ProjectileSpawned__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AProjectileBase**        Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void UProjectileLauncherBaseComponent::ProjectileSpawned__DelegateSignature(class AProjectileBase** Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ProjectileLauncherBaseComponent.ProjectileSpawned__DelegateSignature");

	UProjectileLauncherBaseComponent_ProjectileSpawned__DelegateSignature_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileLauncherBaseComponent.All_ShowHit
// (Net, Native, Event, NetMulticast, Protected)

void UProjectileLauncherBaseComponent::All_ShowHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileLauncherBaseComponent.All_ShowHit");

	UProjectileLauncherBaseComponent_All_ShowHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProjectileLauncherComponent.SetProjectileClass
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 NewProjectileClass             (Parm, ZeroConstructor, IsPlainOldData)

void UProjectileLauncherComponent::SetProjectileClass(class UClass** NewProjectileClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProjectileLauncherComponent.SetProjectileClass");

	UProjectileLauncherComponent_SetProjectileClass_Params params;
	params.NewProjectileClass = NewProjectileClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RadarPointComponent.MapToRadarPosition
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                playerPos                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                playerForward                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          snap                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 radarPos                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Alpha                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void URadarPointComponent::STATIC_MapToRadarPosition(struct FVector* playerPos, struct FVector* playerForward, struct FVector* Pos, bool* snap, struct FVector* radarPos, float* Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RadarPointComponent.MapToRadarPosition");

	URadarPointComponent_MapToRadarPosition_Params params;
	params.playerPos = playerPos;
	params.playerForward = playerForward;
	params.Pos = Pos;
	params.snap = snap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (radarPos != nullptr)
		*radarPos = params.radarPos;
	if (Alpha != nullptr)
		*Alpha = params.Alpha;
}


// Function FSD.RandRangeFunctionLibrary.TryPickRandomText
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FText>*          TextArray                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FText                   OutResult                      (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool URandRangeFunctionLibrary::STATIC_TryPickRandomText(TArray<struct FText>* TextArray, struct FRandomStream* RandomStream, struct FText* OutResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandRangeFunctionLibrary.TryPickRandomText");

	URandRangeFunctionLibrary_TryPickRandomText_Params params;
	params.TextArray = TextArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;
	if (OutResult != nullptr)
		*OutResult = params.OutResult;

	return params.ReturnValue;
}


// Function FSD.RandRangeFunctionLibrary.PickRandomText
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FText>*          TextArray                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText URandRangeFunctionLibrary::STATIC_PickRandomText(TArray<struct FText>* TextArray, struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandRangeFunctionLibrary.PickRandomText");

	URandRangeFunctionLibrary_PickRandomText_Params params;
	params.TextArray = TextArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.RandRangeFunctionLibrary.GetValueFromStream
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FIRandRange*            RandRange                      (Parm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int URandRangeFunctionLibrary::STATIC_GetValueFromStream(struct FIRandRange* RandRange, struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandRangeFunctionLibrary.GetValueFromStream");

	URandRangeFunctionLibrary_GetValueFromStream_Params params;
	params.RandRange = RandRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.RandRangeFunctionLibrary.GetFloatValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRandRange*             RandRange                      (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URandRangeFunctionLibrary::STATIC_GetFloatValue(struct FRandRange* RandRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandRangeFunctionLibrary.GetFloatValue");

	URandRangeFunctionLibrary_GetFloatValue_Params params;
	params.RandRange = RandRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RandRangeFunctionLibrary.GetFloatFromStream
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRandRange*             RandRange                      (Parm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URandRangeFunctionLibrary::STATIC_GetFloatFromStream(struct FRandRange* RandRange, struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandRangeFunctionLibrary.GetFloatFromStream");

	URandRangeFunctionLibrary_GetFloatFromStream_Params params;
	params.RandRange = RandRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.RandIntervalFunctionLibrary.GetFloatValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRandInterval*          RandInterval                   (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URandIntervalFunctionLibrary::STATIC_GetFloatValue(struct FRandInterval* RandInterval)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RandIntervalFunctionLibrary.GetFloatValue");

	URandIntervalFunctionLibrary_GetFloatValue_Params params;
	params.RandInterval = RandInterval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RDGLauncher.Server_DetonateAll
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ARDGLauncher::Server_DetonateAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RDGLauncher.Server_DetonateAll");

	ARDGLauncher_Server_DetonateAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RDGLauncher.RegisterGrenade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URDGComponent**          Grenade                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ARDGLauncher::RegisterGrenade(class URDGComponent** Grenade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RDGLauncher.RegisterGrenade");

	ARDGLauncher_RegisterGrenade_Params params;
	params.Grenade = Grenade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ReactiveTerrain.Receive_OnActorLeft
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStatusEffectsComponent** StatusEffects                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UReactiveTerrain::Receive_OnActorLeft(class UStatusEffectsComponent** StatusEffects)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ReactiveTerrain.Receive_OnActorLeft");

	UReactiveTerrain_Receive_OnActorLeft_Params params;
	params.StatusEffects = StatusEffects;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ReactiveTerrain.Receive_OnActorEntered
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStatusEffectsComponent** StatusEffects                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UReactiveTerrain::Receive_OnActorEntered(class UStatusEffectsComponent** StatusEffects)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ReactiveTerrain.Receive_OnActorEntered");

	UReactiveTerrain_Receive_OnActorEntered_Params params;
	params.StatusEffects = StatusEffects;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.SetRecallTarget
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AActor**                 NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::SetRecallTarget(class AActor** NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.SetRecallTarget");

	ARecallableActor_SetRecallTarget_Params params;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.Relocate
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector*                NewLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               NewRotation                    (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::Relocate(struct FVector* NewLocation, struct FRotator* NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.Relocate");

	ARecallableActor_Relocate_Params params;
	params.NewLocation = NewLocation;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.ReceiveOnStateChanged
// (Event, Protected, BlueprintEvent)

void ARecallableActor::ReceiveOnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.ReceiveOnStateChanged");

	ARecallableActor_ReceiveOnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RecallableActor.RecallableActorStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ARecallableActor**       Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// ERecallableActorState*         State                          (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::RecallableActorStateChanged__DelegateSignature(class ARecallableActor** Sender, ERecallableActorState* State)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RecallableActor.RecallableActorStateChanged__DelegateSignature");

	ARecallableActor_RecallableActorStateChanged__DelegateSignature_Params params;
	params.Sender = Sender;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.Recall
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ARecallableActor::Recall()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.Recall");

	ARecallableActor_Recall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnReturnSucceeded
// (Event, Protected, BlueprintEvent)

void ARecallableActor::OnReturnSucceeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnReturnSucceeded");

	ARecallableActor_OnReturnSucceeded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnReturnFailed
// (Event, Protected, BlueprintEvent)

void ARecallableActor::OnReturnFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnReturnFailed");

	ARecallableActor_OnReturnFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnRep_State
// (Final, Native, Protected)
// Parameters:
// ERecallableActorState*         oldState                       (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::OnRep_State(ERecallableActorState* oldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnRep_State");

	ARecallableActor_OnRep_State_Params params;
	params.oldState = oldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnRep_RecallTarget
// (Final, Native, Protected)

void ARecallableActor::OnRep_RecallTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnRep_RecallTarget");

	ARecallableActor_OnRep_RecallTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnRelocated
// (Event, Protected, BlueprintEvent)

void ARecallableActor::OnRelocated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnRelocated");

	ARecallableActor_OnRelocated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnRecallTargetChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::OnRecallTargetChanged(class AActor** NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnRecallTargetChanged");

	ARecallableActor_OnRecallTargetChanged_Params params;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnPathFinished
// (Final, Native, Protected)
// Parameters:
// bool*                          success                        (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::OnPathFinished(bool* success)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnPathFinished");

	ARecallableActor_OnPathFinished_Params params;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnMoving
// (Event, Protected, BlueprintEvent)

void ARecallableActor::OnMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnMoving");

	ARecallableActor_OnMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnMoveRequested
// (Event, Protected, BlueprintEvent)

void ARecallableActor::OnMoveRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnMoveRequested");

	ARecallableActor_OnMoveRequested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.OnMoveFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          returnedHome                   (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableActor::OnMoveFinished(bool* returnedHome)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.OnMoveFinished");

	ARecallableActor_OnMoveFinished_Params params;
	params.returnedHome = returnedHome;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableActor.GetIsReturning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableActor::GetIsReturning()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.GetIsReturning");

	ARecallableActor_GetIsReturning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableActor.GetIsMovingOrMoveRequested
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableActor::GetIsMovingOrMoveRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.GetIsMovingOrMoveRequested");

	ARecallableActor_GetIsMovingOrMoveRequested_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableActor.GetIsMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableActor::GetIsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.GetIsMoving");

	ARecallableActor_GetIsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableActor.GetIsMoveRequested
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableActor::GetIsMoveRequested()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.GetIsMoveRequested");

	ARecallableActor_GetIsMoveRequested_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableActor.BeginMove
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void ARecallableActor::BeginMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableActor.BeginMove");

	ARecallableActor_BeginMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableItem.ServerSpawnItem
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               Rotation                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ARecallableItem::ServerSpawnItem(struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableItem.ServerSpawnItem");

	ARecallableItem_ServerSpawnItem_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableItem.ReceiveOnItemSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ARecallableActor**       Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableItem::ReceiveOnItemSpawned(class ARecallableActor** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableItem.ReceiveOnItemSpawned");

	ARecallableItem_ReceiveOnItemSpawned_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableItem.OnRep_ActiveItems
// (Native, Protected)

void ARecallableItem::OnRep_ActiveItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableItem.OnRep_ActiveItems");

	ARecallableItem_OnRep_ActiveItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableItem.ItemReturnFinished
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          success                        (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableItem::ItemReturnFinished(class AActor** Item, bool* success)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableItem.ItemReturnFinished");

	ARecallableItem_ItemReturnFinished_Params params;
	params.Item = Item;
	params.success = success;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableItem.CanSpawnItem
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableItem::CanSpawnItem(struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableItem.CanSpawnItem");

	ARecallableItem_CanSpawnItem_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGun.UseAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ASentryGun::UseAmmo(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.UseAmmo");

	ASentryGun_UseAmmo_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.ReceiveAmmoChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int*                           Delta                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           currentAmount                  (Parm, ZeroConstructor, IsPlainOldData)

void ASentryGun::ReceiveAmmoChanged(int* Delta, int* currentAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.ReceiveAmmoChanged");

	ASentryGun_ReceiveAmmoChanged_Params params;
	params.Delta = Delta;
	params.currentAmount = currentAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.OnRep_MaxAmmoCount
// (Final, Native, Protected)
// Parameters:
// int*                           OldCount                       (Parm, ZeroConstructor, IsPlainOldData)

void ASentryGun::OnRep_MaxAmmoCount(int* OldCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.OnRep_MaxAmmoCount");

	ASentryGun_OnRep_MaxAmmoCount_Params params;
	params.OldCount = OldCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.OnRep_LastTarget
// (Final, Native, Protected)

void ASentryGun::OnRep_LastTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.OnRep_LastTarget");

	ASentryGun_OnRep_LastTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.OnRep_AmmoCount
// (Final, Native, Protected)
// Parameters:
// int*                           OldCount                       (Parm, ZeroConstructor, IsPlainOldData)

void ASentryGun::OnRep_AmmoCount(int* OldCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.OnRep_AmmoCount");

	ASentryGun_OnRep_AmmoCount_Params params;
	params.OldCount = OldCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.OnProjectileFired
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ASentryGun::OnProjectileFired(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.OnProjectileFired");

	ASentryGun_OnProjectileFired_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.OnNewTargetRequested
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// ELaserPointerTargetType*       TargetType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor**                 ExtraActor                     (Parm, ZeroConstructor, IsPlainOldData)

void ASentryGun::OnNewTargetRequested(class AActor** Target, ELaserPointerTargetType* TargetType, struct FVector* Location, class AActor** ExtraActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.OnNewTargetRequested");

	ASentryGun_OnNewTargetRequested_Params params;
	params.Target = Target;
	params.TargetType = TargetType;
	params.Location = Location;
	params.ExtraActor = ExtraActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.GetMuzzleTransform
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ASentryGun::GetMuzzleTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.GetMuzzleTransform");

	ASentryGun_GetMuzzleTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGun.GetMuzzleName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASentryGun::GetMuzzleName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.GetMuzzleName");

	ASentryGun_GetMuzzleName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGun.GetMaxAmmoCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASentryGun::GetMaxAmmoCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.GetMaxAmmoCount");

	ASentryGun_GetMaxAmmoCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGun.GetDeployProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASentryGun::GetDeployProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.GetDeployProgress");

	ASentryGun_GetDeployProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGun.GetAmmoLeftPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASentryGun::GetAmmoLeftPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.GetAmmoLeftPct");

	ASentryGun_GetAmmoLeftPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SentryGun.GetAmmoLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASentryGun::GetAmmoLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.GetAmmoLeft");

	ASentryGun_GetAmmoLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.SentryGun.EnabledChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool*                          IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void ASentryGun::EnabledChanged__DelegateSignature(bool* IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.SentryGun.EnabledChanged__DelegateSignature");

	ASentryGun_EnabledChanged__DelegateSignature_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SentryGun.AmmoSpent
// (Event, Protected, BlueprintEvent)

void ASentryGun::AmmoSpent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SentryGun.AmmoSpent");

	ASentryGun_AmmoSpent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ToggleOutlineAndIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void ARedeployableSentryGun::ToggleOutlineAndIcon(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ToggleOutlineAndIcon");

	ARedeployableSentryGun_ToggleOutlineAndIcon_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.SetSentryGunOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ARedeployableSentryGun::SetSentryGunOwner(class APlayerCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.SetSentryGunOwner");

	ARedeployableSentryGun_SetSentryGunOwner_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ReceiveOnStateChanged
// (Event, Protected, BlueprintEvent)

void ARedeployableSentryGun::ReceiveOnStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ReceiveOnStateChanged");

	ARedeployableSentryGun_ReceiveOnStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ReceiveOnSentryGunOwnerChanged
// (Event, Protected, BlueprintEvent)

void ARedeployableSentryGun::ReceiveOnSentryGunOwnerChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ReceiveOnSentryGunOwnerChanged");

	ARedeployableSentryGun_ReceiveOnSentryGunOwnerChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ReceiveOnDismantled
// (Event, Protected, BlueprintEvent)

void ARedeployableSentryGun::ReceiveOnDismantled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ReceiveOnDismantled");

	ARedeployableSentryGun_ReceiveOnDismantled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ReceiveOnDismantle
// (Event, Protected, BlueprintEvent)

void ARedeployableSentryGun::ReceiveOnDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ReceiveOnDismantle");

	ARedeployableSentryGun_ReceiveOnDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ReceiveOnDeployed
// (Event, Protected, BlueprintEvent)

void ARedeployableSentryGun::ReceiveOnDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ReceiveOnDeployed");

	ARedeployableSentryGun_ReceiveOnDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ReceiveOnDeploy
// (Event, Protected, BlueprintEvent)

void ARedeployableSentryGun::ReceiveOnDeploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ReceiveOnDeploy");

	ARedeployableSentryGun_ReceiveOnDeploy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RedeployableSentryGun.OnStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ARedeployableSentryGun** Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// ERedeployableSentryGunState*   NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void ARedeployableSentryGun::OnStateChanged__DelegateSignature(class ARedeployableSentryGun** Sender, ERedeployableSentryGunState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RedeployableSentryGun.OnStateChanged__DelegateSignature");

	ARedeployableSentryGun_OnStateChanged__DelegateSignature_Params params;
	params.Sender = Sender;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.OnRep_State
// (Final, Native, Protected)
// Parameters:
// ERedeployableSentryGunState*   oldState                       (Parm, ZeroConstructor, IsPlainOldData)

void ARedeployableSentryGun::OnRep_State(ERedeployableSentryGunState* oldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.OnRep_State");

	ARedeployableSentryGun_OnRep_State_Params params;
	params.oldState = oldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.OnRep_SentryGunOwner
// (Final, Native, Protected)

void ARedeployableSentryGun::OnRep_SentryGunOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.OnRep_SentryGunOwner");

	ARedeployableSentryGun_OnRep_SentryGunOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.OnElectrocutionActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void ARedeployableSentryGun::OnElectrocutionActorDestroyed(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.OnElectrocutionActorDestroyed");

	ARedeployableSentryGun_OnElectrocutionActorDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RedeployableSentryGun.OnDismantleFinished__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ARedeployableSentryGun::OnDismantleFinished__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RedeployableSentryGun.OnDismantleFinished__DelegateSignature");

	ARedeployableSentryGun_OnDismantleFinished__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RedeployableSentryGun.OnDeployProgress__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void ARedeployableSentryGun::OnDeployProgress__DelegateSignature(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RedeployableSentryGun.OnDeployProgress__DelegateSignature");

	ARedeployableSentryGun_OnDeployProgress__DelegateSignature_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RedeployableSentryGun.OnDeployFinished__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ARedeployableSentryGun::OnDeployFinished__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RedeployableSentryGun.OnDeployFinished__DelegateSignature");

	ARedeployableSentryGun_OnDeployFinished__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.GetIsDismantled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARedeployableSentryGun::GetIsDismantled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.GetIsDismantled");

	ARedeployableSentryGun_GetIsDismantled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RedeployableSentryGun.GetIsDeployed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARedeployableSentryGun::GetIsDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.GetIsDeployed");

	ARedeployableSentryGun_GetIsDeployed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RedeployableSentryGun.GetAnimDuration
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent** Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ARedeployableSentryGun::GetAnimDuration(class USkeletalMeshComponent** Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.GetAnimDuration");

	ARedeployableSentryGun_GetAnimDuration_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RedeployableSentryGun.DismantleFinished
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void ARedeployableSentryGun::DismantleFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.DismantleFinished");

	ARedeployableSentryGun_DismantleFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.Dismantle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ARedeployableSentryGun::Dismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.Dismantle");

	ARedeployableSentryGun_Dismantle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.DeployFinished
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void ARedeployableSentryGun::DeployFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.DeployFinished");

	ARedeployableSentryGun_DeployFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.Deploy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ARedeployableSentryGun::Deploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.Deploy");

	ARedeployableSentryGun_Deploy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RedeployableSentryGun.ActivateSpecialAttack
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void ARedeployableSentryGun::ActivateSpecialAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RedeployableSentryGun.ActivateSpecialAttack");

	ARedeployableSentryGun_ActivateSpecialAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RegisterInviteNotificationBlueprintCallProxy.RegisterInvitiNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class URegisterInviteNotificationBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URegisterInviteNotificationBlueprintCallProxy* URegisterInviteNotificationBlueprintCallProxy::STATIC_RegisterInvitiNotification(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RegisterInviteNotificationBlueprintCallProxy.RegisterInvitiNotification");

	URegisterInviteNotificationBlueprintCallProxy_RegisterInvitiNotification_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RegisterSessionInviteNotificationBlueprintCallProxy.RegisterSessionInviteNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class URegisterSessionInviteNotificationBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URegisterSessionInviteNotificationBlueprintCallProxy* URegisterSessionInviteNotificationBlueprintCallProxy::STATIC_RegisterSessionInviteNotification(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RegisterSessionInviteNotificationBlueprintCallProxy.RegisterSessionInviteNotification");

	URegisterSessionInviteNotificationBlueprintCallProxy_RegisterSessionInviteNotification_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RejectInviteBlueprintCallProxy.RejectInvite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ListName                       (Parm, ZeroConstructor)
// struct FString*                userId                         (Parm, ZeroConstructor)
// class URejectInviteBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URejectInviteBlueprintCallProxy* URejectInviteBlueprintCallProxy::STATIC_RejectInvite(class UObject** WorldContextObject, struct FString* ListName, struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RejectInviteBlueprintCallProxy.RejectInvite");

	URejectInviteBlueprintCallProxy_RejectInvite_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ListName = ListName;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RepairObjective.OnRep_RepairedObjectives
// (Final, Native, Protected)

void URepairObjective::OnRep_RepairedObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairObjective.OnRep_RepairedObjectives");

	URepairObjective_OnRep_RepairedObjectives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RepairObjective.OnRep_ObjectivesToRepair
// (Final, Native, Protected)

void URepairObjective::OnRep_ObjectivesToRepair()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairObjective.OnRep_ObjectivesToRepair");

	URepairObjective_OnRep_ObjectivesToRepair_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RepairObjective.OnObjectiveRepaired
// (Final, Native, Protected)
// Parameters:
// class URepairableComponent**   repairable                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void URepairObjective::OnObjectiveRepaired(class URepairableComponent** repairable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairObjective.OnObjectiveRepaired");

	URepairObjective_OnObjectiveRepaired_Params params;
	params.repairable = repairable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RepairObjective.AllObjectivesRepaired
// (Event, Protected, BlueprintEvent)

void URepairObjective::AllObjectivesRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RepairObjective.AllObjectivesRepaired");

	URepairObjective_AllObjectivesRepaired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.ResourceBank.ResourceBankEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UResourceBank::ResourceBankEvent__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.ResourceBank.ResourceBankEvent__DelegateSignature");

	UResourceBank_ResourceBankEvent__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourceBank.All_Depositing
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class APlayerCharacter**       Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UResourceBank::All_Depositing(class APlayerCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceBank.All_Depositing");

	UResourceBank_All_Depositing_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourceChunk.OnRep_CollectedBy
// (Final, Native, Protected)

void AResourceChunk::OnRep_CollectedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceChunk.OnRep_CollectedBy");

	AResourceChunk_OnRep_CollectedBy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourceChunk.CalcMovement
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         InProgress                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                InVector                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 OutVelocity                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OutAngularVelocity             (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AResourceChunk::CalcMovement(float* InProgress, struct FVector* InVector, struct FVector* OutVelocity, struct FVector* OutAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceChunk.CalcMovement");

	AResourceChunk_CalcMovement_Params params;
	params.InProgress = InProgress;
	params.InVector = InVector;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutVelocity != nullptr)
		*OutVelocity = params.OutVelocity;
	if (OutAngularVelocity != nullptr)
		*OutAngularVelocity = params.OutAngularVelocity;
}


// Function FSD.RessuplyPod.OnTunnelBLocked
// (Event, Protected, BlueprintEvent)

void ARessuplyPod::OnTunnelBLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPod.OnTunnelBLocked");

	ARessuplyPod_OnTunnelBLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPod.OnRep_State
// (Final, Native, Protected)
// Parameters:
// ERessuplyPodState*             oldState                       (Parm, ZeroConstructor, IsPlainOldData)

void ARessuplyPod::OnRep_State(ERessuplyPodState* oldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPod.OnRep_State");

	ARessuplyPod_OnRep_State_Params params;
	params.oldState = oldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPod.OnDropStarted
// (Event, Protected, BlueprintEvent)

void ARessuplyPod::OnDropStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPod.OnDropStarted");

	ARessuplyPod_OnDropStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPod.OnDroppodImpact
// (Event, Protected, BlueprintEvent)

void ARessuplyPod::OnDroppodImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPod.OnDroppodImpact");

	ARessuplyPod_OnDroppodImpact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPod.OnDroppodCloseToImpact
// (Event, Protected, BlueprintEvent)

void ARessuplyPod::OnDroppodCloseToImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPod.OnDroppodCloseToImpact");

	ARessuplyPod_OnDroppodCloseToImpact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPod.DropToTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 podClass                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor**                 Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ARessuplyPod::STATIC_DropToTarget(class UObject** WorldContextObject, class UClass** podClass, struct FVector* Location, class AActor** Requester)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPod.DropToTarget");

	ARessuplyPod_DropToTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.podClass = podClass;
	params.Location = Location;
	params.Requester = Requester;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RessuplyPodSpawn.SetController
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFSDPlayerController**   Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void ARessuplyPodSpawn::SetController(class AFSDPlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPodSpawn.SetController");

	ARessuplyPodSpawn_SetController_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPodItem.Server_Call_Resupply
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ARessuplyPodItem::Server_Call_Resupply(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPodItem.Server_Call_Resupply");

	ARessuplyPodItem_Server_Call_Resupply_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RessuplyPodItem.GetResourceCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ARessuplyPodItem::GetResourceCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPodItem.GetResourceCost");

	ARessuplyPodItem_GetResourceCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RessuplyPodItem.GetActiveAggregator
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItemPlacerAggregator*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UItemPlacerAggregator* ARessuplyPodItem::GetActiveAggregator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RessuplyPodItem.GetActiveAggregator");

	ARessuplyPodItem_GetActiveAggregator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ResourceObjective.OnResourceChanged
// (Final, Native, Protected)
// Parameters:
// class UCappedResource**        CappedResource                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UResourceObjective::OnResourceChanged(class UCappedResource** CappedResource, float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceObjective.OnResourceChanged");

	UResourceObjective_OnResourceChanged_Params params;
	params.CappedResource = CappedResource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourceObjective.OnRep_ResourcesCollected
// (Final, Native, Protected)
// Parameters:
// float*                         prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UResourceObjective::OnRep_ResourcesCollected(float* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceObjective.OnRep_ResourcesCollected");

	UResourceObjective_OnRep_ResourcesCollected_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ResourceObjective.GetRequiredAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         missionScaling                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UResourceObjective::GetRequiredAmount(float* missionScaling)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ResourceObjective.GetRequiredAmount");

	UResourceObjective_GetRequiredAmount_Params params;
	params.missionScaling = missionScaling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeeklyResourceReward.GetRewards
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TMap<class UResourceData*, float> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class UResourceData*, float> UWeeklyResourceReward::GetRewards(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeeklyResourceReward.GetRewards");

	UWeeklyResourceReward_GetRewards_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemBlueprintReward.GetActorDefaultObject
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UItemBlueprintReward::GetActorDefaultObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemBlueprintReward.GetActorDefaultObject");

	UItemBlueprintReward_GetActorDefaultObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ItemBlueprintReward.GetActorClass
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UItemBlueprintReward::GetActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ItemBlueprintReward.GetActorClass");

	UItemBlueprintReward_GetActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RewardWidget.PlayReceiveAnim
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void URewardWidget::PlayReceiveAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RewardWidget.PlayReceiveAnim");

	URewardWidget_PlayReceiveAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.StopPowerupGeneration
// (Final, Native, Protected, BlueprintCallable)

void ARockEnemiesEvent::StopPowerupGeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.StopPowerupGeneration");

	ARockEnemiesEvent_StopPowerupGeneration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.StartPowerupGeneration
// (Final, Native, Protected, BlueprintCallable)

void ARockEnemiesEvent::StartPowerupGeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.StartPowerupGeneration");

	ARockEnemiesEvent_StartPowerupGeneration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.SpawnRockEnemies
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// float*                         Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        Locations                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ARockEnemiesEvent::SpawnRockEnemies(float* Difficulty, TArray<struct FVector>* Locations)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.SpawnRockEnemies");

	ARockEnemiesEvent_SpawnRockEnemies_Params params;
	params.Difficulty = Difficulty;
	params.Locations = Locations;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.ShowFireEffects
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// int*                           selectedBone                   (Parm, ZeroConstructor, IsPlainOldData)

void ARockEnemiesEvent::ShowFireEffects(int* selectedBone)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.ShowFireEffects");

	ARockEnemiesEvent_ShowFireEffects_Params params;
	params.selectedBone = selectedBone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.RockEnemySpawned
// (Final, Native, Public)
// Parameters:
// class APawn**                  spawnedEnemy                   (Parm, ZeroConstructor, IsPlainOldData)

void ARockEnemiesEvent::RockEnemySpawned(class APawn** spawnedEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.RockEnemySpawned");

	ARockEnemiesEvent_RockEnemySpawned_Params params;
	params.spawnedEnemy = spawnedEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.RockEnemyDied
// (Final, Native, Public)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ARockEnemiesEvent::RockEnemyDied(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.RockEnemyDied");

	ARockEnemiesEvent_RockEnemyDied_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RockEnemiesEvent.OnShoot
// (Event, Protected, BlueprintEvent)

void ARockEnemiesEvent::OnShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RockEnemiesEvent.OnShoot");

	ARockEnemiesEvent_OnShoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RoomPiece.GetDirectionFromPieceSide
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// ERoomPieceSide*                side                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector URoomPiece::STATIC_GetDirectionFromPieceSide(ERoomPieceSide* side)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RoomPiece.GetDirectionFromPieceSide");

	URoomPiece_GetDirectionFromPieceSide_Params params;
	params.side = side;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RoomGeneratorGroup.GetRandomRoomWithTags
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRoomGeneratorGroupInstance groupInstance                  (Parm, OutParm, ReferenceParm)
// struct FGameplayTagQuery*      queury                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class URoomGenerator*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URoomGenerator* URoomGeneratorGroup::STATIC_GetRandomRoomWithTags(struct FGameplayTagQuery* queury, struct FRoomGeneratorGroupInstance* groupInstance, struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RoomGeneratorGroup.GetRandomRoomWithTags");

	URoomGeneratorGroup_GetRandomRoomWithTags_Params params;
	params.queury = queury;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (groupInstance != nullptr)
		*groupInstance = params.groupInstance;
	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.RoomGeneratorGroup.GetRandomRoom
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class URoomGenerator*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URoomGenerator* URoomGeneratorGroup::GetRandomRoom(struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RoomGeneratorGroup.GetRandomRoom");

	URoomGeneratorGroup_GetRandomRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.RoomGeneratorGroup.CreateGroupInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRoomGeneratorGroupInstance ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRoomGeneratorGroupInstance URoomGeneratorGroup::CreateGroupInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RoomGeneratorGroup.CreateGroupInstance");

	URoomGeneratorGroup_CreateGroupInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RotateToFace.SetTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)

void URotateToFace::SetTarget(class AActor** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RotateToFace.SetTarget");

	URotateToFace_SetTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RotateToFace.SetShouldFaceAway
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          FaceAway                       (Parm, ZeroConstructor, IsPlainOldData)

void URotateToFace::SetShouldFaceAway(bool* FaceAway)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RotateToFace.SetShouldFaceAway");

	URotateToFace_SetShouldFaceAway_Params params;
	params.FaceAway = FaceAway;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalvageObjective.PointRepaired
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void USalvageObjective::PointRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.PointRepaired");

	USalvageObjective_PointRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalvageObjective.OnRep_PointsRepaired
// (Final, Native, Protected)

void USalvageObjective::OnRep_PointsRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.OnRep_PointsRepaired");

	USalvageObjective_OnRep_PointsRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalvageObjective.OnRep_ActorsToSalvage
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void USalvageObjective::OnRep_ActorsToSalvage(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.OnRep_ActorsToSalvage");

	USalvageObjective_OnRep_ActorsToSalvage_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalvageObjective.OnRep_ActorsSalvaged
// (Final, Native, Protected)
// Parameters:
// int*                           prevAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void USalvageObjective::OnRep_ActorsSalvaged(int* prevAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.OnRep_ActorsSalvaged");

	USalvageObjective_OnRep_ActorsSalvaged_Params params;
	params.prevAmount = prevAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalvageObjective.OnActorRepaired
// (Final, Native, Protected)
// Parameters:
// class URepairableComponent**   repairable                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USalvageObjective::OnActorRepaired(class URepairableComponent** repairable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.OnActorRepaired");

	USalvageObjective_OnActorRepaired_Params params;
	params.repairable = repairable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SalvageObjective.FindRepairPointLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                podLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDebrisPositioning**     DebrisPositioning              (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 terrainPlacement               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        locationsToAvoid               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UCurveFloat**            avoidCostCurve                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform USalvageObjective::STATIC_FindRepairPointLocation(class AProceduralSetup** setup, struct FVector* podLocation, float* Radius, class UDebrisPositioning** DebrisPositioning, class UClass** terrainPlacement, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.FindRepairPointLocation");

	USalvageObjective_FindRepairPointLocation_Params params;
	params.setup = setup;
	params.podLocation = podLocation;
	params.Radius = Radius;
	params.DebrisPositioning = DebrisPositioning;
	params.terrainPlacement = terrainPlacement;
	params.locationsToAvoid = locationsToAvoid;
	params.avoidCostCurve = avoidCostCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SalvageObjective.AllActorsSalvaged
// (Event, Protected, BlueprintEvent)

void USalvageObjective::AllActorsSalvaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SalvageObjective.AllActorsSalvaged");

	USalvageObjective_AllActorsSalvaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameLibrary.TryGetSaveGameSnapShot
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                Filename                       (Parm, ZeroConstructor)
// int*                           UserIdx                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSaveGameSnapShot       OutSnapShot                    (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USaveGameLibrary::STATIC_TryGetSaveGameSnapShot(class UObject** WorldContext, struct FString* Filename, int* UserIdx, struct FSaveGameSnapShot* OutSnapShot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameLibrary.TryGetSaveGameSnapShot");

	USaveGameLibrary_TryGetSaveGameSnapShot_Params params;
	params.WorldContext = WorldContext;
	params.Filename = Filename;
	params.UserIdx = UserIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSnapShot != nullptr)
		*OutSnapShot = params.OutSnapShot;

	return params.ReturnValue;
}


// Function FSD.SaveGameLibrary.GetUserSaveGameSlots
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString*                userId                         (Parm, ZeroConstructor)
// TMap<struct FString, struct FDateTime> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<struct FString, struct FDateTime> USaveGameLibrary::STATIC_GetUserSaveGameSlots(struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameLibrary.GetUserSaveGameSlots");

	USaveGameLibrary_GetUserSaveGameSlots_Params params;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SaveGameLibrary.GetAllSaveGameSlots
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<struct FString, struct FDateTime> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<struct FString, struct FDateTime> USaveGameLibrary::STATIC_GetAllSaveGameSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameLibrary.GetAllSaveGameSlots");

	USaveGameLibrary_GetAllSaveGameSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SaveGameStateComponent.SetCampaign
// (Final, Native, Public, BlueprintCallable)

void USaveGameStateComponent::SetCampaign()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.SetCampaign");

	USaveGameStateComponent_SetCampaign_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetVictoryPose
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UVictoryPose**           pose                           (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameStateComponent::Server_SetVictoryPose(class UVictoryPose** pose)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetVictoryPose");

	USaveGameStateComponent_Server_SetVictoryPose_Params params;
	params.pose = pose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetPlayerProgress
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FPlayerProgress*        Progress                       (ConstParm, Parm, ReferenceParm)

void USaveGameStateComponent::Server_SetPlayerProgress(struct FPlayerProgress* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetPlayerProgress");

	USaveGameStateComponent_Server_SetPlayerProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetLoadout
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FItemLoadout*           Loadout                        (ConstParm, Parm, ReferenceParm)
// TArray<struct FItemUpgradeSelection>* weaponLoadouts                 (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void USaveGameStateComponent::Server_SetLoadout(struct FItemLoadout* Loadout, TArray<struct FItemUpgradeSelection>* weaponLoadouts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetLoadout");

	USaveGameStateComponent_Server_SetLoadout_Params params;
	params.Loadout = Loadout;
	params.weaponLoadouts = weaponLoadouts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetEquippedPerks
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FSaveGameStatePerkItem>* perks                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void USaveGameStateComponent::Server_SetEquippedPerks(TArray<struct FSaveGameStatePerkItem>* perks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetEquippedPerks");

	USaveGameStateComponent_Server_SetEquippedPerks_Params params;
	params.perks = perks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetCredits
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void USaveGameStateComponent::Server_SetCredits(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetCredits");

	USaveGameStateComponent_Server_SetCredits_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetCharacterStats
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FCharacterProgress>* Stats                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void USaveGameStateComponent::Server_SetCharacterStats(TArray<struct FCharacterProgress>* Stats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetCharacterStats");

	USaveGameStateComponent_Server_SetCharacterStats_Params params;
	params.Stats = Stats;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.Server_SetActiveCampaignMission
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FActiveCampaingMission* Data                           (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameStateComponent::Server_SetActiveCampaignMission(struct FActiveCampaingMission* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.Server_SetActiveCampaignMission");

	USaveGameStateComponent_Server_SetActiveCampaignMission_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.RefreshLoadoutFromSave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 playerClass                    (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameStateComponent::RefreshLoadoutFromSave(class UClass** playerClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.RefreshLoadoutFromSave");

	USaveGameStateComponent_RefreshLoadoutFromSave_Params params;
	params.playerClass = playerClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.OnRep_PlayerProgress
// (Final, Native, Protected)

void USaveGameStateComponent::OnRep_PlayerProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.OnRep_PlayerProgress");

	USaveGameStateComponent_OnRep_PlayerProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.OnRep_ItemUpgradeSelections
// (Final, Native, Protected)

void USaveGameStateComponent::OnRep_ItemUpgradeSelections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.OnRep_ItemUpgradeSelections");

	USaveGameStateComponent_OnRep_ItemUpgradeSelections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.OnRep_Credits
// (Final, Native, Protected)

void USaveGameStateComponent::OnRep_Credits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.OnRep_Credits");

	USaveGameStateComponent_OnRep_Credits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.OnRep_CharacterStats
// (Final, Native, Protected)

void USaveGameStateComponent::OnRep_CharacterStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.OnRep_CharacterStats");

	USaveGameStateComponent_OnRep_CharacterStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.OnRep_ActiveCampaignMission
// (Final, Native, Protected)

void USaveGameStateComponent::OnRep_ActiveCampaignMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.OnRep_ActiveCampaignMission");

	USaveGameStateComponent_OnRep_ActiveCampaignMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.SaveGameStateComponent.ItemUpgradeEquipSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameStateComponent::ItemUpgradeEquipSignature__DelegateSignature(class UClass** itemClass, class UItemUpgrade** Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.SaveGameStateComponent.ItemUpgradeEquipSignature__DelegateSignature");

	USaveGameStateComponent_ItemUpgradeEquipSignature__DelegateSignature_Params params;
	params.itemClass = itemClass;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.SaveGameStateComponent.ItemUpgradeCraftSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameStateComponent::ItemUpgradeCraftSignature__DelegateSignature(class UItemUpgrade** Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.SaveGameStateComponent.ItemUpgradeCraftSignature__DelegateSignature");

	USaveGameStateComponent_ItemUpgradeCraftSignature__DelegateSignature_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SaveGameStateComponent.GetCharacterStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FCharacterProgress      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCharacterProgress USaveGameStateComponent::GetCharacterStat(class UClass** CharacterClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.GetCharacterStat");

	USaveGameStateComponent_GetCharacterStat_Params params;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SaveGameStateComponent.GetActiveCampaignMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGeneratedMission*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGeneratedMission* USaveGameStateComponent::GetActiveCampaignMission()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SaveGameStateComponent.GetActiveCampaignMission");

	USaveGameStateComponent_GetActiveCampaignMission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.SaveGameStateComponent.CreditsChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USaveGameStateComponent::CreditsChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.SaveGameStateComponent.CreditsChangedDelegate__DelegateSignature");

	USaveGameStateComponent_CreditsChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Schematic.SetCraftingMaterialCost
// (Final, Native, Public, BlueprintCallable)

void USchematic::SetCraftingMaterialCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.SetCraftingMaterialCost");

	USchematic_SetCraftingMaterialCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.Schematic.SchematicDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USchematic**             Schematic                      (Parm, ZeroConstructor, IsPlainOldData)

void USchematic::SchematicDelegate__DelegateSignature(class USchematic** Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.Schematic.SchematicDelegate__DelegateSignature");

	USchematic_SchematicDelegate__DelegateSignature_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Schematic.HasBeenForged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematic::HasBeenForged(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.HasBeenForged");

	USchematic_HasBeenForged_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.HasBeenAwardedOrForged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematic::HasBeenAwardedOrForged(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.HasBeenAwardedOrForged");

	USchematic_HasBeenAwardedOrForged_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.HasBeenAwarded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematic::HasBeenAwarded(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.HasBeenAwarded");

	USchematic_HasBeenAwarded_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USchematic::GetTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetTitle");

	USchematic_GetTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetSchematicState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// ESchematicState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESchematicState USchematic::GetSchematicState(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetSchematicState");

	USchematic_GetSchematicState_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetSchematicItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USchematicItem*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USchematicItem* USchematic::GetSchematicItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetSchematicItem");

	USchematic_GetSchematicItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetResourceCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class UResourceData*, int> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class UResourceData*, int> USchematic::GetResourceCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetResourceCost");

	USchematic_GetResourceCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetIconTint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor USchematic::GetIconTint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetIconTint");

	USchematic_GetIconTint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* USchematic::GetIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetIcon");

	USchematic_GetIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USchematic::GetDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.GetDescription");

	USchematic_GetDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.CanAffordSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematic::CanAffordSchematic(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.CanAffordSchematic");

	USchematic_CanAffordSchematic_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Schematic.BuildSchematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void USchematic::BuildSchematic(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.BuildSchematic");

	USchematic_BuildSchematic_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Schematic.AddSchematicToPlayerInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void USchematic::AddSchematicToPlayerInventory(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Schematic.AddSchematicToPlayerInventory");

	USchematic_AddSchematicToPlayerInventory_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SchematicBank.AddSchematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USchematic**             Schematic                      (Parm, ZeroConstructor, IsPlainOldData)

void USchematicBank::AddSchematic(class USchematic** Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBank.AddSchematic");

	USchematicBank_AddSchematic_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SchematicBlueprintLibrary.PriceAllSchematics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool*                          lockPrices                     (Parm, ZeroConstructor, IsPlainOldData)

void USchematicBlueprintLibrary::STATIC_PriceAllSchematics(bool* lockPrices)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.PriceAllSchematics");

	USchematicBlueprintLibrary_PriceAllSchematics_Params params;
	params.lockPrices = lockPrices;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SchematicBlueprintLibrary.IsSchematicOwnedOrForged
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USchematic**             Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematicBlueprintLibrary::STATIC_IsSchematicOwnedOrForged(class UObject** WorldContextObject, class USchematic** Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.IsSchematicOwnedOrForged");

	USchematicBlueprintLibrary_IsSchematicOwnedOrForged_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.IsSchematicOwned
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USchematic**             Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematicBlueprintLibrary::STATIC_IsSchematicOwned(class UObject** WorldContextObject, class USchematic** Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.IsSchematicOwned");

	USchematicBlueprintLibrary_IsSchematicOwned_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.IsSchematicForged
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USchematic**             Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematicBlueprintLibrary::STATIC_IsSchematicForged(class UObject** WorldContextObject, class USchematic** Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.IsSchematicForged");

	USchematicBlueprintLibrary_IsSchematicForged_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.HasAnyUnlockableSchematics
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USchematicBlueprintLibrary::STATIC_HasAnyUnlockableSchematics(class UObject** WorldContextObject, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.HasAnyUnlockableSchematics");

	USchematicBlueprintLibrary_HasAnyUnlockableSchematics_Params params;
	params.WorldContextObject = WorldContextObject;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.GetRewardableSchematics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// class USchematicCategory**     Category                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> USchematicBlueprintLibrary::STATIC_GetRewardableSchematics(class UObject** WorldContextObject, class UPlayerCharacterID** characterID, class USchematicCategory** Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.GetRewardableSchematics");

	USchematicBlueprintLibrary_GetRewardableSchematics_Params params;
	params.WorldContextObject = WorldContextObject;
	params.characterID = characterID;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.GetForgedSchematic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> USchematicBlueprintLibrary::STATIC_GetForgedSchematic(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.GetForgedSchematic");

	USchematicBlueprintLibrary_GetForgedSchematic_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.FindItemUpgradeSchematicCategory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)
// class USchematicCategory*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USchematicCategory* USchematicBlueprintLibrary::STATIC_FindItemUpgradeSchematicCategory(class UItemUpgrade** Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.FindItemUpgradeSchematicCategory");

	USchematicBlueprintLibrary_FindItemUpgradeSchematicCategory_Params params;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicBlueprintLibrary.AddSkinSchematicCollectionToSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UItemSkinSchematicCollection** Collection                     (Parm, ZeroConstructor, IsPlainOldData)

void USchematicBlueprintLibrary::STATIC_AddSkinSchematicCollectionToSettings(class UItemSkinSchematicCollection** Collection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicBlueprintLibrary.AddSkinSchematicCollectionToSettings");

	USchematicBlueprintLibrary_AddSkinSchematicCollectionToSettings_Params params;
	params.Collection = Collection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SchematicItem.GetTitle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USchematicItem::GetTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicItem.GetTitle");

	USchematicItem_GetTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicItem.GetIconTint
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor USchematicItem::GetIconTint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicItem.GetIconTint");

	USchematicItem_GetIconTint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicItem.GetIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* USchematicItem::GetIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicItem.GetIcon");

	USchematicItem_GetIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicItem.GetDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USchematicItem::GetDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicItem.GetDescription");

	USchematicItem_GetDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.OverclockShematicItem.GetOwningGearComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUpgradableGearComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUpgradableGearComponent* UOverclockShematicItem::GetOwningGearComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OverclockShematicItem.GetOwningGearComponent");

	UOverclockShematicItem_GetOwningGearComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SchematicSettings.GetSchematicTypeData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESchematicType*                InType                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FSchematicType          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSchematicType USchematicSettings::GetSchematicTypeData(ESchematicType* InType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SchematicSettings.GetSchematicTypeData");

	USchematicSettings_GetSchematicTypeData_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SendInviteBlueprintCallProxy.SendInvite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                ListName                       (Parm, ZeroConstructor)
// struct FString*                userId                         (Parm, ZeroConstructor)
// class USendInviteBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USendInviteBlueprintCallProxy* USendInviteBlueprintCallProxy::STATIC_SendInvite(class UObject** WorldContextObject, struct FString* ListName, struct FString* userId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SendInviteBlueprintCallProxy.SendInvite");

	USendInviteBlueprintCallProxy_SendInvite_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ListName = ListName;
	params.userId = userId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SendSessionInviteToFriendBlueprintCallProxy.SendSessionInviteToFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                FriendId                       (Parm, ZeroConstructor)
// class USendSessionInviteToFriendBlueprintCallProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USendSessionInviteToFriendBlueprintCallProxy* USendSessionInviteToFriendBlueprintCallProxy::STATIC_SendSessionInviteToFriend(class UObject** WorldContextObject, struct FString* FriendId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SendSessionInviteToFriendBlueprintCallProxy.SendSessionInviteToFriend");

	USendSessionInviteToFriendBlueprintCallProxy_SendSessionInviteToFriend_Params params;
	params.WorldContextObject = WorldContextObject;
	params.FriendId = FriendId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.RecallableSentryGun.SentryIndexChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableSentryGun::SentryIndexChanged__DelegateSignature(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RecallableSentryGun.SentryIndexChanged__DelegateSignature");

	ARecallableSentryGun_SentryIndexChanged__DelegateSignature_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableSentryGun.ReceiveOnSentryReady
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASentryGun**             SentryGun                      (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableSentryGun::ReceiveOnSentryReady(class ASentryGun** SentryGun, class APlayerCharacter** PlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGun.ReceiveOnSentryReady");

	ARecallableSentryGun_ReceiveOnSentryReady_Params params;
	params.SentryGun = SentryGun;
	params.PlayerCharacter = PlayerCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableSentryGun.OnRep_SentryIndex
// (Final, Native, Protected)

void ARecallableSentryGun::OnRep_SentryIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGun.OnRep_SentryIndex");

	ARecallableSentryGun_OnRep_SentryIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableSentryGun.GetStateDescription
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   Description                    (Parm, OutParm)

void ARecallableSentryGun::GetStateDescription(struct FText* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGun.GetStateDescription");

	ARecallableSentryGun_GetStateDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Description != nullptr)
		*Description = params.Description;
}


// Function FSD.RecallableSentryGun.GetSentryGunClass
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* ARecallableSentryGun::GetSentryGunClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGun.GetSentryGunClass");

	ARecallableSentryGun_GetSentryGunClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableSentryGun.GetSentryGun
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASentryGun*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASentryGun* ARecallableSentryGun::GetSentryGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGun.GetSentryGun");

	ARecallableSentryGun_GetSentryGun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ReloadSentryUsableComponent.SetOwningPlayerCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UReloadSentryUsableComponent::SetOwningPlayerCharacter(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ReloadSentryUsableComponent.SetOwningPlayerCharacter");

	UReloadSentryUsableComponent_SetOwningPlayerCharacter_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ReloadSentryUsableComponent.SetCanUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isUsable                       (Parm, ZeroConstructor, IsPlainOldData)

void UReloadSentryUsableComponent::SetCanUse(bool* isUsable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ReloadSentryUsableComponent.SetCanUse");

	UReloadSentryUsableComponent_SetCanUse_Params params;
	params.isUsable = isUsable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ReloadSentryUsableComponent.OnRep_Reloading
// (Final, Native, Protected)

void UReloadSentryUsableComponent::OnRep_Reloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ReloadSentryUsableComponent.OnRep_Reloading");

	UReloadSentryUsableComponent_OnRep_Reloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ReloadSentryUsableComponent.OnReloadAudioFinished
// (Final, Native, Protected)

void UReloadSentryUsableComponent::OnReloadAudioFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ReloadSentryUsableComponent.OnReloadAudioFinished");

	UReloadSentryUsableComponent_OnReloadAudioFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableSentryGunItem.ReceiveItemUpgraded
// (Event, Protected, BlueprintEvent)

void ARecallableSentryGunItem::ReceiveItemUpgraded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGunItem.ReceiveItemUpgraded");

	ARecallableSentryGunItem_ReceiveItemUpgraded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RecallableSentryGunItem.RecallableSentryGunSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ARecallableSentryGun**   SentryGun                      (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableSentryGunItem::RecallableSentryGunSignature__DelegateSignature(class ARecallableSentryGun** SentryGun)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RecallableSentryGunItem.RecallableSentryGunSignature__DelegateSignature");

	ARecallableSentryGunItem_RecallableSentryGunSignature__DelegateSignature_Params params;
	params.SentryGun = SentryGun;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.RecallableSentryGunItem.RecallableSentryGunItemSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ARecallableSentryGunItem** Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ARecallableSentryGunItem::RecallableSentryGunItemSignature__DelegateSignature(class ARecallableSentryGunItem** Item)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.RecallableSentryGunItem.RecallableSentryGunItemSignature__DelegateSignature");

	ARecallableSentryGunItem_RecallableSentryGunItemSignature__DelegateSignature_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.RecallableSentryGunItem.HasAmmoLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableSentryGunItem::HasAmmoLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGunItem.HasAmmoLeft");

	ARecallableSentryGunItem_HasAmmoLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableSentryGunItem.GetSelectedSentryGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ARecallableSentryGun*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ARecallableSentryGun* ARecallableSentryGunItem::GetSelectedSentryGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGunItem.GetSelectedSentryGun");

	ARecallableSentryGunItem_GetSelectedSentryGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableSentryGunItem.GetActiveSentryGuns
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class ARecallableSentryGun*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ARecallableSentryGun*> ARecallableSentryGunItem::GetActiveSentryGuns()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGunItem.GetActiveSentryGuns");

	ARecallableSentryGunItem_GetActiveSentryGuns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.RecallableSentryGunItem.AreAllSentriesPlaced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARecallableSentryGunItem::AreAllSentriesPlaced()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.RecallableSentryGunItem.AreAllSentriesPlaced");

	ARecallableSentryGunItem_AreAllSentriesPlaced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.TrialLicenseCheckStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EUWPBPTrialCheck               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUWPBPTrialCheck USessionHandling::STATIC_TrialLicenseCheckStatus(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.TrialLicenseCheckStatus");

	USessionHandling_TrialLicenseCheckStatus_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.StopVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_StopVoice(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.StopVoice");

	USessionHandling_StopVoice_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.StartVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_StartVoice(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.StartVoice");

	USessionHandling_StartVoice_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.StartTrialLicenseCheck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_StartTrialLicenseCheck(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.StartTrialLicenseCheck");

	USessionHandling_StartTrialLicenseCheck_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.StartSearchForFriends
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int*                           LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_StartSearchForFriends(int* LocalUserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.StartSearchForFriends");

	USessionHandling_StartSearchForFriends_Params params;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.StartMandatoryUpdateCheck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_StartMandatoryUpdateCheck(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.StartMandatoryUpdateCheck");

	USessionHandling_StartMandatoryUpdateCheck_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.ShowStoreUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_ShowStoreUI(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.ShowStoreUI");

	USessionHandling_ShowStoreUI_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.ShowInviteUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_ShowInviteUI(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.ShowInviteUI");

	USessionHandling_ShowInviteUI_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.MandatoryUpdateCheckStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EBPUWPMandatoryUpdateCheck     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EBPUWPMandatoryUpdateCheck USessionHandling::STATIC_MandatoryUpdateCheckStatus(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.MandatoryUpdateCheckStatus");

	USessionHandling_MandatoryUpdateCheckStatus_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.JoinOfficialXboxClub
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_JoinOfficialXboxClub(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.JoinOfficialXboxClub");

	USessionHandling_JoinOfficialXboxClub_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.IsVoiceChatting
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_IsVoiceChatting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.IsVoiceChatting");

	USessionHandling_IsVoiceChatting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.IsInActiveSession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_IsInActiveSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.IsInActiveSession");

	USessionHandling_IsInActiveSession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.IsDisconnectReasonAKick
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDisconnectReason*             reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_IsDisconnectReasonAKick(EDisconnectReason* reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.IsDisconnectReasonAKick");

	USessionHandling_IsDisconnectReasonAKick_Params params;
	params.reason = reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetVoiceStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_GetVoiceStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetVoiceStatus");

	USessionHandling_GetVoiceStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetSessionJoinError
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USessionHandling::STATIC_GetSessionJoinError(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetSessionJoinError");

	USessionHandling_GetSessionJoinError_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetOnlinePlayerName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Name                           (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_GetOnlinePlayerName(int* LocalUserNum, struct FString* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetOnlinePlayerName");

	USessionHandling_GetOnlinePlayerName_Params params;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Name != nullptr)
		*Name = params.Name;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetNATType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EFSDNATType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFSDNATType USessionHandling::STATIC_GetNATType(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetNATType");

	USessionHandling_GetNATType_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetMissionStructure
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// EMissionStructure              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EMissionStructure USessionHandling::STATIC_GetMissionStructure(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetMissionStructure");

	USessionHandling_GetMissionStructure_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetLoginStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int*                           LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_GetLoginStatus(int* LocalUserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetLoginStatus");

	USessionHandling_GetLoginStatus_Params params;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetFriendsList
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           LocalUserNum                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FFriendInfo>     Players                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_GetFriendsList(int* LocalUserNum, TArray<struct FFriendInfo>* Players)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetFriendsList");

	USessionHandling_GetFriendsList_Params params;
	params.LocalUserNum = LocalUserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Players != nullptr)
		*Players = params.Players;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetFriendlyServerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_GetFriendlyServerName(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetFriendlyServerName");

	USessionHandling_GetFriendlyServerName_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.GetCurrentSessionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 sessionState                   (Parm, OutParm, ZeroConstructor)
// struct FString                 ID                             (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_GetCurrentSessionState(struct FString* sessionState, struct FString* ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.GetCurrentSessionState");

	USessionHandling_GetCurrentSessionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (sessionState != nullptr)
		*sessionState = params.sessionState;
	if (ID != nullptr)
		*ID = params.ID;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDUpdateSessionInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDUpdateSessionInfo(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDUpdateSessionInfo");

	USessionHandling_FSDUpdateSessionInfo_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDMissionStatus
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// EFSDMissionStatus              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFSDMissionStatus USessionHandling::STATIC_FSDMissionStatus(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDMissionStatus");

	USessionHandling_FSDMissionStatus_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDListen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USessionHandling::STATIC_FSDListen(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDListen");

	USessionHandling_FSDListen_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SessionHandling.FSDIsSessionValid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDIsSessionValid(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDIsSessionValid");

	USessionHandling_FSDIsSessionValid_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDIsPrivateServer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDIsPrivateServer(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDIsPrivateServer");

	USessionHandling_FSDIsPrivateServer_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDIsPasswordRequired
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDIsPasswordRequired(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDIsPasswordRequired");

	USessionHandling_FSDIsPasswordRequired_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDIsFullServer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDIsFullServer(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDIsFullServer");

	USessionHandling_FSDIsFullServer_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDIsEliteDeepDive
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDIsEliteDeepDive(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDIsEliteDeepDive");

	USessionHandling_FSDIsEliteDeepDive_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDIsClassLocked
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDIsClassLocked(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDIsClassLocked");

	USessionHandling_FSDIsClassLocked_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDHasGameStarted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDHasGameStarted(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDHasGameStarted");

	USessionHandling_FSDHasGameStarted_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetServerStartTime
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FDateTime               StartTime                      (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDGetServerStartTime(struct FBlueprintSessionResult* Result, struct FDateTime* StartTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetServerStartTime");

	USessionHandling_FSDGetServerStartTime_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (StartTime != nullptr)
		*StartTime = params.StartTime;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetServerName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_FSDGetServerName(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetServerName");

	USessionHandling_FSDGetServerName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetServerID
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_FSDGetServerID(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetServerID");

	USessionHandling_FSDGetServerID_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetRegion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_FSDGetRegion(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetRegion");

	USessionHandling_FSDGetRegion_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetPlayerClasses
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> USessionHandling::STATIC_FSDGetPlayerClasses(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetPlayerClasses");

	USessionHandling_FSDGetPlayerClasses_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetNumPlayers
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USessionHandling::STATIC_FSDGetNumPlayers(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetNumPlayers");

	USessionHandling_FSDGetNumPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetMissionSeed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USessionHandling::STATIC_FSDGetMissionSeed(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetMissionSeed");

	USessionHandling_FSDGetMissionSeed_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetMapName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_FSDGetMapName(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetMapName");

	USessionHandling_FSDGetMapName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetGlobalMissionSeed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USessionHandling::STATIC_FSDGetGlobalMissionSeed(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetGlobalMissionSeed");

	USessionHandling_FSDGetGlobalMissionSeed_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetDifficulty
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// class UDifficultySetting*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDifficultySetting* USessionHandling::STATIC_FSDGetDifficulty(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetDifficulty");

	USessionHandling_FSDGetDifficulty_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDGetBuildId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USessionHandling::STATIC_FSDGetBuildId(struct FBlueprintSessionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDGetBuildId");

	USessionHandling_FSDGetBuildId_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FSDCancelFindSessions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FSDCancelFindSessions(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FSDCancelFindSessions");

	USessionHandling_FSDCancelFindSessions_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.FindBestQuickJoinServer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBlueprintSessionResult> sessions                       (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UDifficultySetting**     Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// class UBiome**                 Biome                          (Parm, ZeroConstructor, IsPlainOldData)
// class UMissionTemplate**       MissionTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FBlueprintSessionResult OutResult                      (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_FindBestQuickJoinServer(class UObject** WorldContextObject, class UDifficultySetting** Difficulty, class UBiome** Biome, class UMissionTemplate** MissionTemplate, TArray<struct FBlueprintSessionResult>* sessions, struct FBlueprintSessionResult* OutResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.FindBestQuickJoinServer");

	USessionHandling_FindBestQuickJoinServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Difficulty = Difficulty;
	params.Biome = Biome;
	params.MissionTemplate = MissionTemplate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (sessions != nullptr)
		*sessions = params.sessions;
	if (OutResult != nullptr)
		*OutResult = params.OutResult;

	return params.ReturnValue;
}


// Function FSD.SessionHandling.AllowLinkToExternalFeedback
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USessionHandling::STATIC_AllowLinkToExternalFeedback(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SessionHandling.AllowLinkToExternalFeedback");

	USessionHandling_AllowLinkToExternalFeedback_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SharkEnemy.SetVulnerable
// (Final, Native, Public)

void ASharkEnemy::SetVulnerable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.SetVulnerable");

	ASharkEnemy_SetVulnerable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.ReleasePlayer
// (Final, Native, Public)
// Parameters:
// class AActor**                 playerchar                     (Parm, ZeroConstructor, IsPlainOldData)

void ASharkEnemy::ReleasePlayer(class AActor** playerchar)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.ReleasePlayer");

	ASharkEnemy_ReleasePlayer_Params params;
	params.playerchar = playerchar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.PopRecentlyBumpedPlayer
// (Final, Native, Protected)

void ASharkEnemy::PopRecentlyBumpedPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.PopRecentlyBumpedPlayer");

	ASharkEnemy_PopRecentlyBumpedPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnStateChangedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// ESharkEnemyState*              CurrentState                   (Parm, ZeroConstructor, IsPlainOldData)

void ASharkEnemy::OnStateChangedEvent(ESharkEnemyState* CurrentState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnStateChangedEvent");

	ASharkEnemy_OnStateChangedEvent_Params params;
	params.CurrentState = CurrentState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnSeePawn
// (Final, Native, Protected)
// Parameters:
// class APawn**                  APawn                          (Parm, ZeroConstructor, IsPlainOldData)

void ASharkEnemy::OnSeePawn(class APawn** APawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnSeePawn");

	ASharkEnemy_OnSeePawn_Params params;
	params.APawn = APawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnRep_State
// (Final, Native, Protected)

void ASharkEnemy::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnRep_State");

	ASharkEnemy_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnRep_RagdollImpact
// (Final, Native, Public)

void ASharkEnemy::OnRep_RagdollImpact()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnRep_RagdollImpact");

	ASharkEnemy_OnRep_RagdollImpact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnRep_DiveTime
// (Final, Native, Protected)

void ASharkEnemy::OnRep_DiveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnRep_DiveTime");

	ASharkEnemy_OnRep_DiveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnNearTarget
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASharkEnemy::OnNearTarget(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnNearTarget");

	ASharkEnemy_OnNearTarget_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnLandedEvent
// (Event, Public, BlueprintEvent)

void ASharkEnemy::OnLandedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnLandedEvent");

	ASharkEnemy_OnLandedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnJumpEvent
// (Event, Public, BlueprintEvent)

void ASharkEnemy::OnJumpEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnJumpEvent");

	ASharkEnemy_OnJumpEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnGrabbedEvent
// (Event, Public, BlueprintEvent)

void ASharkEnemy::OnGrabbedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnGrabbedEvent");

	ASharkEnemy_OnGrabbedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnDeath
// (Final, Native, Private)
// Parameters:
// class UHealthComponentBase**   aHealthComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ASharkEnemy::OnDeath(class UHealthComponentBase** aHealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnDeath");

	ASharkEnemy_OnDeath_Params params;
	params.aHealthComponent = aHealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnDamaged
// (Final, Native, Protected)
// Parameters:
// float*                         aAmount                        (Parm, ZeroConstructor, IsPlainOldData)

void ASharkEnemy::OnDamaged(float* aAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnDamaged");

	ASharkEnemy_OnDamaged_Params params;
	params.aAmount = aAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.OnCollided
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASharkEnemy::OnCollided(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.OnCollided");

	ASharkEnemy_OnCollided_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.Jumped
// (Net, Native, Event, NetMulticast, Protected)

void ASharkEnemy::Jumped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.Jumped");

	ASharkEnemy_Jumped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.ImpactSound
// (Net, Native, Event, NetMulticast, Protected)

void ASharkEnemy::ImpactSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.ImpactSound");

	ASharkEnemy_ImpactSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.DiveShow
// (Final, Native, Protected)

void ASharkEnemy::DiveShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.DiveShow");

	ASharkEnemy_DiveShow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.DiveHide
// (Final, Native, Protected)

void ASharkEnemy::DiveHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.DiveHide");

	ASharkEnemy_DiveHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SharkEnemy.ActivateDanger
// (Final, Native, Private)

void ASharkEnemy::ActivateDanger()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SharkEnemy.ActivateDanger");

	ASharkEnemy_ActivateDanger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpiderAnimInstance.SetMeshScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewScale                       (Parm, ZeroConstructor, IsPlainOldData)

void USpiderAnimInstance::SetMeshScale(float* NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpiderAnimInstance.SetMeshScale");

	USpiderAnimInstance_SetMeshScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpiderAnimInstance.PlayForcedCycle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void USpiderAnimInstance::PlayForcedCycle(float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpiderAnimInstance.PlayForcedCycle");

	USpiderAnimInstance_PlayForcedCycle_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SimpleHealthComponent.OnRep_Damage
// (Final, Native, Protected)
// Parameters:
// float*                         oldDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void USimpleHealthComponent::OnRep_Damage(float* oldDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SimpleHealthComponent.OnRep_Damage");

	USimpleHealthComponent_OnRep_Damage_Params params;
	params.oldDamage = oldDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBar.SpawnDrinkables
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class UDrinkableDataAsset**    Drinkable                      (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void ASpaceRigBar::SpawnDrinkables(class UDrinkableDataAsset** Drinkable, class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.SpawnDrinkables");

	ASpaceRigBar_SpawnDrinkables_Params params;
	params.Drinkable = Drinkable;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBar.ReceiveFinishedSpawningDrinkables
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UDrinkableDataAsset**    DrinkableData                  (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       Customer                       (Parm, ZeroConstructor, IsPlainOldData)

void ASpaceRigBar::ReceiveFinishedSpawningDrinkables(class UDrinkableDataAsset** DrinkableData, class APlayerCharacter** Customer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.ReceiveFinishedSpawningDrinkables");

	ASpaceRigBar_ReceiveFinishedSpawningDrinkables_Params params;
	params.DrinkableData = DrinkableData;
	params.Customer = Customer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBar.ReceiveDrinkableSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADrinkableActor**        Drinkable                      (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       Customer                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           LocationIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void ASpaceRigBar::ReceiveDrinkableSpawned(class ADrinkableActor** Drinkable, class APlayerCharacter** Customer, int* LocationIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.ReceiveDrinkableSpawned");

	ASpaceRigBar_ReceiveDrinkableSpawned_Params params;
	params.Drinkable = Drinkable;
	params.Customer = Customer;
	params.LocationIndex = LocationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBar.ReceiveBeginSpawningDrinkables
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UDrinkableDataAsset**    DrinkableData                  (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerCharacter**       Customer                       (Parm, ZeroConstructor, IsPlainOldData)

void ASpaceRigBar::ReceiveBeginSpawningDrinkables(class UDrinkableDataAsset** DrinkableData, class APlayerCharacter** Customer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.ReceiveBeginSpawningDrinkables");

	ASpaceRigBar_ReceiveBeginSpawningDrinkables_Params params;
	params.DrinkableData = DrinkableData;
	params.Customer = Customer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBar.OnRep_DrinkableSpecial
// (Final, Native, Protected)

void ASpaceRigBar::OnRep_DrinkableSpecial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.OnRep_DrinkableSpecial");

	ASpaceRigBar_OnRep_DrinkableSpecial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBar.HasUnclaimedDrinkables
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASpaceRigBar::HasUnclaimedDrinkables()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.HasUnclaimedDrinkables");

	ASpaceRigBar_HasUnclaimedDrinkables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpaceRigBar.HasSpaceForMoreDrinkables
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASpaceRigBar::HasSpaceForMoreDrinkables()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.HasSpaceForMoreDrinkables");

	ASpaceRigBar_HasSpaceForMoreDrinkables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpaceRigBar.GetAvailableDrinkableSlots
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASpaceRigBar::GetAvailableDrinkableSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBar.GetAvailableDrinkableSlots");

	ASpaceRigBar_GetAvailableDrinkableSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.SpaceRigBar.DrinkableSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UDrinkableDataAsset**    Drinkable                      (Parm, ZeroConstructor, IsPlainOldData)

void ASpaceRigBar::DrinkableSignature__DelegateSignature(class UDrinkableDataAsset** Drinkable)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.SpaceRigBar.DrinkableSignature__DelegateSignature");

	ASpaceRigBar_DrinkableSignature__DelegateSignature_Params params;
	params.Drinkable = Drinkable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBarMenuItem.Unselect
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USpaceRigBarMenuItem::Unselect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBarMenuItem.Unselect");

	USpaceRigBarMenuItem_Unselect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpaceRigBarMenuItem.Select
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USpaceRigBarMenuItem::Select()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpaceRigBarMenuItem.Select");

	USpaceRigBarMenuItem_Select_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpawningBlueprintLibrary.SpawnEnemyGroupDescriptorSpreadOut
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UEnemyGroupDescriptor**  Descriptor                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        Locations                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          Alert                          (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)

void USpawningBlueprintLibrary::STATIC_SpawnEnemyGroupDescriptorSpreadOut(class UObject** WorldContextObject, class UEnemyGroupDescriptor** Descriptor, float* Difficulty, TArray<struct FVector>* Locations, bool* Alert, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.SpawnEnemyGroupDescriptorSpreadOut");

	USpawningBlueprintLibrary_SpawnEnemyGroupDescriptorSpreadOut_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Descriptor = Descriptor;
	params.Difficulty = Difficulty;
	params.Locations = Locations;
	params.Alert = Alert;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpawningBlueprintLibrary.SpawnEnemyGroupDescriptor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UEnemyGroupDescriptor**  Descriptor                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Alert                          (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)

void USpawningBlueprintLibrary::STATIC_SpawnEnemyGroupDescriptor(class UObject** WorldContextObject, class UEnemyGroupDescriptor** Descriptor, float* Difficulty, struct FVector* Location, bool* Alert, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.SpawnEnemyGroupDescriptor");

	USpawningBlueprintLibrary_SpawnEnemyGroupDescriptor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Descriptor = Descriptor;
	params.Difficulty = Difficulty;
	params.Location = Location;
	params.Alert = Alert;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpawningBlueprintLibrary.SpawnEnemiesFromPool
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Difficulty                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        Locations                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          Alert                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isConstantPreassure            (Parm, ZeroConstructor, IsPlainOldData)

void USpawningBlueprintLibrary::STATIC_SpawnEnemiesFromPool(class UObject** WorldContextObject, float* Difficulty, TArray<struct FVector>* Locations, bool* Alert, bool* isConstantPreassure)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.SpawnEnemiesFromPool");

	USpawningBlueprintLibrary_SpawnEnemiesFromPool_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Difficulty = Difficulty;
	params.Locations = Locations;
	params.Alert = Alert;
	params.isConstantPreassure = isConstantPreassure;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpawningBlueprintLibrary.SpawnEnemiesAtLocationWithCallback
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UEnemyDescriptor**       EnemyDescriptor                (Parm, ZeroConstructor, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          Alert                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          scaleToDifficulty              (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)

void USpawningBlueprintLibrary::STATIC_SpawnEnemiesAtLocationWithCallback(class UObject** WorldContextObject, class UEnemyDescriptor** EnemyDescriptor, int* count, struct FVector* Location, struct FScriptDelegate* Callback, bool* Alert, bool* scaleToDifficulty, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.SpawnEnemiesAtLocationWithCallback");

	USpawningBlueprintLibrary_SpawnEnemiesAtLocationWithCallback_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EnemyDescriptor = EnemyDescriptor;
	params.count = count;
	params.Location = Location;
	params.Callback = Callback;
	params.Alert = Alert;
	params.scaleToDifficulty = scaleToDifficulty;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpawningBlueprintLibrary.SpawnEnemiesAtLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UEnemyDescriptor**       EnemyDescriptor                (Parm, ZeroConstructor, IsPlainOldData)
// int*                           count                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Alert                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          scaleToDifficulty              (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)

void USpawningBlueprintLibrary::STATIC_SpawnEnemiesAtLocation(class UObject** WorldContextObject, class UEnemyDescriptor** EnemyDescriptor, int* count, struct FVector* Location, bool* Alert, bool* scaleToDifficulty, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.SpawnEnemiesAtLocation");

	USpawningBlueprintLibrary_SpawnEnemiesAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EnemyDescriptor = EnemyDescriptor;
	params.count = count;
	params.Location = Location;
	params.Alert = Alert;
	params.scaleToDifficulty = scaleToDifficulty;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpawningBlueprintLibrary.GetSpawnPointsInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distanceToPlayers              (Parm, ZeroConstructor, IsPlainOldData)
// int*                           spawnPointCount                (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FVector> USpawningBlueprintLibrary::STATIC_GetSpawnPointsInRange(class UObject** WorldContextObject, float* distanceToPlayers, int* spawnPointCount, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.GetSpawnPointsInRange");

	USpawningBlueprintLibrary_GetSpawnPointsInRange_Params params;
	params.WorldContextObject = WorldContextObject;
	params.distanceToPlayers = distanceToPlayers;
	params.spawnPointCount = spawnPointCount;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpawningBlueprintLibrary.GetSpawnPointsFromLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           spawnPointCount                (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FVector> USpawningBlueprintLibrary::STATIC_GetSpawnPointsFromLocation(class UObject** WorldContextObject, struct FVector* Location, float* distance, int* spawnPointCount, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.GetSpawnPointsFromLocation");

	USpawningBlueprintLibrary_GetSpawnPointsFromLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.distance = distance;
	params.spawnPointCount = spawnPointCount;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpawningBlueprintLibrary.GetSpawnPointInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distanceToPlayers              (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector USpawningBlueprintLibrary::STATIC_GetSpawnPointInRange(class UObject** WorldContextObject, float* distanceToPlayers, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.GetSpawnPointInRange");

	USpawningBlueprintLibrary_GetSpawnPointInRange_Params params;
	params.WorldContextObject = WorldContextObject;
	params.distanceToPlayers = distanceToPlayers;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpawningBlueprintLibrary.GetSpawnPointFromLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         distance                       (Parm, ZeroConstructor, IsPlainOldData)
// EDeepPathFinderSize*           pfSize                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector USpawningBlueprintLibrary::STATIC_GetSpawnPointFromLocation(class UObject** WorldContextObject, struct FVector* Location, float* distance, EDeepPathFinderSize* pfSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpawningBlueprintLibrary.GetSpawnPointFromLocation");

	USpawningBlueprintLibrary_GetSpawnPointFromLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.distance = distance;
	params.pfSize = pfSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpecialEventBlueprintLibrary.TryGivePendingReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class USchematic*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USchematic* USpecialEventBlueprintLibrary::STATIC_TryGivePendingReward(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpecialEventBlueprintLibrary.TryGivePendingReward");

	USpecialEventBlueprintLibrary_TryGivePendingReward_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpecialEventBlueprintLibrary.StorePendingReward
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>*     schematicsToChooseFrom         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void USpecialEventBlueprintLibrary::STATIC_StorePendingReward(class UObject** WorldContextObject, TArray<class USchematic*>* schematicsToChooseFrom)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpecialEventBlueprintLibrary.StorePendingReward");

	USpecialEventBlueprintLibrary_StorePendingReward_Params params;
	params.WorldContextObject = WorldContextObject;
	params.schematicsToChooseFrom = schematicsToChooseFrom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpecialEventBlueprintLibrary.SpawnEventRewardFrame
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void USpecialEventBlueprintLibrary::STATIC_SpawnEventRewardFrame(class UObject** WorldContextObject, struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpecialEventBlueprintLibrary.SpawnEventRewardFrame");

	USpecialEventBlueprintLibrary_SpawnEventRewardFrame_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpecialEventBlueprintLibrary.HasPendingReward
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USpecialEventBlueprintLibrary::STATIC_HasPendingReward(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpecialEventBlueprintLibrary.HasPendingReward");

	USpecialEventBlueprintLibrary_HasPendingReward_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpecialEventBlueprintLibrary.GetSpecialEventsRewardSchematics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USchematic*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USchematic*> USpecialEventBlueprintLibrary::STATIC_GetSpecialEventsRewardSchematics(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpecialEventBlueprintLibrary.GetSpecialEventsRewardSchematics");

	USpecialEventBlueprintLibrary_GetSpecialEventsRewardSchematics_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpecialEventBlueprintLibrary.ClearPendingReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void USpecialEventBlueprintLibrary::STATIC_ClearPendingReward(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpecialEventBlueprintLibrary.ClearPendingReward");

	USpecialEventBlueprintLibrary_ClearPendingReward_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpiderEnemy.PlayHitReaction
// (Final, Native, Protected)

void ASpiderEnemy::PlayHitReaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpiderEnemy.PlayHitReaction");

	ASpiderEnemy_PlayHitReaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpiderEnemy.OnDamaged
// (Final, Native, Protected)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void ASpiderEnemy::OnDamaged(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpiderEnemy.OnDamaged");

	ASpiderEnemy_OnDamaged_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SpiderEnemy.CreateHeadGore
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* ASpiderEnemy::CreateHeadGore()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpiderEnemy.CreateHeadGore");

	ASpiderEnemy_CreateHeadGore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SpiderEnemy.AlertNearbyEnemies
// (Event, Protected, BlueprintEvent)

void ASpiderEnemy::AlertNearbyEnemies()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SpiderEnemy.AlertNearbyEnemies");

	ASpiderEnemy_AlertNearbyEnemies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyBufferComponent.SetBuffingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyBufferComponent::SetBuffingEnabled(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyBufferComponent.SetBuffingEnabled");

	UEnemyBufferComponent_SetBuffingEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyBufferComponent.OnPawnDied
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEnemyBufferComponent::OnPawnDied(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyBufferComponent.OnPawnDied");

	UEnemyBufferComponent_OnPawnDied_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyBufferComponent.OnOwnerDied
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEnemyBufferComponent::OnOwnerDied(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyBufferComponent.OnOwnerDied");

	UEnemyBufferComponent_OnOwnerDied_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AlignEnemyComponent.SetRotateWhileStationary
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UAlignEnemyComponent::SetRotateWhileStationary(bool* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AlignEnemyComponent.SetRotateWhileStationary");

	UAlignEnemyComponent_SetRotateWhileStationary_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AlignEnemyComponent.OnRep_RotateWhileStationary
// (Final, Native, Protected)

void UAlignEnemyComponent::OnRep_RotateWhileStationary()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AlignEnemyComponent.OnRep_RotateWhileStationary");

	UAlignEnemyComponent_OnRep_RotateWhileStationary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StaticMeshCarver.Generate
// (Final, Native, Public, BlueprintCallable)

void UStaticMeshCarver::Generate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StaticMeshCarver.Generate");

	UStaticMeshCarver_Generate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StaticMeshCarver.ExportPreviewMesh
// (Final, Native, Public, BlueprintCallable)

void UStaticMeshCarver::ExportPreviewMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StaticMeshCarver.ExportPreviewMesh");

	UStaticMeshCarver_ExportPreviewMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StatusEffectsComponent.TryPushActiveStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::STATIC_TryPushActiveStatusEffect(class UClass** StatusEffect, class AActor** Target, class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.TryPushActiveStatusEffect");

	UStatusEffectsComponent_TryPushActiveStatusEffect_Params params;
	params.StatusEffect = StatusEffect;
	params.Target = Target;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsComponent.TryPopActiveStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::STATIC_TryPopActiveStatusEffect(class UClass** StatusEffect, class AActor** Target, class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.TryPopActiveStatusEffect");

	UStatusEffectsComponent_TryPopActiveStatusEffect_Params params;
	params.StatusEffect = StatusEffect;
	params.Target = Target;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsComponent.PushManyStatusEffects
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>*         StatusEffects                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::PushManyStatusEffects(TArray<class UClass*>* StatusEffects, class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.PushManyStatusEffects");

	UStatusEffectsComponent_PushManyStatusEffects_Params params;
	params.StatusEffects = StatusEffects;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsComponent.PushActiveStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::PushActiveStatusEffect(class UClass** StatusEffect, class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.PushActiveStatusEffect");

	UStatusEffectsComponent_PushActiveStatusEffect_Params params;
	params.StatusEffect = StatusEffect;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsComponent.PopManyStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UClass*>*         StatusEffects                  (Parm, ZeroConstructor)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::PopManyStatusEffect(TArray<class UClass*>* StatusEffects, class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.PopManyStatusEffect");

	UStatusEffectsComponent_PopManyStatusEffect_Params params;
	params.StatusEffects = StatusEffects;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsComponent.PopAllActiveStatusEffects
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectsComponent::PopAllActiveStatusEffects(class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.PopAllActiveStatusEffects");

	UStatusEffectsComponent_PopAllActiveStatusEffects_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StatusEffectsComponent.PopActiveStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::PopActiveStatusEffect(class UClass** StatusEffect, class AActor** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.PopActiveStatusEffect");

	UStatusEffectsComponent_PopActiveStatusEffect_Params params;
	params.StatusEffect = StatusEffect;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectsComponent.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStatusEffectsComponent::OnDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.OnDeath");

	UStatusEffectsComponent_OnDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StatusEffectsComponent.HasActiveEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 StatusEffect                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffectsComponent::HasActiveEffect(class UClass** StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectsComponent.HasActiveEffect");

	UStatusEffectsComponent_HasActiveEffect_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffectTriggerComponent.OnOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class AActor**                 MyActor                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectTriggerComponent::OnOverlapEnd(class AActor** MyActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectTriggerComponent.OnOverlapEnd");

	UStatusEffectTriggerComponent_OnOverlapEnd_Params params;
	params.MyActor = MyActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StatusEffectTriggerComponent.OnOverlapBegin
// (Final, Native, Protected)
// Parameters:
// class AActor**                 MyActor                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectTriggerComponent::OnOverlapBegin(class AActor** MyActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectTriggerComponent.OnOverlapBegin");

	UStatusEffectTriggerComponent_OnOverlapBegin_Params params;
	params.MyActor = MyActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StatusEffectTriggerComponent.OnComponentOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectTriggerComponent::OnComponentOverlapEnd(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectTriggerComponent.OnComponentOverlapEnd");

	UStatusEffectTriggerComponent_OnComponentOverlapEnd_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StatusEffectTriggerComponent.OnComponentOverlapBegin
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UStatusEffectTriggerComponent::OnComponentOverlapBegin(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffectTriggerComponent.OnComponentOverlapBegin");

	UStatusEffectTriggerComponent_OnComponentOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StayAwayFromWallsComponent.SetIsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsActive                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UStayAwayFromWallsComponent::SetIsActive(bool* IsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StayAwayFromWallsComponent.SetIsActive");

	UStayAwayFromWallsComponent_SetIsActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SteelSeriesComponent.UpdateHealthIndicator
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int*                           healthPct                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           shieldPct                      (Parm, ZeroConstructor, IsPlainOldData)

void USteelSeriesComponent::UpdateHealthIndicator(int* healthPct, int* shieldPct)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SteelSeriesComponent.UpdateHealthIndicator");

	USteelSeriesComponent_UpdateHealthIndicator_Params params;
	params.healthPct = healthPct;
	params.shieldPct = shieldPct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StickyFlame.OnRep_IsActive
// (Final, Native, Protected)

void AStickyFlame::OnRep_IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StickyFlame.OnRep_IsActive");

	AStickyFlame_OnRep_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StickyFlame.OnExtinguisFlame
// (Final, Native, Protected)

void AStickyFlame::OnExtinguisFlame()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StickyFlame.OnExtinguisFlame");

	AStickyFlame_OnExtinguisFlame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StickyFlameSpawner.TrySpawnStickyFlameHit
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStickyFlameSpawner::TrySpawnStickyFlameHit(struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StickyFlameSpawner.TrySpawnStickyFlameHit");

	UStickyFlameSpawner_TrySpawnStickyFlameHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StickyFlameSpawner.TrySpawnStickyFlame
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Normal                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStickyFlameSpawner::TrySpawnStickyFlame(struct FVector* Location, struct FVector* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StickyFlameSpawner.TrySpawnStickyFlame");

	UStickyFlameSpawner_TrySpawnStickyFlame_Params params;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.StickyFlameSpawner.StickyFlameSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AStickyFlame**           StickyFlame                    (Parm, ZeroConstructor, IsPlainOldData)

void UStickyFlameSpawner::StickyFlameSignature__DelegateSignature(class AStickyFlame** StickyFlame)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.StickyFlameSpawner.StickyFlameSignature__DelegateSignature");

	UStickyFlameSpawner_StickyFlameSignature__DelegateSignature_Params params;
	params.StickyFlame = StickyFlame;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.StickyFlameSpawner.ServerSpawnStickyFlame
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Location                       (Parm)
// struct FVector_NetQuantizeNormal* Normal                         (Parm)

void UStickyFlameSpawner::ServerSpawnStickyFlame(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StickyFlameSpawner.ServerSpawnStickyFlame");

	UStickyFlameSpawner_ServerSpawnStickyFlame_Params params;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SubHealthComponent.IsDead
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USubHealthComponent::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SubHealthComponent.IsDead");

	USubHealthComponent_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SubHealthComponent.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USubHealthComponent::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SubHealthComponent.IsAlive");

	USubHealthComponent_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SubHealthComponent.GetHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USubHealthComponent::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SubHealthComponent.GetHealth");

	USubHealthComponent_GetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.DestructibleSubHealthComponent.SubHealthDestroyed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UDestructibleSubHealthComponent** subHealth                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDestructibleSubHealthComponent::SubHealthDestroyed__DelegateSignature(class UDestructibleSubHealthComponent** subHealth)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.DestructibleSubHealthComponent.SubHealthDestroyed__DelegateSignature");

	UDestructibleSubHealthComponent_SubHealthDestroyed__DelegateSignature_Params params;
	params.subHealth = subHealth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DestructibleSubHealthComponent.ResetHealth
// (Final, Native, Public, BlueprintCallable)

void UDestructibleSubHealthComponent::ResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DestructibleSubHealthComponent.ResetHealth");

	UDestructibleSubHealthComponent_ResetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.DestructibleSubHealthComponent.OnRep_Damage
// (Final, Native, Protected)
// Parameters:
// float*                         oldDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void UDestructibleSubHealthComponent::OnRep_Damage(float* oldDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.DestructibleSubHealthComponent.OnRep_Damage");

	UDestructibleSubHealthComponent_OnRep_Damage_Params params;
	params.oldDamage = oldDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.PartialSubHealthComponent.PartialSubHealthDestroyed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UPartialSubHealthComponent** subHealth                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPartialSubHealthComponent::PartialSubHealthDestroyed__DelegateSignature(class UPartialSubHealthComponent** subHealth)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.PartialSubHealthComponent.PartialSubHealthDestroyed__DelegateSignature");

	UPartialSubHealthComponent_PartialSubHealthDestroyed__DelegateSignature_Params params;
	params.subHealth = subHealth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PartialSubHealthComponent.OnSubhealthDeath
// (Final, Native, Public)
// Parameters:
// class UPartialSubHealthComponent** subHealth                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPartialSubHealthComponent::OnSubhealthDeath(class UPartialSubHealthComponent** subHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PartialSubHealthComponent.OnSubhealthDeath");

	UPartialSubHealthComponent_OnSubhealthDeath_Params params;
	params.subHealth = subHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.PartialSubHealthComponent.OnRep_Damage
// (Final, Native, Protected)
// Parameters:
// float*                         oldDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void UPartialSubHealthComponent::OnRep_Damage(float* oldDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PartialSubHealthComponent.OnRep_Damage");

	UPartialSubHealthComponent_OnRep_Damage_Params params;
	params.oldDamage = oldDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyTemperatureComponent.TimerCallback
// (Final, Native, Protected)

void UEnemyTemperatureComponent::TimerCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureComponent.TimerCallback");

	UEnemyTemperatureComponent_TimerCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EnemyTemperatureComponent.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEnemyTemperatureComponent::OnDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EnemyTemperatureComponent.OnDeath");

	UEnemyTemperatureComponent_OnDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObjectTemperatureComponent.TimerCallback
// (Final, Native, Protected)

void UObjectTemperatureComponent::TimerCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectTemperatureComponent.TimerCallback");

	UObjectTemperatureComponent_TimerCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ObjectTemperatureComponent.OnDeath
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UObjectTemperatureComponent::OnDeath(class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ObjectTemperatureComponent.OnDeath");

	UObjectTemperatureComponent_OnDeath_Params params;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TemporaryBuff.DeActivateBuff
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UTemporaryBuff::DeActivateBuff(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TemporaryBuff.DeActivateBuff");

	UTemporaryBuff_DeActivateBuff_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TemporaryBuff.ActivateBuffOnPlayer
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UTemporaryBuff::ActivateBuffOnPlayer(class APlayerCharacter** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TemporaryBuff.ActivateBuffOnPlayer");

	UTemporaryBuff_ActivateBuffOnPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TemporaryBuff.ActivateBuffOnController
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UTemporaryBuff::ActivateBuffOnController(class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TemporaryBuff.ActivateBuffOnController");

	UTemporaryBuff_ActivateBuffOnController_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainDetectComponent.StartDetect
// (Final, Native, Public, BlueprintCallable)

void UTerrainDetectComponent::StartDetect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainDetectComponent.StartDetect");

	UTerrainDetectComponent_StartDetect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainDetectBoxComponent.StartDetect
// (Final, Native, Public, BlueprintCallable)

void UTerrainDetectBoxComponent::StartDetect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainDetectBoxComponent.StartDetect");

	UTerrainDetectBoxComponent_StartDetect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainFunctionLibrary.CreateExplosionCrater2
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         CarveDiameter                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         carveNoiseSize                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         carveBurnThickness             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Normal                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NormalOffset                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NormalSqueeze                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          allowCustomBurntMaterial       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          DissolvePlatforms              (Parm, ZeroConstructor, IsPlainOldData)

void UTerrainFunctionLibrary::STATIC_CreateExplosionCrater2(class UObject** WorldContextObject, struct FVector* Location, float* CarveDiameter, float* carveNoiseSize, float* carveBurnThickness, struct FVector* Normal, float* NormalOffset, float* NormalSqueeze, bool* allowCustomBurntMaterial, bool* DissolvePlatforms)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainFunctionLibrary.CreateExplosionCrater2");

	UTerrainFunctionLibrary_CreateExplosionCrater2_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.CarveDiameter = CarveDiameter;
	params.carveNoiseSize = carveNoiseSize;
	params.carveBurnThickness = carveBurnThickness;
	params.Normal = Normal;
	params.NormalOffset = NormalOffset;
	params.NormalSqueeze = NormalSqueeze;
	params.allowCustomBurntMaterial = allowCustomBurntMaterial;
	params.DissolvePlatforms = DissolvePlatforms;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainFunctionLibrary.CreateExplosionCrater
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         CarveDiameter                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         carveNoiseSize                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         carveBurnThickness             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          allowCustomBurntMaterial       (Parm, ZeroConstructor, IsPlainOldData)

void UTerrainFunctionLibrary::STATIC_CreateExplosionCrater(class UObject** WorldContextObject, struct FVector* Location, float* CarveDiameter, float* carveNoiseSize, float* carveBurnThickness, bool* allowCustomBurntMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainFunctionLibrary.CreateExplosionCrater");

	UTerrainFunctionLibrary_CreateExplosionCrater_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.CarveDiameter = CarveDiameter;
	params.carveNoiseSize = carveNoiseSize;
	params.carveBurnThickness = carveBurnThickness;
	params.allowCustomBurntMaterial = allowCustomBurntMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralFunctionLibrary.SpawnTerrainImpact
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        particle                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UProceduralFunctionLibrary::STATIC_SpawnTerrainImpact(class UObject** WorldContextObject, class UParticleSystem** particle, struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralFunctionLibrary.SpawnTerrainImpact");

	UProceduralFunctionLibrary_SpawnTerrainImpact_Params params;
	params.WorldContextObject = WorldContextObject;
	params.particle = particle;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ProceduralFunctionLibrary.GetProceduralSetup
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AProceduralSetup*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AProceduralSetup* UProceduralFunctionLibrary::STATIC_GetProceduralSetup(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralFunctionLibrary.GetProceduralSetup");

	UProceduralFunctionLibrary_GetProceduralSetup_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralFunctionLibrary.GetObjectiveXP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectiveClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         missionLength                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UProceduralFunctionLibrary::STATIC_GetObjectiveXP(class UClass** objectiveClass, float* missionLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralFunctionLibrary.GetObjectiveXP");

	UProceduralFunctionLibrary_GetObjectiveXP_Params params;
	params.objectiveClass = objectiveClass;
	params.missionLength = missionLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralFunctionLibrary.GetObjectiveCredits
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 objectiveClass                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         missionLength                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UProceduralFunctionLibrary::STATIC_GetObjectiveCredits(class UClass** objectiveClass, float* missionLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralFunctionLibrary.GetObjectiveCredits");

	UProceduralFunctionLibrary_GetObjectiveCredits_Params params;
	params.objectiveClass = objectiveClass;
	params.missionLength = missionLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralFunctionLibrary.GetBiome
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 levelSetup                     (Parm, ZeroConstructor, IsPlainOldData)
// class UBiome*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBiome* UProceduralFunctionLibrary::STATIC_GetBiome(class UClass** levelSetup)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralFunctionLibrary.GetBiome");

	UProceduralFunctionLibrary_GetBiome_Params params;
	params.levelSetup = levelSetup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ProceduralFunctionLibrary.AllControllersFinishedTransitionToPlay
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UProceduralFunctionLibrary::STATIC_AllControllersFinishedTransitionToPlay(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ProceduralFunctionLibrary.AllControllersFinishedTransitionToPlay");

	UProceduralFunctionLibrary_AllControllersFinishedTransitionToPlay_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TerrainMaterial.SpawnPartialDigParticles
// (Final, Native, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UTerrainMaterial::SpawnPartialDigParticles(class UObject** WorldContextObject, struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainMaterial.SpawnPartialDigParticles");

	UTerrainMaterial_SpawnPartialDigParticles_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TerrainMaterial.SpawnDigParticles
// (Final, Native, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Density                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UTerrainMaterial::SpawnDigParticles(class UObject** WorldContextObject, struct FVector* Location, struct FRotator* Rotation, float* Density)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainMaterial.SpawnDigParticles");

	UTerrainMaterial_SpawnDigParticles_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Density = Density;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TerrainMaterial.IsPrecious
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTerrainMaterial::IsPrecious()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainMaterial.IsPrecious");

	UTerrainMaterial_IsPrecious_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TerrainMaterial.GetInGameName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTerrainMaterial::GetInGameName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainMaterial.GetInGameName");

	UTerrainMaterial_GetInGameName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TerrainModifyingProjectile.Tick
// (Native, Public)
// Parameters:
// float*                         DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void ATerrainModifyingProjectile::Tick(float* DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainModifyingProjectile.Tick");

	ATerrainModifyingProjectile_Tick_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainModifyingProjectile.GetRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATerrainModifyingProjectile::GetRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainModifyingProjectile.GetRadius");

	ATerrainModifyingProjectile_GetRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TerrainModifyingProjectile.BeginPlay
// (Native, Public)

void ATerrainModifyingProjectile::BeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainModifyingProjectile.BeginPlay");

	ATerrainModifyingProjectile_BeginPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainPlacementComponent.AddBlockers
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       ProceduralSetup                (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTerrainPlacementComponent::AddBlockers(class AProceduralSetup** ProceduralSetup, struct FTransform* Transform)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainPlacementComponent.AddBlockers");

	UTerrainPlacementComponent_AddBlockers_Params params;
	params.ProceduralSetup = ProceduralSetup;
	params.Transform = Transform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainScannerItem.Server_SetIslookingAtMap
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          lookingAtMap                   (Parm, ZeroConstructor, IsPlainOldData)

void ATerrainScannerItem::Server_SetIslookingAtMap(bool* lookingAtMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainScannerItem.Server_SetIslookingAtMap");

	ATerrainScannerItem_Server_SetIslookingAtMap_Params params;
	params.lookingAtMap = lookingAtMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TerrainScannerItem.OnRep_IsLookingAtMap
// (Final, Native, Protected)

void ATerrainScannerItem::OnRep_IsLookingAtMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TerrainScannerItem.OnRep_IsLookingAtMap");

	ATerrainScannerItem_OnRep_IsLookingAtMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.Server_ThrowGrenade
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AThrownGrenadeItem::Server_ThrowGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.Server_ThrowGrenade");

	AThrownGrenadeItem_Server_ThrowGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.Server_SetState
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// EThrownGrenadeItemState*       itemState                      (Parm, ZeroConstructor, IsPlainOldData)

void AThrownGrenadeItem::Server_SetState(EThrownGrenadeItemState* itemState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.Server_SetState");

	AThrownGrenadeItem_Server_SetState_Params params;
	params.itemState = itemState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.ResupplyGrenades
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void AThrownGrenadeItem::ResupplyGrenades(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.ResupplyGrenades");

	AThrownGrenadeItem_ResupplyGrenades_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.Resupply
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float*                         percentage                     (Parm, ZeroConstructor, IsPlainOldData)

void AThrownGrenadeItem::Resupply(float* percentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.Resupply");

	AThrownGrenadeItem_Resupply_Params params;
	params.percentage = percentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.OnRep_State
// (Final, Native, Protected)

void AThrownGrenadeItem::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.OnRep_State");

	AThrownGrenadeItem_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.OnRep_GrenadeCount
// (Final, Native, Protected)

void AThrownGrenadeItem::OnRep_GrenadeCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.OnRep_GrenadeCount");

	AThrownGrenadeItem_OnRep_GrenadeCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.OnGrenadeThrown
// (Event, Protected, BlueprintEvent)

void AThrownGrenadeItem::OnGrenadeThrown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.OnGrenadeThrown");

	AThrownGrenadeItem_OnGrenadeThrown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.GrenadeThrowFinished
// (Final, Native, Protected)

void AThrownGrenadeItem::GrenadeThrowFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.GrenadeThrowFinished");

	AThrownGrenadeItem_GrenadeThrowFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ThrownGrenadeItem.GetGrenadeThrowVelocity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AThrownGrenadeItem::GetGrenadeThrowVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.GetGrenadeThrowVelocity");

	AThrownGrenadeItem_GetGrenadeThrowVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ThrownGrenadeItem.GetGrenadeThrowRotation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AThrownGrenadeItem::GetGrenadeThrowRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.GetGrenadeThrowRotation");

	AThrownGrenadeItem_GetGrenadeThrowRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ThrownGrenadeItem.GetGrenadeGravity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AThrownGrenadeItem::GetGrenadeGravity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.GetGrenadeGravity");

	AThrownGrenadeItem_GetGrenadeGravity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ThrownGrenadeItem.GetGrenadeDuration
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AThrownGrenadeItem::GetGrenadeDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ThrownGrenadeItem.GetGrenadeDuration");

	AThrownGrenadeItem_GetGrenadeDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.MiniTimerAction.TickDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NormalizedTime                 (Parm, ZeroConstructor, IsPlainOldData)

void UMiniTimerAction::TickDelegate__DelegateSignature(float* DeltaTime, float* NormalizedTime)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.MiniTimerAction.TickDelegate__DelegateSignature");

	UMiniTimerAction_TickDelegate__DelegateSignature_Params params;
	params.DeltaTime = DeltaTime;
	params.NormalizedTime = NormalizedTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MiniTimerAction.MiniTimer
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InDuration                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMiniTimerAction*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMiniTimerAction* UMiniTimerAction::STATIC_MiniTimer(class UObject** WorldContext, float* InDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MiniTimerAction.MiniTimer");

	UMiniTimerAction_MiniTimer_Params params;
	params.WorldContext = WorldContext;
	params.InDuration = InDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.MultiTextCounterAction.TickDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMultiTextCounterAction::TickDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.MultiTextCounterAction.TickDelegate__DelegateSignature");

	UMultiTextCounterAction_TickDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MultiTextCounterAction.StartMultiTextCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                InWorldContext                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTextBlock**             InTotalBlock                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FText*                  InTotalFormat                  (ConstParm, Parm)
// float*                         InCountSpeed                   (Parm, ZeroConstructor, IsPlainOldData)
// class USoundCue**              InCountingSound                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTextCounterEntry>* InEntries                      (ConstParm, Parm, ZeroConstructor)
// class UMultiTextCounterAction* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMultiTextCounterAction* UMultiTextCounterAction::STATIC_StartMultiTextCounter(class UObject** InWorldContext, class UTextBlock** InTotalBlock, struct FText* InTotalFormat, float* InCountSpeed, class USoundCue** InCountingSound, TArray<struct FTextCounterEntry>* InEntries)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MultiTextCounterAction.StartMultiTextCounter");

	UMultiTextCounterAction_StartMultiTextCounter_Params params;
	params.InWorldContext = InWorldContext;
	params.InTotalBlock = InTotalBlock;
	params.InTotalFormat = InTotalFormat;
	params.InCountSpeed = InCountSpeed;
	params.InCountingSound = InCountingSound;
	params.InEntries = InEntries;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.PendingLatentActionLibrary.WaitOneFrame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void UPendingLatentActionLibrary::STATIC_WaitOneFrame(class UObject** WorldContextObject, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.PendingLatentActionLibrary.WaitOneFrame");

	UPendingLatentActionLibrary_WaitOneFrame_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.MoveComponentToAction.EaseComponentTo
// (Final, Native, Static, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTransform*             InEndTransform                 (Parm, IsPlainOldData)
// TEnumAsByte<EEasingFunc>*      InEasingMode                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          InWorldSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InDuration                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMoveComponentToAction*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMoveComponentToAction* UMoveComponentToAction::STATIC_EaseComponentTo(class UObject** WorldContext, class USceneComponent** InComponent, struct FTransform* InEndTransform, TEnumAsByte<EEasingFunc>* InEasingMode, bool* InWorldSpace, float* InDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.MoveComponentToAction.EaseComponentTo");

	UMoveComponentToAction_EaseComponentTo_Params params;
	params.WorldContext = WorldContext;
	params.InComponent = InComponent;
	params.InEndTransform = InEndTransform;
	params.InEasingMode = InEasingMode;
	params.InWorldSpace = InWorldSpace;
	params.InDuration = InDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FSD.MoveComponentToAction.CompletedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USceneComponent**        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMoveComponentToAction::CompletedDelegate__DelegateSignature(class USceneComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.MoveComponentToAction.CompletedDelegate__DelegateSignature");

	UMoveComponentToAction_CompletedDelegate__DelegateSignature_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TracerManager.AddTracer
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Destination                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        particle                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MinDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        Trail                          (Parm, ZeroConstructor, IsPlainOldData)

void UTracerManager::AddTracer(struct FVector* Origin, struct FVector* Destination, float* Speed, class UParticleSystem** particle, float* MinDistance, class UParticleSystem** Trail)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TracerManager.AddTracer");

	UTracerManager_AddTracer_Params params;
	params.Origin = Origin;
	params.Destination = Destination;
	params.Speed = Speed;
	params.particle = particle;
	params.MinDistance = MinDistance;
	params.Trail = Trail;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TrailComponent.TrailLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTrailComponent::TrailLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.TrailLength");

	UTrailComponent_TrailLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TrailComponent.ToggleDrawPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UTrailComponent::ToggleDrawPath(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.ToggleDrawPath");

	UTrailComponent_ToggleDrawPath_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TrailComponent.Reset
// (Final, Native, Public, BlueprintCallable)

void UTrailComponent::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.Reset");

	UTrailComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TrailComponent.GetTrailPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UTrailComponent::GetTrailPoint(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.GetTrailPoint");

	UTrailComponent_GetTrailPoint_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TrailComponent.GetNextTrailPointFrom
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                From                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UTrailComponent::GetNextTrailPointFrom(struct FVector* From)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.GetNextTrailPointFrom");

	UTrailComponent_GetNextTrailPointFrom_Params params;
	params.From = From;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TrailComponent.GetNearestTrailIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTrailComponent::GetNearestTrailIndex(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.GetNearestTrailIndex");

	UTrailComponent_GetNearestTrailIndex_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TrailComponent.GetNearestPlayerTrail
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld**                 World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                From                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MinDist                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxDist                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTrailComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTrailComponent* UTrailComponent::STATIC_GetNearestPlayerTrail(class UWorld** World, struct FVector* From, float* MinDist, float* MaxDist)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.GetNearestPlayerTrail");

	UTrailComponent_GetNearestPlayerTrail_Params params;
	params.World = World;
	params.From = From;
	params.MinDist = MinDist;
	params.MaxDist = MaxDist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TrailComponent.GetDrawColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor UTrailComponent::GetDrawColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TrailComponent.GetDrawColor");

	UTrailComponent_GetDrawColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TreasureBox.PlaceResources
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AProceduralSetup**       setup                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDebrisPositioning**     DebrisPositioning              (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        locationsToAvoid               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UCurveFloat**            avoidCostCurve                 (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::PlaceResources(class AProceduralSetup** setup, float* Radius, class UDebrisPositioning** DebrisPositioning, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.PlaceResources");

	ATreasureBox_PlaceResources_Params params;
	params.setup = setup;
	params.Radius = Radius;
	params.DebrisPositioning = DebrisPositioning;
	params.locationsToAvoid = locationsToAvoid;
	params.avoidCostCurve = avoidCostCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnUsedEvent
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::OnUsedEvent(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnUsedEvent");

	ATreasureBox_OnUsedEvent_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnRepairedEvent
// (Final, Native, Public)
// Parameters:
// class URepairableComponent**   repaired                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATreasureBox::OnRepairedEvent(class URepairableComponent** repaired)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnRepairedEvent");

	ATreasureBox_OnRepairedEvent_Params params;
	params.repaired = repaired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnPlayerJoin
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::OnPlayerJoin(class APlayerCharacter** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnPlayerJoin");

	ATreasureBox_OnPlayerJoin_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnHammerProgress
// (Final, Native, Public)
// Parameters:
// float*                         Progress                       (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::OnHammerProgress(float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnHammerProgress");

	ATreasureBox_OnHammerProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnHammered
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::OnHammered(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnHammered");

	ATreasureBox_OnHammered_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnFullyRepairedEvent
// (Final, Native, Public)
// Parameters:
// class URepairableComponent**   repaired                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATreasureBox::OnFullyRepairedEvent(class URepairableComponent** repaired)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnFullyRepairedEvent");

	ATreasureBox_OnFullyRepairedEvent_Params params;
	params.repaired = repaired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnCollectTreasure
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::OnCollectTreasure(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnCollectTreasure");

	ATreasureBox_OnCollectTreasure_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.OnAllResourcesCollectedEvent
// (Final, Native, Public)
// Parameters:
// class URepairableComponent**   repaired                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATreasureBox::OnAllResourcesCollectedEvent(class URepairableComponent** repaired)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.OnAllResourcesCollectedEvent");

	ATreasureBox_OnAllResourcesCollectedEvent_Params params;
	params.repaired = repaired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.MessageClientsOfJoiner
// (Final, Native, Protected)

void ATreasureBox::MessageClientsOfJoiner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.MessageClientsOfJoiner");

	ATreasureBox_MessageClientsOfJoiner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.Joiner
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class APlayerCharacter**       Joiner                         (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::Joiner(class APlayerCharacter** Joiner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.Joiner");

	ATreasureBox_Joiner_Params params;
	params.Joiner = Joiner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.DisableChest
// (Event, Protected, BlueprintEvent)

void ATreasureBox::DisableChest()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.DisableChest");

	ATreasureBox_DisableChest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.BP_OnCollectedTreasure
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerCharacter**       collector                      (Parm, ZeroConstructor, IsPlainOldData)

void ATreasureBox::BP_OnCollectedTreasure(class APlayerCharacter** collector)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.BP_OnCollectedTreasure");

	ATreasureBox_BP_OnCollectedTreasure_Params params;
	params.collector = collector;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.AfterRepairDelay
// (Final, Native, Public)

void ATreasureBox::AfterRepairDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.AfterRepairDelay");

	ATreasureBox_AfterRepairDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureBox.ActivateCollection
// (Final, Native, Protected)

void ATreasureBox::ActivateCollection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureBox.ActivateCollection");

	ATreasureBox_ActivateCollection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TreasureFunctionLibrary.GiveSimilarSkin
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UItemSkin**              targetSkin                     (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                targetItem                     (Parm, ZeroConstructor, IsPlainOldData)
// class UItemSkin*               outGivenSkin                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 outSkinnedItem                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTreasureFunctionLibrary::STATIC_GiveSimilarSkin(class UObject** WorldContextObject, class UItemSkin** targetSkin, class UItemID** targetItem, class UItemSkin** outGivenSkin, class UItemID** outSkinnedItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureFunctionLibrary.GiveSimilarSkin");

	UTreasureFunctionLibrary_GiveSimilarSkin_Params params;
	params.WorldContextObject = WorldContextObject;
	params.targetSkin = targetSkin;
	params.targetItem = targetItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outGivenSkin != nullptr)
		*outGivenSkin = params.outGivenSkin;
	if (outSkinnedItem != nullptr)
		*outSkinnedItem = params.outSkinnedItem;

	return params.ReturnValue;
}


// Function FSD.TreasureFunctionLibrary.GiveRandomSkin
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UItemSkin*               outGivenSkin                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UItemID*                 outSkinnedItem                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTreasureFunctionLibrary::STATIC_GiveRandomSkin(class UObject** WorldContextObject, class UItemSkin** outGivenSkin, class UItemID** outSkinnedItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TreasureFunctionLibrary.GiveRandomSkin");

	UTreasureFunctionLibrary_GiveRandomSkin_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outGivenSkin != nullptr)
		*outGivenSkin = params.outGivenSkin;
	if (outSkinnedItem != nullptr)
		*outSkinnedItem = params.outSkinnedItem;
}


// Function FSD.StatusEffect.ShouldInstantiate
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffect::ShouldInstantiate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffect.ShouldInstantiate");

	UStatusEffect_ShouldInstantiate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.StatusEffect.CanTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UStatusEffect::CanTrigger(class AActor** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.StatusEffect.CanTrigger");

	UStatusEffect_CanTrigger_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TutorialComponent.RegisterWithManager
// (Final, Native, Protected)
// Parameters:
// class ATutorialManager**       Manager                        (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialComponent::RegisterWithManager(class ATutorialManager** Manager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.RegisterWithManager");

	UTutorialComponent_RegisterWithManager_Params params;
	params.Manager = Manager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.ReceiveOnShown
// (Event, Protected, BlueprintEvent)

void UTutorialComponent::ReceiveOnShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.ReceiveOnShown");

	UTutorialComponent_ReceiveOnShown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.ReceiveOnInitialized
// (Event, Protected, BlueprintEvent)

void UTutorialComponent::ReceiveOnInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.ReceiveOnInitialized");

	UTutorialComponent_ReceiveOnInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.ReceiveOnHidden
// (Event, Protected, BlueprintEvent)

void UTutorialComponent::ReceiveOnHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.ReceiveOnHidden");

	UTutorialComponent_ReceiveOnHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.OnTutorialsReset
// (Final, Native, Protected)

void UTutorialComponent::OnTutorialsReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.OnTutorialsReset");

	UTutorialComponent_OnTutorialsReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.MarkTutorialWatched
// (Final, Native, Protected, BlueprintCallable)

void UTutorialComponent::MarkTutorialWatched()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.MarkTutorialWatched");

	UTutorialComponent_MarkTutorialWatched_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.MarkTutorialReadyNow
// (Final, Native, Protected, BlueprintCallable)

void UTutorialComponent::MarkTutorialReadyNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.MarkTutorialReadyNow");

	UTutorialComponent_MarkTutorialReadyNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.MarkTutorialReadyInSeconds
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialComponent::MarkTutorialReadyInSeconds(float* Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.MarkTutorialReadyInSeconds");

	UTutorialComponent_MarkTutorialReadyInSeconds_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialComponent.HasTutorialBeenShown
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTutorialComponent::HasTutorialBeenShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.HasTutorialBeenShown");

	UTutorialComponent_HasTutorialBeenShown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TutorialComponent.GetTutorialName
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTutorialComponent::GetTutorialName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.GetTutorialName");

	UTutorialComponent_GetTutorialName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TutorialComponent.CancelTutorial
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          CountAsViewed                  (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialComponent::CancelTutorial(bool* CountAsViewed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialComponent.CancelTutorial");

	UTutorialComponent_CancelTutorial_Params params;
	params.CountAsViewed = CountAsViewed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialHintComponent.SetRemainingVisibleTime
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         remainingTime                  (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialHintComponent::SetRemainingVisibleTime(float* remainingTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialHintComponent.SetRemainingVisibleTime");

	UTutorialHintComponent_SetRemainingVisibleTime_Params params;
	params.remainingTime = remainingTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialHintComponent.IsSinglePlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTutorialHintComponent::IsSinglePlayer(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialHintComponent.IsSinglePlayer");

	UTutorialHintComponent_IsSinglePlayer_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TutorialHintComponent.ChangeHint
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FTutorialHint*          NewHint                        (ConstParm, Parm, OutParm, ReferenceParm)

void UTutorialHintComponent::ChangeHint(struct FTutorialHint* NewHint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialHintComponent.ChangeHint");

	UTutorialHintComponent_ChangeHint_Params params;
	params.NewHint = NewHint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialWidget.Show
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Text                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  ControllerOverrideText         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialWidget::Show(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialWidget.Show");

	UTutorialWidget_Show_Params params;
	params.Text = Text;
	params.ControllerOverrideText = ControllerOverrideText;
	params.Title = Title;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialWidget.OnShow
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText*                  Text                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  ControllerOverrideText         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Title                          (ConstParm, Parm, OutParm, ReferenceParm)

void UTutorialWidget::OnShow(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialWidget.OnShow");

	UTutorialWidget_OnShow_Params params;
	params.Text = Text;
	params.ControllerOverrideText = ControllerOverrideText;
	params.Title = Title;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialWidget.OnHide
// (Event, Protected, BlueprintEvent)

void UTutorialWidget::OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialWidget.OnHide");

	UTutorialWidget_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialWidget.Hide
// (Final, Native, Public, BlueprintCallable)

void UTutorialWidget::Hide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialWidget.Hide");

	UTutorialWidget_Hide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TutorialWidget.ChangeHintDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewDuration                    (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialWidget::ChangeHintDuration(float* NewDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TutorialWidget.ChangeHintDuration");

	UTutorialWidget_ChangeHintDuration_Params params;
	params.NewDuration = NewDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TwitchWrapper.StartTwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                oauth                          (Parm, ZeroConstructor)

void UTwitchWrapper::StartTwitch(struct FString* oauth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.StartTwitch");

	UTwitchWrapper_StartTwitch_Params params;
	params.oauth = oauth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TwitchWrapper.SetCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Command                        (Parm, ZeroConstructor)
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UTwitchWrapper::SetCommand(struct FString* Command, bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.SetCommand");

	UTwitchWrapper_SetCommand_Params params;
	params.Command = Command;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TwitchWrapper.ResetCommands
// (Final, Native, Public, BlueprintCallable)

void UTwitchWrapper::ResetCommands()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.ResetCommands");

	UTwitchWrapper_ResetCommands_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TwitchWrapper.ParseOAuthCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                URL                            (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTwitchWrapper::ParseOAuthCode(struct FString* URL)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.ParseOAuthCode");

	UTwitchWrapper_ParseOAuthCode_Params params;
	params.URL = URL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TwitchWrapper.IsConnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTwitchWrapper::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.IsConnected");

	UTwitchWrapper_IsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TwitchWrapper.GetOauthURL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTwitchWrapper::GetOauthURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.GetOauthURL");

	UTwitchWrapper_GetOauthURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TwitchWrapper.DisableCommands
// (Final, Native, Public, BlueprintCallable)

void UTwitchWrapper::DisableCommands()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.DisableCommands");

	UTwitchWrapper_DisableCommands_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.TwitchWrapper.CommandPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Command                        (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTwitchWrapper::CommandPercent(struct FString* Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.CommandPercent");

	UTwitchWrapper_CommandPercent_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.TwitchWrapper.AddCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Command                        (Parm, ZeroConstructor)

void UTwitchWrapper::AddCommand(struct FString* Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.TwitchWrapper.AddCommand");

	UTwitchWrapper_AddCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UIFunctionLibrary.SetLoadoutIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           loadoutIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           IconIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UUIFunctionLibrary::STATIC_SetLoadoutIcon(class UObject** WorldContextObject, class UClass** CharacterClass, int* loadoutIndex, int* IconIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.SetLoadoutIcon");

	UUIFunctionLibrary_SetLoadoutIcon_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;
	params.loadoutIndex = loadoutIndex;
	params.IconIndex = IconIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UIFunctionLibrary.RemoveItemUINotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>*        Item                           (Parm, ZeroConstructor)
// bool*                          MatchChildNotifications        (Parm, ZeroConstructor, IsPlainOldData)

void UUIFunctionLibrary::STATIC_RemoveItemUINotification(class UObject** WorldContextObject, TArray<class UObject*>* Item, bool* MatchChildNotifications)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.RemoveItemUINotification");

	UUIFunctionLibrary_RemoveItemUINotification_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;
	params.MatchChildNotifications = MatchChildNotifications;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UIFunctionLibrary.IsInItemUINotificationSet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUIFunctionLibrary::STATIC_IsInItemUINotificationSet(class UObject** WorldContextObject, class UObject** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.IsInItemUINotificationSet");

	UUIFunctionLibrary_IsInItemUINotificationSet_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UIFunctionLibrary.GetLoadoutIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           loadoutIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUIFunctionLibrary::STATIC_GetLoadoutIcon(class UObject** WorldContextObject, class UClass** CharacterClass, int* loadoutIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.GetLoadoutIcon");

	UUIFunctionLibrary_GetLoadoutIcon_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;
	params.loadoutIndex = loadoutIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UIFunctionLibrary.ClearAllItemUINotifications
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UUIFunctionLibrary::STATIC_ClearAllItemUINotifications(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.ClearAllItemUINotifications");

	UUIFunctionLibrary_ClearAllItemUINotifications_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UIFunctionLibrary.CheckItemUINotification
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>*        Item                           (Parm, ZeroConstructor)
// bool                           HasNotification                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          MatchChildNotifications        (Parm, ZeroConstructor, IsPlainOldData)

void UUIFunctionLibrary::STATIC_CheckItemUINotification(class UObject** WorldContextObject, TArray<class UObject*>* Item, bool* MatchChildNotifications, bool* HasNotification)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.CheckItemUINotification");

	UUIFunctionLibrary_CheckItemUINotification_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;
	params.MatchChildNotifications = MatchChildNotifications;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HasNotification != nullptr)
		*HasNotification = params.HasNotification;
}


// Function FSD.UIFunctionLibrary.AddItemUINotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>*        Item                           (Parm, ZeroConstructor)

void UUIFunctionLibrary::STATIC_AddItemUINotification(class UObject** WorldContextObject, TArray<class UObject*>* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UIFunctionLibrary.AddItemUINotification");

	UUIFunctionLibrary_AddItemUINotification_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UpgradableGearComponent.SetGearStatText
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGearStatEntry          entry                          (Parm, OutParm, ReferenceParm)
// struct FText*                  Text                           (Parm)

void UUpgradableGearComponent::STATIC_SetGearStatText(struct FText* Text, struct FGearStatEntry* entry)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.SetGearStatText");

	UUpgradableGearComponent_SetGearStatText_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (entry != nullptr)
		*entry = params.entry;
}


// Function FSD.UpgradableGearComponent.PurchaseItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_PurchaseItem(class UClass** Item, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.PurchaseItem");

	UUpgradableGearComponent_PurchaseItem_Params params;
	params.Item = Item;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.PlayerOwnesUpgradeInAllTiers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_PlayerOwnesUpgradeInAllTiers(class UClass** itemClass, class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.PlayerOwnesUpgradeInAllTiers");

	UUpgradableGearComponent_PlayerOwnesUpgradeInAllTiers_Params params;
	params.itemClass = itemClass;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.MirrorUpgradePreviewStatus
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGearStatEntry          From                           (Parm, OutParm, ReferenceParm)
// struct FGearStatEntry          to                             (Parm, OutParm, ReferenceParm)

void UUpgradableGearComponent::STATIC_MirrorUpgradePreviewStatus(struct FGearStatEntry* From, struct FGearStatEntry* to)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.MirrorUpgradePreviewStatus");

	UUpgradableGearComponent_MirrorUpgradePreviewStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (From != nullptr)
		*From = params.From;
	if (to != nullptr)
		*to = params.to;
}


// Function FSD.UpgradableGearComponent.IsUpgradeEquipped
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_IsUpgradeEquipped(class UClass** itemClass, class UItemUpgrade** Upgrade, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.IsUpgradeEquipped");

	UUpgradableGearComponent_IsUpgradeEquipped_Params params;
	params.itemClass = itemClass;
	params.Upgrade = Upgrade;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.IsTierUnLocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           tierIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_IsTierUnLocked(class UClass** itemClass, int* tierIndex, class AFSDPlayerState** Player, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.IsTierUnLocked");

	UUpgradableGearComponent_IsTierUnLocked_Params params;
	params.itemClass = itemClass;
	params.tierIndex = tierIndex;
	params.Player = Player;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.IsOverclockingEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_IsOverclockingEnabled(class UObject** WorldContextObject, class AFSDPlayerState** Player, class UPlayerCharacterID** characterID, class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.IsOverclockingEnabled");

	UUpgradableGearComponent_IsOverclockingEnabled_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Player = Player;
	params.characterID = characterID;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.IsItemUnlocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ItemOwner                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_IsItemUnlocked(class UObject** WorldContextObject, class UClass** Item, class UClass** ItemOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.IsItemUnlocked");

	UUpgradableGearComponent_IsItemUnlocked_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;
	params.ItemOwner = ItemOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.IsItemOwned
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UItemID**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_IsItemOwned(class UObject** WorldContextObject, class UItemID** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.IsItemOwned");

	UUpgradableGearComponent_IsItemOwned_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.IsItemEquipped
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_IsItemEquipped(class UObject** WorldContextObject, class UClass** itemClass, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.IsItemEquipped");

	UUpgradableGearComponent_IsItemEquipped_Params params;
	params.WorldContextObject = WorldContextObject;
	params.itemClass = itemClass;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetUpgradeTier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           ItemUpgrade                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUpgradableGearComponent::STATIC_GetUpgradeTier(class UClass** itemClass, class UItemUpgrade** ItemUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetUpgradeTier");

	UUpgradableGearComponent_GetUpgradeTier_Params params;
	params.itemClass = itemClass;
	params.ItemUpgrade = ItemUpgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetSourceGearName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUpgradableGearComponent::GetSourceGearName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetSourceGearName");

	UUpgradableGearComponent_GetSourceGearName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetPreviewImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UUpgradableGearComponent::GetPreviewImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetPreviewImage");

	UUpgradableGearComponent_GetPreviewImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetPreviewActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UUpgradableGearComponent::GetPreviewActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetPreviewActorClass");

	UUpgradableGearComponent_GetPreviewActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetOverClocks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UItemUpgrade*>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UItemUpgrade*> UUpgradableGearComponent::GetOverClocks()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetOverClocks");

	UUpgradableGearComponent_GetOverClocks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetMasteryProgress
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            maxMastery                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUpgradableGearComponent::STATIC_GetMasteryProgress(class UClass** Item, class AFSDPlayerState** Player, int* maxMastery)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetMasteryProgress");

	UUpgradableGearComponent_GetMasteryProgress_Params params;
	params.Item = Item;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (maxMastery != nullptr)
		*maxMastery = params.maxMastery;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetMasteryLevels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FMasteryItem>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FMasteryItem> UUpgradableGearComponent::STATIC_GetMasteryLevels(class UClass** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetMasteryLevels");

	UUpgradableGearComponent_GetMasteryLevels_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetMasteryForLevel
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FMasteryItem>*   masteryLevels                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FMasteryItem            outLevel                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_GetMasteryForLevel(TArray<struct FMasteryItem>* masteryLevels, int* Level, struct FMasteryItem* outLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetMasteryForLevel");

	UUpgradableGearComponent_GetMasteryForLevel_Params params;
	params.masteryLevels = masteryLevels;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outLevel != nullptr)
		*outLevel = params.outLevel;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetItemUpgradeTiers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FUpgradeTier>    ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FUpgradeTier> UUpgradableGearComponent::STATIC_GetItemUpgradeTiers(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetItemUpgradeTiers");

	UUpgradableGearComponent_GetItemUpgradeTiers_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetItemUpgradeStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           ItemUpgrade                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// EItemUpgradeStatus             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EItemUpgradeStatus UUpgradableGearComponent::STATIC_GetItemUpgradeStatus(class UObject** WorldContextObject, class UClass** itemClass, class UItemUpgrade** ItemUpgrade, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetItemUpgradeStatus");

	UUpgradableGearComponent_GetItemUpgradeStatus_Params params;
	params.WorldContextObject = WorldContextObject;
	params.itemClass = itemClass;
	params.ItemUpgrade = ItemUpgrade;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetItemUpgrades
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 upgradeClass                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 upgradeIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UItemUpgrade*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemUpgrade*> UUpgradableGearComponent::STATIC_GetItemUpgrades(class UClass** itemClass, class UClass** upgradeClass, class AFSDPlayerState** Player, unsigned char* upgradeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetItemUpgrades");

	UUpgradableGearComponent_GetItemUpgrades_Params params;
	params.itemClass = itemClass;
	params.upgradeClass = upgradeClass;
	params.Player = Player;
	params.upgradeIndex = upgradeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetItemPreviewClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UUpgradableGearComponent::STATIC_GetItemPreviewClass(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetItemPreviewClass");

	UUpgradableGearComponent_GetItemPreviewClass_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetItemMasteryForLevel
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FMasteryItem            outLevel                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_GetItemMasteryForLevel(class UClass** Item, int* Level, struct FMasteryItem* outLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetItemMasteryForLevel");

	UUpgradableGearComponent_GetItemMasteryForLevel_Params params;
	params.Item = Item;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outLevel != nullptr)
		*outLevel = params.outLevel;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetItemCost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FCraftingCost>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCraftingCost> UUpgradableGearComponent::STATIC_GetItemCost(class UClass** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetItemCost");

	UUpgradableGearComponent_GetItemCost_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetGearStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FGearStatEntry>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FGearStatEntry> UUpgradableGearComponent::STATIC_GetGearStats(class AFSDPlayerState** PlayerState, class UClass** ActorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetGearStats");

	UUpgradableGearComponent_GetGearStats_Params params;
	params.PlayerState = PlayerState;
	params.ActorClass = ActorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetGearSourceName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           ItemUpgrade                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUpgradableGearComponent::STATIC_GetGearSourceName(class UClass** itemClass, class UItemUpgrade** ItemUpgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetGearSourceName");

	UUpgradableGearComponent_GetGearSourceName_Params params;
	params.itemClass = itemClass;
	params.ItemUpgrade = ItemUpgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetEquippedUpgrades
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UItemUpgrade*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemUpgrade*> UUpgradableGearComponent::STATIC_GetEquippedUpgrades(class UClass** itemClass, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetEquippedUpgrades");

	UUpgradableGearComponent_GetEquippedUpgrades_Params params;
	params.itemClass = itemClass;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetEquippedUpgradeAtTier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           tierIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemUpgrade* UUpgradableGearComponent::STATIC_GetEquippedUpgradeAtTier(class UClass** itemClass, int* tierIndex, class UClass** CharacterClass, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetEquippedUpgradeAtTier");

	UUpgradableGearComponent_GetEquippedUpgradeAtTier_Params params;
	params.itemClass = itemClass;
	params.tierIndex = tierIndex;
	params.CharacterClass = CharacterClass;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetEquippedOverclock
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemUpgrade* UUpgradableGearComponent::STATIC_GetEquippedOverclock(class UObject** WorldContextObject, class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetEquippedOverclock");

	UUpgradableGearComponent_GetEquippedOverclock_Params params;
	params.WorldContextObject = WorldContextObject;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetEquippableOverclocks
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UItemUpgrade*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemUpgrade*> UUpgradableGearComponent::STATIC_GetEquippableOverclocks(class UObject** WorldContextObject, class UClass** itemClass, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetEquippableOverclocks");

	UUpgradableGearComponent_GetEquippableOverclocks_Params params;
	params.WorldContextObject = WorldContextObject;
	params.itemClass = itemClass;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetCraftingCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCraftingCost>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCraftingCost> UUpgradableGearComponent::GetCraftingCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetCraftingCost");

	UUpgradableGearComponent_GetCraftingCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetCharacterLevelRequiredForItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUpgradableGearComponent::STATIC_GetCharacterLevelRequiredForItem(class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetCharacterLevelRequiredForItem");

	UUpgradableGearComponent_GetCharacterLevelRequiredForItem_Params params;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.GetAllUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UItemUpgrade*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItemUpgrade*> UUpgradableGearComponent::GetAllUpgrades()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.GetAllUpgrades");

	UUpgradableGearComponent_GetAllUpgrades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.ClearEquippedUpgrade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           tierIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UUpgradableGearComponent::STATIC_ClearEquippedUpgrade(class UClass** itemClass, int* tierIndex, class AFSDPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.ClearEquippedUpgrade");

	UUpgradableGearComponent_ClearEquippedUpgrade_Params params;
	params.itemClass = itemClass;
	params.tierIndex = tierIndex;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UpgradableGearComponent.CheckMasteryUnlocks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerController**   Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UUpgradableGearComponent::STATIC_CheckMasteryUnlocks(class UClass** itemClass, class AFSDPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.CheckMasteryUnlocks");

	UUpgradableGearComponent_CheckMasteryUnlocks_Params params;
	params.itemClass = itemClass;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.UpgradableGearComponent.CanItemOverclock
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_CanItemOverclock(class UObject** WorldContextObject, class UClass** itemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.CanItemOverclock");

	UUpgradableGearComponent_CanItemOverclock_Params params;
	params.WorldContextObject = WorldContextObject;
	params.itemClass = itemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.CanAffordUpgrade
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UItemUpgrade**           Upgrade                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_CanAffordUpgrade(class UObject** WorldContextObject, class UItemUpgrade** Upgrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.CanAffordUpgrade");

	UUpgradableGearComponent_CanAffordUpgrade_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Upgrade = Upgrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UpgradableGearComponent.CanAffordItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUpgradableGearComponent::STATIC_CanAffordItem(class UObject** WorldContextObject, class UClass** Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UpgradableGearComponent.CanAffordItem");

	UUpgradableGearComponent_CanAffordItem_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.BPInstantUsable.BPCanUse
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent**        UseCollider                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBPInstantUsable::BPCanUse(class APlayerCharacter** user, class USceneComponent** UseCollider)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BPInstantUsable.BPCanUse");

	UBPInstantUsable_BPCanUse_Params params;
	params.user = user;
	params.UseCollider = UseCollider;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SingleUsableComponent.Use
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USingleUsableComponent::Use(class APlayerCharacter** user, float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.Use");

	USingleUsableComponent_Use_Params params;
	params.user = user;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SingleUsableComponent.SetCanUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          canUse                         (Parm, ZeroConstructor, IsPlainOldData)

void USingleUsableComponent::SetCanUse(bool* canUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.SetCanUse");

	USingleUsableComponent_SetCanUse_Params params;
	params.canUse = canUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SingleUsableComponent.OnRep_UserCount
// (Final, Native, Protected)

void USingleUsableComponent::OnRep_UserCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.OnRep_UserCount");

	USingleUsableComponent_OnRep_UserCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SingleUsableComponent.OnRep_Usable
// (Final, Native, Protected)

void USingleUsableComponent::OnRep_Usable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.OnRep_Usable");

	USingleUsableComponent_OnRep_Usable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SingleUsableComponent.OnRep_DesiredProgress
// (Final, Native, Protected)

void USingleUsableComponent::OnRep_DesiredProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.OnRep_DesiredProgress");

	USingleUsableComponent_OnRep_DesiredProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SingleUsableComponent.GetUseProgressInPercent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USingleUsableComponent::GetUseProgressInPercent(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.GetUseProgressInPercent");

	USingleUsableComponent_GetUseProgressInPercent_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.SingleUsableComponent.All_PlayFailedAudio
// (Net, Native, Event, NetMulticast, Protected)

void USingleUsableComponent::All_PlayFailedAudio()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SingleUsableComponent.All_PlayFailedAudio");

	USingleUsableComponent_All_PlayFailedAudio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OncePerPlayerUsableComponent.OnUsersChanged
// (Event, Protected, BlueprintEvent)

void UOncePerPlayerUsableComponent::OnUsersChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OncePerPlayerUsableComponent.OnUsersChanged");

	UOncePerPlayerUsableComponent_OnUsersChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OncePerPlayerUsableComponent.OnUsed
// (Final, Native, Public)
// Parameters:
// class APlayerCharacter**       user                           (Parm, ZeroConstructor, IsPlainOldData)

void UOncePerPlayerUsableComponent::OnUsed(class APlayerCharacter** user)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OncePerPlayerUsableComponent.OnUsed");

	UOncePerPlayerUsableComponent_OnUsed_Params params;
	params.user = user;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.OncePerPlayerUsableComponent.OnRep_Users
// (Final, Native, Protected)

void UOncePerPlayerUsableComponent::OnRep_Users()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.OncePerPlayerUsableComponent.OnRep_Users");

	UOncePerPlayerUsableComponent_OnRep_Users_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.EventRewarderUsableComponent.CreateUseText
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// int*                           blankSchematicCount            (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UEventRewarderUsableComponent::CreateUseText(int* blankSchematicCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.EventRewarderUsableComponent.CreateUseText");

	UEventRewarderUsableComponent_CreateUseText_Params params;
	params.blankSchematicCount = blankSchematicCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VanityIconCharacter.SetupVanity
// (Final, Native, Public, BlueprintCallable)

void AVanityIconCharacter::SetupVanity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityIconCharacter.SetupVanity");

	AVanityIconCharacter_SetupVanity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.VanityIconCharacter.CreateTextureAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UVanityItem**            VanityItem                     (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* AVanityIconCharacter::CreateTextureAt(class UVanityItem** VanityItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityIconCharacter.CreateTextureAt");

	AVanityIconCharacter_CreateTextureAt_Params params;
	params.VanityItem = VanityItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.UsableAggregator.GetProgress
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUsableAggregator::GetProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.UsableAggregator.GetProgress");

	UUsableAggregator_GetProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.IconGenerationManager.SetGeneratorInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AIconGenerationCharacter** instance                       (Parm, ZeroConstructor, IsPlainOldData)

void UIconGenerationManager::SetGeneratorInstance(class AIconGenerationCharacter** instance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.IconGenerationManager.SetGeneratorInstance");

	UIconGenerationManager_SetGeneratorInstance_Params params;
	params.instance = instance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.VanityItem.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class AFSDPlayerState**        PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVanityItem::IsEquipped(class UClass** CharacterClass, class AFSDPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityItem.IsEquipped");

	UVanityItem_IsEquipped_Params params;
	params.CharacterClass = CharacterClass;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VanityItem.GetVanitySlot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVanitySlot                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EVanitySlot UVanityItem::GetVanitySlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityItem.GetVanitySlot");

	UVanityItem_GetVanitySlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VanityItem.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UVanityItem::GetIcon(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityItem.GetIcon");

	UVanityItem_GetIcon_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VanityItem.ApplyItemPermanently
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UVanityItem::ApplyItemPermanently(class UObject** WorldContextObject, class UClass** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityItem.ApplyItemPermanently");

	UVanityItem_ApplyItemPermanently_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.VanityItem.ApplyItem
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class APlayerCharacter**       Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isPermanent                    (Parm, ZeroConstructor, IsPlainOldData)

void UVanityItem::ApplyItem(class APlayerCharacter** Player, bool* isPermanent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityItem.ApplyItem");

	UVanityItem_ApplyItem_Params params;
	params.Player = Player;
	params.isPermanent = isPermanent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.VanityTestCharacter.SetupVanity
// (Final, Native, Public, BlueprintCallable)

void AVanityTestCharacter::SetupVanity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VanityTestCharacter.SetupVanity");

	AVanityTestCharacter_SetupVanity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.VeinResourceData.GetTerrainMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTerrainMaterial*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTerrainMaterial* UVeinResourceData::GetTerrainMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VeinResourceData.GetTerrainMaterial");

	UVeinResourceData_GetTerrainMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterVanityItems.SortVanityItems
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 CharacterClass                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UVanityItem*>     vanityItems                    (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UCharacterVanityItems::STATIC_SortVanityItems(class UObject** WorldContextObject, class UClass** CharacterClass, TArray<class UVanityItem*>* vanityItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.SortVanityItems");

	UCharacterVanityItems_SortVanityItems_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CharacterClass = CharacterClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (vanityItems != nullptr)
		*vanityItems = params.vanityItems;
}


// Function FSD.CharacterVanityItems.PreLoadVanityItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAsyncManager**          AsyncManager                   (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterVanityItems::PreLoadVanityItems(class UAsyncManager** AsyncManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.PreLoadVanityItems");

	UCharacterVanityItems_PreLoadVanityItems_Params params;
	params.AsyncManager = AsyncManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.CharacterVanityItems.GetVanityItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          onlyStoreItems                 (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UVanityItem*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UVanityItem*> UCharacterVanityItems::STATIC_GetVanityItems(class UObject** WorldContextObject, EVanitySlot* Slot, bool* onlyStoreItems, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.GetVanityItems");

	UCharacterVanityItems_GetVanityItems_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Slot = Slot;
	params.onlyStoreItems = onlyStoreItems;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterVanityItems.GetUnLockedVanityItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UVanityItem*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UVanityItem*> UCharacterVanityItems::STATIC_GetUnLockedVanityItems(class UObject** WorldContextObject, EVanitySlot* Slot, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.GetUnLockedVanityItems");

	UCharacterVanityItems_GetUnLockedVanityItems_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Slot = Slot;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterVanityItems.GetLockedVanityItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UVanityItem*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UVanityItem*> UCharacterVanityItems::STATIC_GetLockedVanityItems(class UObject** WorldContextObject, EVanitySlot* Slot, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.GetLockedVanityItems");

	UCharacterVanityItems_GetLockedVanityItems_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Slot = Slot;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterVanityItems.GetItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVanitySlot*                   Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          onlyStoreItems                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UVanityItem*>     ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UVanityItem*> UCharacterVanityItems::GetItems(EVanitySlot* Slot, bool* onlyStoreItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.GetItems");

	UCharacterVanityItems_GetItems_Params params;
	params.Slot = Slot;
	params.onlyStoreItems = onlyStoreItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.CharacterVanityItems.Clean
// (Final, Native, Public, BlueprintCallable)

void UCharacterVanityItems::Clean()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.CharacterVanityItems.Clean");

	UCharacterVanityItems_Clean_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.VictoryPoseFunctionLibrary.IsRandomVictoryPose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UVictoryPose**           VictoryPose                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVictoryPoseFunctionLibrary::STATIC_IsRandomVictoryPose(class UVictoryPose** VictoryPose)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VictoryPoseFunctionLibrary.IsRandomVictoryPose");

	UVictoryPoseFunctionLibrary_IsRandomVictoryPose_Params params;
	params.VictoryPose = VictoryPose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VictoryPoseFunctionLibrary.GetOwnedVictoryPoses
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UVictoryPose*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UVictoryPose*> UVictoryPoseFunctionLibrary::STATIC_GetOwnedVictoryPoses(class UObject** WorldContextObject, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VictoryPoseFunctionLibrary.GetOwnedVictoryPoses");

	UVictoryPoseFunctionLibrary_GetOwnedVictoryPoses_Params params;
	params.WorldContextObject = WorldContextObject;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VictoryPoseFunctionLibrary.GetEquippedVictoryPose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// class UVictoryPose*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UVictoryPose* UVictoryPoseFunctionLibrary::STATIC_GetEquippedVictoryPose(class UObject** WorldContextObject, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VictoryPoseFunctionLibrary.GetEquippedVictoryPose");

	UVictoryPoseFunctionLibrary_GetEquippedVictoryPose_Params params;
	params.WorldContextObject = WorldContextObject;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VictoryPose.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVictoryPose::IsUnlocked(class UObject** WorldContextObject, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VictoryPose.IsUnlocked");

	UVictoryPose_IsUnlocked_Params params;
	params.WorldContextObject = WorldContextObject;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.VictoryPose.Equip
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UPlayerCharacterID**     characterID                    (Parm, ZeroConstructor, IsPlainOldData)

void UVictoryPose::Equip(class UObject** WorldContextObject, class UPlayerCharacterID** characterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.VictoryPose.Equip");

	UVictoryPose_Equip_Params params;
	params.WorldContextObject = WorldContextObject;
	params.characterID = characterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponFireOwner.GetPlayerCharacter
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCharacter* UWeaponFireOwner::GetPlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireOwner.GetPlayerCharacter");

	UWeaponFireOwner_GetPlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeaponFireOwner.GetMuzzleQuat
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FQuat                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FQuat UWeaponFireOwner::GetMuzzleQuat()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireOwner.GetMuzzleQuat");

	UWeaponFireOwner_GetMuzzleQuat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeaponFireOwner.GetMuzzleLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UWeaponFireOwner::GetMuzzleLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireOwner.GetMuzzleLocation");

	UWeaponFireOwner_GetMuzzleLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeaponFireOwner.GetIsLocallyControlled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponFireOwner::GetIsLocallyControlled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireOwner.GetIsLocallyControlled");

	UWeaponFireOwner_GetIsLocallyControlled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeaponFireOwner.GetIsFirstPerson
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponFireOwner::GetIsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponFireOwner.GetIsFirstPerson");

	UWeaponFireOwner_GetIsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.AssaultRifle.OnTimerElapsed
// (Final, Native, Protected)

void AAssaultRifle::OnTimerElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AssaultRifle.OnTimerElapsed");

	AAssaultRifle_OnTimerElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AssaultRifle.OnEnemyKilled
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void AAssaultRifle::OnEnemyKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AssaultRifle.OnEnemyKilled");

	AAssaultRifle_OnEnemyKilled_Params params;
	params.Target = Target;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AssaultRifle.Client_ResetAccuracy
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AAssaultRifle::Client_ResetAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AssaultRifle.Client_ResetAccuracy");

	AAssaultRifle_Client_ResetAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeakpointGlowComponent.StopLoopingGlow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           aGlowID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          aFade                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeakpointGlowComponent::StopLoopingGlow(int* aGlowID, bool* aFade)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeakpointGlowComponent.StopLoopingGlow");

	UWeakpointGlowComponent_StopLoopingGlow_Params params;
	params.aGlowID = aGlowID;
	params.aFade = aFade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WeakpointGlowComponent.ShowBodypartHit
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         BaseAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UWeakpointGlowComponent::ShowBodypartHit(float* amount, float* BaseAmount, class UPrimitiveComponent** Component, class UFSDPhysicalMaterial** PhysMat, struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeakpointGlowComponent.ShowBodypartHit");

	UWeakpointGlowComponent_ShowBodypartHit_Params params;
	params.amount = amount;
	params.BaseAmount = BaseAmount;
	params.Component = Component;
	params.PhysMat = PhysMat;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeakpointGlowComponent.SetUpWeakPointGlowOnMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent**         Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           MaterialIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UHealthComponentBase**   HealthComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UWeakpointGlowComponent::SetUpWeakPointGlowOnMesh(class UMeshComponent** Mesh, int* MaterialIndex, class UFSDPhysicalMaterial** PhysicalMaterial, class UHealthComponentBase** HealthComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeakpointGlowComponent.SetUpWeakPointGlowOnMesh");

	UWeakpointGlowComponent_SetUpWeakPointGlowOnMesh_Params params;
	params.Mesh = Mesh;
	params.MaterialIndex = MaterialIndex;
	params.PhysicalMaterial = PhysicalMaterial;
	params.HealthComponent = HealthComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeakpointGlowComponent.All_ShowWeakPointHit
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// int*                           Channel                        (Parm, ZeroConstructor, IsPlainOldData)

void UWeakpointGlowComponent::All_ShowWeakPointHit(int* Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeakpointGlowComponent.All_ShowWeakPointHit");

	UWeakpointGlowComponent_All_ShowWeakPointHit_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeakpointGlowComponent.AddWeakpointGlow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          loopIndefinitely               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         loopTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRuntimeFloatCurve*     growCurve                      (Parm)
// struct FRuntimeFloatCurve*     FadeCurve                      (Parm)
// int*                           UniqueId                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Channel                        (Parm, ZeroConstructor, IsPlainOldData)

void UWeakpointGlowComponent::AddWeakpointGlow(bool* loopIndefinitely, float* loopTime, struct FRuntimeFloatCurve* growCurve, struct FRuntimeFloatCurve* FadeCurve, int* UniqueId, int* Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeakpointGlowComponent.AddWeakpointGlow");

	UWeakpointGlowComponent_AddWeakpointGlow_Params params;
	params.loopIndefinitely = loopIndefinitely;
	params.loopTime = loopTime;
	params.growCurve = growCurve;
	params.FadeCurve = FadeCurve;
	params.UniqueId = UniqueId;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BurstWeapon.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void ABurstWeapon::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BurstWeapon.OnTargetDamaged");

	ABurstWeapon_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.SawedOffShotgun.SetShockWaveDamageComponent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UDamageComponent**       Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ASawedOffShotgun::SetShockWaveDamageComponent(class UDamageComponent** Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.SawedOffShotgun.SetShockWaveDamageComponent");

	ASawedOffShotgun_SetShockWaveDamageComponent_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Revoler.OnTargetKilled
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void ARevoler::OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Revoler.OnTargetKilled");

	ARevoler_OnTargetKilled_Params params;
	params.Target = Target;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectricalSMG.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void AElectricalSMG::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectricalSMG.OnTargetDamaged");

	AElectricalSMG_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectricalSMG.OnStatusEffectPushed
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AElectricalSMG::OnStatusEffectPushed(class UHealthComponentBase** Health)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectricalSMG.OnStatusEffectPushed");

	AElectricalSMG_OnStatusEffectPushed_Params params;
	params.Health = Health;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ElectricalSMG.All_OnAoETriggered
// (Net, Native, Event, NetMulticast, Protected, Const)
// Parameters:
// struct FVector_NetQuantize*    Location                       (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal* Normal                         (ConstParm, Parm, ReferenceParm)

void AElectricalSMG::All_OnAoETriggered(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ElectricalSMG.All_OnAoETriggered");

	AElectricalSMG_All_OnAoETriggered_Params params;
	params.Location = Location;
	params.Normal = Normal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.BasicPistol.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void ABasicPistol::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.BasicPistol.OnTargetDamaged");

	ABasicPistol_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.AutoShotgun.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void AAutoShotgun::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.AutoShotgun.OnTargetDamaged");

	AAutoShotgun_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutter.Server_StopRotatingProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ALineCutter::Server_StopRotatingProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutter.Server_StopRotatingProjectile");

	ALineCutter_Server_StopRotatingProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutter.Server_ReverseLastProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ALineCutter::Server_ReverseLastProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutter.Server_ReverseLastProjectile");

	ALineCutter_Server_ReverseLastProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutter.OnRep_LastProjectile
// (Final, Native, Protected, Const)

void ALineCutter::OnRep_LastProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutter.OnRep_LastProjectile");

	ALineCutter_OnRep_LastProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.LineCutter.OnProjectileLaunched
// (Final, Native, Protected)
// Parameters:
// class AProjectileBase**        Projectile                     (Parm, ZeroConstructor, IsPlainOldData)

void ALineCutter::OnProjectileLaunched(class AProjectileBase** Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.LineCutter.OnProjectileLaunched");

	ALineCutter_OnProjectileLaunched_Params params;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Magazine.OnItemSkinned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USkinEffect**            Skin                           (Parm, ZeroConstructor, IsPlainOldData)

void AMagazine::OnItemSkinned(class USkinEffect** Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Magazine.OnItemSkinned");

	AMagazine_OnItemSkinned_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Magazine.ActorWasHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor**                 SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AMagazine::ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Magazine.ActorWasHit");

	AMagazine_ActorWasHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponHitCounterComponent.OnTargetDamaged
// (Final, Native, Protected)
// Parameters:
// class UHealthComponentBase**   Health                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFSDPhysicalMaterial**   PhysicalMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponHitCounterComponent::OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitCounterComponent.OnTargetDamaged");

	UWeaponHitCounterComponent_OnTargetDamaged_Params params;
	params.Health = Health;
	params.amount = amount;
	params.PhysicalMaterial = PhysicalMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponHitCounterComponent.OnStoppedUsing
// (Final, Native, Protected)

void UWeaponHitCounterComponent::OnStoppedUsing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitCounterComponent.OnStoppedUsing");

	UWeaponHitCounterComponent_OnStoppedUsing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponHitCounterComponent.OnReloading
// (Final, Native, Protected)

void UWeaponHitCounterComponent::OnReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitCounterComponent.OnReloading");

	UWeaponHitCounterComponent_OnReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponHitCounterComponent.All_ShowDamageEffects
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<TWeakObjectPtr<class AActor>>* Targets                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UWeaponHitCounterComponent::All_ShowDamageEffects(TArray<TWeakObjectPtr<class AActor>>* Targets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitCounterComponent.All_ShowDamageEffects");

	UWeaponHitCounterComponent_All_ShowDamageEffects_Params params;
	params.Targets = Targets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponHitEffectComponent.Server_SpawnEffect
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Location                       (ConstParm, Parm, ReferenceParm)
// struct FRotator*               Rotation                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UWeaponHitEffectComponent::Server_SpawnEffect(struct FVector_NetQuantize* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitEffectComponent.Server_SpawnEffect");

	UWeaponHitEffectComponent_Server_SpawnEffect_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeaponHitEffectComponent.OnHit
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UWeaponHitEffectComponent::OnHit(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeaponHitEffectComponent.OnHit");

	UWeaponHitEffectComponent_OnHit_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WalkingStateComponent.JumpPress
// (Final, Native, Public)

void UWalkingStateComponent::JumpPress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WalkingStateComponent.JumpPress");

	UWalkingStateComponent_JumpPress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WeightRoomSelectorLibrary.SetupWeightedRoomSelector
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FWeightedRoomSelector   Target                         (Parm, OutParm, ReferenceParm)
// TArray<class URoomGenerator*>  Rooms                          (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UWeightRoomSelectorLibrary::STATIC_SetupWeightedRoomSelector(struct FWeightedRoomSelector* Target, TArray<class URoomGenerator*>* Rooms)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeightRoomSelectorLibrary.SetupWeightedRoomSelector");

	UWeightRoomSelectorLibrary_SetupWeightedRoomSelector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Target != nullptr)
		*Target = params.Target;
	if (Rooms != nullptr)
		*Rooms = params.Rooms;
}


// Function FSD.WeightRoomSelectorLibrary.SelectRandomRoom
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FWeightedRoomSelector   Target                         (Parm, OutParm, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class URoomGenerator*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URoomGenerator* UWeightRoomSelectorLibrary::STATIC_SelectRandomRoom(struct FWeightedRoomSelector* Target, struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeightRoomSelectorLibrary.SelectRandomRoom");

	UWeightRoomSelectorLibrary_SelectRandomRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Target != nullptr)
		*Target = params.Target;
	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.WeightRoomSelectorLibrary.GetRandomRoom
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class URoomGenerator*>  Rooms                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          removeChosenRoom               (Parm, ZeroConstructor, IsPlainOldData)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class URoomGenerator*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class URoomGenerator* UWeightRoomSelectorLibrary::STATIC_GetRandomRoom(bool* removeChosenRoom, TArray<class URoomGenerator*>* Rooms, struct FRandomStream* RandomStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WeightRoomSelectorLibrary.GetRandomRoom");

	UWeightRoomSelectorLibrary_GetRandomRoom_Params params;
	params.removeChosenRoom = removeChosenRoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Rooms != nullptr)
		*Rooms = params.Rooms;
	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;

	return params.ReturnValue;
}


// Function FSD.WidgetToRenderTargetComponent.SetWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget**            Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UWidgetToRenderTargetComponent::SetWidget(class UUserWidget** Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.SetWidget");

	UWidgetToRenderTargetComponent_SetWidget_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WidgetToRenderTargetComponent.SetOwnerPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer**           LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData)

void UWidgetToRenderTargetComponent::SetOwnerPlayer(class ULocalPlayer** LocalPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.SetOwnerPlayer");

	UWidgetToRenderTargetComponent_SetOwnerPlayer_Params params;
	params.LocalPlayer = LocalPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WidgetToRenderTargetComponent.SetBackgroundColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor*           NewBackgroundColor             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UWidgetToRenderTargetComponent::SetBackgroundColor(struct FLinearColor* NewBackgroundColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.SetBackgroundColor");

	UWidgetToRenderTargetComponent_SetBackgroundColor_Params params;
	params.NewBackgroundColor = NewBackgroundColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WidgetToRenderTargetComponent.RequestRedraw
// (Native, Public, BlueprintCallable)

void UWidgetToRenderTargetComponent::RequestRedraw()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.RequestRedraw");

	UWidgetToRenderTargetComponent_RequestRedraw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WidgetToRenderTargetComponent.GetUserWidgetObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UWidgetToRenderTargetComponent::GetUserWidgetObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.GetUserWidgetObject");

	UWidgetToRenderTargetComponent_GetUserWidgetObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WidgetToRenderTargetComponent.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* UWidgetToRenderTargetComponent::GetRenderTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.GetRenderTarget");

	UWidgetToRenderTargetComponent_GetRenderTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WidgetToRenderTargetComponent.GetOwnerPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULocalPlayer* UWidgetToRenderTargetComponent::GetOwnerPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.GetOwnerPlayer");

	UWidgetToRenderTargetComponent_GetOwnerPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WidgetToRenderTargetComponent.GetMaterialInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* UWidgetToRenderTargetComponent::GetMaterialInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WidgetToRenderTargetComponent.GetMaterialInstance");

	UWidgetToRenderTargetComponent_GetMaterialInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WindowManager.ReplaceWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWindowWidget**          Window                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UWindowManager::ReplaceWindow(class UWindowWidget** Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.ReplaceWindow");

	UWindowManager_ReplaceWindow_Params params;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowManager.OpenWindowFromClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 windowClass                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ZOrder                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ShowCursor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UWindowWidget*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWindowWidget* UWindowManager::OpenWindowFromClass(class UClass** windowClass, int* ZOrder, bool* ShowCursor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.OpenWindowFromClass");

	UWindowManager_OpenWindowFromClass_Params params;
	params.windowClass = windowClass;
	params.ZOrder = ZOrder;
	params.ShowCursor = ShowCursor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WindowManager.OpenWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWindowWidget**          Window                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          PlayAudio                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ShowCursor                     (Parm, ZeroConstructor, IsPlainOldData)

void UWindowManager::OpenWindow(class UWindowWidget** Window, bool* PlayAudio, bool* ShowCursor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.OpenWindow");

	UWindowManager_OpenWindow_Params params;
	params.Window = Window;
	params.PlayAudio = PlayAudio;
	params.ShowCursor = ShowCursor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowManager.OpenSingleUseWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 windowClass                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ZOrder                         (Parm, ZeroConstructor, IsPlainOldData)
// class UWindowWidget*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWindowWidget* UWindowManager::OpenSingleUseWindow(class UClass** windowClass, int* ZOrder)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.OpenSingleUseWindow");

	UWindowManager_OpenSingleUseWindow_Params params;
	params.windowClass = windowClass;
	params.ZOrder = ZOrder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WindowManager.IsWindowOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWindowWidget**          Window                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWindowManager::IsWindowOpen(class UWindowWidget** Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.IsWindowOpen");

	UWindowManager_IsWindowOpen_Params params;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WindowManager.IsTopWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWindowWidget**          Window                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWindowManager::IsTopWindow(class UWindowWidget** Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.IsTopWindow");

	UWindowManager_IsTopWindow_Params params;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WindowManager.GetOrCreateSingletonWidget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           WidgetCreated                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UWindowManager::GetOrCreateSingletonWidget(class UClass** WidgetClass, bool* WidgetCreated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.GetOrCreateSingletonWidget");

	UWindowManager_GetOrCreateSingletonWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (WidgetCreated != nullptr)
		*WidgetCreated = params.WidgetCreated;

	return params.ReturnValue;
}


// Function FSD.WindowManager.CloseWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWindowWidget**          Window                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UWindowManager::CloseWindow(class UWindowWidget** Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.CloseWindow");

	UWindowManager_CloseWindow_Params params;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowManager.CloseTopWindow
// (Final, Native, Public, BlueprintCallable)

void UWindowManager::CloseTopWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.CloseTopWindow");

	UWindowManager_CloseTopWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowManager.CloseAllWindows
// (Final, Native, Public, BlueprintCallable)

void UWindowManager::CloseAllWindows()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.CloseAllWindows");

	UWindowManager_CloseAllWindows_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WindowManager.AnyWindowsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWindowManager::AnyWindowsOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WindowManager.AnyWindowsOpen");

	UWindowManager_AnyWindowsOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.YesNoPromptWidget.Show
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Title                          (Parm)
// struct FText*                  Message                        (Parm)
// struct FScriptDelegate*        OnYesNoClicked                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UYesNoPromptWidget::Show(struct FText* Title, struct FText* Message, struct FScriptDelegate* OnYesNoClicked)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptWidget.Show");

	UYesNoPromptWidget_Show_Params params;
	params.Title = Title;
	params.Message = Message;
	params.OnYesNoClicked = OnYesNoClicked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.YesNoPromptWidget.SetMappedResources
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TMap<class UResourceData*, int>* Resources                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UYesNoPromptWidget::SetMappedResources(TMap<class UResourceData*, int>* Resources)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptWidget.SetMappedResources");

	UYesNoPromptWidget_SetMappedResources_Params params;
	params.Resources = Resources;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.YesNoPromptWidget.OnYesNoClickedDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool*                          Yes                            (Parm, ZeroConstructor, IsPlainOldData)

void UYesNoPromptWidget::OnYesNoClickedDelegate__DelegateSignature(bool* Yes)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.YesNoPromptWidget.OnYesNoClickedDelegate__DelegateSignature");

	UYesNoPromptWidget_OnYesNoClickedDelegate__DelegateSignature_Params params;
	params.Yes = Yes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.YesNoPromptWidget.OnShow
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText*                  Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Message                        (ConstParm, Parm, OutParm, ReferenceParm)

void UYesNoPromptWidget::OnShow(struct FText* Title, struct FText* Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptWidget.OnShow");

	UYesNoPromptWidget_OnShow_Params params;
	params.Title = Title;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.YesNoPromptWidget.OnClicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Yes                            (Parm, ZeroConstructor, IsPlainOldData)

void UYesNoPromptWidget::OnClicked(bool* Yes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptWidget.OnClicked");

	UYesNoPromptWidget_OnClicked_Params params;
	params.Yes = Yes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.YesNoPromptWidget.Clicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          Yes                            (Parm, ZeroConstructor, IsPlainOldData)

void UYesNoPromptWidget::Clicked(bool* Yes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptWidget.Clicked");

	UYesNoPromptWidget_Clicked_Params params;
	params.Yes = Yes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FSD.YesNoPromptAction.YesNoOutputPin__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UYesNoPromptAction::YesNoOutputPin__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FSD.YesNoPromptAction.YesNoOutputPin__DelegateSignature");

	UYesNoPromptAction_YesNoOutputPin__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.YesNoPromptAction.PromptYesNo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FYesNoPromptSettings*   Prompt                         (Parm)
// class UYesNoPromptAction*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UYesNoPromptAction* UYesNoPromptAction::STATIC_PromptYesNo(class UObject** WorldContext, struct FYesNoPromptSettings* Prompt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptAction.PromptYesNo");

	UYesNoPromptAction_PromptYesNo_Params params;
	params.WorldContext = WorldContext;
	params.Prompt = Prompt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.YesNoPromptAction.PromptPurchase
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FYesNoPromptSettings*   Prompt                         (Parm)
// TMap<class UResourceData*, int>* Resources                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UYesNoPromptAction*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UYesNoPromptAction* UYesNoPromptAction::STATIC_PromptPurchase(class UObject** WorldContext, struct FYesNoPromptSettings* Prompt, TMap<class UResourceData*, int>* Resources)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptAction.PromptPurchase");

	UYesNoPromptAction_PromptPurchase_Params params;
	params.WorldContext = WorldContext;
	params.Prompt = Prompt;
	params.Resources = Resources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.YesNoPromptAction.PromptCallback
// (Final, Native, Protected)
// Parameters:
// bool*                          YesClicked                     (Parm, ZeroConstructor, IsPlainOldData)

void UYesNoPromptAction::PromptCallback(bool* YesClicked)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.YesNoPromptAction.PromptCallback");

	UYesNoPromptAction_PromptCallback_Params params;
	params.YesClicked = YesClicked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZapperItem.Server_PlaceZapper
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AZapperItem::Server_PlaceZapper(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZapperItem.Server_PlaceZapper");

	AZapperItem_Server_PlaceZapper_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.Zapper.GetZappingPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AZapper::GetZappingPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Zapper.GetZappingPoint");

	AZapper_GetZappingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.Zapper.GetZappingLight
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ULightComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class ULightComponent* AZapper::GetZappingLight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.Zapper.GetZappingLight");

	AZapper_GetZappingLight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ZipLineProjectile.OnTimelineTick
// (Final, Native, Protected)
// Parameters:
// float*                         NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void AZipLineProjectile::OnTimelineTick(float* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineProjectile.OnTimelineTick");

	AZipLineProjectile_OnTimelineTick_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZipLineProjectile.OnShoot
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                EndLocation                    (Parm, ZeroConstructor, IsPlainOldData)

void AZipLineProjectile::OnShoot(struct FVector* Origin, struct FVector* EndLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineProjectile.OnShoot");

	AZipLineProjectile_OnShoot_Params params;
	params.Origin = Origin;
	params.EndLocation = EndLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.SwitchedState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWoodLouseState*               CurrentState                   (Parm, ZeroConstructor, IsPlainOldData)

void AWoodLouse::SwitchedState(EWoodLouseState* CurrentState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.SwitchedState");

	AWoodLouse_SwitchedState_Params params;
	params.CurrentState = CurrentState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.StopSpecial
// (Final, Native, Protected, BlueprintCallable)

void AWoodLouse::StopSpecial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.StopSpecial");

	AWoodLouse_StopSpecial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.StartSpecial
// (Final, Native, Protected, BlueprintCallable)

void AWoodLouse::StartSpecial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.StartSpecial");

	AWoodLouse_StartSpecial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.SetWantsToStandUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aWantsToStandUp                (Parm, ZeroConstructor, IsPlainOldData)

void AWoodLouse::SetWantsToStandUp(bool* aWantsToStandUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.SetWantsToStandUp");

	AWoodLouse_SetWantsToStandUp_Params params;
	params.aWantsToStandUp = aWantsToStandUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.SetState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EWoodLouseState*               aState                         (Parm, ZeroConstructor, IsPlainOldData)

void AWoodLouse::SetState(EWoodLouseState* aState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.SetState");

	AWoodLouse_SetState_Params params;
	params.aState = aState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.SetRotateToTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          aRotateToTarget                (Parm, ZeroConstructor, IsPlainOldData)

void AWoodLouse::SetRotateToTarget(bool* aRotateToTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.SetRotateToTarget");

	AWoodLouse_SetRotateToTarget_Params params;
	params.aRotateToTarget = aRotateToTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.SeePawn
// (Final, Native, Protected)
// Parameters:
// class APawn**                  aSenPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void AWoodLouse::SeePawn(class APawn** aSenPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.SeePawn");

	AWoodLouse_SeePawn_Params params;
	params.aSenPawn = aSenPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.PlayBumpNoise
// (Net, Native, Event, NetMulticast, Protected)

void AWoodLouse::PlayBumpNoise()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.PlayBumpNoise");

	AWoodLouse_PlayBumpNoise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.OnRep_State
// (Native, Protected)

void AWoodLouse::OnRep_State()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.OnRep_State");

	AWoodLouse_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.WoodLouse.GetRollerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWoodLouseState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWoodLouseState AWoodLouse::GetRollerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.GetRollerState");

	AWoodLouse_GetRollerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.WoodLouse.BumpedTarget
// (Native, Event, Protected, BlueprintEvent)

void AWoodLouse::BumpedTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.WoodLouse.BumpedTarget");

	AWoodLouse_BumpedTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZipLineItem.CanFireWeapon
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   FailMsg                        (Parm, OutParm)
// class UDialogDataAsset*        FailShout                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AZipLineItem::CanFireWeapon(struct FText* FailMsg, class UDialogDataAsset** FailShout)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineItem.CanFireWeapon");

	AZipLineItem_CanFireWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FailMsg != nullptr)
		*FailMsg = params.FailMsg;
	if (FailShout != nullptr)
		*FailShout = params.FailShout;

	return params.ReturnValue;
}


// Function FSD.ZipLineStateComponent.ServerJumpPressed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UZipLineStateComponent::ServerJumpPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineStateComponent.ServerJumpPressed");

	UZipLineStateComponent_ServerJumpPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZipLineStateComponent.ServerForwardInputChanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float*                         Input                          (Parm, ZeroConstructor, IsPlainOldData)

void UZipLineStateComponent::ServerForwardInputChanged(float* Input)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineStateComponent.ServerForwardInputChanged");

	UZipLineStateComponent_ServerForwardInputChanged_Params params;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZipLineStateComponent.ServerChangeDirection
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UZipLineStateComponent::ServerChangeDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineStateComponent.ServerChangeDirection");

	UZipLineStateComponent_ServerChangeDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZipLineStateComponent.OnPlayerHit
// (Final, Native, Protected)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageClass**           DamageClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          anyHealthLost                  (Parm, ZeroConstructor, IsPlainOldData)

void UZipLineStateComponent::OnPlayerHit(float* Damage, class UDamageClass** DamageClass, class AActor** DamageCauser, bool* anyHealthLost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineStateComponent.OnPlayerHit");

	UZipLineStateComponent_OnPlayerHit_Params params;
	params.Damage = Damage;
	params.DamageClass = DamageClass;
	params.DamageCauser = DamageCauser;
	params.anyHealthLost = anyHealthLost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZipLineStateComponent.GetJumpVector
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                LookVector                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                CurrentVelocity                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UZipLineStateComponent::GetJumpVector(struct FVector* LookVector, struct FVector* CurrentVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZipLineStateComponent.GetJumpVector");

	UZipLineStateComponent_GetJumpVector_Params params;
	params.LookVector = LookVector;
	params.CurrentVelocity = CurrentVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FSD.ZiplineLauncherComponent.Server_Fire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize*    Origin                         (Parm)
// struct FVector_NetQuantize*    Destination                    (Parm)

void UZiplineLauncherComponent::Server_Fire(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Destination)
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZiplineLauncherComponent.Server_Fire");

	UZiplineLauncherComponent_Server_Fire_Params params;
	params.Origin = Origin;
	params.Destination = Destination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FSD.ZiplineLauncherComponent.All_ShowHit
// (Net, Native, Event, NetMulticast, Protected)

void UZiplineLauncherComponent::All_ShowHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FSD.ZiplineLauncherComponent.All_ShowHit");

	UZiplineLauncherComponent_All_ShowHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
