#pragma once

// Name: , Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class FSD.AcceptInviteBlueprintCallProxy
// 0x0058 (0x0080 - 0x0028)
class UAcceptInviteBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0050(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AcceptInviteBlueprintCallProxy");
		return ptr;
	}


	class UAcceptInviteBlueprintCallProxy* STATIC_AcceptInvite(class UObject** WorldContextObject, struct FString* ListName, struct FString* userId);
};


// Class FSD.Objective
// 0x0090 (0x0188 - 0x00F8)
class UObjective : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnObjectiveUpdated;                                       // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	class UClass*                                      WidgetClass;                                              // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FMissionShouts                              MissionShouts;                                            // 0x0118(0x0038) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       MissionDescription;                                       // 0x0150(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                CompletionRewardInCredits;                                // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CompletionRewardInXP;                                     // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleObjectiveToMission;                                  // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RequiredReturnObjectiveCompleted;                         // 0x0171(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0172(0x0006) MISSED OFFSET
	class UMissionStat*                                ObjectiveCompletedStat;                                   // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IsPrimaryObjective;                                       // 0x0180(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MissionScale;                                             // 0x0184(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Objective");
		return ptr;
	}


	void Receive_StartTracking();
	void OnRep_IsPrimaryObjective();
	bool IsTutorialObjective();
	bool IsPrimary();
	bool IsObjectiveResource(class UResourceData** InResource);
	bool IsCompleted();
	bool HasReplicated();
	int GetRewardXP();
	struct FCreditsReward GetRewardCredits();
	struct FText GetObjectiveText();
	struct FObjectiveMissionIcon STATIC_GetObjectiveMissionIconFromClass(class UClass** objectiveClass);
	class UTexture2D* STATIC_GetObjectiveIconFromClass(class UClass** objectiveClass);
	class UTexture2D* GetObjectiveIcon();
	struct FText STATIC_GetObjectiveDescriptionFromClass(class UClass** objectiveClass, float* missionLength);
	struct FText GetObjectiveDescription(float* missionLength);
	int STATIC_GetObjectiveAmountFromClass(class UClass** objectiveClass, float* missionLength);
	int GetObjectiveAmount(float* missionLength);
	struct FObjectiveMissionIcon GetMissionIcon();
	struct FText GetInMissionText();
	struct FText GetInMissionCounterText();
	class UTexture2D* GetInMissionCounterIcon();
};


// Class FSD.ActivationOjective
// 0x0008 (0x0190 - 0x0188)
class UActivationOjective : public UObjective
{
public:
	int                                                ObjectivesFound;                                          // 0x0188(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ObjectivesToFind;                                         // 0x018C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ActivationOjective");
		return ptr;
	}


	void OnRep_ObjectivesToFind(int* prevAmount);
	void OnRep_ObjectivesFound(int* prevAmount);
};


// Class FSD.ActivationObject
// 0x0010 (0x0340 - 0x0330)
class AActivationObject : public AActor
{
public:
	class USingleUsableComponent*                      Usable;                                                   // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               HasBeenUsed;                                              // 0x0338(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ActivationObject");
		return ptr;
	}


	void OnUsedBy(class APlayerCharacter** user);
};


// Class FSD.ActorFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UActorFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ActorFunctionLibrary");
		return ptr;
	}


	void STATIC_UnlockSpecificCharacters(class UObject** WorldContextObject, TArray<class APlayerCharacter*>* Characters, ECharacterState* UnlockIf, ECharacterState* UnlockTo);
	void STATIC_UnlockCharacters(class UObject** WorldContextObject);
	float STATIC_TimeSince(class UObject** WorldContextObject, float* Time);
	void STATIC_SetScalarParameters(struct FName* ParameterName, float* Value, TArray<class UMaterialInstanceDynamic*>* Materials);
	void STATIC_PlayCueOnClient(class APlayerController** Target, class USoundCue** cue);
	void STATIC_PlayCueOnAll(class UObject** WorldContextObject, class USoundCue** cue);
	float STATIC_PingPong(float* Time, float* Length, bool* normalize);
	float STATIC_MoveTowards(float* current, float* End, float* step);
	void STATIC_LockSpecificCharactersIfState(class UObject** WorldContextObject, TArray<class APlayerCharacter*>* Characters, ECharacterState* stateToLock);
	void STATIC_LockSpecificCharacters(class UObject** WorldContextObject, TArray<class APlayerCharacter*>* Characters);
	bool STATIC_LockSpecificCharacterIfState(class UObject** WorldContextObject, class APlayerCharacter** Character, ECharacterState* LockIf, ECharacterState* LockTo);
	void STATIC_LockCharacters(class UObject** WorldContextObject);
	class UClass* STATIC_LoadWindowWidgetClass();
	class UClass* STATIC_LoadWidgetClass();
	class UClass* STATIC_LoadClass();
	void STATIC_KillActorWithEffects(class AActor** Actor, class USceneComponent** visualsToHide, class USoundCue** deathSound, class UParticleSystem** deathParticles, class UPathfinderCollisionComponent** pathColliderToDisable, class UNiagaraSystem** niagaraDeathParticles);
	bool STATIC_IsWeakPoint(class UFSDPhysicalMaterial** Material);
	bool STATIC_IsInRangeOfLocalPlayer(class AActor** toActor, float* MinDistance, float* MaxDistance);
	bool STATIC_IsCloseToLocalPlayer(class AActor** toActor, float* distance);
	int STATIC_GetTotalHeroLevels(class UObject** WorldContextObject, class UClass** CharacterClass);
	struct FGuid STATIC_GetSavegameID(class UClass** objectClass);
	TArray<class APlayerCharacter*> STATIC_GetPlayersInRange(class UObject** WorldContextObject, struct FVector* Origin, float* Radius, bool* MustBeAlive);
	class UItemID* STATIC_GetItemID(class UClass** itemClass);
	float STATIC_GetHeroXP(class UObject** WorldContextObject, class UClass** HeroClass);
	struct FString STATIC_GetHeroSourceName(class UClass** playerClass);
	float STATIC_GetHeroProgress(class UObject** WorldContextObject, class UClass** CharacterClass);
	struct FText STATIC_GetHeroName(class UClass** playerClass);
	int STATIC_GetHeroLevel(class UObject** WorldContextObject, class UClass** CharacterClass);
	class UInventoryList* STATIC_GetHeroInventoryList(class UPlayerCharacterID** characterID);
	struct FHeroInfo STATIC_GetHeroInfo(class UClass** playerClass);
	class UTexture2D* STATIC_GetHeroImageSmall(class UClass** playerClass);
	class UTexture2D* STATIC_GetHeroImageFullSize(class UClass** playerClass);
	class UTexture2D* STATIC_GetHeroImage(class UClass** playerClass);
	struct FLinearColor STATIC_GetHeroColor(class UClass** playerClass);
	class UActorComponent* STATIC_GetComponentFromClass(class UClass** Actor, class UClass** ComponentClass);
	class UActorComponent* STATIC_GetComponentByClass(class AActor** Actor, class UClass** ComponentClass);
	class UPlayerCharacterID* STATIC_GetCharacterID(class UClass** playerClass);
	TArray<class APlayerCharacter*> STATIC_GetAllPlayerCharacters(class UObject** WorldContext);
	struct FVector STATIC_GetActorTargetCenter(class AActor** TargetActor);
	void STATIC_FSDRemoveBlendable(class UPostProcessComponent** PostProcessComponent, TScriptInterface<class UBlendableInterface>* InBlendableObject);
	void STATIC_FSDRemoveAllWidgets(class UObject** WorldContextObject);
	void STATIC_FSDDumpCallStack(struct FString* Msg);
	class APlayerCharacter* STATIC_FindNearestPlayerCharacter(class UObject** WorldContextObject, struct FVector* fromLocation, float* MaxRadius, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* MustHaveLineOfSight);
	struct FVector STATIC_FindLatejoinDroppodLocation(class AFSDGameMode** GameMode);
	class AActor* STATIC_FindClosestEnemyFromLocation(struct FVector* fromLocation, float* Range, bool* LineOfSightCheck, class UObject** WorldContextObject, struct FVector* Offset);
	class AActor* STATIC_FindClosestEnemyFromActor(class AActor** FromActor, float* Range, bool* LineOfSightCheck, struct FVector* Offset);
	float STATIC_EvaluateRuntimeCurve(class UObject** WorldContextObject, struct FRuntimeFloatCurve* Curve, float* Time);
	void STATIC_DamagePlayersInArea(struct FVector* Origin, class AActor** Instigator, float* Damage, float* Radius, class UDamageClass** DamageClass);
	class UHealthComponentBase* STATIC_DamageIfInRange(float* MaxDistance, float* Damage, class AActor** Target, class AActor** Attacker, class UDamageClass** DamageClass);
	void STATIC_DamageAllInAreaExcept(struct FVector* Origin, class AActor** Instigator, float* Damage, float* blastRadius, float* maxDamageRadius, float* minDamagePercent, TArray<class AActor*>* ignoreActors, float* friendlyFireModifier, class UDamageClass** DamageClass);
	void STATIC_DamageAllInArea(struct FVector* Origin, class AActor** Instigator, float* Damage, float* blastRadius, float* maxDamageRadius, float* minDamagePercent, float* friendlyFireModifier, class UDamageClass** DamageClass);
	float STATIC_AddHeroXP(class UObject** WorldContextObject, class UClass** HeroClass, float* amount);
};


// Class FSD.StatusEffectsFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UStatusEffectsFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectsFunctionLibrary");
		return ptr;
	}


	float STATIC_GetMaxResistance(class UClass** StatusEffect);
	class UDamageClass* STATIC_GetDamageClass(class UClass** StatusEffect);
	bool STATIC_CanTrigger(class UClass** StatusEffect, class AActor** OtherActor);
};


// Class FSD.FrontendBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFrontendBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FrontendBlueprintLibrary");
		return ptr;
	}


	void STATIC_OpenURLInExternalBrowser(struct FString* URL);
	EFSDTargetPlatform STATIC_FSDTargetPlatform();
};


// Class FSD.GameModeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameModeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameModeFunctionLibrary");
		return ptr;
	}


	struct FTransform STATIC_FindRandomEscapePodLocation(class UObject** WorldContextObject);
	struct FTransform STATIC_FindEscapePodLocationAtDistance(class UObject** WorldContextObject, float* distance, float* aboveDistanceBias);
};


// Class FSD.FSDConversionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFSDConversionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDConversionLibrary");
		return ptr;
	}


	struct FVector_NetQuantizeNormal STATIC_VectorToNetQuantizeNormal(struct FVector* Vec);
	struct FVector_NetQuantize STATIC_VectorToNetQuantize(struct FVector* Vec);
	struct FVector STATIC_QuatToVector(struct FQuat* Quat);
	struct FRotator STATIC_QuatToRotator(struct FQuat* Quat);
	struct FVector_NetQuantizeNormal STATIC_QuadToNetQuantizeNormal(struct FQuat* Quat);
	struct FVector STATIC_ComponentToWorldLocation(class USceneComponent** Component);
	struct FVector STATIC_ActorToWorldLocation(class AActor** Actor);
};


// Class FSD.ActorStateComponent
// 0x0050 (0x0148 - 0x00F8)
class UActorStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBeginState;                                             // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTickState;                                              // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndState;                                               // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActorStateComponent*                        CurrentState;                                             // 0x0128(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UActorStateComponent*                        NextState;                                                // 0x0130(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UActorStateComponent*                        MasterState;                                              // 0x0138(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              StateActiveTime;                                          // 0x0140(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0144(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ActorStateComponent");
		return ptr;
	}


	void OnRep_CurrentState(class UActorStateComponent** PreviousState);
	bool IsStateActive();
	void GotoState();
};


// Class FSD.FSDUserWidget
// 0x0020 (0x0250 - 0x0230)
class UFSDUserWidget : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDUserWidget");
		return ptr;
	}


	void STATIC_SetTickEnabled(class UUserWidget** Widget, bool* tickEnabled);
	void SetOpacity(float* Alpha);
	void ScaleByBaseResolution();
	void Refresh();
	void ReceiveNewVisibility(ESlateVisibility* NewVisibility);
	void OnCloseMenuReleased(bool* Handled);
	void OnCloseMenuPressed(bool* Handled);
	bool HasCharacter();
	float GetOpacity();
	class AFSDPlayerState* GetFSDPlayerState();
	class AItem* GetEquippedItem();
	float GetBaseResolutionScale();
	void BP_OnRefresh();
};


// Class FSD.ActorTrackingWidget
// 0x0028 (0x0278 - 0x0250)
class UActorTrackingWidget : public UFSDUserWidget
{
public:
	TWeakObjectPtr<class USceneComponent>              TargetComponent;                                          // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              WorldHeightOffset;                                        // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScaleBy;                                                  // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     ScreenMargin;                                             // 0x0260(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                WidgetZOrder;                                             // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0274(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ActorTrackingWidget");
		return ptr;
	}


	void SetTargetComponent(class USceneComponent** Component);
	void SetTarget(class AActor** Actor);
	void OnTargetSet(class AActor** NewTarget);
	void OnTargetDistanceChanged(float* distance);
	void OnShow();
	void OnInViewChanged(bool* inView, float* Angle);
	class AActor* GetTarget();
	struct FVector2D GetRenderTranslation();
	bool STATIC_FindScreenPosition(class APlayerController** PlayerController, struct FVector* WorldLocation, struct FMargin* Margin, struct FVector* ScreenCord, float* Angle);
	class UActorTrackingWidget* STATIC_CreateTrackingWidget(class APlayerController** PlayerController, class UClass** WidgetType, class USceneComponent** TargetComponent);
};


// Class FSD.ActorTrackingComponent
// 0x0010 (0x0270 - 0x0260)
class UActorTrackingComponent : public USceneComponent
{
public:
	bool                                               VisibleOnHoldTAB;                                         // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               VisibleFromStart;                                         // 0x0261(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0262(0x0002) MISSED OFFSET
	TWeakObjectPtr<class UActorTrackingWidget>         Widget;                                                   // 0x0264(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ActorTrackingComponent");
		return ptr;
	}


	void ToggleIcon(bool* Visible);
	void OnHoldTAB(bool* IsDown);
	bool IsIconVisible();
};


// Class FSD.AdicPuddle
// 0x0028 (0x0358 - 0x0330)
class AAdicPuddle : public AActor
{
public:
	class USphereComponent*                            SphereTrigger;                                            // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundBase*                                  SpawnSound;                                               // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      InflictedStatusEffect;                                    // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET
	float                                              LifeTime;                                                 // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0354(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AdicPuddle");
		return ptr;
	}


	void OnPuddleEndOverLap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	void OnPuddleBeginOverLap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
};


// Class FSD.AfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UAfflictionEffect : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AfflictionEffect");
		return ptr;
	}


	bool ShouldInstantiate();
	void ReceiveEndEffect(class UPawnAfflictionComponent** Target);
	void ReceiveBeginEffect(class UPawnAfflictionComponent** Target);
};


// Class FSD.PawnFrozenUniqueAfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UPawnFrozenUniqueAfflictionEffect : public UAfflictionEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PawnFrozenUniqueAfflictionEffect");
		return ptr;
	}

};


// Class FSD.PawnBurningUniqueAfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UPawnBurningUniqueAfflictionEffect : public UAfflictionEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PawnBurningUniqueAfflictionEffect");
		return ptr;
	}

};


// Class FSD.AttachedParticlesAfflictionEffect
// 0x0020 (0x0048 - 0x0028)
class UAttachedParticlesAfflictionEffect : public UAfflictionEffect
{
public:
	class UParticleSystem*                             ParticleEffect;                                           // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UParticleSystem*>                     ParticleEffects;                                          // 0x0030(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	EAfflictionSocket                                  Socket;                                                   // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleToActor;                                             // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AttachedParticlesAfflictionEffect");
		return ptr;
	}

};


// Class FSD.CharacterShoutAfflictionEffect
// 0x0008 (0x0030 - 0x0028)
class UCharacterShoutAfflictionEffect : public UAfflictionEffect
{
public:
	class UDialogDataAsset*                            Shout;                                                    // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterShoutAfflictionEffect");
		return ptr;
	}

};


// Class FSD.SoundAfflictionEffect
// 0x0020 (0x0048 - 0x0028)
class USoundAfflictionEffect : public UAfflictionEffect
{
public:
	class USoundCue*                                   BeginSound;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EndSound;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Attach;                                                   // 0x0038(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FName                                       AttachBone;                                               // 0x003C(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SoundAfflictionEffect");
		return ptr;
	}

};


// Class FSD.AttachMeshesAfflictionEffect
// 0x0018 (0x0040 - 0x0028)
class UAttachMeshesAfflictionEffect : public UAfflictionEffect
{
public:
	TArray<struct FAttachMeshesAfflictionItem>         AttachItems;                                              // 0x0028(0x0010) (Edit, ZeroConstructor)
	class UParticleSystem*                             OnRemoveEffect;                                           // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AttachMeshesAfflictionEffect");
		return ptr;
	}

};


// Class FSD.FrozenAfflictionEffect
// 0x0030 (0x0058 - 0x0028)
class UFrozenAfflictionEffect : public UAfflictionEffect
{
public:
	TArray<struct FFrozenAfflictionItem>               IceParts;                                                 // 0x0028(0x0010) (Edit, ZeroConstructor)
	class UMaterialInterface*                          MaterialOverride;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParticleBone;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  IceMaterials;                                             // 0x0048(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FrozenAfflictionEffect");
		return ptr;
	}

};


// Class FSD.BurningAfflictionEffect
// 0x0008 (0x0030 - 0x0028)
class UBurningAfflictionEffect : public UAfflictionEffect
{
public:
	EFrozenBitsSize                                    FireParticleSize;                                         // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BurningAfflictionEffect");
		return ptr;
	}

};


// Class FSD.StaggeredAfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UStaggeredAfflictionEffect : public UAfflictionEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StaggeredAfflictionEffect");
		return ptr;
	}

};


// Class FSD.BoneParticlesAfflictionEffect
// 0x0018 (0x0040 - 0x0028)
class UBoneParticlesAfflictionEffect : public UAfflictionEffect
{
public:
	TArray<class UParticleSystem*>                     particles;                                                // 0x0028(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	class USoundCue*                                   Sound;                                                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoneParticlesAfflictionEffect");
		return ptr;
	}

};


// Class FSD.AnimatedItemParticleAfflictionEffect
// 0x0018 (0x0040 - 0x0028)
class UAnimatedItemParticleAfflictionEffect : public UAfflictionEffect
{
public:
	EItemCategory                                      ItemCategory;                                             // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class UParticleSystem*                             ParticleEffect;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Socket;                                                   // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimatedItemParticleAfflictionEffect");
		return ptr;
	}

};


// Class FSD.PlayerCharacterMontageAfflictionEffect
// 0x0028 (0x0050 - 0x0028)
class UPlayerCharacterMontageAfflictionEffect : public UAfflictionEffect
{
public:
	class UAnimMontage*                                FP_Montage;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_Montage;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendOut;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FName>                               RandomStarts;                                             // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerCharacterMontageAfflictionEffect");
		return ptr;
	}

};


// Class FSD.FSDPawn
// 0x0048 (0x03D8 - 0x0390)
class AFSDPawn : public APawn
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0390(0x0010) MISSED OFFSET
	class UStatusEffectsComponent*                     StatusEffects;                                            // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemyTemperatureComponent*                  Temperature;                                              // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x03B0(0x0020) (Edit, BlueprintVisible)
	bool                                               IsFrozen;                                                 // 0x03D0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanFlee;                                                  // 0x03D1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsFleeing;                                                // 0x03D2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x03D3(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPawn");
		return ptr;
	}


	void UnFreeze();
	void StopFleeing();
	void StartFleeing(struct FVector* fromLocation);
	void SetAlerted(bool* isAlerted);
	void OnUnFrozen();
	void OnStoppedFleeing();
	void OnStartedFleeing();
	void OnRep_IsFrozen();
	void OnFrozen();
	void OnArmorPartsDestroyedFromRadialDamage(TArray<unsigned char>* destroyedParts);
	void MakeRagdollMesh(class USkeletalMeshComponent** Mesh);
	bool GetIsAlerted();
	class UHealthComponentBase* GetHealthComponent();
	void Freeze();
	void BackOffFromLocation(struct FVector* fromLocation);
	void All_ArmorPartsDestroyed(TArray<unsigned char>* parts);
};


// Class FSD.DeepPathfinderCharacter
// 0x0068 (0x0440 - 0x03D8)
class ADeepPathfinderCharacter : public AFSDPawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET
	class UDeepPathfinderMovement*                     PathfinderMovement;                                       // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       CenterMassSocketName;                                     // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDeepPatherFinderCharacterAfflictionComponent* affliction;                                               // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              AnimationOffset;                                          // 0x0400(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanPlayerStandOn;                                         // 0x0404(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseDormancy;                                              // 0x0405(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0406(0x0002) MISSED OFFSET
	float                                              StaggerDurationMultiplier;                                // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StaggerImunityWindow;                                     // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsHidden;                                                 // 0x0410(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsStaggered;                                              // 0x0411(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0412(0x0006) MISSED OFFSET
	float                                              AttackerRadius;                                           // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0420(0x0010) (ZeroConstructor, Transient)
	float                                              AllowedInFormationChance;                                 // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0434(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepPathfinderCharacter");
		return ptr;
	}


	void TryJoinFormation();
	void SetHidden(bool* shouldHide);
	void OnPausedMovementElapsed();
	void LeaveFormation();
};


// Class FSD.EnemyDeepPathfinderCharacter
// 0x0020 (0x0460 - 0x0440)
class AEnemyDeepPathfinderCharacter : public ADeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0440(0x0008) MISSED OFFSET
	class UEnemyHealthComponent*                       HealthComponent;                                          // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FQueuedMontage                              QueuedMontage;                                            // 0x0450(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyDeepPathfinderCharacter");
		return ptr;
	}


	void OnRep_QueuedMontage();
};


// Class FSD.AFlyingBug
// 0x00D8 (0x0538 - 0x0460)
class AAFlyingBug : public AEnemyDeepPathfinderCharacter
{
public:
	class UEnemyComponent*                             EnemyComponent;                                           // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnSensingComponent*                       Senses;                                                   // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            ExplosionSphere;                                          // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             WingSoundComponent;                                       // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnStartFizzle;                                            // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UAnimSequenceBase*>                   HitReactions;                                             // 0x04A0(0x0010) (Edit, ZeroConstructor)
	struct FVector_NetQuantize                         RagdollImpact;                                            // 0x04B0(0x000C) (Net, Transient)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x04BC(0x001C) MISSED OFFSET
	class AActor*                                      RotateTarget;                                             // 0x04D8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UPhysicsAsset*                               PhysicalAssetAfterDeath;                                  // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           FrozenMaterial;                                           // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPhysicsAsset*                               FrozenAsset;                                              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FrozenDeathSound;                                         // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             FrozenDeathparticles;                                     // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ChatterSound;                                             // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UEnemyRangedAttack*                          RangedAttack;                                             // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FirstHitReactBlendIn;                                     // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OverrideHitReactBlendIn;                                  // 0x051C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistanceForAttackMode;                                    // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinChatterDelay;                                          // 0x0524(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxChatterDelay;                                          // 0x0528(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttackModeRotationSpeed;                                  // 0x052C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0530(0x0001) MISSED OFFSET
	bool                                               UsesAttackStance;                                         // 0x0531(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SetLifeTime;                                              // 0x0532(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AttackStance;                                             // 0x0533(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               LookStraight;                                             // 0x0534(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseDefaultRagdoll;                                        // 0x0535(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0536(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AFlyingBug");
		return ptr;
	}


	void TriggerFrozenRagdoll();
	void StartFizzle();
	void SetExternallyControlled(bool* isExternallyControlled);
	void SetAttackStance(bool* isAttackStance);
	void Ragdoll(bool* applyForce, struct FVector* force);
	void PlayVoice();
	void OnRep_RagdollImpact();
	void OnRagdoll();
	void OnFreezeImpact(class UPrimitiveComponent** HitComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, struct FVector* NormalImpulse, struct FHitResult* Hit);
	void OnDamaged(float* amount);
	void OnBugDeath(class UHealthComponentBase** Health);
	float GetMidZpointFromCielingAndFloor(float* distanceFromCieling, float* distanceFromFloor);
	bool GetIsInAttackStance();
	void AlertNearbyEnemies();
};


// Class FSD.EnemyAnimInstance
// 0x0050 (0x02C0 - 0x0270)
class UEnemyAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0270(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMeleeAttackNotify;                                      // 0x0278(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopLeadingNotify;                                      // 0x0288(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIsAttackingChanged;                                     // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               IsAttacking;                                              // 0x02A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsAlive;                                                  // 0x02A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x02AA(0x0002) MISSED OFFSET
	float                                              RandomStartPosition;                                      // 0x02AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UHealthComponentBase*                        HealthComponent;                                          // 0x02B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyAnimInstance");
		return ptr;
	}


	bool IsSlotPlayingAnyAnimation(struct FName* SlotNodeName);
	class USkeletalMeshComponent* GetSkeletalMesh();
};


// Class FSD.SimpleMovingEnemyAnimInstance
// 0x0030 (0x02F0 - 0x02C0)
class USimpleMovingEnemyAnimInstance : public UEnemyAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET
	float                                              WalkCycleSpeed;                                           // 0x02C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartMovingSpeed;                                         // 0x02CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StopMovingSpeed;                                          // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkCycleMinRate;                                         // 0x02D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkCyclePlayRate;                                        // 0x02D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MeshScale;                                                // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x02E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x02E1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SimpleMovingEnemyAnimInstance");
		return ptr;
	}


	void SetMeshScale(float* NewScale);
};


// Class FSD.FlyingBugAnimInstance
// 0x0000 (0x02F0 - 0x02F0)
class UFlyingBugAnimInstance : public USimpleMovingEnemyAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlyingBugAnimInstance");
		return ptr;
	}

};


// Class FSD.AIFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AIFunctionLibrary");
		return ptr;
	}


	void STATIC_SetAICanSense(bool* canSense);
	int STATIC_MakeEnemiesFleeFromArea(class UObject** WorldContextObject, struct FVector* Center, float* Radius, int* maxEnemiesAffected);
	void STATIC_MakeEnemiesBackOutOfArea(class UObject** WorldContextObject, struct FVector* Center, float* Radius);
	bool STATIC_IsEnemyAlertet(class APawn** enemy);
	class APlayerCharacter* STATIC_GetPlayerTarget(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* accountForAttackers, class AActor** ignoreTarget, bool* IsFlying);
	class UAttackerPositioningComponent* STATIC_GetAttackableTarget(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* accountForAttackers, class AActor** ignoreTarget, bool* IsFlying);
	class APlayerCharacter* STATIC_ConsiderChangingTarget(class APlayerCharacter** CurrentTarget, class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* CurrentTargetMustBeAlive, bool* IsFlying);
	void STATIC_AlertEnemy(class APawn** enemy);
	void STATIC_AlertEnemiesInRange(class UObject** WorldContextObject, struct FVector* Origin, float* Range, class APawn** alerter);
};


// Class FSD.EnemyGroupDescriptor
// 0x0020 (0x0050 - 0x0030)
class UEnemyGroupDescriptor : public UDataAsset
{
public:
	TArray<struct FEnemyGroupDescriptorItem>           Enemies;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FRandInterval                               Diversity;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyGroupDescriptor");
		return ptr;
	}

};


// Class FSD.AmberEventEnemyPool
// 0x0018 (0x0068 - 0x0050)
class UAmberEventEnemyPool : public UEnemyGroupDescriptor
{
public:
	float                                              MaxTimeBetweenSpawn;                                      // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTimeBetweenSpawn;                                      // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxEnemyCap;                                              // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AmbersNeededdToComplete;                                  // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AmbersNeededOnePlayer;                                    // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmberEventEnemyPool");
		return ptr;
	}

};


// Class FSD.GameEvent
// 0x0148 (0x0478 - 0x0330)
class AGameEvent : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    EventTriggeredDelegate;                                   // 0x0338(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    EventFinishedDelegate;                                    // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StageCompleteDelegate;                                    // 0x0358(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    ProgressChangedDelegate;                                  // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    TimeProgressChanged;                                      // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ObjectivesPerStageChanged;                                // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AEventStarterButton*>                 StarterObjects;                                           // 0x0398(0x0010) (ZeroConstructor)
	bool                                               bGameEventSetup;                                          // 0x03A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	struct FText                                       EventName;                                                // 0x03B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       ObjectiveText;                                            // 0x03C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       AnalyticsName;                                            // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UDialogDataAsset*>                    StageCompleteShouts;                                      // 0x03E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x03F8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UChildActorComponent*                        StartEventObject;                                         // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDialogDataAsset*                            EventTriggeredShout;                                      // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            EventFinishedShout;                                       // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            EventFailedShout;                                         // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EventTriggeredShoutDelay;                                 // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EventFinishedShoutDelay;                                  // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StageProgress;                                            // 0x0440(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeLimit;                                                // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DelayUITime;                                              // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x044C(0x0008) MISSED OFFSET
	int                                                objectivesPerStage;                                       // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0458(0x0004) MISSED OFFSET
	bool                                               EventStartersActive;                                      // 0x045C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               StopScriptedWavesWhileActive;                             // 0x045D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               StopNormalWavesWhileActive;                               // 0x045E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               EventStarted;                                             // 0x045F(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               FailedEvent;                                              // 0x0460(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShowRemainingTimeOnHUD;                                   // 0x0461(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ShowScoreStatusOnHUD;                                     // 0x0462(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0463(0x0001) MISSED OFFSET
	bool                                               SkipEventStarters;                                        // 0x0464(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	TArray<class AActor*>                              EventParticipants;                                        // 0x0468(0x0010) (Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameEvent");
		return ptr;
	}


	void TriggerEvent();
	void StartShout();
	void StageObjectiveCompleted();
	class ARessuplyPod* SpawnEventPod(class UClass** podClass, struct FVector* aSpawnLocation, int* Delay);
	class AActor* SpawnEventActor(class UClass** eventActorClass, struct FTransform* aSpawnLocation);
	void SetStageProgress(float* Progress);
	void SetObjectivesPerStage(int* objectivesPerStage);
	void RemoveParticipant(class AActor** Participant);
	void OnStarterObjectUsed(class AEventStarterButton** eventStarter);
	void OnStageProgress(float* Progress);
	void OnStageComplete(int* Stage);
	void OnRep_StageProgress();
	void OnRep_ObjectivesPerStage();
	void OnRep_IsEventStartersActive();
	void OnRep_FailedEvent();
	void OnRep_EventStarted();
	void OnRep_EventParticipants();
	void OnEventTriggered();
	void OnEventFinished(bool* eventSuccess);
	void OnEventBooted();
	bool IsEventActive();
	float GetStageProgress();
	bool GetShowTimeOnHUD();
	bool GetShowScoreOnHUD();
	struct FText GetObjectiveText();
	int GetObjectivesPerStage();
	struct FText GetEventName();
	bool GetEventFailed();
	float GetDelayUITime();
	void EndShout();
	struct FTransform DebreePositionPoint(class AProceduralSetup** setup, struct FVector* fromLocation, float* Radius, class UDebrisPositioning** DebrisPositioning, class UClass** terrainPlacement, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve, float* maxPathLength);
	void BootUpEvent();
	void AddStageProgress(float* progressToAdd);
};


// Class FSD.AmberEvent
// 0x0040 (0x04B8 - 0x0478)
class AAmberEvent : public AGameEvent
{
public:
	class UDamageComponent*                            EndExplosionDamage;                                       // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UAmberEventEnemyPool*>                EnemyPools;                                               // 0x0480(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AEnemyDeepPathfinderCharacter*>       spawnedEnemies;                                           // 0x0490(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04A0(0x0008) MISSED OFFSET
	TWeakObjectPtr<class UAmberEventEnemyPool>         CurrentPool;                                              // 0x04A8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialDelayBeforeSpawn;                                  // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnRange;                                            // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmberEvent");
		return ptr;
	}


	void OnSpawnedDeath(class UHealthComponentBase** spawnedHealthComponent);
};


// Class FSD.AmmoCountWidget
// 0x0020 (0x0250 - 0x0230)
class UAmmoCountWidget : public UUserWidget
{
public:
	class APlayerCharacter*                            Character;                                                // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AItem*                                       Item;                                                     // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UItemAggregator*                             Aggregator;                                               // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0248(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoCountWidget");
		return ptr;
	}


	void OnVisibleChanged(bool* Visible, bool* showClipCount);
	void OnTotalVisibleChanged(bool* Visible);
	void OnTotalChanged(int* Total);
	void OnItemTotalChanged(int* Value);
	void OnItemEquipped(class AItem** NewItem);
	void OnItemAmountChanged(int* Value);
	void OnAmountChanged(int* count);
	void DoItemEquipped();
};


// Class FSD.Item
// 0x00E0 (0x0410 - 0x0330)
class AItem : public AActor
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0330(0x0030) MISSED OFFSET
	struct FVector                                     FPCameraOffset;                                           // 0x0360(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x036C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x036D(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0370(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemID*                                     ItemID;                                                   // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class APlayerCharacter*                            Character;                                                // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UUpgradableItemComponent*                    UpgradableItem;                                           // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      CameraShake;                                              // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CameraShakeOnStartUsing;                                  // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CameraShakeOnEquip;                                       // 0x03A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x03A2(0x000E) MISSED OFFSET
	class UCurveFloat*                                 HeatCurve;                                                // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CooldownRate;                                             // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnjamDuration;                                            // 0x03BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03C0(0x0004) MISSED OFFSET
	float                                              CurrentTemperature;                                       // 0x03C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioTemperature;                                         // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TemperatureFloatParam;                                    // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             TemperatureAudioComponent;                                // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               Overheated;                                               // 0x03E0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x03E1(0x0007) MISSED OFFSET
	class UDialogDataAsset*                            ShoutOverheated;                                          // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAimAssistEnabled;                                        // 0x03F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03F1(0x0003) MISSED OFFSET
	float                                              MovementRateWhileUsing;                                   // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanPlayLedgeClimbWhileUsing;                              // 0x03F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanInspectItem;                                           // 0x03F9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x03FA(0x0006) MISSED OFFSET
	class UClass*                                      CustomIconWidget;                                         // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsEquipped;                                               // 0x0408(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUsing;                                                  // 0x0409(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x040A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Item");
		return ptr;
	}


	void UpdateSkin();
	void Server_StartUsing(bool* IsUsing);
	void RecieveUnequipped();
	void RecieveStopUsing();
	void RecieveStartUsing();
	void RecieveEquipped();
	void RecieveCycledItem();
	void Recieve_UpdateMeshses(bool* IsFirstPerson);
	void ReceiveResupply(float* percentage);
	void Receive_Overheated();
	class UStaticMeshComponent* Receive_GetTPAnimationEventMesh();
	class UFirstPersonStaticMeshComponent* Receive_GetFPAnimationEventMesh();
	void OnTemperatureChanged(float* Temperature, bool* Overheated);
	void OnSkinChanged(class USkinEffect** Skin);
	void OnRep_IsUsing(bool* OldValue);
	void OnOwnerDestroyed(class AActor** owningActor);
	bool IsLocallyControlled();
	bool IsFirstPerson();
	class UClass* GetWeaponViewClass();
	struct FText GetItemName();
	class UTexture2D* GetItemIconLine();
	class UTexture2D* GetItemIconBG();
	class AItem* STATIC_GetItemDefaultObject(class UClass** itemClass);
	struct FText GetItemCategory();
	class USceneComponent* GetHeatingAudioSceneComponent();
	class UItemCharacterAnimationSet* GetCharacterAnimationSet();
	struct FString GetAnalyticsItemName();
	struct FString GetAnalyticsItemCategory();
	void AddedToInventory(class APlayerCharacter** ItemOwner);
};


// Class FSD.AnimatedItem
// 0x0060 (0x0470 - 0x0410)
class AAnimatedItem : public AItem
{
public:
	class USkinnableComponent*                         Skinnable;                                                // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerAnimInstance*                         FPAnimInstance;                                           // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerAnimInstance*                         TPAnimInstance;                                           // 0x0420(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class USkeletalMeshComponent*                      FPMesh;                                                   // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      TPMesh;                                                   // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMesh*                               DefaultFPMesh;                                            // 0x0438(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USkeletalMesh*                               DefaultTPMesh;                                            // 0x0440(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAnimMontage*                                FP_EquipAnimation;                                        // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_EquipAnimation;                                        // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EquipDuration;                                            // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	class UItemCharacterAnimationSet*                  CharacterAnimationSet;                                    // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0468(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimatedItem");
		return ptr;
	}


	struct FTransform GetMuzzle();
	class USkeletalMeshComponent* GetItemMesh();
};


// Class FSD.AmmoDrivenWeapon
// 0x02A0 (0x0710 - 0x0470)
class AAmmoDrivenWeapon : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0470(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnClipCountChanged;                                       // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadingEvent;                                         // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStoppedUsingEvent;                                      // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UWeaponFireComponent*                        WeaponFire;                                               // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAmmoDriveWeaponAggregator*                  Aggregator;                                               // 0x04C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               LoopFireAnimation;                                        // 0x04D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04D1(0x0003) MISSED OFFSET
	float                                              LoopFireAnimationBlendoutTime;                            // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_FireAnimation;                                         // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_FireAnimation;                                         // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_ReloadAnimation;                                       // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FItemAnimationItem                          OverheatAnimation;                                        // 0x04F0(0x0018) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FItemAnimationItem>                  GunslingAnimations;                                       // 0x0508(0x0010) (Edit, ZeroConstructor)
	class UAnimMontage*                                TP_ReloadAnimation;                                       // 0x0518(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_Fire;                                                 // 0x0520(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_FireLastBullet;                                       // 0x0528(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_Reload;                                               // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_Reload_TP;                                            // 0x0538(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MuzzleParticles;                                          // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TPMuzzleParticles;                                        // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TracerParticles;                                          // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TrailParticles;                                           // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x0560(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TracerSpeed;                                              // 0x0564(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             CasingParticles;                                          // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ULightComponent*                             MuzzleFlashLight;                                         // 0x0570(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FRuntimeFloatCurve                          MuzzleFlashLightCurve;                                    // 0x0578(0x0088) (Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0600(0x0008) MISSED OFFSET
	class USoundCue*                                   FireSound;                                                // 0x0608(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   RicochetSound;                                            // 0x0610(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RicochetParticle;                                         // 0x0618(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FireSoundDelayToTail;                                     // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0624(0x000C) MISSED OFFSET
	class USoundCue*                                   FireSoundTail;                                            // 0x0630(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFireSoundTail2D;                                        // 0x0638(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0639(0x0007) MISSED OFFSET
	class UForceFeedbackEffect*                        FireForceFeedbackEffect;                                  // 0x0640(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             FireSoundInstance;                                        // 0x0648(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              FireSoundFadeDuration;                                    // 0x0650(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0654(0x0004) MISSED OFFSET
	class USoundCue*                                   ReloadSound;                                              // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BulletsRemainingForNearEmptySound;                        // 0x0660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0664(0x0004) MISSED OFFSET
	class USoundCue*                                   NearEmptySound;                                           // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   WeaponEmptySound;                                         // 0x0670(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutShotFired;                                           // 0x0678(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutOutOfAmmo;                                           // 0x0680(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutReloading;                                           // 0x0688(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAmmo;                                                  // 0x0690(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ClipSize;                                                 // 0x0694(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShotCost;                                                 // 0x0698(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RateOfFire;                                               // 0x069C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BurstCount;                                               // 0x06A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurstCycleTime;                                           // 0x06A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReloadDuration;                                           // 0x06A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AmmoCount;                                                // 0x06AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ClipCount;                                                // 0x06B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SupplyStatusWeight;                                       // 0x06B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CycleTimeLeft;                                            // 0x06B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	float                                              ReloadTimeLeft;                                           // 0x06C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AutomaticReload;                                          // 0x06C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanReload;                                                // 0x06C5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x06C6(0x0002) MISSED OFFSET
	struct FRecoilSettings                             RecoilSettings;                                           // 0x06C8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               HasAutomaticFire;                                         // 0x06F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFiring;                                                 // 0x06F1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x18];                                      // 0x06F2(0x0018) MISSED OFFSET
	EAmmoWeaponState                                   WeaponState;                                              // 0x070A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x5];                                       // 0x070B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoDrivenWeapon");
		return ptr;
	}


	void Upgraded_Blueprint_Implementation(TArray<class UItemUpgrade*>* Upgrades);
	void Server_StopReload();
	void Server_ReloadWeapon();
	void Server_PlayBurstFire(unsigned char* shotCount);
	void Server_Gunsling(unsigned char* Index);
	void RecieveFiredWeapon();
	void Receive_ReloadEnd();
	void Receive_ReloadBegin();
	void Receive_IsFiringChanged(bool* NewValue);
	void OnWeaponFireEnded();
	void OnWeaponFired(struct FVector* Location);
	void OnRicochet(struct FVector* Origin, struct FVector* Location, struct FVector* Normal);
	void OnRep_IsFiring();
	bool IsClipFull();
	void InstantlyReload();
	void Client_RefillAmmo(float* percentage);
	void All_StopReload();
	void All_StartReload();
	void All_PlayBurstFire(unsigned char* shotCount);
	void All_Gunsling(unsigned char* Index);
};


// Class FSD.ItemAggregator
// 0x0018 (0x0110 - 0x00F8)
class UItemAggregator : public UActorComponent
{
public:
	struct FText                                       CounterText;                                              // 0x00F8(0x0018) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemAggregator");
		return ptr;
	}


	void UnbindAllEvents();
};


// Class FSD.ClipBasedItemAggregator
// 0x0078 (0x0188 - 0x0110)
class UClipBasedItemAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnClipAmountChanged;                                      // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTotalAmountChanged;                                     // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClipAndTotalChanged;                                    // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadTimeChanged;                                      // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadComplete;                                         // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadStarted;                                          // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmmoCapacityChanged;                                 // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               ShowTotalAmount;                                          // 0x0180(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ClipBasedItemAggregator");
		return ptr;
	}


	void ReloadStarted();
	void ReloadComplete();
	int GetTotalAmount();
	int GetClipAmount();
};


// Class FSD.AmmoDriveWeaponAggregator
// 0x0008 (0x0190 - 0x0188)
class UAmmoDriveWeaponAggregator : public UClipBasedItemAggregator
{
public:
	class AAmmoDrivenWeapon*                           Weapon;                                                   // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoDriveWeaponAggregator");
		return ptr;
	}

};


// Class FSD.AmmoDrivenWeaponAnimInstance
// 0x0010 (0x0280 - 0x0270)
class UAmmoDrivenWeaponAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFiring;                                                 // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0271(0x0003) MISSED OFFSET
	float                                              ClipFullPercentage;                                       // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoDrivenWeaponAnimInstance");
		return ptr;
	}


	bool IsFull();
	bool IsEmpty();
};


// Class FSD.PlatformGunAnimInstance
// 0x0010 (0x0290 - 0x0280)
class UPlatformGunAnimInstance : public UAmmoDrivenWeaponAnimInstance
{
public:
	float                                              LerpSpeed;                                                // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiredSpinRate;                                            // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlatformGunAnimInstance");
		return ptr;
	}


	void WeaponFired();
};


// Class FSD.AreaDamageComponent
// 0x0010 (0x0270 - 0x0260)
class UAreaDamageComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	float                                              DamageInterval;                                           // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AreaDamageComponent");
		return ptr;
	}


	void EndOverlap(class AActor** MyActor, class AActor** OtherActor);
	void BeginOverlap(class AActor** MyActor, class AActor** OtherActor);
};


// Class FSD.BaseArmorDamageComponent
// 0x0030 (0x0128 - 0x00F8)
class UBaseArmorDamageComponent : public UActorComponent
{
public:
	bool                                               ArmorDamageEnabled;                                       // 0x00F8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	TArray<class UParticleSystem*>                     ArmorBreakParticles;                                      // 0x0100(0x0010) (Edit, ZeroConstructor)
	TArray<class UFSDPhysicalMaterial*>                ArmorPhysMats;                                            // 0x0110(0x0010) (Edit, ZeroConstructor)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BaseArmorDamageComponent");
		return ptr;
	}

};


// Class FSD.SimpleArmorDamageComponent
// 0x0068 (0x0190 - 0x0128)
class USimpleArmorDamageComponent : public UBaseArmorDamageComponent
{
public:
	struct FScriptMulticastDelegate                    OnRadialArmorPartsDestroyedEvent;                         // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              ArmorStrength;                                            // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TMap<struct FName, struct FDestructableBodypartItem> PhysBoneToArmor;                                          // 0x0140(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SimpleArmorDamageComponent");
		return ptr;
	}


	void DamageArmor_All(TArray<unsigned char>* parts);
};


// Class FSD.ArmorHealthDamageComponent
// 0x0068 (0x0190 - 0x0128)
class UArmorHealthDamageComponent : public UBaseArmorDamageComponent
{
public:
	struct FScriptMulticastDelegate                    OnArmorPartDestroyedEvent;                                // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TMap<struct FName, struct FArmorHealthItem>        PhysBoneToArmor;                                          // 0x0138(0x0050) (Edit, ZeroConstructor)
	uint32_t                                           ArmorDamageIndex;                                         // 0x0188(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AffectedByAmorBreak;                                      // 0x018C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x018D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorHealthDamageComponent");
		return ptr;
	}


	void OnRep_ArmorDamageIndex(uint32_t* OldValue);
};


// Class FSD.ArmorPiece
// 0x0078 (0x03A8 - 0x0330)
class AArmorPiece : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class UUpgradableGearComponent*                    Upgradable;                                               // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TMap<class UPawnStat*, float>                      StatModifiers;                                            // 0x0340(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FGuid                                       SavegameID;                                               // 0x0390(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WeaponPreviewClass;                                       // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorPiece");
		return ptr;
	}


	class UClass* GetWeaponViewClass();
	class AArmorPiece* STATIC_GetArmorPieceDefaultObject(class UClass** armorPieceClass);
};


// Class FSD.ThrowableItem
// 0x0068 (0x04D8 - 0x0470)
class AThrowableItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	class UClass*                                      ThrowableClass;                                           // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPThrowMontage;                                           // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPThrowMontage;                                           // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowVelocity;                                            // 0x0490(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InheritOwnerVelocityScale;                                // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowAngle;                                               // 0x0498(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CooldownAfterThrow;                                       // 0x049C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CooldownAfterDetonation;                                  // 0x04A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowDelay;                                               // 0x04A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowZOffset;                                             // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CooldownLeft;                                             // 0x04AC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x04B0(0x0010) (ZeroConstructor, Transient)
	TArray<TWeakObjectPtr<class AThrowableActor>>      ThrownActors;                                             // 0x04C0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ThrowableItem");
		return ptr;
	}


	void Simulate_Throw(class UClass** ActorClass);
	void Server_Throw(class UClass** ActorClass);
	void ReceiveItemThrown(class AThrowableActor** thrownActor);
	void ReceiveItemSpawned(class AThrowableActor** thrownActor);
	void OnThrownActorDestroyed(class AActor** Actor);
};


// Class FSD.ArmorRegeneratorItem
// 0x0070 (0x0548 - 0x04D8)
class AArmorRegeneratorItem : public AThrowableItem
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D8(0x0010) MISSED OFFSET
	class UCapacityHoldingItemAggregator*              ChargeCapacity;                                           // 0x04E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCapacityHoldingItemAggregator*              CarryCapacity;                                            // 0x04F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              RechargeDuration;                                         // 0x04F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                UnchargedCount;                                           // 0x04FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RechargeProgress;                                         // 0x0500(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SupplyStatusWeight;                                       // 0x0504(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCoolDownProgressStyle                      RechargeProgressUI;                                       // 0x0508(0x0040) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorRegeneratorItem");
		return ptr;
	}


	void ReceiveGeneratorReturned();
	void ReceiveGeneratorRechargeProgress(float* Progress);
	void ReceiveGeneratorRecharged();
	void OnRep_UnchargedCount(int* OldCount);
	bool GetIsRecharging();
	void GeneratorReturned();
};


// Class FSD.ThrowableActor
// 0x0010 (0x0340 - 0x0330)
class AThrowableActor : public AActor
{
public:
	class UProjectileMovementComponent*                Movement;                                                 // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x0338(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IgnoreFellOutOfWorld;                                     // 0x0339(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x033A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ThrowableActor");
		return ptr;
	}


	void ReceiveHitObject();
	void OnRep_IsMoving();
};


// Class FSD.ArmorRegeneratorActor
// 0x0010 (0x0350 - 0x0340)
class AArmorRegeneratorActor : public AThrowableActor
{
public:
	float                                              GeneratorRadius;                                          // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              DeployDelay;                                              // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPushStatusEffectOnExit;                                  // 0x0348(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0349(0x0003) MISSED OFFSET
	float                                              GeneratorLifetime;                                        // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorRegeneratorActor");
		return ptr;
	}

};


// Class FSD.AsyncLevelPersistanceActor
// 0x0020 (0x0350 - 0x0330)
class AAsyncLevelPersistanceActor : public AActor
{
public:
	TArray<class UObject*>                             References;                                               // 0x0330(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AsyncLevelPersistanceActor");
		return ptr;
	}

};


// Class FSD.AsyncManager
// 0x0028 (0x0050 - 0x0028)
class UAsyncManager : public UObject
{
public:
	TArray<class UObject*>                             PermanentReferences;                                      // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0038(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AsyncManager");
		return ptr;
	}


	void AsyncLoadAssets(TArray<struct FSoftObjectPath>* Items, EAsyncPersistence* persistence, struct FScriptDelegate* OnLoadComplete, EAsyncLoadPriority* Priority);
	void AsyncLoadAsset(struct FSoftObjectPath* Item, EAsyncPersistence* persistence, struct FScriptDelegate* OnLoadComplete, EAsyncLoadPriority* Priority);
};


// Class FSD.AttackerManagerComponent
// 0x0010 (0x0108 - 0x00F8)
class UAttackerManagerComponent : public UActorComponent
{
public:
	TArray<class UAttackerPositioningComponent*>       Components;                                               // 0x00F8(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AttackerManagerComponent");
		return ptr;
	}

};


// Class FSD.AttackerPositioningComponent
// 0x0070 (0x0168 - 0x00F8)
class UAttackerPositioningComponent : public UActorComponent
{
public:
	TArray<struct FAttackerInfo>                       Attackers;                                                // 0x00F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<int>                                        FreePositions;                                            // 0x0108(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FAttackerInfo>                       FlyingAttackers;                                          // 0x0118(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<int>                                        FlyingFreePositions;                                      // 0x0128(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	float                                              CharacterPersonalSphere;                                  // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CharacterHalfHeight;                                      // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CostModifier;                                             // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x0144(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AttackerPositioningComponent");
		return ptr;
	}


	void UnregisterAttacker(class AActor** Attacker, bool* IsFlying);
	void RegisterAttacker(class AActor** Attacker, bool* IsFlying);
	void OnFlyingAttackerDeath(class UHealthComponentBase** HealthComponent);
	void OnAttackerDeath(class UHealthComponentBase** HealthComponent);
	struct FVector GetFlyingAttackerPosition(class AActor** Attacker, float* AttackerRadius);
	struct FVector GetAttackerPosition(class AActor** Attacker, float* AttackerRadius);
};


// Class FSD.PlayerAttackPositionComponent
// 0x0000 (0x0168 - 0x0168)
class UPlayerAttackPositionComponent : public UAttackerPositioningComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerAttackPositionComponent");
		return ptr;
	}

};


// Class FSD.ObjectAttackerPositioning
// 0x0008 (0x0170 - 0x0168)
class UObjectAttackerPositioning : public UAttackerPositioningComponent
{
public:
	class UHealthComponentBase*                        Health;                                                   // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ObjectAttackerPositioning");
		return ptr;
	}

};


// Class FSD.EnemyAttackerPositioningComponent
// 0x0000 (0x0168 - 0x0168)
class UEnemyAttackerPositioningComponent : public UAttackerPositioningComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyAttackerPositioningComponent");
		return ptr;
	}

};


// Class FSD.AudioFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAudioFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AudioFunctionLibrary");
		return ptr;
	}


	float STATIC_SetSoundClassVolume(class USoundClass** SoundClass, float* Volume);
	void STATIC_PushTimedSoundMix(class UObject** contextObject, class USoundMix** mix, float* Duration);
	float STATIC_GetSoundClassVolume(class USoundClass** SoundClass);
};


// Class FSD.SoundClassWidget
// 0x0000 (0x0230 - 0x0230)
class USoundClassWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SoundClassWidget");
		return ptr;
	}

};


// Class FSD.AutoCannon
// 0x00C8 (0x07D8 - 0x0710)
class AAutoCannon : public AAmmoDrivenWeapon
{
public:
	float                                              StartingFireRate;                                         // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFireRate;                                              // 0x0714(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          FireRateCurve;                                            // 0x0718(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              FireTimeReductionScale;                                   // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FireTimeIncreaseScale;                                    // 0x07A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFireTimeCap;                                           // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageBonusAtFullROF;                                     // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               StatusEffectAtFullROF;                                    // 0x07B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x07B1(0x0003) MISSED OFFSET
	float                                              FireTimeOffsetForMaxRateOfFireBonus;                      // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartLoopingSoundAt;                                      // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07BC(0x0004) MISSED OFFSET
	class UClass*                                      StatusAtFullROF;                                          // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_Fire_3;                                               // 0x07C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurrentFireTime;                                          // 0x07D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoCannon");
		return ptr;
	}


	void Server_SetStatusActive(bool* IsActive);
};


// Class FSD.AutoCannonAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UAutoCannonAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoCannonAnimInstance");
		return ptr;
	}

};


// Class FSD.AutoCarverComponent
// 0x0030 (0x0640 - 0x0610)
class UAutoCarverComponent : public UStaticMeshComponent
{
public:
	float                                              Frequency;                                                // 0x0610(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExpensiveNoise;                                           // 0x0614(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceMoved;                                         // 0x0618(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x061C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x061D(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCarveDoneEvent;                                         // 0x0620(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0630(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoCarverComponent");
		return ptr;
	}


	void ForceCarve();
};


// Class FSD.STLMeshCarverComponent
// 0x0010 (0x0590 - 0x0580)
class USTLMeshCarverComponent : public UPrimitiveComponent
{
public:
	class USTLMeshCarver*                              MeshCarver;                                               // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0588(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0589(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.STLMeshCarverComponent");
		return ptr;
	}

};


// Class FSD.MeshCarverComponent
// 0x0010 (0x0620 - 0x0610)
class UMeshCarverComponent : public UStaticMeshComponent
{
public:
	ECarveFilterType                                   Filter;                                                   // 0x0610(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0611(0x0003) MISSED OFFSET
	float                                              ExpensiveNoise;                                           // 0x0614(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0618(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MeshCarverComponent");
		return ptr;
	}


	void Carve();
};


// Class FSD.LevelGenerationCarverComponent
// 0x0030 (0x05B0 - 0x0580)
class ULevelGenerationCarverComponent : public UPrimitiveComponent
{
public:
	class UStaticMesh*                                 ConvexCarver;                                             // 0x0580(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMeshCarver*                           StaticMeshCarver;                                         // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0598(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0599(0x0003) MISSED OFFSET
	float                                              ConvexExpensiveNoise;                                     // 0x059C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveOptionsCellSize                              CarveCellSize;                                            // 0x05A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x05A1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LevelGenerationCarverComponent");
		return ptr;
	}

};


// Class FSD.InstantMeshCarver
// 0x0030 (0x0360 - 0x0330)
class AInstantMeshCarver : public AActor
{
public:
	class UStaticMeshComponent*                        CarvingMesh;                                              // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              CarvingMeshExpensiveNoise;                                // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveOptionsCellSize                              CarvingMeshExpensiveNoiseCellSize;                        // 0x033C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x033D(0x0003) MISSED OFFSET
	class USTLMeshCarver*                              STLCarvingMesh;                                           // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMeshCarver*                           StaticMeshCarver;                                         // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0358(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0359(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InstantMeshCarver");
		return ptr;
	}

};


// Class FSD.RandomizedInstantMeshCarver
// 0x0048 (0x0378 - 0x0330)
class ARandomizedInstantMeshCarver : public AActor
{
public:
	TArray<class UStaticMesh*>                         CarvingMeshes;                                            // 0x0330(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<class USTLMeshCarver*>                      STLCarvingMeshes;                                         // 0x0340(0x0010) (Edit, ZeroConstructor)
	TArray<class UStaticMeshCarver*>                   StaticMeshCarvers;                                        // 0x0350(0x0010) (Edit, ZeroConstructor)
	struct FRandRange                                  RandomScale;                                              // 0x0360(0x0008) (Edit)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0370(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0371(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomizedInstantMeshCarver");
		return ptr;
	}

};


// Class FSD.CapacityBasedItemAggregator
// 0x0078 (0x0188 - 0x0110)
class UCapacityBasedItemAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnCurrentAmountChanged;                                   // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmountChanged;                                       // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClipAndTotalChanged;                                    // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadTimeChanged;                                      // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadComplete;                                         // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadStarted;                                          // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmmoCapacityChanged;                                 // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               showClipCount;                                            // 0x0180(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CapacityBasedItemAggregator");
		return ptr;
	}


	void ReloadStarted();
	void ReloadComplete();
	int GetMaxAmount();
	int GetCurrentAmount();
};


// Class FSD.AutoMinerAggregator
// 0x0008 (0x0190 - 0x0188)
class UAutoMinerAggregator : public UCapacityBasedItemAggregator
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoMinerAggregator");
		return ptr;
	}

};


// Class FSD.DualAnimatedItem
// 0x0058 (0x0468 - 0x0410)
class ADualAnimatedItem : public AItem
{
public:
	class UAnimInstance*                               FPAnimInstance;                                           // 0x0410(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerAnimInstance*                         TPAnimInstance;                                           // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class USkeletalMeshComponent*                      FPRMesh;                                                  // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      FPLMesh;                                                  // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      TPRMesh;                                                  // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      TPLMesh;                                                  // 0x0438(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAnimMontage*                                FP_EquipAnimation;                                        // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_EquipAnimation;                                        // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EquipDuration;                                            // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0454(0x0004) MISSED OFFSET
	class UItemCharacterAnimationSet*                  CharacterAnimationSet;                                    // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0460(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DualAnimatedItem");
		return ptr;
	}


	class USkeletalMeshComponent* GetRItemMesh();
	class USkeletalMeshComponent* GetLItemMesh();
};


// Class FSD.AutoMinerItem
// 0x0120 (0x0588 - 0x0468)
class AAutoMinerItem : public ADualAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0468(0x0018) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAutoMinerAggregator*                        Aggregator;                                               // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAnimMontage*                                FPMineMontage;                                            // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPMineMontage;                                            // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPOverheat;                                               // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPOverheat;                                               // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPGunsling;                                               // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPGunsling;                                               // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       MiningSpeedAudioParamterName;                             // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DrillParticles;                                           // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        DrillRumble;                                              // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlockParticlesScaleFP;                                    // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlockParticlesScaleTP;                                    // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EAutoMiningState                                   State;                                                    // 0x04E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04E9(0x0003) MISSED OFFSET
	float                                              MovementPenalty;                                          // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MiningRate;                                               // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HeatReductionPerKill;                                     // 0x04F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CarveSize;                                                // 0x04F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveNoise;                                               // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarverRayCastLength;                                      // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeToNextMine;                                           // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentDrillSpeed;                                        // 0x0510(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DamageDistance;                                           // 0x0514(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FriendlyDamageRadius;                                     // 0x051C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageRate;                                               // 0x0520(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x0524(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0528(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x0538(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MaxFuel;                                                  // 0x053C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Fuel;                                                     // 0x0540(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FuelUsePerDig;                                            // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FuelUsePerMelee;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SupplyStatusWeight;                                       // 0x054C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutOutOfFuel;                                           // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FHitResult>                          HitCache;                                                 // 0x0558(0x0010) (ZeroConstructor, Transient)
	TArray<struct FAutoMinerDamageItem>                DamageCache;                                              // 0x0568(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0578(0x0008) MISSED OFFSET
	bool                                               IsMining;                                                 // 0x0580(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               IsGunslinging;                                            // 0x0581(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0582(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoMinerItem");
		return ptr;
	}


	void Server_StopMining();
	void Server_StartMining();
	void Server_DoDamage(TArray<struct FAutoMinerDamageItem>* Targets);
	void Server_DigBlock(struct FVector_NetQuantize* Start, struct FVector_NetQuantize* End);
	void OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat);
	void OnStopDrilling();
	void OnStartDrilling();
	void OnRep_SimulatingMining();
	void OnRep_IsGunslinging();
	void Client_Resupply(float* percentage);
	void BP_OnDrillDamage();
	void All_SimulateDigDebris(struct FVector_NetQuantize* Position, int* DebrisIndex);
	void All_SimulateDigBlock(struct FVector_NetQuantize* Position, bool* spawnParticles, int* Material);
	void All_SimulateDamage(TArray<struct FAutoMinerDamageItem>* Targets);
};


// Class FSD.AutoMinerAnimInstance
// 0x0010 (0x0280 - 0x0270)
class UAutoMinerAnimInstance : public UAnimInstance
{
public:
	class AAutoMinerItem*                              Item;                                                     // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoMinerAnimInstance");
		return ptr;
	}

};


// Class FSD.Ball
// 0x0000 (0x00F8 - 0x00F8)
class UBall : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Ball");
		return ptr;
	}

};


// Class FSD.WindowWidget
// 0x0008 (0x0238 - 0x0230)
class UWindowWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x5];                                       // 0x0230(0x0005) MISSED OFFSET
	bool                                               bHandleCloseCommand;                                      // 0x0235(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0236(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WindowWidget");
		return ptr;
	}


	void ReceiveSelectPreviousCommand();
	void ReceiveSelectNextCommand();
	void ReceiveSelectCharacterCommand();
	void ReceiveOkCommand();
	void ReceiveCloseCommand();
	void OnShown();
	void OnNewTopWindow();
	void OnClosed();
	void ConsumeCommand();
	void CloseThisWindow();
};


// Class FSD.BarMenuWidget
// 0x0008 (0x0240 - 0x0238)
class UBarMenuWidget : public UWindowWidget
{
public:
	TWeakObjectPtr<class ASpaceRigBar>                 SpaceRigBar;                                              // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BarMenuWidget");
		return ptr;
	}

};


// Class FSD.WeaponFireComponent
// 0x0060 (0x0158 - 0x00F8)
class UWeaponFireComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponFired;                                            // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponFireEnded;                                        // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRicochetEvent;                                          // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0130(0x0010) MISSED OFFSET
	TScriptInterface<class UWeaponFireOwner>           Weapon;                                                   // 0x0140(0x0030) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponFireComponent");
		return ptr;
	}


	void StopFire();
	void Server_SetShotPower(float* shotPower);
	void Fire(struct FVector* Origin, struct FVector_NetQuantizeNormal* Direction);
};


// Class FSD.BasicWeaponFireComponent
// 0x0000 (0x0158 - 0x0158)
class UBasicWeaponFireComponent : public UWeaponFireComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BasicWeaponFireComponent");
		return ptr;
	}


	void Server_FireWeapon();
	void Server_EndFire();
	void All_WeaponFired();
};


// Class FSD.BeltDrivenWeapon
// 0x0030 (0x0740 - 0x0710)
class ABeltDrivenWeapon : public AAmmoDrivenWeapon
{
public:
	class UAudioComponent*                             BarrelAudio;                                              // 0x0710(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundCue*                                   BarrelSound;                                              // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrelFadeIn;                                             // 0x0720(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BarrelFadeOut;                                            // 0x0724(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 BarrelPitchCurve;                                         // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrelSpinUpTime;                                         // 0x0730(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrelSpinDownTime;                                       // 0x0734(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurrentSpinRate;                                          // 0x0738(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Simulate_SpinBarrel;                                      // 0x073C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x073D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BeltDrivenWeapon");
		return ptr;
	}


	void Server_StopBarrel();
	void Server_StartBarrel();
};


// Class FSD.GatlingGun
// 0x0060 (0x07A0 - 0x0740)
class AGatlingGun : public ABeltDrivenWeapon
{
public:
	bool                                               BarrelProximityDamageEnabled;                             // 0x0740(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0741(0x0003) MISSED OFFSET
	float                                              BarrelProximityDamageDistance;                            // 0x0744(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrelProximityDamageRadius;                              // 0x0748(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BarrelProximityDamageLength;                              // 0x074C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenProximityDamageTicks;                          // 0x0750(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0754(0x0014) MISSED OFFSET
	float                                              DamageMultiplierAtMaxStabilization;                       // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x076C(0x0004) MISSED OFFSET
	class UParticleSystem*                             HotShellsTracerParticles;                                 // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0778(0x0008) MISSED OFFSET
	float                                              HeatRemovedOnKill;                                        // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalOverheatEnabled;                                  // 0x0784(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HotShellsOn;                                              // 0x0785(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0786(0x0002) MISSED OFFSET
	float                                              HotShellsTemperatureRequired;                             // 0x0788(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x078C(0x0004) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x0790(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            BarrelProximityDamageComponent;                           // 0x0798(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GatlingGun");
		return ptr;
	}


	void Server_SetHotShellsOn(bool* hotShellsIsOn);
	void OnRep_HotShellsTracerOn();
	void OnGatlingTemperatureChanged(float* Temperature, bool* isOverheated);
	void OnEnemyKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat);
	void Client_RemoveHeat();
};


// Class FSD.BeltDrivenAnimInstance
// 0x0030 (0x02A0 - 0x0270)
class UBeltDrivenAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFiring;                                                 // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Overheated;                                               // 0x0271(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0272(0x0002) MISSED OFFSET
	struct FVector                                     ExternalForce;                                            // 0x0274(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ExternalForceScale;                                       // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ExternalForceBoneName;                                    // 0x0284(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x028C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BeltDrivenAnimInstance");
		return ptr;
	}

};


// Class FSD.Biome
// 0x03E0 (0x0410 - 0x0030)
class UBiome : public UDataAsset
{
public:
	struct FText                                       BiomeName;                                                // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       BiomeShortName;                                           // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       BiomeDescription;                                         // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FColor                                      BiomeColor;                                               // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BiomeIndex;                                               // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     BiomeAnalyticsIndex;                                      // 0x0080(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomeMovie
	unsigned char                                      UnknownData01[0x28];                                      // 0x00B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomePicture
	unsigned char                                      UnknownData02[0x28];                                      // 0x00E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomeIcon
	unsigned char                                      UnknownData03[0x28];                                      // 0x0108(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomeLargeImage
	unsigned char                                      UnknownData04[0x28];                                      // 0x0130(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomeWorldMap
	unsigned char                                      UnknownData05[0x28];                                      // 0x0158(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomeMissionBar
	unsigned char                                      UnknownData06[0x28];                                      // 0x0180(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.Biome.BiomeMapWidget
	struct FHeatSource                                 BiomeHeatSource;                                          // 0x01A8(0x0008) (Edit)
	struct FRandRange                                  DepthRange;                                               // 0x01B0(0x0008) (Edit)
	unsigned char                                      UnknownData07[0x28];                                      // 0x01B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.AtmosphericParticles
	unsigned char                                      UnknownData08[0x10];                                      // 0x01E0(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.Biome.CaveScriptComponents
	TArray<class UDebrisSet*>                          Debris;                                                   // 0x01F0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData09[0x28];                                      // 0x0200(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.Biome.DebrisActor
	TArray<struct FBiomeDebrisInfluencerVariant>       DebrisInfluencerVariants;                                 // 0x0228(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData10[0x28];                                      // 0x0238(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.Biome.PostProcessActorClass
	class UTerrainMaterial*                            RockMaterial;                                             // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            DirtMaterial;                                             // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            BurnedMaterialOverride;                                   // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FBiomeNoiseItem>                     RoomNoises;                                               // 0x0278(0x0010) (Edit, ZeroConstructor)
	class UMissionStat*                                MissionCompleted;                                         // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          CeilingNoise;                                             // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDetailNoise*                                CeilingDetailNoise;                                       // 0x0298(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          WallNoise;                                                // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDetailNoise*                                WallDetailNoise;                                          // 0x02A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          FloorNoise;                                               // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDetailNoise*                                FloorDetailNoise;                                         // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          PillarNoise;                                              // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDetailNoise*                                PillarDetailNoise;                                        // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPillarSettings*                             PillarSettings;                                           // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UTunnelSetting*>                      TunnelSettings;                                           // 0x02D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UFloodFillSettings*                          TunnelCeilingNoise;                                       // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          TunnelWallNoise;                                          // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          TunnelFloorNoise;                                         // 0x02F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FResourceSpawner>                    Resources;                                                // 0x0300(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FBiomeEnemyEntry>                    Enemies;                                                  // 0x0310(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    BannedEnemies;                                            // 0x0320(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    StationaryEnemies;                                        // 0x0330(0x0010) (Edit, ZeroConstructor)
	TArray<class UCritterDescriptor*>                  Critters;                                                 // 0x0340(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData11[0x28];                                      // 0x0350(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.AmbientSounds
	struct FReverbSettings                             ReverbSettings;                                           // 0x0378(0x0020) (Edit)
	float                                              SmallCaveReverbRadius;                                    // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x039C(0x0004) MISSED OFFSET
	class UReverbEffect*                               SmallCaveReverb;                                          // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MediumCaveReverbRadius;                                   // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	class UReverbEffect*                               MediumCaveReverb;                                         // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LargeCaveReverbRadius;                                    // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	class UReverbEffect*                               LargeCaveReverb;                                          // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x28];                                      // 0x03C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Biome.BiomeLoaderLevelSequence
	struct FString                                     BiomeLoaderLevelName;                                     // 0x03F0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FText>                               Quotes;                                                   // 0x0400(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Biome");
		return ptr;
	}


	void GetDebrisActorSoftClass();
	class UTexture2D* GetBiomeWorldMap();
	class UTexture2D* GetBiomePicture();
	struct FText GetBiomeName();
	class UTexture2D* GetBiomeMissionBar();
	class UClass* GetBiomeMapWidget();
	TArray<struct FSoftObjectPath> GetBiomeMapAssetList();
	class UTexture2D* GetBiomeLargeImage();
	int GetBiomeIndex();
	class UTexture2D* GetBiomeIcon();
	struct FString GetBiomeAnalyticsIndex();
	class UParticleSystem* GetAtmosphericParticles();
	class USoundCue* GetAmbientSounds();
};


// Class FSD.BobbingComponent
// 0x0030 (0x0290 - 0x0260)
class UBobbingComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	class AActor*                                      OwnerActor;                                               // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               DoOrientationChecks;                                      // 0x0270(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0271(0x0003) MISSED OFFSET
	float                                              BobSpeed;                                                 // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BobSize;                                                  // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OrentationChecksPerSecond;                                // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0280(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BobbingComponent");
		return ptr;
	}


	void SetOwner(class AActor** AActor);
};


// Class FSD.BoltActionWeapon
// 0x00F0 (0x0800 - 0x0710)
class ABoltActionWeapon : public AAmmoDrivenWeapon
{
public:
	struct FScriptMulticastDelegate                    FullyFocusedEvent;                                        // 0x0710(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UDamageComponent*                            DamageComponent;                                          // 0x0720(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UHitscanBaseComponent*                       HitscanComponent;                                         // 0x0728(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      FocusedHitSTE;                                            // 0x0730(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RequireWeakspotForFocusedHitSTE;                          // 0x0738(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0739(0x0003) MISSED OFFSET
	struct FVector                                     VelocityOnEnterNoGravityFocus;                            // 0x073C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsNoGravityOnFocusEnabled;                                // 0x0748(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0749(0x0003) MISSED OFFSET
	float                                              NoGravityOnFocusDuration;                                 // 0x074C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NoGravityFocusSlowdownFactor;                             // 0x0750(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0754(0x0004) MISSED OFFSET
	float                                              ZoomSpreadAmount;                                         // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZoomMinSpreadWhileMoving;                                 // 0x075C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0760(0x0004) MISSED OFFSET
	float                                              ChargeSpeed;                                              // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeAmmoCost;                                           // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeRecoilMult;                                         // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0770(0x0010) MISSED OFFSET
	class USoundCue*                                   ZoomedInAudio;                                            // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ChargedShotTrailParticles;                                // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ChargedShotFireSound;                                     // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargedFoVChange;                                         // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargedFoVFadeSpeed;                                      // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinCharge;                                                // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlowMovementAtCharge;                                     // 0x07A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FullChargeDamageBonus;                                    // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimedShotStaggerChance;                                   // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimedWeakspotKilLRange;                                   // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x07B4(0x0004) MISSED OFFSET
	float                                              TargetKilledReloadTimeBoost;                              // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetKilledReloadTimeBoostDuration;                      // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x12];                                      // 0x07C0(0x0012) MISSED OFFSET
	bool                                               LastShotWasAimed;                                         // 0x07D2(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0xD];                                       // 0x07D3(0x000D) MISSED OFFSET
	bool                                               IsMovementSlowed;                                         // 0x07E0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x17];                                      // 0x07E1(0x0017) MISSED OFFSET
	bool                                               ChargeAffectsDamage;                                      // 0x07F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Charging;                                                 // 0x07F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x07FA(0x0002) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x07FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoltActionWeapon");
		return ptr;
	}


	void SetOverheated(bool* isOverheated);
	void Server_SetIsMovementSlowed(bool* bisMovementSlowed);
	void Server_SetIsLatestShotFocused(bool* bisShotFocused);
	void Server_SetIsChargingShot(bool* bisCharging);
	void OnTimerElapsed();
	void OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysicalMaterial);
	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
	void OnShotPowerSet();
	void OnMovementSlowed(bool* isSlowed);
	void Client_BoostReloadTime();
};


// Class FSD.BoltActionWeaponAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UBoltActionWeaponAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoltActionWeaponAnimInstance");
		return ptr;
	}

};


// Class FSD.Bomber
// 0x00F8 (0x0630 - 0x0538)
class ABomber : public AAFlyingBug
{
public:
	class UParticleSystemComponent*                    AcidEmitterLeft;                                          // 0x0538(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    AcidEmitterRight;                                         // 0x0540(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0548(0x0028) MISSED OFFSET
	class UClass*                                      AcidProjectile;                                           // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             deathParticles;                                           // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  deathSound;                                               // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DeathPanicSound;                                          // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             BleedParticles;                                           // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  BladderDestroyedNoise;                                    // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  AcidDropStartSound;                                       // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  AcidDropLoopSound;                                        // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  AcidDropEndSound;                                         // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class UParticleSystemComponent>     BleedParticlesComponent;                                  // 0x05B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              PanicAudioComponent;                                      // 0x05C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              StartSoundComponent;                                      // 0x05C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              LoopSoundComponent;                                       // 0x05D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              EndSoundComponent;                                        // 0x05D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              RagdollForceModifier;                                     // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeathYRotationSpeed;                                      // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeathXRotationSpeed;                                      // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SearchRange;                                              // 0x05EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NewPointMax;                                              // 0x05F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NewPointMin;                                              // 0x05F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeathSpeed;                                               // 0x05F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeathAcceleration;                                        // 0x05FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AcidRate;                                                 // 0x0600(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PostDeathAcidTime;                                        // 0x0604(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0608(0x0018) MISSED OFFSET
	bool                                               HasDied;                                                  // 0x0620(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsRightDestroyed;                                         // 0x0621(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsLeftDestroyed;                                          // 0x0622(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               dropAcid;                                                 // 0x0623(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0624(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Bomber");
		return ptr;
	}


	void StopSpinAndDie();
	void SetDropAcid(bool* dropAcid);
	void OnStartDeathPanic();
	void OnRep_DropAcid();
	void OnRep_Death();
	void OnBladderDamage(float* amount);
	void OnArmorDestroyed(struct FName* Name);
	bool GetDropAcid();
	bool AreBladdersDestroyed();
};


// Class FSD.BomberAnimInstance
// 0x0010 (0x0300 - 0x02F0)
class UBomberAnimInstance : public UFlyingBugAnimInstance
{
public:
	bool                                               IsBombing;                                                // 0x02F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSpiraling;                                              // 0x02F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x02F2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BomberAnimInstance");
		return ptr;
	}

};


// Class FSD.BoscoAbillity
// 0x0038 (0x0068 - 0x0030)
class UBoscoAbillity : public UDataAsset
{
public:
	struct FName                                       AbillityName;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AbillityAnimation;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  VoiceOnUse;                                               // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EBoscoAbillityTargetPreference                     TargetType;                                               // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              Cooldown;                                                 // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindUp;                                                   // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RechargeTime;                                             // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxCharges;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               TargetActorIfValid;                                       // 0x0064(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RotateTowardsTarget;                                      // 0x0065(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0066(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoAbillity");
		return ptr;
	}

};


// Class FSD.BoscoSpawnActorAbillity
// 0x0008 (0x0070 - 0x0068)
class UBoscoSpawnActorAbillity : public UBoscoAbillity
{
public:
	class UClass*                                      SpawnedActorClass;                                        // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoSpawnActorAbillity");
		return ptr;
	}

};


// Class FSD.BoscoProjectileAbillity
// 0x0008 (0x0070 - 0x0068)
class UBoscoProjectileAbillity : public UBoscoAbillity
{
public:
	class UClass*                                      projectileClass;                                          // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoProjectileAbillity");
		return ptr;
	}

};


// Class FSD.Bosco
// 0x0328 (0x0768 - 0x0440)
class ABosco : public ADeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0440(0x0030) MISSED OFFSET
	class UHealthComponent*                            HealthComponent;                                          // 0x0470(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBoscoAbillityComponent*                     AbillityComponent;                                        // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnSensingComponent*                       Senses;                                                   // 0x0488(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDroneMiningToolBase*                        MiningTool;                                               // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBobbingComponent*                           BobbingComponent;                                         // 0x0498(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      BoscoMesh;                                                // 0x04A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHitscanComponent*                           DroneHitScan;                                             // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         SpotLightComponent;                                       // 0x04B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        PointLightComponent;                                      // 0x04B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             MomentumSound;                                            // 0x04C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDialogDataAsset*                            MineOrderShout;                                           // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            KillOrderShout;                                           // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            GoToOrderShout;                                           // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ReviveOrderShout;                                         // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            PickupGemShout;                                           // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ReviveThankShout;                                         // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            GeneralCallShout;                                         // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            RocketAbillityShout;                                      // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            CryoGrenadeAbillityShout;                                 // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  MineResponse;                                             // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  CombatResponse;                                           // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  LightResponse;                                            // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ReviveResponse;                                           // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  AbillityResponse;                                         // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ResponseTime;                                             // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	class USoundBase*                                  CurrentResponse;                                          // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnReviveused;                                             // 0x0548(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0558(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              CarryingSpeed;                                            // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarryingAcceleration;                                     // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarryingDampOmega;                                        // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0574(0x000C) MISSED OFFSET
	struct FGameplayTagContainer                       LosMatchTags;                                             // 0x0580(0x0020) (Edit)
	float                                              SeeTargetTime;                                            // 0x05A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	class USoundBase*                                  AbillityErrorSound;                                       // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              INcreasedMiningArea;                                      // 0x05B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeToResetMiningBoost;                                   // 0x05B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MiningBoosMultiplier;                                     // 0x05B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x05C0(0x0010) (ZeroConstructor, Transient)
	class UBoscoProjectileAbillity*                    RocketAbillity;                                           // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBoscoProjectileAbillity*                    CryoGrenadeAbillity;                                      // 0x05D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x05E0(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemID*                                     ItemID;                                                   // 0x05F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUpgradableBoscoComponent*                   Upgradable;                                               // 0x05F8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           SaluteAnimation;                                          // 0x0600(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           PickupGemAnimation;                                       // 0x0608(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UAnimSequenceBase*>                   HitReaction;                                              // 0x0610(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              SaluteDuration;                                           // 0x0620(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0624(0x0004) MISSED OFFSET
	class UDroneSkinnableComponent*                    Skinnable;                                                // 0x0628(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FBoscoLightSetting>                  LightSettings;                                            // 0x0630(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TargetLightSetting;                                       // 0x0640(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0644(0x0004) MISSED OFFSET
	TArray<class UBoscoAbillity*>                      CombatAbillities;                                         // 0x0648(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class AActor*                                      RotateTarget;                                             // 0x0658(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LookAtLocation;                                           // 0x0660(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x066C(0x0004) MISSED OFFSET
	class USoundCue*                                   ShootSound;                                               // 0x0670(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShootSoundFadeout;                                        // 0x0678(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x067C(0x0004) MISSED OFFSET
	class USoundCue*                                   ShootSoundTail;                                           // 0x0680(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             ShootSoundInstance;                                       // 0x0688(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             MuzzleEffect;                                             // 0x0690(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             TracerEffect;                                             // 0x0698(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FireRate;                                                 // 0x06A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinShotsInBurst;                                          // 0x06A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxShotsInBurst;                                          // 0x06A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRandomBurstCooldown;                                   // 0x06AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRandomBurstCooldown;                                   // 0x06B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxFiringAngle;                                           // 0x06B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxEngagementRange;                                       // 0x06B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x06BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TracerSpeed;                                              // 0x06C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	class USoundBase*                                  ReviveSirens;                                             // 0x06C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              ReviveSirensComponent;                                    // 0x06D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              DistanceToFacePlayer;                                     // 0x06D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x06DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PrepareToMineRange;                                       // 0x06E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MiningRange;                                              // 0x06E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x40];                                      // 0x06E8(0x0040) MISSED OFFSET
	int                                                MaxRevives;                                               // 0x0728(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x18];                                      // 0x072C(0x0018) MISSED OFFSET
	bool                                               IsFiring;                                                 // 0x0744(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInRangeToMine;                                          // 0x0745(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsPreparedToMine;                                         // 0x0746(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMining;                                                 // 0x0747(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsReviving;                                               // 0x0748(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsRotateMode;                                             // 0x0749(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x16];                                      // 0x074A(0x0016) MISSED OFFSET
	EDroneAIState                                      CurrentState;                                             // 0x0760(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0761(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Bosco");
		return ptr;
	}


	void UseABillity();
	void StopShootingSound();
	void StateChanged(EDroneAIState* aCurrentState);
	void StartSelfDestruct();
	void SetIsReviving(bool* aIsReviving);
	void SelfDestruct();
	void ReviveCounterChanged(int* remainingCharges);
	void PlaySalute();
	void OnWeaponFired(struct FHitResult* HitResult);
	void OnRep_State(EDroneAIState* prevState);
	void OnReadyToShoot();
	void OnNotReadyToShoot();
	void OnHit(float* amount, float* BaseAmount, class UPrimitiveComponent** Component, class UFSDPhysicalMaterial** PhysMat, struct FName* BoneName);
	void OnGrabbedGem();
	void MineEffects(class UTerrainMaterial** aTerrainMaterial, struct FVector_NetQuantize* aLocation, struct FRotator* aRotation);
	class UUpgradableBoscoComponent* GetUpgradeComponent();
	int GetReviveCharges();
	class UBoscoAbillityComponent* GetPlayerAbillity();
	EDroneAIState GetCurrentState();
	bool GetCarryInterrupted();
	void FireEffects(struct FVector* fireDirection);
	bool DoPickupGemAnimation();
};


// Class FSD.BoscoAnimInstance
// 0x0030 (0x02A0 - 0x0270)
class UBoscoAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0270(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponsNotReady;                                        // 0x0278(0x0010) (ZeroConstructor, InstancedReference)
	float                                              DigAnimPlayRate;                                          // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EDroneAIState                                      CurrentState;                                             // 0x028C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsReadyToMine;                                            // 0x028D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMining;                                                 // 0x028E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsFiring;                                                 // 0x028F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsReviving;                                               // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsCarryingGem;                                            // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x0292(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoAnimInstance");
		return ptr;
	}

};


// Class FSD.BoscoWeaponsFoldedOutNotify
// 0x0000 (0x0038 - 0x0038)
class UBoscoWeaponsFoldedOutNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoWeaponsFoldedOutNotify");
		return ptr;
	}

};


// Class FSD.BoscoWeaponsFoldedInNotify
// 0x0000 (0x0038 - 0x0038)
class UBoscoWeaponsFoldedInNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoWeaponsFoldedInNotify");
		return ptr;
	}

};


// Class FSD.BoscoAbillityComponent
// 0x00A0 (0x0198 - 0x00F8)
class UBoscoAbillityComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAbillityChargeProgress;                                 // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAbillityChargeUsed;                                     // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x0118(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0128(0x0010) MISSED OFFSET
	class UClass*                                      projectileClass;                                          // 0x0138(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // 0x0140(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class USoundBase*                                  VoiceOnUse;                                               // 0x0148(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x0150(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ABosco>                       AbillityOwner;                                            // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0160(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoAbillityComponent");
		return ptr;
	}


	int GetMaxCharges();
	int GetCharges();
};


// Class FSD.FSDAIController
// 0x0018 (0x0450 - 0x0438)
class AFSDAIController : public AAIController
{
public:
	struct FScriptMulticastDelegate                    OnMessageBehaviorTreeEvent;                               // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                LOSTraceChannel;                                          // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x044C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDAIController");
		return ptr;
	}


	void SetAlerted(bool* isAlerted);
	void RegisterBlackboardChanges(struct FName* Key);
	void Recieve_BlackboardValueChanged(struct FName* KeyName);
	void OnAttackingChanged(bool* attacking);
	bool GetIsAlerted();
};


// Class FSD.BoscoController
// 0x01A0 (0x05F0 - 0x0450)
class ABoscoController : public AFSDAIController
{
public:
	class UBehaviorTree*                               BehaviourTree;                                            // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CheckOutOfTheWayInterval;                                 // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x045C(0x0008) MISSED OFFSET
	float                                              DistCountAsSameHit;                                       // 0x0464(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB0];                                      // 0x0468(0x00B0) MISSED OFFSET
	float                                              SearchForEnemiesInterval;                                 // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	float                                              SaluteDelay;                                              // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0524(0x0004) MISSED OFFSET
	float                                              SaluteCooldown;                                           // 0x0528(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	float                                              CheckGraberInterval;                                      // 0x0530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	float                                              DistanceCountedAsClose;                                   // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	struct FGameplayTagQuery                           TargetQuery;                                              // 0x0540(0x0048) (Edit)
	float                                              ReviveHealthPercentage;                                   // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x64];                                      // 0x058C(0x0064) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoController");
		return ptr;
	}


	void ReviveTarget();
	void RegisterPlayer(class APlayerCharacter** APlayerCharacter);
	void PickupGem();
	void OnSecondaryLaserPointer(class AActor** aTarget, struct FVector* aLocation);
	void OnPlayerShout(class APlayerCharacter** APlayerCharacter);
	void OnPlayerSalute(class APlayerCharacter** aCharacater);
	void OnPlayerLeave(class AFSDPlayerState** APlayerState);
	void OnLaserPointer(class AActor** aTarget, ELaserPointerTargetType* aROI, struct FVector* aMineLocation, class AActor** AGem);
	void OnJobFinished();
	struct FVector GetPointNearPlayers();
	void GenerateNewRelativeLocation(class AActor** aTarget, struct FVector* aLocation, float* aRange, float* aHeightRestriction, float* aMinRange, bool* aTryToStayOutOfTheWay, bool* aStayBehind);
	void GemUsed(class APlayerCharacter** usedBy);
	void ConfirmPickup();
};


// Class FSD.BoxFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UBoxFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoxFunctionLibrary");
		return ptr;
	}


	struct FBox STATIC_CreateBoxAt(struct FVector* Location, struct FVector* Size);
	struct FVector STATIC_ClosestPointToBox(struct FVector* Pos, struct FBox* Box);
	float STATIC_BoxSize(struct FBox* Box);
	struct FVector STATIC_BoxExtends(struct FBox* Box);
	struct FVector STATIC_BoxCenter(struct FBox* Box);
};


// Class FSD.GenerationComponent
// 0x0000 (0x0580 - 0x0580)
class UGenerationComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GenerationComponent");
		return ptr;
	}

};


// Class FSD.BoxGenerationComponent
// 0x0020 (0x05A0 - 0x0580)
class UBoxGenerationComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0580(0x0004) MISSED OFFSET
	bool                                               IsCarver;                                                 // 0x0584(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0585(0x0003) MISSED OFFSET
	float                                              NoiseRange;                                               // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Visible;                                                  // 0x058C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x058D(0x0003) MISSED OFFSET
	class UFloodFillSettings*                          Noise;                                                    // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0598(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoxGenerationComponent");
		return ptr;
	}

};


// Class FSD.GenerationItem
// 0x0008 (0x0338 - 0x0330)
class AGenerationItem : public AActor
{
public:
	bool                                               Visible;                                                  // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AddToLevel;                                               // 0x0331(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0332(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GenerationItem");
		return ptr;
	}

};


// Class FSD.BoxGenerationItem
// 0x0008 (0x0340 - 0x0338)
class ABoxGenerationItem : public AGenerationItem
{
public:
	class UBoxGenerationComponent*                     BoxComponent;                                             // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoxGenerationItem");
		return ptr;
	}

};


// Class FSD.BTDecorator_CanSeeTarget
// 0x0040 (0x00A8 - 0x0068)
class UBTDecorator_CanSeeTarget : public UBTDecorator
{
public:
	bool                                               UseAsync;                                                 // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              MaxRange;                                                 // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EyeLocationOffset;                                        // 0x0070(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0080(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_CanSeeTarget");
		return ptr;
	}

};


// Class FSD.BTDecorator_CheckObstruction
// 0x0048 (0x00B0 - 0x0068)
class UBTDecorator_CheckObstruction : public UBTDecorator
{
public:
	float                                              Range;                                                    // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseOwnerCenterMass;                                       // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	struct FVector                                     EyeLocationOffset;                                        // 0x0070(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RangedSocket;                                             // 0x007C(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0088(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_CheckObstruction");
		return ptr;
	}

};


// Class FSD.BTDecorator_InRange
// 0x0010 (0x00A0 - 0x0090)
class UBTDecorator_InRange : public UBTDecorator_BlackboardBase
{
public:
	float                                              MinRange;                                                 // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRange;                                                 // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EFAIDistanceType                                   GeometricDistanceType;                                    // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_InRange");
		return ptr;
	}

};


// Class FSD.BTDecorator_InRangeEx
// 0x0010 (0x00A0 - 0x0090)
class UBTDecorator_InRangeEx : public UBTDecorator_BlackboardBase
{
public:
	float                                              MinRange;                                                 // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRange;                                                 // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EFAIDistanceType                                   GeometricDistanceType;                                    // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_InRangeEx");
		return ptr;
	}

};


// Class FSD.BTDecorator_ModifySpeed
// 0x0008 (0x0070 - 0x0068)
class UBTDecorator_ModifySpeed : public UBTDecorator
{
public:
	float                                              SpeedModifier;                                            // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_ModifySpeed");
		return ptr;
	}

};


// Class FSD.BTDecorator_RandomCooldown
// 0x0008 (0x0070 - 0x0068)
class UBTDecorator_RandomCooldown : public UBTDecorator
{
public:
	struct FRandRange                                  CoolDownTime;                                             // 0x0068(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_RandomCooldown");
		return ptr;
	}

};


// Class FSD.BTDecorator_InRangeBB
// 0x0058 (0x00E8 - 0x0090)
class UBTDecorator_InRangeBB : public UBTDecorator_BlackboardBase
{
public:
	struct FBlackboardKeySelector                      MinRangeKey;                                              // 0x0090(0x0028) (Edit)
	struct FBlackboardKeySelector                      MaxRangeKey;                                              // 0x00B8(0x0028) (Edit)
	EFAIDistanceType                                   GeometricDistanceType;                                    // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_InRangeBB");
		return ptr;
	}

};


// Class FSD.BTDecorator_SetTagRandomCooldown
// 0x0018 (0x0080 - 0x0068)
class UBTDecorator_SetTagRandomCooldown : public UBTDecorator
{
public:
	struct FGameplayTag                                CooldownTag;                                              // 0x0068(0x0008) (Edit)
	struct FRandRange                                  CooldownDuration;                                         // 0x0070(0x0008) (Edit)
	bool                                               bAddToExistingDuration;                                   // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               TriggerOnActivation;                                      // 0x0079(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x007A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_SetTagRandomCooldown");
		return ptr;
	}

};


// Class FSD.BTDecorator_SharedCooldown
// 0x0030 (0x0098 - 0x0068)
class UBTDecorator_SharedCooldown : public UBTDecorator
{
public:
	struct FRandRange                                  CoolDownTime;                                             // 0x0068(0x0008) (Edit)
	struct FBlackboardKeySelector                      CooldownKey;                                              // 0x0070(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_SharedCooldown");
		return ptr;
	}

};


// Class FSD.BTDecorator_SharedAttackCooldown
// 0x0030 (0x0098 - 0x0068)
class UBTDecorator_SharedAttackCooldown : public UBTDecorator
{
public:
	struct FRandRange                                  CoolDownTime;                                             // 0x0068(0x0008) (Edit)
	struct FBlackboardKeySelector                      CooldownKey;                                              // 0x0070(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_SharedAttackCooldown");
		return ptr;
	}

};


// Class FSD.BTDecorator_TagRandomCooldown
// 0x0018 (0x0080 - 0x0068)
class UBTDecorator_TagRandomCooldown : public UBTDecorator
{
public:
	struct FGameplayTag                                CooldownTag;                                              // 0x0068(0x0008) (Edit)
	struct FRandRange                                  CooldownDuration;                                         // 0x0070(0x0008) (Edit)
	bool                                               bAddToExistingDuration;                                   // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActivatesCooldown;                                       // 0x0079(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x007A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTDecorator_TagRandomCooldown");
		return ptr;
	}

};


// Class FSD.BTService_FindPlayer
// 0x0030 (0x00A0 - 0x0070)
class UBTService_FindPlayer : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (Edit)
	bool                                               MustBeAlive;                                              // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SwithToBetterTargets;                                     // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RegisterForPositioning;                                   // 0x009A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsFlying;                                                 // 0x009B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetingRange;                                           // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_FindPlayer");
		return ptr;
	}

};


// Class FSD.BTService_FindAttackable
// 0x0030 (0x00A0 - 0x0070)
class UBTService_FindAttackable : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (Edit)
	bool                                               MustBeAlive;                                              // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SwithToBetterTargets;                                     // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RegisterForPositioning;                                   // 0x009A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsFlying;                                                 // 0x009B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetingRange;                                           // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_FindAttackable");
		return ptr;
	}

};


// Class FSD.BTService_CheckPathToTarget
// 0x0050 (0x00C0 - 0x0070)
class UBTService_CheckPathToTarget : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (Edit)
	struct FBlackboardKeySelector                      ResultKey;                                                // 0x0098(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_CheckPathToTarget");
		return ptr;
	}

};


// Class FSD.BTService_SetStance
// 0x0030 (0x00A0 - 0x0070)
class UBTService_SetStance : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0070(0x0028) (Edit)
	float                                              distance;                                                 // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_SetStance");
		return ptr;
	}

};


// Class FSD.BTService_UpdateMoveToTarget
// 0x0058 (0x00C8 - 0x0070)
class UBTService_UpdateMoveToTarget : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (Edit)
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0098(0x0028) (Edit)
	float                                              LookAheadTime;                                            // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VerticalOffset;                                           // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_UpdateMoveToTarget");
		return ptr;
	}

};


// Class FSD.BTService_UpdateFlyingMoveToTarget
// 0x0058 (0x00C8 - 0x0070)
class UBTService_UpdateFlyingMoveToTarget : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (Edit)
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0098(0x0028) (Edit)
	float                                              LookAheadTime;                                            // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_UpdateFlyingMoveToTarget");
		return ptr;
	}

};


// Class FSD.BTService_UpdateMoveInFormation
// 0x0038 (0x00A8 - 0x0070)
class UBTService_UpdateMoveInFormation : public UBTService
{
public:
	float                                              LookAheadTime;                                            // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0078(0x0028) (Edit)
	float                                              AttackerRadius;                                           // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTService_UpdateMoveInFormation");
		return ptr;
	}

};


// Class FSD.BTTask_FakePhysicsMove
// 0x0030 (0x00C8 - 0x0098)
class UBTTask_FakePhysicsMove : public UBTTask_BlackboardBase
{
public:
	float                                              MinTime;                                                  // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndMaxSpeed;                                              // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InitialLocalVelocity;                                     // 0x00A0(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InitialGlobalVelocity;                                    // 0x00AC(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EndRequireSolidGround;                                    // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_FakePhysicsMove");
		return ptr;
	}

};


// Class FSD.BTTask_FindPointNearCeiling
// 0x0010 (0x00A8 - 0x0098)
class UBTTask_FindPointNearCeiling : public UBTTask_BlackboardBase
{
public:
	float                                              CloseToCeilingBias;                                       // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LookForCeilingLength;                                     // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SearchRadius;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_FindPointNearCeiling");
		return ptr;
	}

};


// Class FSD.BTTask_MoveToSlot
// 0x0010 (0x00A8 - 0x0098)
class UBTTask_MoveToSlot : public UBTTask_BlackboardBase
{
public:
	float                                              AcceptableRadius;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LookAheadTime;                                            // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VerticalOffset;                                           // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpdateRate;                                               // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_MoveToSlot");
		return ptr;
	}

};


// Class FSD.BTTask_SetAttacking
// 0x0028 (0x0098 - 0x0070)
class UBTTask_SetAttacking : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_SetAttacking");
		return ptr;
	}

};


// Class FSD.BTTask_TriggerAI
// 0x0008 (0x0078 - 0x0070)
class UBTTask_TriggerAI : public UBTTaskNode
{
public:
	struct FName                                       TriggerName;                                              // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_TriggerAI");
		return ptr;
	}

};


// Class FSD.BTTask_MessageAI
// 0x0008 (0x0078 - 0x0070)
class UBTTask_MessageAI : public UBTTaskNode
{
public:
	struct FName                                       MessageName;                                              // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_MessageAI");
		return ptr;
	}

};


// Class FSD.BTTask_MoveToTarget
// 0x0008 (0x00A0 - 0x0098)
class UBTTask_MoveToTarget : public UBTTask_BlackboardBase
{
public:
	float                                              AcceptableRadius;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EnterAttackStanceOnMoveFinished;                          // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x009D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BTTask_MoveToTarget");
		return ptr;
	}

};


// Class FSD.CalldownItem
// 0x0060 (0x04D0 - 0x0470)
class ACalldownItem : public AAnimatedItem
{
public:
	class UClass*                                      ItemPlacerClass;                                          // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SupplyPodClass;                                           // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UResourceData*                               ResouceRequired;                                          // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       OrderDescription;                                         // 0x0488(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       LogText;                                                  // 0x04A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      ResupplyBeacon;                                           // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacerInstance;                                       // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              Cooldown;                                                 // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x04CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CalldownItem");
		return ptr;
	}


	void Server_Call_Resupply(struct FVector* Location);
};


// Class FSD.CampaignManager
// 0x0060 (0x0088 - 0x0028)
class UCampaignManager : public UObject
{
public:
	class UClass*                                      MainCampaign;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              WeeklyCampaigns;                                          // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              MatrixCoreHuntCampaigns;                                  // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              SideCampaigns;                                            // 0x0050(0x0010) (Edit, ZeroConstructor)
	class UCampaign*                                   ActiveCampaign;                                           // 0x0060(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumFailedRequests;                                        // 0x0068(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                WeeklyBackendDataValid;                                   // 0x006C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                WeeklyBackendSeed;                                        // 0x0070(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FDateTime                                   WeeklyBackendExpirationTime;                              // 0x0078(0x0008) (ZeroConstructor, Transient)
	struct FDateTime                                   LastRequestTime;                                          // 0x0080(0x0008) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CampaignManager");
		return ptr;
	}


	void StartNewCampaign(class UClass** campaignClass, class UFSDSaveGame** SaveGame);
	void SkipMainCampaign(class AFSDPlayerController** Player);
	bool IsWeeklyCampaignCompleted(class UObject** WorldContext, ECampaignType* campaigntype);
	bool IsInCampaignMission(class AFSDPlayerController** Player);
	bool IsCampaignRestrictionsMet(class UObject** WorldContextObject, class UGeneratedMission** mission, class UDifficultySetting** optionalDifficulty);
	bool IsCampaignMission(class UObject** WorldContextObject, class UGeneratedMission** mission);
	bool IsActiveCampaign(class UCampaign** Campaign);
	TArray<class UClass*> GetUncompletedCampaigns(class AFSDPlayerController** Player);
	class UGeneratedMission* GetCampaingMissionFromSeeds(class UObject** WorldContextObject, int* GlobalSeed, int* MissionSeed);
	class UGeneratedMission* GetCampaingMission(TArray<class UGeneratedMission*>* missions, int* MissionSeed);
	void AbortActiveCampaign(class UFSDSaveGame** SaveGame);
};


// Class FSD.Campaign
// 0x0148 (0x0170 - 0x0028)
class UCampaign : public UObject
{
public:
	TArray<class UCampaignMission*>                    missions;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<class UCampaignRequirement*>                Requirements;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0048(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.Campaign.RequiredCharacter
	TArray<class UDifficultySetting*>                  RestrictedToDifficulties;                                 // 0x0070(0x0010) (Edit, ZeroConstructor)
	int                                                Progress;                                                 // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0084(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanAbort;                                                 // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanSkip;                                                  // 0x0095(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0096(0x0002) MISSED OFFSET
	ECampaignMutators                                  Mutators;                                                 // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0096(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FText                                       TitlePrefix;                                              // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Title;                                                    // 0x00B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       DescriptionHeader;                                        // 0x00D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x00E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       RewardText;                                               // 0x0100(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RewardFlavorText;                                         // 0x0118(0x0018) (Edit, BlueprintVisible)
	class UTexture2D*                                  Icon;                                                     // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0138(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.Campaign.Picture
	ECampaignType                                      campaigntype;                                             // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	class UMissionStat*                                CampaignCompletedMissionStat;                             // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Campaign");
		return ptr;
	}


	bool IsComplete();
	bool STATIC_IsCampaignComplete(class UObject** WorldContext, class UClass** Campaign);
	class UClass* GetRequiredCharacter();
	class UCampaign* STATIC_GetReference(class UClass** Campaign);
	class UCampaignMission* GetPreviousMission();
	class UTexture2D* GetPicture();
	struct FText STATIC_GetCampaignTitle(class UClass** Campaign);
	class UCampaignMission* GetActiveMission();
	bool CanStartCampaign(class AFSDPlayerController** Player);
	bool AreRestrictionsMet(class AFSDPlayerController** Player, class UDifficultySetting** optionalDifficulty);
};


// Class FSD.CampaignMission
// 0x0038 (0x0068 - 0x0030)
class UCampaignMission : public UDataAsset
{
public:
	class UPlanetZone*                                 PlanetZone;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRequiredMissionItem                        mission;                                                  // 0x0038(0x0018) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UReward*>                             Rewards;                                                  // 0x0050(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class UDialogDataAsset*                            MissionCompleteShout;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CampaignMission");
		return ptr;
	}


	class UMissionTemplate* GetMissionTemplate();
};


// Class FSD.CampaignRequirement
// 0x0000 (0x0028 - 0x0028)
class UCampaignRequirement : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CampaignRequirement");
		return ptr;
	}


	bool IsRequirementMet(class AFSDPlayerController** Player, class UCampaign** Campaign);
};


// Class FSD.CaracterLevelCampaignRequirement
// 0x0010 (0x0038 - 0x0028)
class UCaracterLevelCampaignRequirement : public UCampaignRequirement
{
public:
	class UPlayerCharacterID*                          characterID;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelRequirement;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaracterLevelCampaignRequirement");
		return ptr;
	}

};


// Class FSD.PlayerRankCampaignRequirement
// 0x0008 (0x0030 - 0x0028)
class UPlayerRankCampaignRequirement : public UCampaignRequirement
{
public:
	int                                                RankRequirement;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerRankCampaignRequirement");
		return ptr;
	}

};


// Class FSD.WeeklyTimerCampaignRequirement
// 0x0000 (0x0028 - 0x0028)
class UWeeklyTimerCampaignRequirement : public UCampaignRequirement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeeklyTimerCampaignRequirement");
		return ptr;
	}


	struct FTimespan GetWeeklyTimeLeft(class AFSDPlayerController** Player);
	struct FTimespan GetTimeUntillNewCampaign(class AFSDPlayerController** Player);
	bool GetHasCompleted(class UCampaign** Campaign, class AFSDPlayerController** Player);
};


// Class FSD.RetirementCampaignRequirement
// 0x0010 (0x0038 - 0x0028)
class URetirementCampaignRequirement : public UCampaignRequirement
{
public:
	class UPlayerCharacterID*                          characterID;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelRequirement;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RetirementCampaignRequirement");
		return ptr;
	}

};


// Class FSD.AnyRetiredCampaignRequirement
// 0x0000 (0x0028 - 0x0028)
class UAnyRetiredCampaignRequirement : public UCampaignRequirement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnyRetiredCampaignRequirement");
		return ptr;
	}

};


// Class FSD.CamapaignCompletedRequirement
// 0x0008 (0x0030 - 0x0028)
class UCamapaignCompletedRequirement : public UCampaignRequirement
{
public:
	class UClass*                                      Campaign;                                                 // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CamapaignCompletedRequirement");
		return ptr;
	}

};


// Class FSD.CapacityHoldingItemAggregator
// 0x0020 (0x01A8 - 0x0188)
class UCapacityHoldingItemAggregator : public UCapacityBasedItemAggregator
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0188(0x0010) MISSED OFFSET
	int                                                MaxAmmo;                                                  // 0x0198(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                AmmoCount;                                                // 0x019C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               UseRejoin;                                                // 0x01A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CapacityHoldingItemAggregator");
		return ptr;
	}


	void UseAmmo(int* count);
	void SetMaxAmmo(int* InMaxAmmo, bool* InChangeCurrentAmount);
	void Resupply(float* percentage);
	void OnRep_MaxAmmo();
	void OnRep_AmmoCount();
	void AddAmmo(int* amount);
};


// Class FSD.CappedResource
// 0x0050 (0x0078 - 0x0028)
class UCappedResource : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnChanged;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIncreased;                                              // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFull;                                                   // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UResourceData*                               Data;                                                     // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              currentAmount;                                            // 0x0060(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxAmount;                                                // 0x0064(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              TotalCollected;                                           // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                FullFlag;                                                 // 0x006C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CappedResource");
		return ptr;
	}


	float TransferAll(class UCappedResource** Receiver);
	float Transfer(float* amount, class UCappedResource** Receiver);
	void OnRep_FullFlag(int* OldValue);
	void OnRep_CurrentAmount(float* OldAmount);
	bool IsObjectiveResource(class UObject** WorldContext, bool* IsCompleted);
	bool IsFull();
	bool IsEmpty();
	bool IsCraftingResource();
	struct FText GetTitle();
	struct FColor GetColor();
	float GetCapacityPct();
	float Deduct(float* amount);
	float Add(float* amount);
};


// Class FSD.UsableComponentBase
// 0x0028 (0x0120 - 0x00F8)
class UUsableComponentBase : public UActorComponent
{
public:
	float                                              UseCooldown;                                              // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               MustBeGroundedToUse;                                      // 0x00FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanUseStrict;                                             // 0x00FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00FE(0x0002) MISSED OFFSET
	class UUseAnimationSetting*                        AnimationSettings;                                        // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class USceneComponent*                             RestrictToCollider;                                       // 0x0110(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EUseRestriction                                    UseRestrictionAllowance;                                  // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UsableComponentBase");
		return ptr;
	}


	struct FText GetUseText(class APlayerCharacter** user);
	bool GetShowUsingUI();
	bool GetHideProgressBar(class APlayerCharacter** user);
	bool GetHideActionText(class APlayerCharacter** user);
};


// Class FSD.UsableComponent
// 0x0028 (0x0148 - 0x0120)
class UUsableComponent : public UUsableComponentBase
{
public:
	class UDialogDataAsset*                            ShoutBegin;                                               // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       UseText;                                                  // 0x0128(0x0018) (Edit)
	bool                                               ResetOnFail;                                              // 0x0140(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SwitchToUsingState;                                       // 0x0141(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0142(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UsableComponent");
		return ptr;
	}


	void SetUseText(struct FText* NewText);
	bool HasDuration();
};


// Class FSD.InstantUsable
// 0x0038 (0x0180 - 0x0148)
class UInstantUsable : public UUsableComponent
{
public:
	struct FScriptMulticastDelegate                    OnUsedBy;                                                 // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUsableChanged;                                          // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bShowUsingUI;                                             // 0x0168(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	class USoundCue*                                   AudioCompletedUse;                                        // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Usable;                                                   // 0x0178(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InstantUsable");
		return ptr;
	}


	void SetCanUse(bool* canUse);
	void OnRep_Usable();
};


// Class FSD.CarriableInstantUsable
// 0x0000 (0x0180 - 0x0180)
class UCarriableInstantUsable : public UInstantUsable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CarriableInstantUsable");
		return ptr;
	}

};


// Class FSD.CarriableComponent
// 0x0040 (0x0138 - 0x00F8)
class UCarriableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPickedUp;                                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDropped;                                                // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class APlayerCharacter*                            CarriedBy;                                                // 0x0118(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EUseRestriction                                    UseRestriction;                                           // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	struct FVector                                     Offset;                                                   // 0x0124(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0130(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CarriableComponent");
		return ptr;
	}


	bool PickupItem(class APlayerCharacter** byCharacter);
	void OnRep_CarriedBy();
	void DropItem();
};


// Class FSD.ResourceData
// 0x00B8 (0x00E8 - 0x0030)
class UResourceData : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       TitlePlural;                                              // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FColor                                      Color;                                                    // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	class UTexture2D*                                  Icon;                                                     // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuyingPrice;                                              // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SellingPrice;                                             // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMissionStat*                                MinedMissionStat;                                         // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCraftingMaterial;                                       // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AffectedByMutators;                                       // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleToMissionLength;                                     // 0x009A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleToHazardLevel;                                       // 0x009B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x009C(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.ResourceData.Spawnable
	bool                                               IsWholeNumberResource;                                    // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	int                                                CreditValue;                                              // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                XPValue;                                                  // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x00D4(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceData");
		return ptr;
	}


	float GetOwnedAmount(class UObject** WorldContextObject);
};


// Class FSD.CarvedResourceData
// 0x0038 (0x0120 - 0x00E8)
class UCarvedResourceData : public UResourceData
{
public:
	class UCarvedResourceCreator*                      ResourceCreator;                                          // 0x00E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.CarvedResourceData.CarvedResourceCreator
	float                                              UnitsPerCarver;                                           // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x011C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CarvedResourceData");
		return ptr;
	}

};


// Class FSD.CaveEntranceComponent
// 0x0000 (0x0580 - 0x0580)
class UCaveEntranceComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveEntranceComponent");
		return ptr;
	}

};


// Class FSD.CaveEntrance
// 0x0010 (0x0348 - 0x0338)
class ACaveEntrance : public AGenerationItem
{
public:
	class UCaveEntranceComponent*                      CaveEntranceComponent;                                    // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	ECaveEntranceType                                  EntranceType;                                             // 0x0340(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               HasBeenConverted;                                         // 0x0341(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0342(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveEntrance");
		return ptr;
	}

};


// Class FSD.SpawnActorItem
// 0x0038 (0x0370 - 0x0338)
class ASpawnActorItem : public AGenerationItem
{
public:
	class UClass*                                      ActorToSpawn;                                             // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EItemAdjustmentType                                Adjustment;                                               // 0x0340(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0341(0x0003) MISSED OFFSET
	struct FVector                                     ScaleMin;                                                 // 0x0344(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScaleMax;                                                 // 0x0350(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationDelta;                                            // 0x035C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	class UBoxComponent*                               Box;                                                      // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpawnActorItem");
		return ptr;
	}

};


// Class FSD.DropPodCalldownLocationItem
// 0x0008 (0x0340 - 0x0338)
class ADropPodCalldownLocationItem : public AGenerationItem
{
public:
	class UClass*                                      CalldownClass;                                            // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DropPodCalldownLocationItem");
		return ptr;
	}

};


// Class FSD.SubRoomItem
// 0x0010 (0x0348 - 0x0338)
class ASubRoomItem : public AGenerationItem
{
public:
	class URoomGenerator*                              RoomGenerator;                                            // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Layer;                                                    // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0344(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SubRoomItem");
		return ptr;
	}

};


// Class FSD.ProceduralSetup
// 0x0288 (0x05B8 - 0x0330)
class AProceduralSetup : public AActor
{
public:
	bool                                               ShowRoomEntrances;                                        // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShowPathObstacles;                                        // 0x0331(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShowItemNoisePattern;                                     // 0x0332(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0333(0x0001) MISSED OFFSET
	int                                                Seed;                                                     // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseRandomSeed;                                            // 0x0338(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	struct FRandomStream                               RandomStream;                                             // 0x0340(0x0008) (BlueprintVisible, ZeroConstructor, Transient)
	struct FRandomStream                               RandomStreamServer;                                       // 0x0348(0x0008) (BlueprintVisible, ZeroConstructor, Transient)
	struct FRandomStream                               RandomStreamAsync;                                        // 0x0350(0x0008) (BlueprintVisible, ZeroConstructor, Transient)
	struct FRandomStream                               RandomStreamAsyncServer;                                  // 0x0358(0x0008) (BlueprintVisible, ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnEncounterSpawnedEvent;                                  // 0x0360(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData02[0x40];                                      // 0x0370(0x0040) MISSED OFFSET
	TArray<struct FVector>                             ImportantLocations;                                       // 0x03B0(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03C0(0x0008) MISSED OFFSET
	class USpecialEvent*                               ForcedSpecialEvent;                                       // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USpecialEvent*                               ForcedTreasure;                                           // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x03D8(0x0028) MISSED OFFSET
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x0400(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVeinResource>                       VeinResources;                                            // 0x0410(0x0010) (ZeroConstructor, Transient)
	TArray<struct FCarvedResource>                     CarvedResources;                                          // 0x0420(0x0010) (ZeroConstructor, Transient)
	class UGlobalMissionParameters*                    GlobalMissionParameters;                                  // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionDNA;                                               // 0x0438(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGemResourceAmount>                  GemResourcesToGenerate;                                   // 0x0440(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0450(0x0008) MISSED OFFSET
	TArray<struct FCollectableSpawnableItem>           CollectablesToGenerate;                                   // 0x0458(0x0010) (ZeroConstructor, Transient)
	ESpawnSettings                                     SpawnSettings;                                            // 0x0468(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanSpawnSpecialEvents;                                    // 0x0469(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CreateDirt;                                               // 0x046A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x5];                                       // 0x046B(0x0005) MISSED OFFSET
	class UCaveInfluencer*                             DirtInfluencer;                                           // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DirtInfluencerRange;                                      // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x047C(0x0008) MISSED OFFSET
	float                                              PathZPenalty;                                             // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PathDirectionPenalty;                                     // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0xC];                                       // 0x048C(0x000C) MISSED OFFSET
	TArray<struct FRoomNode>                           Rooms;                                                    // 0x0498(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<struct FTunnelNode>                         Tunnels;                                                  // 0x04A8(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	struct FGeneratedInfluenceSets                     GeneratedInfluenceSets;                                   // 0x04B8(0x0018) (BlueprintVisible, Transient)
	struct FGeneratedInstantCarvers                    GeneratedInstantCarvers;                                  // 0x04D0(0x0028) (BlueprintVisible, Transient)
	class UBiome*                                      Biome;                                                    // 0x04F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              missionLength;                                            // 0x0500(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	class URoomDecorationObject*                       MiningpodCalldownLocationDecoration;                      // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPathObstacle>                       PathObstacles;                                            // 0x0510(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	struct FInfluenceMap                               InfluenceMap;                                             // 0x0520(0x0050) (BlueprintVisible, Transient)
	TArray<class UResourceData*>                       SpawnedResources;                                         // 0x0570(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	float                                              CaveDepth;                                                // 0x0580(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	class AActor*                                      PostProcessActor;                                         // 0x0588(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class USpecialEvent*                               SpecialEvent;                                             // 0x0590(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x20];                                      // 0x0598(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProceduralSetup");
		return ptr;
	}


	void SpawnSpecialEvents();
	void SpawnObjectiveEncounter();
	void STATIC_SpawnItemsDepths_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo, int* Depth);
	void STATIC_SpawnItems_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo);
	void SpawnItems();
	void SpawnEncounters();
	void SetSeed(int* Seed);
	void SetObjectivesCompleted();
	void ResetData();
	void RemoveBLockedEntrances();
	void OnPLSDataRecieved();
	void OnObjectivesCompleted();
	bool IsGeneratedDataReady();
	class UMissionDNA* GetMissionDNA();
	class ADeepCSGWorld* GetCSGWorld();
	void STATIC_GenerateRoomsFromGraph_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo);
	void GenerateRoomsFromGraph();
	void GenerateRoomGenerator();
	void STATIC_GenerateResourceVeins_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo);
	void GenerateResourceVeins();
	void STATIC_GeneratePostCarveRooms_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo);
	void GeneratePostCarveRooms();
	void GenerateLandscape();
	struct FVector FindLocationInDirection(struct FVector* Origin, struct FVector* Direction, float* horizontalDeviation, float* verticalDeviation, struct FRandRange* distance, float* additionalDistance);
	void FindEntrancesForAllConnections();
	void STATIC_FillTunnels_Async(class AProceduralSetup** setup, struct FLatentActionInfo* LatentInfo);
	void FillTunnels();
	void EndRoom(int* ID);
	void DoneCarving();
	bool DoAsyncThreadGeneration();
	void CreateTunnelPaths();
	void CreateSecretRooms();
	int CreateItemDepths();
	void CreateGeneratedInfluenceSet();
	void CreateAdditionalRooms();
	int ConnectRooms(struct FRoomNode* From, struct FRoomNode* to);
	int ConnectRoomIds(int* fromID, int* toID);
	void CommitCarving(bool* finalCommit, bool* generateMesh);
	void CarveWithGeneratedInstantCarvers();
	int BeginRoom(struct FVector* Location, float* Rotation, bool* CanHaveEnemies, class URoomGenerator** baseGenerator, float* resourceMultiplayer, struct FVector* outCenter, struct FRoomNode* outRoom);
	void BeginLiveGeneration();
	void BeginGenerating();
	void AddToRoom(int* ID, struct FVector* Location, float* Rotation, class URoomGenerator** additionalRoomGenerator);
	void AddRoomToInitialState(struct FRoomNode* RoomNode);
	int AddRoom(struct FVector* Location, bool* CanHaveEnemies, class URoomGeneratorBase** RoomGenerator, bool* canBeRotated, float* ResourceMultiplier, struct FVector* outCenter, struct FRoomNode* outRoom);
	void AddInfluenceToTunnelEntrances(class UCaveInfluencer** Influencer, float* Range);
	void AddDebrisVariantsToRooms();
	void AddDebrisCollider(struct FDebrisCapsule* Capsule);
	void AddCaveInfluence(class UCaveInfluencer** Influencer, struct FVector* Location, float* Range);
	void AddAirParticlesCollider(struct FDebrisCapsule* Capsule);
};


// Class FSD.CaveBurner
// 0x0038 (0x05F0 - 0x05B8)
class ACaveBurner : public AProceduralSetup
{
public:
	float                                              RoomRadius;                                               // 0x05B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       RoomTags;                                                 // 0x05C0(0x0020) (Edit)
	bool                                               CanOnlyBeUsedOnce;                                        // 0x05E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05E1(0x0007) MISSED OFFSET
	class URoomGenerator*                              RoomGenerator;                                            // 0x05E8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveBurner");
		return ptr;
	}

};


// Class FSD.RoomBurner
// 0x00B8 (0x03E8 - 0x0330)
class ARoomBurner : public AActor
{
public:
	bool                                               LiveUpdateEditor;                                         // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ERoomMirror                                        MirrorTest;                                               // 0x0331(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0332(0x0006) MISSED OFFSET
	class URoomGenerator*                              RoomGenerator;                                            // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              RoomRadius;                                               // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ERoomMirroringSupport                              MirrorSupport;                                            // 0x0344(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShowRoomCollider;                                         // 0x0345(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0346(0x0002) MISSED OFFSET
	struct FGameplayTagContainer                       RoomTags;                                                 // 0x0348(0x0020) (Edit)
	int                                                Seed;                                                     // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class UBiome*                                      Biome;                                                    // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDifficultySetting*                          Difficulty;                                               // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               GenerateDebris;                                           // 0x0380(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               GenerateItems;                                            // 0x0381(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               GenerateResources;                                        // 0x0382(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SpawnEncounters;                                          // 0x0383(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0384(0x0004) MISSED OFFSET
	class UEnemyDescriptor*                            TestEnemy;                                                // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TestEnemyCount;                                           // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	class UMissionMutator*                             TestMutator;                                              // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionWarning*                             TestWarning;                                              // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USpecialEvent*                               TestSpecialEvent;                                         // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USpecialEvent*                               TestTreasure;                                             // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionTemplate*                            MissionTemplate;                                          // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionTemplate*                            CustomMissionTemplate;                                    // 0x03C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AProceduralSetup*                            PLSLiveEditor;                                            // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET
	class URoomGenerator*                              LiveEditRoomGenerator;                                    // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomBurner");
		return ptr;
	}


	void SpawnEncounter(class AProceduralSetup** setup);
};


// Class FSD.RoomPieceBurner
// 0x0018 (0x0400 - 0x03E8)
class ARoomPieceBurner : public ARoomBurner
{
public:
	class URoomPiece*                                  RoomPiece;                                                // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<ERoomPieceSide>                             ConnectedSides;                                           // 0x03F0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomPieceBurner");
		return ptr;
	}

};


// Class FSD.InfluenceTester
// 0x0010 (0x0340 - 0x0330)
class AInfluenceTester : public AActor
{
public:
	class UCaveInfluencer*                             Influencer;                                               // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            Sphere;                                                   // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InfluenceTester");
		return ptr;
	}

};


// Class FSD.EnemyPawn
// 0x0050 (0x0428 - 0x03D8)
class AEnemyPawn : public AFSDPawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET
	class UEnemyHealthComponent*                       Health;                                                   // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnStatsComponent*                         Stats;                                                    // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemyPawnAfflictionComponent*               affliction;                                               // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemyComponent*                             enemy;                                                    // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       CenterMassSocketName;                                     // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FQueuedMontage                              QueuedMontage;                                            // 0x0408(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0418(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyPawn");
		return ptr;
	}


	void OnRep_QueuedMontage();
	class USkeletalMeshComponent* GetMesh();
};


// Class FSD.CaveLeech
// 0x00B0 (0x04D8 - 0x0428)
class ACaveLeech : public AEnemyPawn
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGrabberComponent*                           GrabberComponent;                                         // 0x0430(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              BiteDamage;                                               // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BitesPerSecond;                                           // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceXY;                                            // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GrapDistance;                                             // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GrapDelay;                                                // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TentacleSpeed;                                            // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TentacleRetractSpeed;                                     // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RetractDuration;                                          // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TentaclePullSpeed;                                        // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TentacleDropPlayerSpeed;                                  // 0x045C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TentacleDropGroundDistance;                               // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDropPlayerDuration;                                    // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeadInterpSpeed;                                          // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TentacleAttachOffset;                                     // 0x046C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BiteDistance;                                             // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RevivedGracePeriod;                                       // 0x0474(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UPawnAffliction*                             CaveLeechSenseAffliction;                                 // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0480(0x0008) MISSED OFFSET
	float                                              StateTime;                                                // 0x0488(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ECaveLeechState                                    State;                                                    // 0x048C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x048D(0x0003) MISSED OFFSET
	struct FVector_NetQuantize                         TentacleLocation;                                         // 0x0490(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FVector_NetQuantize                         TentacleVelocity;                                         // 0x049C(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UHealthComponent*                            HealthTarget;                                             // 0x04B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TentacleHead;                                             // 0x04B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x04C0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveLeech");
		return ptr;
	}


	void OnRep_State();
	struct FVector GetTentacleTargetLocation();
	struct FVector GetMouthLocation();
	class AActor* GetCurrentTarget();
	void Died(class UHealthComponentBase** HealthComponent);
	void Damaged(float* amount);
	void BP_OnTentacleLocationChanged(struct FVector* Location);
	void BP_OnStateChanged(ECaveLeechState* NewState);
	void BP_OnBite(class UHealthComponent** TargetHealth);
};


// Class FSD.CaveLeechAnimInstance
// 0x0040 (0x02B0 - 0x0270)
class UCaveLeechAnimInstance : public UAnimInstance
{
public:
	class ACaveLeech*                                  CaveLeech;                                                // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             CaveLeechHead;                                            // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FRotator                                    BaseRotation;                                             // 0x0280(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HeadLocation;                                             // 0x028C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    HeadRotation;                                             // 0x0298(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIdle;                                                    // 0x02A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTracking;                                                // 0x02A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPulling;                                                 // 0x02A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRetracting;                                              // 0x02A7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDying;                                                   // 0x02A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDead;                                                    // 0x02A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bFrozen;                                                  // 0x02AA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bBiting;                                                  // 0x02AB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveLeechAnimInstance");
		return ptr;
	}

};


// Class FSD.CaveObject
// 0x0000 (0x0330 - 0x0330)
class ACaveObject : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveObject");
		return ptr;
	}


	void TriggerNetworkUpdate();
	void ResumeNetworkUpdates();
	void Recieve_OnGameStarted();
	void PauseNetworkUpdates();
};


// Class FSD.CaveScriptComponent
// 0x0000 (0x00F8 - 0x00F8)
class UCaveScriptComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveScriptComponent");
		return ptr;
	}

};


// Class FSD.CaveVine
// 0x0068 (0x0398 - 0x0330)
class ACaveVine : public AActor
{
public:
	TEnumAsByte<ECollisionChannel>                     GroundCollisionChannel;                                   // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	float                                              IdleSwingSpeed;                                           // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChaseSpeed;                                               // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxReach;                                                 // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundOffset;                                             // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseRadius;                                              // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseSpeed;                                               // 0x0348(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	class USplineMeshComponent*                        SplineMeshComponent;                                      // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             VineHead;                                                 // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FVector                                     VineVelocity;                                             // 0x0360(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     VineLocation;                                             // 0x036C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     VineStartLocation;                                        // 0x0378(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UHealthComponent>             Target;                                                   // 0x0384(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x038C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveVine");
		return ptr;
	}


	void BP_OnTargetChanged(class UHealthComponent** NewTarget);
	void BP_OnInitialized();
};


// Class FSD.Maggot
// 0x0008 (0x0448 - 0x0440)
class AMaggot : public ADeepPathfinderCharacter
{
public:
	class USimpleHealthComponent*                      HealthComponent;                                          // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Maggot");
		return ptr;
	}

};


// Class FSD.CaveWorm
// 0x0008 (0x0448 - 0x0440)
class ACaveWorm : public ADeepPathfinderCharacter
{
public:
	class USimpleHealthComponent*                      Health;                                                   // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveWorm");
		return ptr;
	}


	class AResourceChunk* STATIC_SpawnResource(class UObject** WorldContext, class UResourceData** Data, float* Size, struct FTransform* Transform, struct FVector* Impulse, struct FVector* DropOffset);
	void DropResource(class UResourceData** Data, float* Size, struct FVector* Impulse, struct FVector* DropOffset);
};


// Class FSD.CellIdFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UCellIdFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CellIdFunctionLibrary");
		return ptr;
	}

};


// Class FSD.Test
// 0x0000 (0x0270 - 0x0270)
class UTest : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Test");
		return ptr;
	}

};


// Class FSD.CharacterCameraController
// 0x0020 (0x0118 - 0x00F8)
class UCharacterCameraController : public UActorComponent
{
public:
	float                                              StartFOV;                                                 // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              targetFov;                                                // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetFOVSpeed;                                           // 0x0100(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCameraComponent*                            Camera;                                                   // 0x0110(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterCameraController");
		return ptr;
	}


	void ResetFOV(float* FadeSpeed);
	void FOVChanged(float* NewFOV);
	void FadeToFOVRelative(float* targetFov, float* FadeSpeed);
	void FadeToFOV(float* targetFov, float* FadeSpeed);
};


// Class FSD.CharacterGearComponent
// 0x0148 (0x0240 - 0x00F8)
class UCharacterGearComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	class UCharacterVanityItems*                       AvailableVanityItems;                                     // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHeadVanityItem*                             DefaultHead;                                              // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBeardVanityItem*                            DefaultBeard;                                             // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UArmorVanityItem*                            DefaultArmor;                                             // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBeardColorVanityItem*                       DefaultBeardColor;                                        // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemMaterialVanityItem*                     DefaultSkinColor;                                         // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UEyeBrowsVanityItem*                         DefaultEyebrows;                                          // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMoustacheVanityItem*                        DefaultMoustache;                                         // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USideburnsVanityItem*                        DefaultSideburns;                                         // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBeardColorVanityItem*                       ShownBeardColor;                                          // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInterface*                          ArmorMaterial;                                            // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EHeadVanityType                                    HeadVanityType;                                           // 0x0158(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0159(0x0007) MISSED OFFSET
	TArray<class UVanityItem*>                         EquippedVanity;                                           // 0x0160(0x0010) (Net, ZeroConstructor, Transient)
	class UMaterialInterface*                          SkinMaterial;                                             // 0x0170(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0178(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x58];                                      // 0x0188(0x0058) MISSED OFFSET
	TMap<EVanitySlot, class USkeletalMeshComponent*>   VanityMeshes;                                             // 0x01E0(0x0050) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0230(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterGearComponent");
		return ptr;
	}


	void UpdateMeshes();
	void UpdateEquippedVanity();
	void SetEquippedVanityInViewer(TArray<class UVanityItem*>* Vanity);
	void Server_SetEquippedVanity(TArray<class UVanityItem*>* equippedItems);
	class UVanityItem* STATIC_Receive_GetEquippedVanityItem(class UObject** WorldContextObject, class UClass** Character, EVanitySlot* Slot);
	class UCharacterVanityItems* Receive_GetAvailableVanityItems(class UObject** WorldContextObject, class UClass** Character);
	void OnRep_EquippedVanity();
	class UVanityItem* GetEquippedVanityItem(EVanitySlot* Slot);
	class UCharacterVanityItems* GetAvailableVanityItems();
};


// Class FSD.CharacterIntoxicationComponent
// 0x0050 (0x0148 - 0x00F8)
class UCharacterIntoxicationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIntoxicationChanged;                                    // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPassOutDrunk;                                           // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class APlayerCharacter*                            Character;                                                // 0x0118(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EIntoxicationState                                 CurrentState;                                             // 0x0120(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	struct FLerpingPercent                             IntoxicationPercent;                                      // 0x0124(0x0008) (Net, Transient)
	float                                              IntoxicationLerpSpeed;                                    // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeDrunk;                                                // 0x0130(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FCountDownFloat                             SoberingUpCoolDown;                                       // 0x0134(0x000C) (Edit)
	unsigned char                                      SoberingPercent;                                          // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0141(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterIntoxicationComponent");
		return ptr;
	}


	void ReceiveStateChange(EIntoxicationState* NewState);
	void ReceivePassOutDrunk();
	void ReceiveDrunkTick(float* DeltaTime, float* DrunkTime);
	void ReceiveDrunkEnd();
	void ReceiveDrunkBegin();
	void PassOutDrunkSignature__DelegateSignature(class APlayerCharacter** Player);
	bool IsPassOutDrunk();
	bool IsOnSpaceRig();
	bool IsLocallyControlled();
	bool IsDrunk();
	void IntoxicationProgressSignature__DelegateSignature(class APlayerCharacter** Player, float* Progress);
	bool HasAuthority();
	float GetSoberingUpCoolDown();
	float GetIntoxicationProgressMapped(class UCurveFloat** Curve);
	float GetIntoxicationProgress();
	int GetAlcoholPct(EDrinkableAlcoholStrength* Strength);
	void Consume(class UDrinkableDataAsset** Drinkable);
	void ClearIntoxication();
};


// Class FSD.CharacterSettings
// 0x0130 (0x0160 - 0x0030)
class UCharacterSettings : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.CharacterSettings.RankedHeroClasses
	unsigned char                                      UnknownData01[0x10];                                      // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.CharacterSettings.TestHeroClasses
	TArray<class UClass*>                              LoadedClasses;                                            // 0x0050(0x0010) (ZeroConstructor, Transient)
	TArray<struct FText>                               PlayerRankNames;                                          // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        CharacterXPLevels;                                        // 0x0070(0x0010) (Edit, ZeroConstructor)
	TMap<struct FGuid, class UPlayerCharacterID*>      PlayerCharacterIDMap;                                     // 0x0080(0x0050) (Edit, ZeroConstructor, EditConst)
	TArray<class UPlayerCharacterID*>                  PlayerCharacterIDs;                                       // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData02[0x28];                                      // 0x00E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.CharacterSettings.CarriableBagClass
	class UUseAnimationSetting*                        ThrowItemAnimSettings;                                    // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UPlayerCharacterID*, class UCharacterVanityItems*> CharacterVanityItems;                                     // 0x0110(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterSettings");
		return ptr;
	}


	void PreloadAllInventories(class UAsyncManager** AsyncManager);
	class UPlayerCharacterID* GetPlayerCharacterID(struct FGuid* ID);
};


// Class FSD.CharacterRecoilComponent
// 0x0030 (0x0128 - 0x00F8)
class UCharacterRecoilComponent : public UActorComponent
{
public:
	struct FVector                                     Recoil;                                                   // 0x00F8(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     RecoilVelocity;                                           // 0x0104(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     PrevError;                                                // 0x0110(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x011C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterRecoilComponent");
		return ptr;
	}

};


// Class FSD.CharacterStateComponent
// 0x0038 (0x0130 - 0x00F8)
class UCharacterStateComponent : public UActorComponent
{
public:
	unsigned char                                      StateId;                                                  // 0x00F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UDialogDataAsset*                            EnterStateShout;                                          // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ExitStateShout;                                           // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            AttentionShout;                                           // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPlayerMovementComponent*                    PlayerMovement;                                           // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterStateComponent");
		return ptr;
	}


	void ReceiveStateTick(float* DeltaTime);
	void ReceiveStateExit();
	void ReceiveStateEnter();
	bool IsLocallyControlled();
	bool HasAuthority();
	float GetStateTime();
	unsigned char GetStateID();
	bool GetStateActive();
	class UPlayerMovementComponent* GetCharacterMovement();
};


// Class FSD.CharacterUseComponent
// 0x00C0 (0x01B8 - 0x00F8)
class UCharacterUseComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnDepositingBegin;                                        // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepositingEnd;                                          // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeginHoveringEvent;                                     // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndHoveringEvent;                                       // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeginUsingEvent;                                        // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndUsingEvent;                                          // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UUsableComponentBase*                        ActiveUsablee;                                            // 0x0158(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUsableComponentBase*                        HoveringUsable;                                           // 0x0160(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ActiveUsableCollider;                                     // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USphereComponent*                            UseCollider;                                              // 0x0170(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundBase*                                  AudioBeginDepositing;                                     // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioEndDepositing;                                       // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UseDistance;                                              // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EUseRestriction                                    UseRestriction;                                           // 0x018C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0198(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterUseComponent");
		return ptr;
	}


	void Server_SetCanUse(EUseRestriction* UseRestriction);
	void Server_EndUse();
	void Server_BeginUse(class UUsableComponentBase** Usable);
	void OnRep_ActiveUsablee(class UUsableComponentBase** lastUsable);
	void OnCharacterStateChanged(ECharacterState* NewState);
	bool IsLookingAtUsable();
	bool IsLookingAtDepositable();
	float GetUseProgress();
	bool GetIsUsing();
	bool GetIsDepositing();
	void All_PlaySingleUse(class UUsableComponentBase** Usable);
};


// Class FSD.CharacterSightComponent
// 0x0098 (0x0190 - 0x00F8)
class UCharacterSightComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTargetChanged;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              TargetMaxDistance;                                        // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x010C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x010D(0x0003) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0110(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       TargetActor;                                              // 0x0118(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          TargetPrimitive;                                          // 0x0120(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class USimpleObjectInfoComponent>   TargetInfo;                                               // 0x0128(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UTemperatureComponent>        TargetTemperature;                                        // 0x0130(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UPawnAfflictionComponent>     TargetAfflictions;                                        // 0x0138(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TScriptInterface<class UHealth>                    TargetHealth;                                             // 0x0140(0x0030) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TScriptInterface<class UTargetable>                TargetTargetable;                                         // 0x0150(0x0030) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetTime;                                               // 0x0160(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FReplicatedCharacterData                    ReplicatedData;                                           // 0x0164(0x0014) (Net, Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0178(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterSightComponent");
		return ptr;
	}


	void TargetChangedSignature__DelegateSignature(class AActor** NewTarget, class UPrimitiveComponent** NewPrimitive);
	void Server_UpdateTarget(class AActor** NewActor, class UPrimitiveComponent** NewPrimitive);
	void ReceiveTargetInSightTick(float* DeltaTime);
	void ReceiveTargetChanged();
};


// Class FSD.ChargedWeapon
// 0x0090 (0x07A0 - 0x0710)
class AChargedWeapon : public AAmmoDrivenWeapon
{
public:
	struct FScriptMulticastDelegate                    OnChargeChanged;                                          // 0x0710(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHeatChanged;                                            // 0x0720(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0730(0x0008) MISSED OFFSET
	class UAnimMontage*                                FP_OverheatAnim;                                          // 0x0738(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_ChargeupMontage;                                       // 0x0740(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ChargeupParticles;                                        // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    ChargeupParticleInstance;                                 // 0x0750(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             ChargeupFireMuzzleFlash;                                  // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   NormalFiresound;                                          // 0x0760(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USoundCue*                                   FullyChargedFireSound;                                    // 0x0768(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeSpeed;                                              // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Charging;                                                 // 0x0774(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0775(0x0003) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x0778(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ShotCostAtFullCharge;                                     // 0x077C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TotalHeat;                                                // 0x0780(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0784(0x0004) MISSED OFFSET
	float                                              CoolingRate;                                              // 0x0788(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HeatPerSecondWhileCharging;                               // 0x078C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatPerSecondWhenCharged;                                 // 0x0790(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatPerNormalShot;                                        // 0x0794(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeatPerChargedShot;                                       // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x079C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedWeapon");
		return ptr;
	}


	void SetOverheated(bool* isOverheated);
	void Server_SetIsCharging(bool* isChargingValue);
	void RecieveChargeProgressChanged(float* NewChargeProgress);
	void ReceiveOverheatedChanged(bool* isOverheated);
	bool GetIsCharging();
};


// Class FSD.ChargedWeaponAnimInstance
// 0x0020 (0x0290 - 0x0270)
class UChargedWeaponAnimInstance : public UAnimInstance
{
public:
	float                                              ChargeupPlayRateSpeedChange;                              // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargedownPlayRateSpeedChange;                            // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxChargeupPlayRate;                                      // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	class AChargedWeapon*                              Weapon;                                                   // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedWeaponAnimInstance");
		return ptr;
	}

};


// Class FSD.CharacterSelectionSwitcher
// 0x0000 (0x0330 - 0x0330)
class ACharacterSelectionSwitcher : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterSelectionSwitcher");
		return ptr;
	}


	void OnVictoryPoseChanged(class UVictoryPose** VictoryPose);
	void OnVanityItemEquipped(EVanitySlot* Slot);
	void Hide();
	class APlayerCharacter* GetActiveCharacter();
};


// Class FSD.ProjectileBase
// 0x0088 (0x03B8 - 0x0330)
class AProjectileBase : public AActor
{
public:
	struct FProjectileImpact                           ProjectileImpact;                                         // 0x0330(0x0030) (Net, Transient)
	bool                                               Exploded;                                                 // 0x0360(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DoOnImpact;                                               // 0x0361(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               DoOnImpact2;                                              // 0x0362(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0363(0x0005) MISSED OFFSET
	class USphereComponent*                            CollisionComponent;                                       // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	float                                              LifeSpan;                                                 // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VelocityMultiplier;                                       // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GravityMultiplier;                                        // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AffectedByDifficultySpeedModifier;                        // 0x037C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3B];                                      // 0x037D(0x003B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProjectileBase");
		return ptr;
	}


	void OnRep_ProjectileImpact();
	void OnImpacted(struct FHitResult* HitResult);
	void OnClientInitialized();
	void MakeBouncy();
	void InitVelocity(struct FVector* ShootDirection);
	int GetBoneIndex();
	void DisableAndDestroy();
	void All_SmoothPosition(struct FVector_NetQuantize* ServerPosition, float* ServerSpeed);
};


// Class FSD.Projectile
// 0x0010 (0x03C8 - 0x03B8)
class AProjectile : public AProjectileBase
{
public:
	bool                                               UseArmorDamageBoneCheck;                                  // 0x03B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03B9(0x0007) MISSED OFFSET
	class UProjectileMovementComponent*                MovementComponent;                                        // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Projectile");
		return ptr;
	}


	class AProjectileBase* STATIC_SpawnProjectile(class UObject** WorldContextObject, class UClass** projectileClass, class APawn** projectileOwner, struct FVector* Origin, struct FRotator* velocityDirection);
	class AProjectileBase* STATIC_SpawnBallisticProjectile(class UObject** WorldContextObject, class UClass** projectileClass, class APawn** projectileOwner, struct FVector* Origin, struct FVector* Velocity);
	void OnImpact(struct FHitResult* HitResult);
	class UFSDPhysicalMaterial* FindBoneIndexFromArmor(struct FHitResult* HitResult, int* outBoneIndex);
};


// Class FSD.ChargedProjectile
// 0x0008 (0x03D0 - 0x03C8)
class AChargedProjectile : public AProjectile
{
public:
	bool                                               ExplodesWhenDead;                                         // 0x03C8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               PersistentExplosion;                                      // 0x03C9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AoEDamageInFlight;                                        // 0x03CA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x03CB(0x0001) MISSED OFFSET
	float                                              DirectDamageReduction;                                    // 0x03CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedProjectile");
		return ptr;
	}


	void OnAoEDamageEnabled();
};


// Class FSD.ChromaComponent
// 0x00D0 (0x01C8 - 0x00F8)
class UChromaComponent : public UActorComponent
{
public:
	struct FLinearColor                                HealthBarColor;                                           // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DamageEffectColor;                                        // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DownedEffectColor;                                        // 0x0118(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ShieldBarColor;                                           // 0x0128(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ShieldEffectColor;                                        // 0x0138(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                WeaponColor;                                              // 0x0148(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                WeaponEquipedColor;                                       // 0x0158(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                GrenadeColor;                                             // 0x0168(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                WASDColor;                                                // 0x0178(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RessuplyColor;                                            // 0x0188(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReloadColor;                                              // 0x0198(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFSDChromaEffect                                   ActiveEffect;                                             // 0x01A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	float                                              EffectDuration;                                           // 0x01AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           EffectSeed;                                               // 0x01B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x01B4(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChromaComponent");
		return ptr;
	}


	void TriggerEffect(EFSDChromaEffect* effect);
};


// Class FSD.ExampleActor
// 0x0020 (0x0350 - 0x0330)
class AExampleActor : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnExampleUpdatedEvent;                                    // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              Field;                                                    // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0344(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExampleActor");
		return ptr;
	}


	void Server_ExampleFunction();
	void Client_ExampleFunction();
	void All_ExampleFunction();
};


// Class FSD.CollectableResourceData
// 0x0040 (0x0128 - 0x00E8)
class UCollectableResourceData : public UResourceData
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x00E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Rarity;                                                   // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InfluenceRadius;                                          // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UDebrisBase*>                         Debris;                                                   // 0x00F8(0x0010) (Edit, ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.CollectableResourceData.CollectableClasses
	TArray<class UClass*>                              CollectableClassesLoaded;                                 // 0x0118(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CollectableResourceData");
		return ptr;
	}

};


// Class FSD.CharacterShoutsData
// 0x00B0 (0x00E0 - 0x0030)
class UCharacterShoutsData : public UDataAsset
{
public:
	struct FCharacterShouts                            Shouts;                                                   // 0x0030(0x00B0) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterShoutsData");
		return ptr;
	}

};


// Class FSD.ShoutWidget
// 0x0028 (0x0258 - 0x0230)
class UShoutWidget : public UUserWidget
{
public:
	TWeakObjectPtr<class APlayerCharacter>             Sender;                                                   // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       Text;                                                     // 0x0238(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient)
	float                                              Duration;                                                 // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSubtitle;                                               // 0x0254(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0255(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ShoutWidget");
		return ptr;
	}


	void OnShout();
	struct FString STATIC_GetTimeString(int* Seconds);
	void STATIC_GetSplitTimeString(int* Seconds, struct FString* MinutesString, struct FString* SecondsString);
	struct FString GetCountDownString(int* Seconds);
};


// Class FSD.CommunicationComponent
// 0x01E0 (0x02D8 - 0x00F8)
class UCommunicationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMissionShout;                                           // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionShoutEnd;                                        // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMixerAnnouncement;                                      // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerShouted;                                          // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionControlFinished;                                 // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               ShoutingEnabled;                                          // 0x0148(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	class UClass*                                      ShoutWidgetType;                                          // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterShoutsData*                        CharacterShouts;                                          // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinShoutDelay;                                            // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CloseRangeShoutDistance;                                  // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	TMap<class UDialogDataAsset*, float>               DelayedShouts;                                            // 0x0170(0x0050) (ZeroConstructor, Transient)
	struct FGameplayTagContainer                       KillShoutAllowedTags;                                     // 0x01C0(0x0020) (Edit)
	class UAudioComponent*                             MissionShoutComponent;                                    // 0x01E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x01E8(0x0008) MISSED OFFSET
	bool                                               bMissionControlPaused;                                    // 0x01F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x01F1(0x0007) MISSED OFFSET
	TMap<class APlayerCharacter*, class UShoutWidget*> ActiveShouts;                                             // 0x01F8(0x0050) (ExportObject, ZeroConstructor, Transient)
	TArray<struct FActiveOutline>                      ActiveOutlines;                                           // 0x0248(0x0010) (ZeroConstructor, Transient)
	class APlayerCharacter*                            Character;                                                // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDialogDataAsset*                            LastShout;                                                // 0x0260(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAudioComponent*                             ShoutAudioComponent;                                      // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TMap<class UDialogDataAsset*, float>               ShoutHistory;                                             // 0x0270(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x02C0(0x0008) MISSED OFFSET
	TArray<struct FMissionShoutQueueItem>              MissionShoutQueue;                                        // 0x02C8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunicationComponent");
		return ptr;
	}


	void ShoutCustomOrDefault(class UDialogDataAsset** CustomShout, EShoutType* DefaultShout);
	void ShoutCustom(class UDialogDataAsset** Shout);
	void Shout(EShoutType* Shout);
	void SetMissionControlPaused(bool* IsPaused);
	void ServerShout(class UDialogDataAsset** Shout);
	void ServerMixerAnnouncement(struct FMixerAnnouncement* Announcement);
	void ServerMissionShout(class UDialogDataAsset** Shout);
	class UAudioComponent* STATIC_PlayPitchedByClass(class UObject** WorldContextObject, class UClass** CharacterClass, class USoundBase** Sound, class UDialogDataAsset** Shout, EShoutType* ShoutType, class UAudioComponent** AudioComponent);
	class UAudioComponent* PlayPitched(class USoundBase** Sound, class UDialogDataAsset** Shout, EShoutType* ShoutType, bool* IgnoreCoolDown, class UAudioComponent** AudioComponent, class UObject** WorldContextObject);
	void OnDamagedEnemy(TScriptInterface<class UHealth>* EnemyHealth, float* Damage, float* DamageModifier, float* HealthRemaining);
	void STATIC_MixerAnnouncementLocalOnly(class UObject** WorldContext, struct FMixerAnnouncement* Announcement);
	void STATIC_MixerAnnouncement(class UObject** WorldContext, struct FMixerAnnouncement* Announcement);
	int STATIC_MissionShoutLocally(class UObject** WorldContext, class UDialogDataAsset** Shout);
	void STATIC_MissionShout(class UObject** WorldContext, class UDialogDataAsset** Shout);
	bool IsMissionControlSpeaking();
	void ClientShout(class APlayerCharacter** Sender, class UDialogDataAsset** Shout, int* Index);
	void ClientMixerAnnouncement(struct FMixerAnnouncement* Announcement);
	void ClientMissionShout(class UDialogDataAsset** Shout, int* Index);
};


// Class FSD.CommnuityRewardSetup
// 0x0010 (0x0040 - 0x0030)
class UCommnuityRewardSetup : public UDataAsset
{
public:
	TArray<class UCommnuityRewardBundle*>              TierRewards;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommnuityRewardSetup");
		return ptr;
	}


	TMap<class UResourceData*, int> GetResourcesTierOnlyReward(int* Tier);
	TMap<class UResourceData*, int> GetResourcesReward(int* Tier);
	void AwardTierRewards(class UObject** WorldContext, int* Tier);
};


// Class FSD.CommunityGoalCategory
// 0x0018 (0x0048 - 0x0030)
class UCommunityGoalCategory : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunityGoalCategory");
		return ptr;
	}

};


// Class FSD.CommunityGoalFaction
// 0x0088 (0x00B8 - 0x0030)
class UCommunityGoalFaction : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       ShortDescription;                                         // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Frame;                                                    // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlateColor                                 Color;                                                    // 0x0088(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	EFSDFaction                                        FactionID;                                                // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunityGoalFaction");
		return ptr;
	}

};


// Class FSD.CommunityGoal
// 0x0068 (0x0098 - 0x0030)
class UCommunityGoal : public UDataAsset
{
public:
	bool                                               TierValuesAreInitialized;                                 // 0x0030(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0034(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               Active;                                                   // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FText                                       Title;                                                    // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       MetaDescription;                                          // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UCommunityGoalCategory*                      Category;                                                 // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECommunityGoalType                                 CommunityGoalType;                                        // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	float                                              GoalPerMemberTier1;                                       // 0x0084(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              GoalPerMemberTier2;                                       // 0x0088(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              GoalPerMemberTier3;                                       // 0x008C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCommnuityRewardSetup*                       RewardSetup;                                              // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunityGoal");
		return ptr;
	}


	float TotalTierProgress(float* Value, int* Members);
	float TierValue(ECommunityGoalTier* Tier, float* Value, int* Members);
	float TierProgress(ECommunityGoalTier* Tier, float* Value, int* Members);
	float TierGoal(ECommunityGoalTier* Tier, int* Members);
	int RewardTier(float* Value, int* Members);
	void IncrementGoal(class UObject** WorldContext, float* Value);
	struct FText STATIC_GoalToText(ECommunityGoalType* StatType, float* Value);
	struct FText GetCategoryTitle();
	bool AreTiersInitialized();
};


// Class FSD.CommunityGoalWrapper
// 0x0138 (0x0160 - 0x0028)
class UCommunityGoalWrapper : public UObject
{
public:
	bool                                               HasCGS;                                                   // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FCommunityGoalStateData                     CGSData;                                                  // 0x002C(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient)
	int                                                LastCollectedRewardID;                                    // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	struct FCommunityFactionData                       FactionData;                                              // 0x0048(0x0038) (BlueprintVisible, Transient)
	bool                                               FreeBeerRewardActive;                                     // 0x0080(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFreeBeerRewardChanged;                                  // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x40];                                      // 0x0098(0x0040) MISSED OFFSET
	struct FString                                     SteamTicket;                                              // 0x00D8(0x0010) (ZeroConstructor, Transient)
	struct FString                                     SteamBranch;                                              // 0x00E8(0x0010) (ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnFactionsDataReceived;                                   // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDiscordCGSDataEvent;                                    // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UICheck;                                                  // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGoalsInitializedDelegate;                               // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0138(0x0020) MISSED OFFSET
	bool                                               AreAllGoalsInitialized;                                   // 0x0158(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunityGoalWrapper");
		return ptr;
	}


	void UpdateAllGoalsInitialized();
	bool RewardReceived();
	void RequestGoalStateData();
	void RequestFactionsData();
	void NextPeriod();
	void InitializeGoalTierTargetValues(class UCommunityGoal** goalToInitialize);
	class UCommunityGoalFaction* GetPlayerCurrentFaction(class UObject** WorldContext);
	void ClaimRewardMessage(class UObject** WorldContext, struct FCommunityRewardNotification* rewardNotification);
	void ClaimReward();
	void CheckUI();
};


// Class FSD.ControllerIconSettings
// 0x0020 (0x0058 - 0x0038)
class UControllerIconSettings : public UDeveloperSettings
{
public:
	TArray<struct FActionIconMapping>                  Xbox_KeyIcons;                                            // 0x0038(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FActionIconMapping>                  MouseKeyboard_KeyIcons;                                   // 0x0048(0x0010) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ControllerIconSettings");
		return ptr;
	}


	bool STATIC_FindMouseKeyboardKeyIcon(struct FKey* Key, struct FActionIconMapping* KeyIcon);
	bool STATIC_FindControllerKeyIcon(struct FKey* Key, struct FActionIconMapping* KeyIcon);
};


// Class FSD.ConvertedRobot
// 0x02F8 (0x0758 - 0x0460)
class AConvertedRobot : public AEnemyDeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0460(0x0008) MISSED OFFSET
	class UEnemyComponent*                             EnemyComponent;                                           // 0x0468(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0470(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHitscanComponent*                           HitScan;                                                  // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USingleUsableComponent*                      Usable;                                                   // 0x0488(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TurretRoot;                                               // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      TurretMesh;                                               // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        MuzzleFlash;                                              // 0x04A0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         SpotLight;                                                // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LightCone;                                                // 0x04B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LaserBeam;                                                // 0x04B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ShieldRoot;                                               // 0x04C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        InnerShield;                                              // 0x04C8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        OuterShield;                                              // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             PulsatingSoundComp;                                       // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x04E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x04E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShieldChanged;                                          // 0x04F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIntroductionStart;                                      // 0x0508(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               ForceSit;                                                 // 0x0518(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0519(0x0007) MISSED OFFSET
	class USoundBase*                                  LaserSound;                                               // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  LastPowerDownSound;                                       // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PowerUpSound;                                             // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              LaserSoundComp;                                           // 0x0538(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0540(0x0010) MISSED OFFSET
	float                                              IntroductionTime;                                         // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsIntroducing;                                            // 0x0554(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IntroductionDone;                                         // 0x0555(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsGrowingShield;                                          // 0x0556(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0557(0x0001) MISSED OFFSET
	float                                              AimDownwardsOffset;                                       // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BigShieldScale;                                           // 0x055C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SmallShieldScale;                                         // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShieldGrowthRate;                                         // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LerpExp;                                                  // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumShieldSize;                                        // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetShieldSize;                                         // 0x0570(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              IdleRotationSpeed;                                        // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LaserScaleRate;                                           // 0x0578(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	float                                              MaxSearchAngle;                                           // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x24];                                      // 0x0584(0x0024) MISSED OFFSET
	bool                                               DoSpecialWhenEnemy;                                       // 0x05A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DoSpecialWhenFriendly;                                    // 0x05A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               PerfectTrackingWhenEnemy;                                 // 0x05AA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               PerfectTrackingWhenFriendly;                              // 0x05AB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x05AC(0x0002) MISSED OFFSET
	bool                                               ReplaceBurstAttack;                                       // 0x05AE(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x05AF(0x0001) MISSED OFFSET
	class USoundBase*                                  GrenadeFireSound;                                         // 0x05B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             GrenadeFireParticle;                                      // 0x05B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsFiring;                                                 // 0x05C0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x05C1(0x0003) MISSED OFFSET
	float                                              TurretSpinSpeed;                                          // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class AActor*>                              Parasites;                                                // 0x05C8(0x0010) (Net, ZeroConstructor, Transient)
	int                                                SpawnParasiteNumer;                                       // 0x05D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxParasiteSlots;                                         // 0x05DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChanceToSpawnParasite;                                    // 0x05E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x05E4(0x0004) MISSED OFFSET
	class UClass*                                      ParasiteClass;                                            // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x6];                                       // 0x05F0(0x0006) MISSED OFFSET
	bool                                               SpinTurret;                                               // 0x05F6(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x11];                                      // 0x05F7(0x0011) MISSED OFFSET
	class UClass*                                      SpecialAttackProjectile;                                  // 0x0608(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FriendlyProjectile;                                       // 0x0610(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0xC];                                       // 0x0618(0x000C) MISSED OFFSET
	bool                                               HasLockedOn;                                              // 0x0624(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0625(0x0003) MISSED OFFSET
	class USoundBase*                                  TargetingSound;                                           // 0x0628(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           GrenadeShotAnimation;                                     // 0x0630(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockonTime;                                               // 0x0638(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x063C(0x0004) MISSED OFFSET
	class USoundCue*                                   ShootSound;                                               // 0x0640(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShootSoundFadeout;                                        // 0x0648(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x064C(0x0004) MISSED OFFSET
	class UAudioComponent*                             ShootSoundInstance;                                       // 0x0650(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundCue*                                   ShootSoundTail;                                           // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MuzzleEffect;                                             // 0x0660(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             TracerEffect;                                             // 0x0668(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRuntimeFloatCurve                          MuzzleLightCurve;                                         // 0x0670(0x0088) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData16[0x8];                                       // 0x06F8(0x0008) MISSED OFFSET
	float                                              GunRange;                                                 // 0x0700(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FireRate;                                                 // 0x0704(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GrenadeFireRate;                                          // 0x0708(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	float                                              BurstCooldown;                                            // 0x0710(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	int                                                MinBurst;                                                 // 0x0718(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxBurst;                                                 // 0x071C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TurretLerpSpeed;                                          // 0x0720(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageWhenFriendly;                                       // 0x0724(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FriendlyFriendlyFireMultiplier;                           // 0x0728(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x072C(0x0004) MISSED OFFSET
	bool                                               RotateTurretToTarget;                                     // 0x0730(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               StartedSpecialAttack;                                     // 0x0731(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	ERobotState                                        TeamState;                                                // 0x0732(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsWalking;                                                // 0x0733(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsDoingSpecialAttack;                                     // 0x0734(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0735(0x0003) MISSED OFFSET
	class UStaticMeshComponent*                        TurretRotation;                                           // 0x0738(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData21[0x8];                                       // 0x0740(0x0008) MISSED OFFSET
	class AActor*                                      CurrentTarget;                                            // 0x0748(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData22[0x8];                                       // 0x0750(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ConvertedRobot");
		return ptr;
	}


	void StartBossFight();
	void ParasiteDamaged(float* aDamage);
	void OnWeaponsFired(struct FHitResult* aHitResult);
	void OnUsed(class APlayerCharacter** aUser);
	void OnSeePawn(class APawn** APawn);
	void OnRep_TeamState();
	void OnRep_Target();
	void OnRep_SpinTurret();
	void OnRep_IsIntroducting();
	void OnRep_IsFiring();
	void OnRep_IsDoingSpecialAttack();
	void OnParasiteDeath(class AActor** AParasiteEnemy);
	ERobotState GetTeamState();
	struct FVector GetPlayerMediumPoint();
	TArray<class AActor*> GetParasites();
	bool GetHasPoweredDown();
	void FireEffects(struct FVector_NetQuantize* aFireDirection);
	void DestroyAttatchPoint(class USceneComponent** aComponent);
	void CannonEffects();
	void BP_OnStateChanged(ERobotState* TeamState);
	void BP_OnShieldChanged(bool* isGrowing);
	void BP_OnInstroduce();
};


// Class FSD.ConvertedRobotAnimInstance
// 0x0010 (0x0280 - 0x0270)
class UConvertedRobotAnimInstance : public UAnimInstance
{
public:
	bool                                               StopSit;                                                  // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShouldCollapse;                                           // 0x0271(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsPoweredDown;                                            // 0x0272(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0273(0x0001) MISSED OFFSET
	float                                              WalkingRate;                                              // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              NormalWalkSpeed;                                          // 0x0278(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x027C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ConvertedRobotAnimInstance");
		return ptr;
	}

};


// Class FSD.ConvertedRobotTurretAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UConvertedRobotTurretAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ConvertedRobotTurretAnimInstance");
		return ptr;
	}

};


// Class FSD.EnemyAIController
// 0x0000 (0x0450 - 0x0450)
class AEnemyAIController : public AFSDAIController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyAIController");
		return ptr;
	}

};


// Class FSD.ConvertedRobotController
// 0x0088 (0x04D8 - 0x0450)
class AConvertedRobotController : public AEnemyAIController
{
public:
	float                                              CheckRangeInterval;                                       // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxTimeInRange;                                           // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0458(0x0004) MISSED OFFSET
	float                                              PersonalSpaceRange;                                       // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0460(0x0010) MISSED OFFSET
	float                                              SpecialAttackRange;                                       // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpecialAttackFireRate;                                    // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0478(0x0020) MISSED OFFSET
	float                                              WaitBeforeSpecial;                                        // 0x0498(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	float                                              WaitAfterSpecial;                                         // 0x04A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x04A4(0x0008) MISSED OFFSET
	float                                              MinSpecialAttackCooldown;                                 // 0x04AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpecialAttackCooldown;                                 // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class UBehaviorTree*                               BehaviourTree;                                            // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UpdateTargetInterval;                                     // 0x04C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET
	float                                              PowerDownAfterSeconds;                                    // 0x04C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x04CC(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ConvertedRobotController");
		return ptr;
	}


	void ResetCloseTimer();
};


// Class FSD.CoolDownItemAggregator
// 0x0020 (0x0130 - 0x0110)
class UCoolDownItemAggregator : public UItemAggregator
{
public:
	float                                              CooldownDuration;                                         // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioCoolDownFinished;                                    // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x0120(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CoolDownIsPaused;                                         // 0x0124(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	class AItem*                                       Item;                                                     // 0x0128(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CoolDownItemAggregator");
		return ptr;
	}


	void SetPaused(bool* IsPaused);
	bool IsCoolingDown();
	float GetCoolDownProgress();
	void ActivateCoolDown(bool* startPaused);
};


// Class FSD.CoolDownProgressWidget
// 0x0050 (0x0280 - 0x0230)
class UCoolDownProgressWidget : public UUserWidget
{
public:
	struct FCoolDownProgressStyle                      Style;                                                    // 0x0230(0x0040) (BlueprintVisible, BlueprintReadOnly)
	TWeakObjectPtr<class UObject>                      CoolDownObject;                                           // 0x0270(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFinished;                                              // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0279(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CoolDownProgressWidget");
		return ptr;
	}


	void UpdateProgress(float* Progress);
	void ReceiveUpdateProgress(float* InProgress);
	void ReceiveInitWidget();
	void Init(class UObject** InCoolDownObject, struct FCoolDownProgressStyle* InStyle);
};


// Class FSD.SavableDataAsset
// 0x0020 (0x0050 - 0x0030)
class USavableDataAsset : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x003C(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SavableDataAsset");
		return ptr;
	}

};


// Class FSD.CraftableObject
// 0x0090 (0x00E0 - 0x0050)
class UCraftableObject : public USavableDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnUnlockFlagChanged;                                      // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UDLCBase*                                    RequiredDLC;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDLCBase*                                    CraftingRestrictionDLC;                                   // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUnLockedFlag;                                            // 0x0080(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	int                                                CraftingPlayerRankRequired;                               // 0x0084(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TMap<class UResourceData*, float>                  CraftingCost;                                             // 0x0088(0x0050) (Edit, ZeroConstructor, EditConst)
	int                                                CraftingCreditsCost;                                      // 0x00D8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CraftableObject");
		return ptr;
	}


	void PreviewItem(class AFSDPlayerState** PlayerState, bool* Show);
	void MarkAsUnLocked();
	bool IsOwned(class UClass** CharacterClass, class AFSDPlayerState** PlayerState);
	TArray<struct FCraftingCost> GetResourceCost();
	int GetRequiredPlayerRank();
	int GetCraftingCreditsCost();
	struct FText GetCraftableName();
	class UTexture2D* GetCraftableIcon();
	struct FText GetCraftableDescription();
	void CraftItem(class UClass** CharacterClass, class AFSDPlayerState** PlayerState);
	void ClearUnLockedMark();
	bool CanCraft(class AFSDPlayerState** PlayerState);
};


// Class FSD.PricingTier
// 0x0010 (0x0040 - 0x0030)
class UPricingTier : public UDataAsset
{
public:
	struct FString                                     PriceKey;                                                 // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PricingTier");
		return ptr;
	}

};


// Class FSD.SchematicPricingTier
// 0x0000 (0x0040 - 0x0040)
class USchematicPricingTier : public UPricingTier
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicPricingTier");
		return ptr;
	}

};


// Class FSD.CreditsResourceData
// 0x0000 (0x00E8 - 0x00E8)
class UCreditsResourceData : public UResourceData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CreditsResourceData");
		return ptr;
	}

};


// Class FSD.CritterManager
// 0x0038 (0x0130 - 0x00F8)
class UCritterManager : public UActorComponent
{
public:
	bool                                               DisableCritters;                                          // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              ActivationRange;                                          // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0100(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CritterManager");
		return ptr;
	}

};


// Class FSD.CrosshairWidget
// 0x0000 (0x0230 - 0x0230)
class UCrosshairWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CrosshairWidget");
		return ptr;
	}


	void SetData(class AItem** Item);
};


// Class FSD.CrosshairAggregator
// 0x0020 (0x0130 - 0x0110)
class UCrosshairAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnCrosshairCreated;                                       // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UUserWidget*                                 CrosshairWidget;                                          // 0x0120(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      CrossHairType;                                            // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CrosshairAggregator");
		return ptr;
	}


	void SetCrosshair(class UUserWidget** Widget);
};


// Class FSD.CryosprayItem
// 0x0150 (0x0860 - 0x0710)
class ACryosprayItem : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            DamageComponent;                                          // 0x0710(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStickyFlameSpawner*                         StickyFlames;                                             // 0x0718(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            AoEColdDamageComponent;                                   // 0x0720(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMotionAudioController*                      VelocityAudio;                                            // 0x0728(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    FlameParticleComponent;                                   // 0x0730(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      PressurizedProjectile;                                    // 0x0738(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PressurizedProjectileDelay;                               // 0x0740(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PressurizeProjectileFullCost;                             // 0x0744(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0748(0x0010) MISSED OFFSET
	class UParticleSystem*                             ChargeupParticles;                                        // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    ChargeupParticleInstance;                                 // 0x0760(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FDecalData                                  ImpactDecal;                                              // 0x0768(0x0018) (Edit)
	float                                              DecalDelay;                                               // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0784(0x0004) MISSED OFFSET
	class UParticleSystem*                             ImpactParticles;                                          // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    ImpactParticleInstance;                                   // 0x0790(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               FlameParameterNames;                                      // 0x0798(0x0010) (Edit, ZeroConstructor)
	float                                              DamageSphereRadius;                                       // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFlameDistance;                                         // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlameGrowthPerSecond;                                     // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeupTime;                                             // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeDownTime;                                           // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x07C0(0x0001) MISSED OFFSET
	bool                                               IsCharging;                                               // 0x07C1(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x07C2(0x0002) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x07C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRepressurerising;                                        // 0x07C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x07C9(0x0003) MISSED OFFSET
	float                                              RepressurerisingDoneAtPct;                                // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeUpFadeOutTime;                                      // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x07D4(0x0004) MISSED OFFSET
	class UAudioComponent*                             ChargeUpAudioComponent;                                   // 0x07D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              PressureTime;                                             // 0x07E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PressureDropMultiplier;                                   // 0x07E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PressureGainMultiplier;                                   // 0x07E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurrentPressure;                                          // 0x07EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RePressureDuration;                                       // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RePressureProgress;                                       // 0x07F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              IceDamage;                                                // 0x07F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x07FC(0x0004) MISSED OFFSET
	class UDamageClass*                                IceDamageClass;                                           // 0x0800(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ColdDamage;                                               // 0x0808(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x080C(0x0004) MISSED OFFSET
	class UDamageClass*                                ColdDamageClass;                                          // 0x0810(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x0818(0x0010) (ZeroConstructor, Transient)
	bool                                               LongReachEnabled;                                         // 0x0828(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0xF];                                       // 0x0829(0x000F) MISSED OFFSET
	bool                                               AoEColdEnabled;                                           // 0x0838(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x27];                                      // 0x0839(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CryosprayItem");
		return ptr;
	}


	void ServerDoDamage(struct FVector_NetQuantize* Start, struct FVector_NetQuantize* End, unsigned char* power);
	void Server_TriggerAoECold();
	void Server_PreLaunchProjectile();
	void Server_LaunchProjectile(struct FVector_NetQuantize* Start, struct FVector_NetQuantizeNormal* Direction, float* pressurePercentage);
	void ReceiveRepressurisingChanged(bool* Value);
	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
	void OnRep_IsCharging(bool* OldValue);
	void OnProjectileLaunched();
	void OnPressurizedPartileShoot();
	void OnPreProjectileLaunch();
	void All_PreLaunchProjectile();
	void All_LaunchedProjectile();
};


// Class FSD.CryoSprayAnimInstance
// 0x0010 (0x0280 - 0x0270)
class UCryoSprayAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFiring;                                                 // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0271(0x0003) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Pressure;                                                 // 0x0278(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x027C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CryoSprayAnimInstance");
		return ptr;
	}

};


// Class FSD.DamageBonusBase
// 0x0000 (0x0030 - 0x0030)
class UDamageBonusBase : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageBonusBase");
		return ptr;
	}

};


// Class FSD.FlatDamageBonus
// 0x0010 (0x0040 - 0x0030)
class UFlatDamageBonus : public UDamageBonusBase
{
public:
	float                                              Damage;                                                   // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlatDamageBonus");
		return ptr;
	}

};


// Class FSD.TargetSpecificDamageBonus
// 0x0058 (0x0088 - 0x0030)
class UTargetSpecificDamageBonus : public UDamageBonusBase
{
public:
	float                                              Bonus;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FGameplayTagQuery                           TagQuery;                                                 // 0x0038(0x0048) (Edit)
	struct FName                                       Key;                                                      // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TargetSpecificDamageBonus");
		return ptr;
	}

};


// Class FSD.DamageConversionBonus
// 0x0010 (0x0040 - 0x0030)
class UDamageConversionBonus : public UDamageBonusBase
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ConversionPercentage;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DamageIsAdded;                                            // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageConversionBonus");
		return ptr;
	}

};


// Class FSD.TargetStateDamageBonus
// 0x0010 (0x0040 - 0x0030)
class UTargetStateDamageBonus : public UDamageBonusBase
{
public:
	ETargetStateDamageBonusType                        TargetState;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Bonus;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TargetStateDamageBonus");
		return ptr;
	}

};


// Class FSD.StatusDamageBonus
// 0x0020 (0x0050 - 0x0030)
class UStatusDamageBonus : public UDamageBonusBase
{
public:
	TArray<class UClass*>                              StatusEffects;                                            // 0x0030(0x0010) (Edit, ZeroConstructor)
	float                                              Bonus;                                                    // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusDamageBonus");
		return ptr;
	}

};


// Class FSD.PushStatusEffectDamageBonus
// 0x0020 (0x0050 - 0x0030)
class UPushStatusEffectDamageBonus : public UDamageBonusBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET
	class UClass*                                      StatusEffect;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Chance;                                                   // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PushStatusEffectDamageBonus");
		return ptr;
	}

};


// Class FSD.FearAoEBonus
// 0x0008 (0x0038 - 0x0030)
class UFearAoEBonus : public UDamageBonusBase
{
public:
	float                                              FearFactor;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FearAoEBonus");
		return ptr;
	}

};


// Class FSD.AmmoLeftDamageBonus
// 0x0010 (0x0050 - 0x0040)
class UAmmoLeftDamageBonus : public UFlatDamageBonus
{
public:
	class UCurveFloat*                                 AmmoDamageCurve;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoLeftDamageBonus");
		return ptr;
	}

};


// Class FSD.AmmoUsedDamageBonus
// 0x0008 (0x0038 - 0x0030)
class UAmmoUsedDamageBonus : public UDamageBonusBase
{
public:
	float                                              DamageBonusPerRoundFired;                                 // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoUsedDamageBonus");
		return ptr;
	}

};


// Class FSD.RandomDamageBonus
// 0x0008 (0x0038 - 0x0030)
class URandomDamageBonus : public UDamageBonusBase
{
public:
	struct FRandRange                                  RandomDamageRange;                                        // 0x0030(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomDamageBonus");
		return ptr;
	}

};


// Class FSD.PercentDamageBonus
// 0x0008 (0x0038 - 0x0030)
class UPercentDamageBonus : public UDamageBonusBase
{
public:
	float                                              DamageMultiplier;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PercentDamageBonus");
		return ptr;
	}

};


// Class FSD.GatlingHotShellsBonus
// 0x0000 (0x0040 - 0x0040)
class UGatlingHotShellsBonus : public UDamageConversionBonus
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GatlingHotShellsBonus");
		return ptr;
	}

};


// Class FSD.DamageClass
// 0x0018 (0x0048 - 0x0030)
class UDamageClass : public UDataAsset
{
public:
	class UPawnStat*                                   ResistanceStat;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RagdollScale;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BypassesShield;                                           // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AffectedByFriendlyFire;                                   // 0x003D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	class UTexture2D*                                  IndicatorImage;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageClass");
		return ptr;
	}

};


// Class FSD.DamageComponent
// 0x00A0 (0x0198 - 0x00F8)
class UDamageComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTargetKilledEvent;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTargetDamagedEvent;                                     // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNoTargetHitEvent;                                       // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0128(0x0004) MISSED OFFSET
	EDamageComponentType                               DamageComponentType;                                      // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	float                                              Damage;                                                   // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeakpointDamageMultiplier;                                // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               StaggerOnlyOnWeakpointHit;                                // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              StaggerChance;                                            // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StaggerDuration;                                          // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FearFactor;                                               // 0x0154(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UDamageBonusBase*>                    DamageBonuses;                                            // 0x0158(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	bool                                               UseAreaOfEffect;                                          // 0x0168(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0169(0x0003) MISSED OFFSET
	float                                              RadialDamage;                                             // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDamageClass*                                RadialDamageClass;                                        // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinDamagePct;                                             // 0x0178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageRadius;                                             // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              maxDamageRadius;                                          // 0x0180(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x14];                                      // 0x0184(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageComponent");
		return ptr;
	}


	float GetDamage();
	void DamageTarget(class AActor** Target, struct FVector* Location, class UPrimitiveComponent** HitComponent, class UFSDPhysicalMaterial** PhysMat);
	void DamageArmor_Server(class AActor** Target, int* BoneIndex, struct FVector* impactLocation);
	void DamageArmor_All(class AActor** Target, int* BoneIndex);
};


// Class FSD.DamageManager
// 0x0010 (0x0038 - 0x0028)
class UDamageManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageManager");
		return ptr;
	}

};


// Class FSD.DamageSettings
// 0x00C0 (0x00F0 - 0x0030)
class UDamageSettings : public UDataAsset
{
public:
	float                                              TemperatureChangePerColdDamagePoint;                      // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TemperatureChangePerIceDamagePoint;                       // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TemperatureChangePerHeatDamagePoint;                      // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TemperatureChangePerFireDamagePoint;                      // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeFrostPerPhysicalDamage;                                 // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UClass*                                      EnemyOnFireStatusEffect;                                  // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlayerOnFireStatusEffect;                                 // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FDecalData>                          ImpactDecals;                                             // 0x0058(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	struct FRuntimeFloatCurve                          ArmorToArmorDamageBreakingCurve;                          // 0x0068(0x0088) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageSettings");
		return ptr;
	}

};


// Class FSD.DashPoints
// 0x0128 (0x0220 - 0x00F8)
class UDashPoints : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStartDashEvent;                                         // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopDashEvent;                                          // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0118(0x000C) MISSED OFFSET
	struct FVector_NetQuantize                         DashLocation;                                             // 0x0124(0x000C) (Net)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0130(0x0010) MISSED OFFSET
	struct FRuntimeFloatCurve                          DashSpeedCurve;                                           // 0x0140(0x0088) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x18];                                      // 0x01C8(0x0018) MISSED OFFSET
	float                                              PointOffset;                                              // 0x01E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxRangeFromPlayer;                                       // 0x01E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinRangeFromPlayer;                                       // 0x01E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinHeightAboveTarget;                                     // 0x01EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxHeightAboveTarget;                                     // 0x01F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RandMin;                                                  // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RandMax;                                                  // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              safeReduction;                                            // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AcceptedDashradius;                                       // 0x0200(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DashSpeed;                                                // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlowdownRadius;                                           // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x020C(0x000C) MISSED OFFSET
	int                                                IgnoreTheClosestPoints;                                   // 0x0218(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EDashPointsGenerationMode                          GenerationMode;                                           // 0x021C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsDashing;                                                // 0x021D(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IgnoreRules;                                              // 0x021E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x021F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DashPoints");
		return ptr;
	}


	void StopDashing();
	void StartDashing();
	void OnRep_Dashing();
	void OnParentDeath(class UHealthComponentBase** Health);
	struct FVector GetDashPoint(class AActor** fromTarget, bool* success);
};


// Class FSD.DeadStateComponent
// 0x0008 (0x0138 - 0x0130)
class UDeadStateComponent : public UCharacterStateComponent
{
public:
	float                                              RespawnDelay;                                             // 0x0130(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeadStateComponent");
		return ptr;
	}

};


// Class FSD.FSDDebrisSettings
// 0x0030 (0x0068 - 0x0038)
class UFSDDebrisSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             DefaultInfluencerDensityCurve;                            // 0x0038(0x0018) (Edit, ZeroConstructor, Config)
	struct FSoftObjectPath                             DefaultInfluencerSizeCurve;                               // 0x0050(0x0018) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDDebrisSettings");
		return ptr;
	}

};


// Class FSD.CSGTriangleMapper
// 0x00A0 (0x00D0 - 0x0030)
class UCSGTriangleMapper : public UDataAsset
{
public:
	bool                                               Enabled;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UTerrainMaterial*                            AttachToMaterial;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UTerrainType*>                        AttachToTypes;                                            // 0x0040(0x0010) (Edit, ZeroConstructor)
	int                                                CellCategories;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DensityInM2;                                              // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinVerticalAngle;                                         // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxVerticalAngle;                                         // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScaleMin;                                                 // 0x0060(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScaleMax;                                                 // 0x006C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScaleBias;                                                // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IndependentScaleAxes;                                     // 0x007C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	struct FVector                                     BaseNormal;                                               // 0x0080(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SurfaceNormalFactor;                                      // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SurfaceNormalLimiter;                                     // 0x0090(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomNormalFactor;                                       // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationMinAngle;                                         // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationMaxAngle;                                         // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PosOffset;                                                // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PosOffsetSurface;                                         // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FCellNoise>                          NoiseLayers;                                              // 0x00B0(0x0010) (Edit, ZeroConstructor)
	struct FDebrisCellNoiseParameters                  CellNoiseParameters;                                      // 0x00C0(0x0010) (Edit, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CSGTriangleMapper");
		return ptr;
	}

};


// Class FSD.DebrisBase
// 0x0128 (0x01F8 - 0x00D0)
class UDebrisBase : public UCSGTriangleMapper
{
public:
	class UObject*                                     CaveInfluencer;                                           // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          InfluencerDensityCurve;                                   // 0x00D8(0x0088) (Edit)
	struct FRuntimeFloatCurve                          InfluencerSizeCurve;                                      // 0x0160(0x0088) (Edit)
	class UCurveFloat*                                 CaveInfluenceCurve;                                       // 0x01E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 CaveInflunceSizeCurve;                                    // 0x01F0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisBase");
		return ptr;
	}

};


// Class FSD.DebrisCarved
// 0x0058 (0x0250 - 0x01F8)
class UDebrisCarved : public UDebrisBase
{
public:
	EDebrisCarvedType                                  CarverType;                                               // 0x01F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET
	TArray<struct FUDebrisCarveMesh>                   Meshes;                                                   // 0x0200(0x0010) (Edit, ZeroConstructor)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDebrisInfluence                            CaveInfluenceToAdd;                                       // 0x0218(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	float                                              ExpensiveNoise;                                           // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveOptionsCellSize                              CarveCellSize;                                            // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0231(0x0003) MISSED OFFSET
	int                                                MinNumCarves;                                             // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumCarves;                                             // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarveOffsetRadius;                                        // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpawnAttachClass;                                         // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttachSpawnOffsetDistance;                                // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisCarved");
		return ptr;
	}

};


// Class FSD.DebrisActorComponent
// 0x0000 (0x0260 - 0x0260)
class UDebrisActorComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisActorComponent");
		return ptr;
	}

};


// Class FSD.DebrisItemComponent
// 0x0030 (0x0290 - 0x0260)
class UDebrisItemComponent : public UDebrisActorComponent
{
public:
	class UDebrisPositioning*                          Debris;                                                   // 0x0260(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FDebrisItemActorItem>                Actors;                                                   // 0x0268(0x0010) (Edit, ZeroConstructor)
	float                                              InfluenceRange;                                           // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseAmount;                                                // 0x027C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x027D(0x0003) MISSED OFFSET
	struct FIRandRange                                 amount;                                                   // 0x0280(0x0008) (Edit)
	int                                                AmountSearchMultiplier;                                   // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x028C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisItemComponent");
		return ptr;
	}

};


// Class FSD.DebrisDataComponent
// 0x0010 (0x0270 - 0x0260)
class UDebrisDataComponent : public UDebrisActorComponent
{
public:
	class UDebrisBase*                                 Debris;                                                   // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0268(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisDataComponent");
		return ptr;
	}

};


// Class FSD.DebrisVeinComponent
// 0x0010 (0x0270 - 0x0260)
class UDebrisVeinComponent : public UDebrisActorComponent
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UVeinResourceCreator*                        VeinCreator;                                              // 0x0268(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisVeinComponent");
		return ptr;
	}

};


// Class FSD.DebrisPatchComponent
// 0x0010 (0x0270 - 0x0260)
class UDebrisPatchComponent : public UDebrisActorComponent
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPatchResourceCreator*                       PatchCreator;                                             // 0x0268(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisPatchComponent");
		return ptr;
	}

};


// Class FSD.InfluencerComponent
// 0x0110 (0x0370 - 0x0260)
class UInfluencerComponent : public UDebrisActorComponent
{
public:
	struct FRuntimeFloatCurve                          ProbabilityCurve;                                         // 0x0260(0x0088) (Edit)
	struct FRuntimeFloatCurve                          ScaleCurve;                                               // 0x02E8(0x0088) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InfluencerComponent");
		return ptr;
	}

};


// Class FSD.DebrisProbabilityComponent
// 0x0010 (0x0270 - 0x0260)
class UDebrisProbabilityComponent : public UDebrisActorComponent
{
public:
	struct FRandRange                                  ProbabilityRange;                                         // 0x0260(0x0008) (Edit)
	bool                                               IsProbabilityShared;                                      // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0269(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisProbabilityComponent");
		return ptr;
	}

};


// Class FSD.DebrisDataActor
// 0x0018 (0x0348 - 0x0330)
class ADebrisDataActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0330(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisDataActor");
		return ptr;
	}

};


// Class FSD.DebrisInstances
// 0x0080 (0x0810 - 0x0790)
class UDebrisInstances : public UHierarchicalInstancedStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0790(0x0004) MISSED OFFSET
	int                                                DebrisIndex;                                              // 0x0794(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0798(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisInstances");
		return ptr;
	}

};


// Class FSD.DebrisMesh
// 0x0058 (0x0250 - 0x01F8)
class UDebrisMesh : public UDebrisBase
{
public:
	TArray<struct FDebrisStaticMesh>                   Meshes;                                                   // 0x01F8(0x0010) (Edit, ZeroConstructor)
	class UMaterialInterface*                          CommonMaterial;                                           // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       InGameName;                                               // 0x0210(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       GemTrackerName;                                           // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       InGameDescription;                                        // 0x0230(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              StartCullDistance;                                        // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndCullDistance;                                          // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisMesh");
		return ptr;
	}

};


// Class FSD.DebrisCellNoise
// 0x0028 (0x0058 - 0x0030)
class UDebrisCellNoise : public UDataAsset
{
public:
	int                                                Seed;                                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CellSize;                                                 // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumValues;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InvCellSize;                                              // 0x0044(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Initialized;                                              // 0x0050(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisCellNoise");
		return ptr;
	}

};


// Class FSD.DebrisPositioning
// 0x0000 (0x01F8 - 0x01F8)
class UDebrisPositioning : public UDebrisBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisPositioning");
		return ptr;
	}

};


// Class FSD.DebrisSet
// 0x0010 (0x0040 - 0x0030)
class UDebrisSet : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.DebrisSet.Debris

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisSet");
		return ptr;
	}

};


// Class FSD.DebrisStaticCarved
// 0x0048 (0x0240 - 0x01F8)
class UDebrisStaticCarved : public UDebrisBase
{
public:
	EDebrisCarvedType                                  CarverType;                                               // 0x01F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET
	TArray<struct FUDebrisStaticCarveMesh>             Meshes;                                                   // 0x0200(0x0010) (Edit, ZeroConstructor)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDebrisInfluence                            CaveInfluenceToAdd;                                       // 0x0218(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	float                                              CarveOffsetRadius;                                        // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpawnAttachClass;                                         // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttachSpawnOffsetDistance;                                // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x023C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DebrisStaticCarved");
		return ptr;
	}

};


// Class FSD.CustomItemPlacementHandling
// 0x0000 (0x0028 - 0x0028)
class UCustomItemPlacementHandling : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CustomItemPlacementHandling");
		return ptr;
	}

};


// Class FSD.InfluencerSpawnComponent
// 0x0010 (0x0270 - 0x0260)
class UInfluencerSpawnComponent : public USceneComponent
{
public:
	float                                              Range;                                                    // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0264(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InfluencerSpawnComponent");
		return ptr;
	}

};


// Class FSD.DeepCSGSection
// 0x0008 (0x0338 - 0x0330)
class ADeepCSGSection : public AActor
{
public:
	class UDeepProceduralMeshComponent*                DeepMesh;                                                 // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepCSGSection");
		return ptr;
	}

};


// Class FSD.DeepCSGWorld
// 0x4FA8 (0x52D8 - 0x0330)
class ADeepCSGWorld : public AActor
{
public:
	class UTerrainMaterial*                            DebugCarveInsideTerrainMaterial;                          // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            DebugCarveOutsizeTerrainMaterial;                         // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            DebugCarveEdgeTerrainMaterial;                            // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            GoldTerrainMaterial;                                      // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            MOMTerrrainMaterial;                                      // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            NitraTerrrainMaterial;                                    // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            EmptyTerrainMaterial;                                     // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            DefaultBurntTerrainMaterial;                              // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            DefaultHardRockMaterial;                                  // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            DefaultBedRockMaterial;                                   // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                GoldTerrainType;                                          // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                MOMTerrainType;                                           // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                RockTerrainType;                                          // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                CrystalTerrainType;                                       // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                EmptyTerrainType;                                         // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                DirtTerrainType;                                          // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                DefaultBurntTerrainType;                                  // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterialsCollection*                 TerrainMaterials;                                         // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UDebrisSet*>                          StandardDebrisSets;                                       // 0x03C0(0x0010) (Edit, ZeroConstructor)
	TArray<class UDebrisBase*>                         AddedDebris;                                              // 0x03D0(0x0010) (ZeroConstructor, Transient)
	TArray<class UDebrisBase*>                         DebrisLargeCarved;                                        // 0x03E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UDebrisBase*>                         DebrisSmallCarved;                                        // 0x03F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UDebrisBase*>                         DebrisMeshes;                                             // 0x0400(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UMaterialInterface*                          DefaultScannerMaterial;                                   // 0x0410(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ADebrisDataActor*                            DebrisActorInstance;                                      // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                DebrisActorIndex;                                         // 0x0420(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UObject*>                             TerrainMaterialAssets;                                    // 0x0430(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0440(0x0028) MISSED OFFSET
	class UAsyncPathRequests*                          AsyncPathRequests;                                        // 0x0468(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBaseLayerCommitDone;                                    // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBaseLayerFinalCommitDone;                               // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AActor*>                              TerrainAttachedActors;                                    // 0x0490(0x0010) (ZeroConstructor, Transient)
	TArray<TWeakObjectPtr<class UObject>>              TerrainListeners;                                         // 0x04A0(0x0010) (ZeroConstructor, Transient)
	TArray<class UDebrisBase*>                         RegisteredDebrisList;                                     // 0x04B0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FDebrisWhenCarving>                  DebrisWhenCarvingList;                                    // 0x04C0(0x0010) (ZeroConstructor, Transient)
	TArray<class UDebrisInstances*>                    DebrisInstanceList;                                       // 0x04D0(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  ShowAlwaysScannerComponents;                              // 0x04E0(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  FogOfWarScannerComponents;                                // 0x04F0(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x4CC0];                                    // 0x0500(0x4CC0) MISSED OFFSET
	struct FTerrainLateJoinData                        LateJoinData;                                             // 0x51C0(0x0098) (Transient)
	TArray<struct FEncodedChunkId>                     visibleChunks;                                            // 0x5258(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x70];                                      // 0x5268(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepCSGWorld");
		return ptr;
	}


	void UnRegisterScannerComponent(class UPrimitiveComponent** Component);
	void TerrainOp_RemoveFloating(struct FRemoveFloatingIslandOperationData* Data);
	void TerrainOp_PickAxe(struct FPickaxeDigOperationData* Data);
	void TerrainOp_Melt(struct FMeltOperationData* Data);
	void TerrainOp_Explode(struct FGrenadeExplodeOperationData* Data);
	void TerrainOp_Drill(struct FDrillOperationData* Data);
	void TerrainOp_CarveSTLMesh(struct FCarveWithSTLMeshOperationData* Data);
	void TerrainOp_CarveCollider(struct FCarveWithColliderOperationData* Data);
	void TerrainMaterialDataLoaded();
	void SetVisibleToScanner(struct FVector* Center, struct FVector* Range);
	void SelectDebrisSettings();
	void ResetEntireWorld();
	void RemoveDebrisInstance_TerrainOp2(int* instance, int* Component);
	void RemoveDebrisInSphere(struct FVector* Position, float* Radius, bool* onlyFragile, bool* alsoDurable);
	void RegisterScannerComponent(class UPrimitiveComponent** Component, bool* useFogOfWar);
	bool Raycast(struct FVector* Start, struct FVector* Direction, float* MaxDistance, ELandscapeCellFilter* Filter, struct FCSGRaycastHitInfo* HitInfo);
	bool Linecast(struct FVector* Start, struct FVector* End, ELandscapeCellFilter* Filter, struct FCSGRaycastHitInfo* HitInfo);
	bool IsPositionVisibleToScanner(struct FVector* Pos);
	bool IsPointInsideTerrain(struct FVector* Pos);
	int GetTerrainHash();
	int STATIC_GetShadowQuality();
	class ADebrisDataActor* GetDebrisDataActor();
	void GetAllTerrainActorsAroundPoint(struct FVector* Center, struct FVector* Range, TArray<class AActor*>* TerrainActors);
	void GenerateAllMeshes();
	void FinishGeneration_Blocking();
	float FindTotalVolumeOfMaterialInWorld(class UTerrainMaterial** Material);
	void STATIC_CarveWithSTLMeshUsingTransform_Wait(class ADeepCSGWorld** CSGWorld, class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, EPreciousMaterialOptions* Precious, struct FLatentActionInfo* LatentInfo);
	void CarveWithSTLMeshUsingTransform(class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, EPreciousMaterialOptions* Precious);
	void STATIC_CarveWithSTLMesh_Wait(class ADeepCSGWorld** CSGWorld, class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious, struct FLatentActionInfo* LatentInfo);
	void CarveWithSTLMesh(class USTLMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious);
	void CarveWithStaticMeshUsingTransform(class UStaticMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, EPreciousMaterialOptions* Precious);
	void CarveWithStaticMesh(class UStaticMeshCarver** MeshCarver, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious);
	void STATIC_CarveWithMeshUsingTransform_Wait(class ADeepCSGWorld** CSGWorld, class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, float* ExpensiveNoise, EPreciousMaterialOptions* Precious, struct FLatentActionInfo* LatentInfo);
	void CarveWithMeshUsingTransform(class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FTransform* Transform, float* ExpensiveNoise, EPreciousMaterialOptions* Precious);
	void STATIC_CarveWithMesh_Wait(class ADeepCSGWorld** CSGWorld, class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, struct FLatentActionInfo* LatentInfo);
	void CarveWithMesh(class UStaticMesh** StaticMesh, class UTerrainMaterial** Material, ECarveFilterType* CarveFilter, struct FVector* Pos, struct FQuat* Orientation, struct FVector* Scale, EPreciousMaterialOptions* Precious);
	float CalcApproximateTerrainDensity(struct FVector* Pos, float* Radius);
	void BaseLayerCommitFinal(bool* blocking);
	void BaseLayerCommit(bool* blocking, bool* scheduleTesselation);
	void AttachActorToTerrain(class AActor** Actor, struct FVector* Pos);
	void ApplyDebrisCarvers();
	void ApplyBaseDebrisCarvers(TArray<class UDebrisBase*>* Carvers);
};


// Class FSD.DeepDiveTemplate
// 0x0068 (0x00B8 - 0x0050)
class UDeepDiveTemplate : public USavableDataAsset
{
public:
	TArray<class UDifficultySetting*>                  Difficulties;                                             // 0x0050(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FDeepDiveTemplateItem>               missions;                                                 // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<ESchematicType>                             Rewards;                                                  // 0x0070(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	int                                                CreditsPerPrimaryObjective;                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CreditsPerSecondaryObjective;                             // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                XPPerPrimaryObjective;                                    // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                XPPerSecondaryObjective;                                  // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HazardBonus;                                              // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	struct FRandInterval                               MutatorCount;                                             // 0x0098(0x0010) (Edit)
	struct FRandInterval                               WarningCount;                                             // 0x00A8(0x0010) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepDiveTemplate");
		return ptr;
	}


	ESchematicType GetStageRewardType(int* StageIndex);
};


// Class FSD.DeepDiveSettings
// 0x0068 (0x0098 - 0x0030)
class UDeepDiveSettings : public UDataAsset
{
public:
	class UDeepDiveTemplate*                           NormalTemplate;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDeepDiveTemplate*                           HardTemplate;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMutator*>                            BaseMutators;                                             // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<class UMissionMutator*>                     Mutators;                                                 // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<class UMissionWarning*>                     Warnings;                                                 // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<class UDialogDataAsset*>                    DeepDiveMissionCompleteShouts;                            // 0x0070(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDeepDiveLoaderSequence>             LoaderSequnces;                                           // 0x0080(0x0010) (Edit, ZeroConstructor)
	class UMissionNameBank*                            DeepDiveNameBank;                                         // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepDiveSettings");
		return ptr;
	}

};


// Class FSD.DeepDiveFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UDeepDiveFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepDiveFunctionLibrary");
		return ptr;
	}


	bool STATIC_IsDeepDiveElite(class UObject** WorldContextObject, class UDeepDive** DeepDive);
	bool STATIC_GetHasEverCompletedDeepDive(class UObject** WorldContextObject, class UDeepDiveTemplate** DeepDive);
};


// Class FSD.DeepDiveManager
// 0x00B0 (0x00D8 - 0x0028)
class UDeepDiveManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnDeepDivesRefresh;                                       // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UDeepDive*                                   ActiveNormalDeepDive;                                     // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UDeepDive*                                   ActiveHardDeepDive;                                       // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UDeepDive*                                   ActiveDeepDive;                                           // 0x0048(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGeneratedMission*                           CurrentMission;                                           // 0x0050(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0058(0x0004) MISSED OFFSET
	float                                              currentDepth;                                             // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TMap<int, struct FDeepDiveBank>                    DeepDiveBank;                                             // 0x0060(0x0050) (ZeroConstructor, Transient)
	int                                                NumFailedRequests;                                        // 0x00B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                BackendDataValid;                                         // 0x00B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                BackendSeed;                                              // 0x00B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	struct FDateTime                                   BackendExpirationTime;                                    // 0x00C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FDateTime                                   LastRequestTime;                                          // 0x00C8(0x0008) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepDiveManager");
		return ptr;
	}


	void StartDeepDive(class UDeepDive** DeepDive);
	void MarkGivenRewards();
	bool IsEliteDeepDive(class UGeneratedMission** mission);
	class UDeepDive* GetDeepDiveFromMission(class UGeneratedMission** mission);
	class UGeneratedMission* GetCurrentSingleMission();
	int GetCurrentDeepDiveStage();
	class UDeepDive* GetActiveNormalDeepDive();
	class UDeepDive* GetActiveHardDeepDive();
	class UDeepDive* GetActiveDeepDive();
	void DeepDiveRefreshDelegate__DelegateSignature();
	bool CompleteCurrentSingleMission();
	bool AreAllSelectedClassesQualified();
};


// Class FSD.DeepDive
// 0x0070 (0x0098 - 0x0028)
class UDeepDive : public UObject
{
public:
	TArray<class UGeneratedMission*>                   missions;                                                 // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UBiome*                                      Biome;                                                    // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FDeepDiveRewardItem>                 GivenRewards;                                             // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MissionsCompleted;                                        // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<int>                                        StagesCompleted;                                          // 0x0058(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                CurrentMissionIndex;                                      // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	class UDeepDiveTemplate*                           Template;                                                 // 0x0070(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       DeepDiveName;                                             // 0x0078(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient)
	int                                                BestTime;                                                 // 0x0090(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepDive");
		return ptr;
	}


	bool IsCompleted();
	bool HasCompletedStage(int* StageIndex);
	struct FDeepDiveRewardItem GetGivenRewardAtStage(int* StageIndex);
};


// Class FSD.AsyncPathRequestsInterface
// 0x0000 (0x0028 - 0x0028)
class UAsyncPathRequestsInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AsyncPathRequestsInterface");
		return ptr;
	}

};


// Class FSD.AsyncPathRequests
// 0x0018 (0x0110 - 0x00F8)
class UAsyncPathRequests : public UActorComponent
{
public:
	TArray<TWeakObjectPtr<class UObject>>              RequestListeners;                                         // 0x00F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AsyncPathRequests");
		return ptr;
	}

};


// Class FSD.DeepPathfinderSceneComponent
// 0x0000 (0x0260 - 0x0260)
class UDeepPathfinderSceneComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepPathfinderSceneComponent");
		return ptr;
	}

};


// Class FSD.CommnuityRewardBundle
// 0x0010 (0x0040 - 0x0030)
class UCommnuityRewardBundle : public UDataAsset
{
public:
	TArray<struct FCommunityReward>                    Rewards;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommnuityRewardBundle");
		return ptr;
	}


	void AwardRewards(class UObject** WorldContext);
};


// Class FSD.DeepPathfinderMovement
// 0x02D8 (0x0458 - 0x0180)
class UDeepPathfinderMovement : public UPawnMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0180(0x0008) MISSED OFFSET
	bool                                               UseDormancy;                                              // 0x0188(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0189(0x0003) MISSED OFFSET
	float                                              MaxPawnSpeed;                                             // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StrafeSpeed;                                              // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSlowdownAngle;                                         // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSlowdownAngle;                                         // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxStrafeDistance;                                        // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AlignDirectionSpeed;                                      // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FleeSpeedBoostMultiplier;                                 // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAcceleration;                                          // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxBrakingDeceleration;                                   // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngleSpeedFilterFactor;                                   // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           AIAvoidanceWeight;                                        // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EDeepPathFinderType                                PathfinderType;                                           // 0x01B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EDeepPathFinderSize                                PathfinderSize;                                           // 0x01B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ETeleportType                                      MovementPhysicsType;                                      // 0x01BA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EDeepPathFinderPreference                          PathfinderPreference;                                     // 0x01BB(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AlignTowardsTargetIfStationary;                           // 0x01BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01BD(0x0003) MISSED OFFSET
	float                                              AlignToTargetMinRequiredAngle;                            // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AllowSlowTickRateWhenNotVisible;                          // 0x01C4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ForceAPathIfNoneFound;                                    // 0x01C5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x01C6(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPathBegin;                                              // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPauseMovementElapsed;                                   // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPathFinished;                                           // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRefreshDestination;                                     // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0218(0x0020) MISSED OFFSET
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           PathMovedDist;                                            // 0x0240(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           LocalPathMovedDist;                                       // 0x0244(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FDeepRepPath                                Path;                                                     // 0x0248(0x00D0) (Net, Transient)
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x0318(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      TargetActor;                                              // 0x0320(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentPathIndex;                                         // 0x0328(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentPathFraction;                                      // 0x032C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Destination;                                              // 0x0330(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	class AActor*                                      DestinationActor;                                         // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AcceptanceRadius;                                         // 0x0348(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               OnlyPartPath;                                             // 0x034C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x034D(0x0003) MISSED OFFSET
	float                                              PauseMovementTime;                                        // 0x0350(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EDeepMovementMode                                  MoveMode;                                                 // 0x0354(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0355(0x0003) MISSED OFFSET
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0360(0x0004) MISSED OFFSET
	struct FVector                                     LastForwardDir;                                           // 0x0364(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              VerticalAngleSpeed;                                       // 0x0370(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HorizontalAngleSpeed;                                     // 0x0374(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsStrafing;                                               // 0x0378(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasOustandingPathRequest;                                 // 0x0379(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x26];                                      // 0x037A(0x0026) MISSED OFFSET
	float                                              PostponedTickTime;                                        // 0x03A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               LastMoveSuccessful;                                       // 0x03A4(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HandleRotation;                                           // 0x03A5(0x0001) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1A];                                      // 0x03A6(0x001A) MISSED OFFSET
	struct FVector                                     UnfilteredPosition;                                       // 0x03C0(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DampOmega;                                                // 0x03CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseMovementSpring;                                        // 0x03D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SnapToPathfinderOnFirstMove;                              // 0x03D1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x6];                                       // 0x03D2(0x0006) MISSED OFFSET
	struct FFakeMoverState                             FakePhysicsMove;                                          // 0x03D8(0x0060) (Edit, BlueprintVisible)
	float                                              FakeSyncTime;                                             // 0x0438(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1C];                                      // 0x043C(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepPathfinderMovement");
		return ptr;
	}


	void UpdateDestination(struct FVector* Dest);
	void TeleportTo(struct FVector* destLoc, struct FRotator* destRot);
	void StopMove();
	void StopAttackStance();
	bool StartMoveToActor(class AActor** Dest, float* AcceptanceRadius);
	bool StartMoveTo(struct FVector* Dest, float* AcceptanceRadius);
	bool StartFleeFrom(struct FVector* dangerPos, float* distance);
	void StartFakePhysicsMoveSet(class UFakeMoverSettings** MoveSettings);
	void StartFakePhysics(struct FVector* Vel);
	void StartAttackStance(struct FVector* stancePos);
	void SnapToPathfinder();
	void SetSlowDownAngles(float* Min, float* Max);
	void SetMaxSpeed(float* Speed);
	void SetHandleRotation(bool* flag);
	void SetFreezeAlignment(bool* Freeze);
	void SetControlledExternally(bool* controlled);
	bool PathExistTo(struct FVector* Dest);
	bool PathExistsBetween(struct FVector* From, struct FVector* to);
	void OnRep_PathMovedDist(uint32_t* lastPathMovedDist);
	void OnRep_Path(struct FDeepRepPath* oldPath);
	void OnRep_MoveSettings(class UFakeMoverSettings** MoveSettings);
	bool IsFreezeAlignmentSet();
	float GetVerticalAngleSpeed();
	void GetRandomReachablePointAtApproximateDistance_Async(struct FVector* Origin, float* distance, struct FLatentActionInfo* LatentInfo, bool* success, struct FVector* outPos);
	bool GetRandomReachablePointAtApproximateDistance(struct FVector* Origin, float* distance, struct FVector* outPos);
	struct FVector GetPathForwardDirection();
	EDeepMovementState GetMovementState();
	bool GetIsStrafing();
	float GetHorizontalAngleSpeed();
	class UFakeMoverSettings* GetCurrentFakePhysicsMoveSet();
	bool FlyToConnectedPosition(struct FVector* destPos);
	struct FVector FindPathfinderPointAbove(struct FVector* Pos);
	void FindNearestPathfinderPoint_Async(struct FVector* Pos, float* MaxDistance, struct FLatentActionInfo* LatentInfo, bool* success, struct FVector* outPos);
	struct FVector FindNearestPathfinderPoint(struct FVector* Pos, float* MaxDistance);
	struct FVector FindNearestConnectedPathfinderPoint(struct FVector* Pos, float* MaxDistance);
	struct FQuat CalcPathfinderOrientation(struct FVector* Pos, struct FVector* forwardDir);
	bool BackOffFrom(struct FVector* dangerPos, float* distance);
	void AddFakeMoverImpulse(struct FVector* Impulse);
};


// Class FSD.DeepProceduralMeshComponent
// 0x0070 (0x0610 - 0x05A0)
class UDeepProceduralMeshComponent : public UMeshComponent
{
public:
	class UBodySetup*                                  ProcMeshBodySetup;                                        // 0x05A0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x05A8(0x0018) MISSED OFFSET
	class UTerrainMaterialsCollection*                 MaterialCollection;                                       // 0x05C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInterface*                          DefaultScannerMaterial;                                   // 0x05C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x05D0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepProceduralMeshComponent");
		return ptr;
	}


	class UTerrainMaterial* FindTerrainMaterialFromPhysicalMaterial(class UFSDPhysicalMaterial** Material);
};


// Class FSD.DeepScanComponent
// 0x0058 (0x0150 - 0x00F8)
class UDeepScanComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x00F8(0x0040) MISSED OFFSET
	bool                                               ScanActive;                                               // 0x0138(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	class UTexture2D*                                  ScanTexture;                                              // 0x0140(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ADeepCSGWorld*                               DeepWorld;                                                // 0x0148(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepScanComponent");
		return ptr;
	}


	void StopScan();
	void StartScan(struct FTransform* trans);
};


// Class FSD.DefenseEvent
// 0x0018 (0x0490 - 0x0478)
class ADefenseEvent : public AGameEvent
{
public:
	float                                              DefendDuration;                                           // 0x0478(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	class UClass*                                      DefendWidget;                                             // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // 0x0488(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x048C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DefenseEvent");
		return ptr;
	}


	void OnRep_Progress(float* OldValue);
};


// Class FSD.MapDrawer
// 0x0008 (0x0338 - 0x0330)
class AMapDrawer : public AActor
{
public:
	class ULineBatchComponent*                         LineBatcher;                                              // 0x0330(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MapDrawer");
		return ptr;
	}


	void DrawMapSphere(struct FVector* Center, float* Radius, int* Segments, struct FLinearColor* LineColor, float* Thickness);
	void DrawMapLine(struct FVector* LineStart, struct FVector* LineEnd, struct FLinearColor* LineColor, float* Thickness);
};


// Class FSD.DefensePointActor
// 0x0040 (0x0370 - 0x0330)
class ADefensePointActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0330(0x0020) MISSED OFFSET
	class UClass*                                      DefenseEvent;                                             // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AGameEvent*                                  ActiveDefenceEvent;                                       // 0x0358(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	EDefendPointState                                  DefendState;                                              // 0x0360(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0361(0x0007) MISSED OFFSET
	class USingleUsableComponent*                      DefendPointUsable;                                        // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DefensePointActor");
		return ptr;
	}


	void SetState(EDefendPointState* State);
	void OnRep_DefendState();
	void OnDefensePointActivated(class APlayerCharacter** Player);
	void DefenseStart();
	void DefenseFail();
	void DefenseComplete();
};


// Class FSD.DefenseObjective
// 0x0038 (0x01C0 - 0x0188)
class UDefenseObjective : public UObjective
{
public:
	int                                                DefensePoints;                                            // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                PointsDefended;                                           // 0x018C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0190(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.DefenseObjective.ObjectiveDefenseClasses
	TArray<class ADefensePointActor*>                  ActiveObjectiveDefenseActors;                             // 0x01A0(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	class UDebrisPositioning*                          DebrisPositioning;                                        // 0x01B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 DefenseSpawnAvoidCostCurve;                               // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DefenseObjective");
		return ptr;
	}


	void PointDefended();
	void OnRep_PointsRepaired();
	void OnDefensePointsSpawned();
	struct FTransform STATIC_FindDefensePointLocation(class AProceduralSetup** setup, class UDebrisPositioning** DebrisPositioning, class UClass** terrainPlacement, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve, bool* outFoundSpawn);
};


// Class FSD.DetPack
// 0x0068 (0x0398 - 0x0330)
class ADetPack : public AActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0330(0x0020) MISSED OFFSET
	float                                              UpgradedStaggerChance;                                    // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              UpgradedStaggerDuration;                                  // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              UpgradedFearFactor;                                       // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VisualDamageRadius;                                       // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              IncreasedFearRadius;                                      // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              IncreasedStaggerRadius;                                   // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UProjectileMovementComponent*                Movement;                                                 // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UExplosionComponent*                         Explosion;                                                // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USingleUsableComponent*                      UseComp;                                                  // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USimpleHealthComponent*                      SimpleHealth;                                             // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class ADetPackItem*                                Detonator;                                                // 0x0388(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               HasExploded;                                              // 0x0390(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x0391(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ExplodesOnDeath;                                          // 0x0392(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasExtraStaggerRadius;                                    // 0x0393(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasExtraFearRadius;                                       // 0x0394(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0395(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DetPack");
		return ptr;
	}


	void UseFearStaggerUpgrades();
	void RecieveHitObject();
	void OnRep_IsMoving();
	void OnRep_HasExploded();
	void OnExploded();
	void OnDetPackPickedUp(class APlayerCharacter** user);
	void OnDetPackDeath(class UHealthComponentBase** HealthComponent);
};


// Class FSD.DetPackItem
// 0x00D0 (0x0540 - 0x0470)
class ADetPackItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0470(0x0010) MISSED OFFSET
	class UClass*                                      DetPackClass;                                             // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPThrowMontage;                                           // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPThrowMontage;                                           // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_DetonateAnim;                                          // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_DetonateAnim;                                         // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_EquipDetonatorAnimation;                               // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_EquipDetonatorAnimation;                              // 0x04B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      DetonatorFPMesh;                                          // 0x04B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      DetonatorTPMesh;                                          // 0x04C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UForceFeedbackEffect*                        DetonatorTriggerForceFeedback;                            // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              SupplyStatusWeight;                                       // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThrowVelocity;                                            // 0x04DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EnheiritOwnerVelocityScale;                               // 0x04E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowAngle;                                               // 0x04E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CooldownAfterThrow;                                       // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CooldownAfterDetonation;                                  // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowDelay;                                               // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowZOffset;                                             // 0x04F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutDetPackPlaced;                                       // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutOutOfAmmo;                                           // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0508(0x0004) MISSED OFFSET
	float                                              CooldownLeft;                                             // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class ADetPack*>                            ThrownPacks;                                              // 0x0510(0x0010) (ZeroConstructor, Transient)
	TArray<class UItemUpgrade*>                        DetPackUpgrades;                                          // 0x0520(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xA];                                       // 0x0530(0x000A) MISSED OFFSET
	bool                                               IsDetonatorOut;                                           // 0x053A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasThrownPack;                                            // 0x053B(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x053C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DetPackItem");
		return ptr;
	}


	void Simulate_ThrowGrenade();
	void Server_ThrowGrenade();
	void Server_Detonate();
	void Server_CycleItem();
	void Receive_OnRep_IsDetonatorOut();
	void OnRep_IsDetonatorOut();
	void OnDetonatingFinished();
	int GetCurrentGrenades();
};


// Class FSD.DialogDataAsset
// 0x0030 (0x0060 - 0x0030)
class UDialogDataAsset : public UDataAsset
{
public:
	bool                                               Enabled;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AudioOnly;                                                // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              ShoutDelay;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShoutCoolDown;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShoutChance;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FDialogStruct>                       Entries;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ShuffledIndices;                                          // 0x0050(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DialogDataAsset");
		return ptr;
	}


	int SelectIndex(class UObject** WorldContext);
	bool SelectEntry(class UObject** WorldContext, struct FDialogStruct* Dialog);
	struct FDialogStruct GetShout(int* Index);
};


// Class FSD.DifficultyManager
// 0x0030 (0x0128 - 0x00F8)
class UDifficultyManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00F8(0x0018) MISSED OFFSET
	int                                                ForcedPlayerCount;                                        // 0x0110(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	class AFSDGameMode*                                GameMode;                                                 // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFSDGameState*                               GameState;                                                // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DifficultyManager");
		return ptr;
	}


	class UDifficultySetting* SelectDifficulty(int* Index);
	float GetSmallEnemyDamageResistance();
	float GetPointExtractionScaler();
	float GetExtraLargeEnemyDamageResistance();
	float GetEnemyDamageResistance();
	float GetEnemyDamageModifier();
	float GetEnemyCountModifier();
	class UDifficultySetting* GetCurrentDifficulty();
	float GetBossDifficultyScaler();
};


// Class FSD.DifficultySetting
// 0x0188 (0x01D8 - 0x0050)
class UDifficultySetting : public USavableDataAsset
{
public:
	struct FText                                       DifficultyName;                                           // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       ShortDifficultyName;                                      // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      CampaignRequirement;                                      // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EnvironmentalDamageModifier;                              // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	TArray<float>                                      ExtraLargeEnemyDamageResistance;                          // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	TArray<float>                                      EnemyDamageResistance;                                    // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	TArray<float>                                      SmallEnemyDamageResistance;                               // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	TArray<float>                                      EnemyDamageModifier;                                      // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	TArray<float>                                      EnemyCountModifier;                                       // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	float                                              BossDifficultyScaler;                                     // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PointExtractionScaler;                                    // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRandInterval                               EncounterDifficulty;                                      // 0x00E8(0x0010) (Edit)
	struct FRandInterval                               StationaryDifficulty;                                     // 0x00F8(0x0010) (Edit)
	float                                              SpecialEncounterChance;                                   // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HazardBonus;                                              // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	struct FRandInterval                               EnemyWaveInterval;                                        // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRandInterval                               EnemyNormalWaveInterval;                                  // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRandInterval                               EnemyNormalWaveDifficulty;                                // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              WaveStartDelayScale;                                      // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	struct FRandInterval                               EnemyDiversity;                                           // 0x0150(0x0010) (Edit)
	struct FRandInterval                               StationaryEnemyDiversity;                                 // 0x0160(0x0010) (Edit)
	struct FIRandRange                                 DisruptiveEnemyPoolCount;                                 // 0x0170(0x0008) (Edit)
	int                                                MinPoolSize;                                              // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	struct FVeteranComposition                         Veterans;                                                 // 0x0180(0x0020) (Edit)
	float                                              SpeedModifier;                                            // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttackCooldownModifier;                                   // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileSpeedModifier;                                  // 0x01A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DifficultyGroup;                                          // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DifficultyGroupIndex;                                     // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	TArray<class UMissionStat*>                        MissionCompletedStats;                                    // 0x01B8(0x0010) (Edit, ZeroConstructor)
	bool                                               UseSharedHealthPool;                                      // 0x01C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x01C9(0x0003) MISSED OFFSET
	float                                              HeathRegenerationMax;                                     // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReviveHealthRatio;                                        // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DifficultySetting");
		return ptr;
	}


	bool IsUnlocked(class UObject** WorldContext);
	float AddHazardBonus(float* BaseValue);
};


// Class FSD.MULE
// 0x0018 (0x0458 - 0x0440)
class AMULE : public ADeepPathfinderCharacter
{
public:
	class UHealthComponent*                            HealthComponent;                                          // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USimpleObjectInfoComponent*                  ObjectInfo;                                               // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               IsDown;                                                   // 0x0450(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0451(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MULE");
		return ptr;
	}

};


// Class FSD.DiscordWrapper
// 0x02E0 (0x0308 - 0x0028)
class UDiscordWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0028(0x00D8) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAcceptInvite;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRejectInvite;                                           // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIgnoreInvite;                                           // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FDiscordServerInviteData                    ServerInfo;                                               // 0x0130(0x0078) (BlueprintVisible, BlueprintReadOnly)
	struct FScriptMulticastDelegate                    OnResponseSuccessChanged;                                 // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               LastResponseSuccessful;                                   // 0x01B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDiscordEoMDataEvent;                                    // 0x01C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x30];                                      // 0x01D0(0x0030) MISSED OFFSET
	bool                                               UserIn;                                                   // 0x0200(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0201(0x0007) MISSED OFFSET
	struct FDiscordRewardNotification                  rewardNotification;                                       // 0x0208(0x0040) (BlueprintVisible)
	int                                                UserInStatus;                                             // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasEoM;                                                   // 0x024C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x024D(0x0003) MISSED OFFSET
	struct FDiscordEoMData                             EoMData;                                                  // 0x0250(0x0020) (BlueprintVisible, BlueprintReadOnly)
	bool                                               IsConnected;                                              // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0271(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJoinRequest;                                            // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData06[0x1];                                       // 0x0288(0x0001) MISSED OFFSET
	bool                                               ServerInfoLoaded;                                         // 0x0289(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x028A(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDiscordServerInfoLoaded;                                // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDiscordServerCountLoaded;                               // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDiscordUserInServer;                                    // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData08[0x48];                                      // 0x02C0(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DiscordWrapper");
		return ptr;
	}


	void RequestUserInServer();
	void RequestFactionAdjustment(int* Faction, bool* force);
	void RequestEoMData();
	void RequestDiscordServerInfo();
	void RejectInviteSignature();
	void RejectInvite(struct FString* userId);
	void IgnoreInviteSignature();
	void IgnoreInvite(struct FString* userId);
	struct FString GetAvatarURL();
	void AdjustFaction();
	void AcceptInviteSignature();
	void AcceptInvite(struct FString* userId);
};


// Class FSD.RepairableComponent
// 0x0040 (0x0138 - 0x00F8)
class URepairableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFullyRepairedEvent;                                     // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllResourcesAquiredEvent;                               // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRepairedEvent;                                          // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UGemResourceData*                            RequiresCarriedResource;                                  // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ResourcesRequired;                                        // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               IsFullyRepaired;                                          // 0x0134(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0135(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RepairableComponent");
		return ptr;
	}


	bool TryRepair(class APlayerCharacter** user);
	void OnRep_ResourcesRequired();
	int GetResourcesRequired();
	void Cheat_Repair();
};


// Class FSD.DonkeyCharacter
// 0x0010 (0x0468 - 0x0458)
class ADonkeyCharacter : public AMULE
{
public:
	class UResourceBank*                               ResourceBank;                                             // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           OutlineComponent;                                         // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DonkeyCharacter");
		return ptr;
	}


	void SetOpenForDeposit(bool* Open);
	void EnableButton();
};


// Class FSD.DownedStateComponent
// 0x0020 (0x0150 - 0x0130)
class UDownedStateComponent : public UCharacterStateComponent
{
public:
	float                                              DownedHealthLossPerSecond;                                // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0134(0x000C) MISSED OFFSET
	float                                              TerrainRemovedFallThreshold;                              // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForceBleedOutHealthLossPerSecond;                         // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DownedStateComponent");
		return ptr;
	}


	void Server_StopBleedOut();
	void Server_StartBleedOut();
};


// Class FSD.DrinkableActor
// 0x0008 (0x0338 - 0x0330)
class ADrinkableActor : public AActor
{
public:
	class UDrinkableDataAsset*                         DrinkableData;                                            // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkableActor");
		return ptr;
	}


	void Pickup(class APlayerCharacter** byCharacter);
	void OnRep_DrinkableData();
	void Fill();
};


// Class FSD.DrinkableDataAsset
// 0x0140 (0x0190 - 0x0050)
class UDrinkableDataAsset : public USavableDataAsset
{
public:
	struct FText                                       DrinkableName;                                            // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       DrinkableDescription;                                     // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                DrinkablePrice;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class UTexture2D*                                  DrinkableIcon;                                            // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RequiredPlayerRank;                                       // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ParticipatesInFreeBeerEvent;                              // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDrinkableAlcoholStrength                          AlcoholStrength;                                          // 0x0095(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0096(0x0002) MISSED OFFSET
	class UDrinkableDataAsset*                         SupporterEdition;                                         // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayFireworks;                                           // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	class UMissionStat*                                StatConsumed;                                             // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMissionStat*                                StatRoundOrdered;                                         // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DrinkableActorClass;                                      // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DrinkableItemClass;                                       // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            OrderShout;                                               // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            OrderCheeringShout;                                       // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            DrinkSaluteShout;                                         // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTemporaryBuff*                              buff;                                                     // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DrinkEffect;                                              // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UResourceData*, int>                    UnlockCost;                                               // 0x00F0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TMap<class UResourceData*, int>                    PurchaseCost;                                             // 0x0140(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkableDataAsset");
		return ptr;
	}


	bool STATIC_TryUnlockSpecialDrinks(class UObject** WorldContext);
	bool TryUnlockDrink(class UObject** WorldContext);
	bool TryPurchaseDrink(class UObject** WorldContext);
	void OnRoundOrdered(class APlayerCharacter** Character);
	bool MustBeUnlocked();
	bool IsUnlocked(class UObject** WorldContext);
	bool IsDrinkFree(class UObject** WorldContext);
	bool HasSupporterEdition();
	class UDrinkableDataAsset* GetDrinkableEdition(class UObject** WorldContext, class APlayerController** Player);
	bool STATIC_AreSpecialDrinksUnlocked(class UObject** WorldContext);
};


// Class FSD.DrinkEffectComponent
// 0x0010 (0x0108 - 0x00F8)
class UDrinkEffectComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	float                                              BeerEffectDurationSeconds;                                // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AutoDestroy;                                              // 0x0104(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EffectIsActive;                                           // 0x0105(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0106(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkEffectComponent");
		return ptr;
	}


	void StopEffect();
	void OnStopEffect();
	void OnStartEffect(class APlayerCharacter** Character);
};


// Class FSD.DrinkableItem
// 0x0008 (0x0478 - 0x0470)
class ADrinkableItem : public AAnimatedItem
{
public:
	class UDrinkableDataAsset*                         DrinkableData;                                            // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkableItem");
		return ptr;
	}


	void OnRep_DrinkableData();
	void Consume();
	void ClientConsumed();
	bool CheckCanSalute();
};


// Class FSD.DrinkSettings
// 0x0070 (0x00A0 - 0x0030)
class UDrinkSettings : public UDataAsset
{
public:
	TArray<struct FBarleySpawnItem>                    BarleySpawns;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FRandInterval                               BarleyAmount;                                             // 0x0040(0x0010) (Edit)
	TMap<class UResourceData*, int>                    SpecialBeerUnlockCost;                                    // 0x0050(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkSettings");
		return ptr;
	}

};


// Class FSD.DroneCharacter
// 0x0018 (0x0458 - 0x0440)
class ADroneCharacter : public ADeepPathfinderCharacter
{
public:
	class UHealthComponent*                            HealthComponent;                                          // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           OutlineComponent;                                         // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USimpleObjectInfoComponent*                  ObjectInfo;                                               // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DroneCharacter");
		return ptr;
	}

};


// Class FSD.DroneDisplayActionComponent
// 0x0000 (0x0260 - 0x0260)
class UDroneDisplayActionComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DroneDisplayActionComponent");
		return ptr;
	}


	void SetMode(EDroneActions* droneAction);
};


// Class FSD.DroneFlame
// 0x0048 (0x0378 - 0x0330)
class ADroneFlame : public AActor
{
public:
	class UParticleSystemComponent*                    FlameParticles;                                           // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	TArray<struct FName>                               FlameParameterNames;                                      // 0x0348(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      OnFireStatusEffect;                                       // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageTickRate;                                           // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	float                                              Duration;                                                 // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlameDiameter;                                            // 0x036C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0374(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DroneFlame");
		return ptr;
	}

};


// Class FSD.DroneMiningToolBase
// 0x0060 (0x0158 - 0x00F8)
class UDroneMiningToolBase : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    HitSomething;                                             // 0x00F8(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0108(0x0014) MISSED OFFSET
	float                                              MineRadius;                                               // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0120(0x0004) MISSED OFFSET
	float                                              TimeToFirstHit;                                           // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TomeToSecondHit;                                          // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeToReset;                                              // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0130(0x0018) MISSED OFFSET
	class AActor*                                      MineralActor;                                             // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DroneMiningToolBase");
		return ptr;
	}


	void StopMining();
	void StartMining();
	void SpawnEffects(class UTerrainMaterial** aTerrainMaterial, bool* aParialHit, struct FVector_NetQuantize* aLocation, struct FVector_NetQuantize* aImpactNormal);
	void SetLocationToMine(struct FVector* Location);
};


// Class FSD.DropPod
// 0x0070 (0x03A0 - 0x0330)
class ADropPod : public AActor
{
public:
	float                                              DropHeight;                                               // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x0334(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UAutoCarverComponent*                        AutoCarver;                                               // 0x0340(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 DepartCurve;                                              // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarverRotationSpeed;                                      // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CarverScale;                                              // 0x0354(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DepartureTime;                                            // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	struct FVector                                     StartLocation;                                            // 0x0368(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EDropPodState                                      State;                                                    // 0x0374(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0375(0x0007) MISSED OFFSET
	float                                              DrillSpeed;                                               // 0x037C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreeFallAcceleration;                                     // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreeFallSpeed;                                            // 0x0384(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0388(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DropPod");
		return ptr;
	}


	void StartDrilling();
	void PrepForTakeOff();
	void OnRep_State();
	void OnPrepForTakeOff();
	void OnDroppodImpact();
	void OnDrillingStarted();
	void OnDeparting();
	class ADropPod* STATIC_DropToMission(class UObject** WorldContextObject, class UClass** podClass, struct FVector* Location);
	void Depart();
};


// Class FSD.FSDMiningHead
// 0x0008 (0x03A8 - 0x03A0)
class AFSDMiningHead : public ADropPod
{
public:
	class UResourceBank*                               ResourceBank;                                             // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDMiningHead");
		return ptr;
	}

};


// Class FSD.DropToTerrainComponent
// 0x0040 (0x0138 - 0x00F8)
class UDropToTerrainComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x00F8(0x000C) MISSED OFFSET
	float                                              FallVelocity;                                             // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TerrainTraceMaxDistance;                                  // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFallToTerrainStateChanged;                              // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FVector                                     CurrentLocation;                                          // 0x0120(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DropTarget;                                               // 0x012C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DropToTerrainComponent");
		return ptr;
	}


	void SetParentPositionOnAll(struct FVector* CurrentParentLocation);
	void OnTerrainRemoved();
	void BeginDropDetection();
};


// Class FSD.DualWieldWeapon
// 0x0028 (0x0738 - 0x0710)
class ADualWieldWeapon : public AAmmoDrivenWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0710(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      FPMeshLeft;                                               // 0x0718(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      TPMeshLeft;                                               // 0x0720(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAnimMontage*                                WPN_Left_Reload;                                          // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WPN_Left_TP_Reload;                                       // 0x0730(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DualWieldWeapon");
		return ptr;
	}

};


// Class FSD.DualWieldAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UDualWieldAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DualWieldAnimInstance");
		return ptr;
	}

};


// Class FSD.DualMachinePistols
// 0x0010 (0x0748 - 0x0738)
class ADualMachinePistols : public ADualWieldWeapon
{
public:
	class UClass*                                      EmptyClipStatusEffect;                                    // 0x0738(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0740(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DualMachinePistols");
		return ptr;
	}


	void Server_TriggerStatusEffect();
};


// Class FSD.ElectroBeam
// 0x0098 (0x03C8 - 0x0330)
class AElectroBeam : public AActor
{
public:
	class UCapsuleComponent*                           Collider;                                                 // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class AActor*>                              ParentPlants;                                             // 0x0338(0x0010) (ZeroConstructor, Transient)
	struct FVector                                     LocationOffset;                                           // 0x0348(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         SourceLocation;                                           // 0x0354(0x000C) (Net, Transient)
	struct FVector_NetQuantize                         TargetLocation;                                           // 0x0360(0x000C) (Net, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class USceneComponent*                             DelaySource;                                              // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             DelayTarget;                                              // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BeamEffect;                                               // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             ZappSound;                                                // 0x0388(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UClass*>                              StatusEffectsToApply;                                     // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              MaxLitTime;                                               // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinLitTime;                                               // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxUnlitTime;                                             // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinUnlitTime;                                             // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldFlicker;                                            // 0x03B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsLit;                                                    // 0x03B1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x16];                                      // 0x03B2(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ElectroBeam");
		return ptr;
	}


	void SetTarget(class USceneComponent** TargetPoint);
	void SetSource(class USceneComponent** SourcePoint);
	void SetParents(class AActor** firstParent, class AActor** secondParent);
	void RecalculateBeam();
	void OnRep_TargetLocation();
	void OnRep_SourceLocation();
	void OnRep_Flag();
	void OnParentTwoDeath(class UHealthComponentBase** HealthComponent);
	void OnParentOneDeath(class UHealthComponentBase** HealthComponent);
	class UParticleSystemComponent* GetParticleEffect();
	class UCapsuleComponent* GetCollider();
	class UAudioComponent* GetAudio();
	void DelayedSetTarget(class USceneComponent** TargetPoint);
	void DelayedSetSource(class USceneComponent** SourcePoint);
	void DeactivateCollisionAndEffect();
};


// Class FSD.SentryElectroBeam
// 0x0010 (0x03D8 - 0x03C8)
class ASentryElectroBeam : public AElectroBeam
{
public:
	TArray<class ARedeployableSentryGun*>              Sentries;                                                 // 0x03C8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryElectroBeam");
		return ptr;
	}

};


// Class FSD.ElevatorPlant
// 0x00D8 (0x0408 - 0x0330)
class AElevatorPlant : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnStartTimelineEvent;                                     // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    COnStateChangedEvent;                                     // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UAudioComponent*                             MovingSoundComponent;                                     // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundCue*                                   GrabSound;                                                // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RestPositionOffset;                                       // 0x0360(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeRestLocation;                                     // 0x036C(0x000C) (Edit, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeDestinationLocation;                              // 0x0378(0x000C) (Edit, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BaseTangentDirectionOffset;                               // 0x0384(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeafTangentDirectionOffset;                               // 0x0390(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeafLocationNoise;                                        // 0x039C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    LeafNoiseRotator;                                         // 0x03A8(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseTangentLength;                                        // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class USplineMeshComponent*                        CSplineMesh;                                              // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             CVineBase;                                                // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             CVineLeaf;                                                // 0x03C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03D0(0x0010) MISSED OFFSET
	float                                              InitialBaseTangentLength;                                 // 0x03E0(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              LeafLocationNoiseSize;                                    // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VineMovementAlpha;                                        // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x03EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayersOnLeaf;                                          // 0x03ED(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               IsOpen;                                                   // 0x03EE(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               Extend;                                                   // 0x03EF(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	class UCurveFloat*                                 DipOffsetCurve;                                           // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LocationLerpCurve;                                        // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ElevatorPlant");
		return ptr;
	}


	void SetLeafNoiseRotator(struct FRotator* aRotator);
	void SetLeafLocationNoise(struct FVector* aVector);
	void SetIsPlayersOnLeaf(bool* aValue);
	void SetIsOpen(bool* aValue);
	void SetIsExtended(bool* aValue);
	void SetBaseTangentLength(float* Value);
	void SetBaseTangentDirectionOffset(struct FVector* aVector);
	void OnRep_RelavtiveDestinationLocation();
	void OnRep_Open();
	void OnMatchStarted();
	void MoreTick(struct FVector* DipOffset, float* aValue);
	float GetVineMovementAlpha();
	struct FVector GetRelativeRestLocation();
	struct FVector GetRelativeDestinationLocation();
	float GetLeafLocationNoiseSize();
	bool GetIsPlayersOnLeaf();
	bool GetIsMoving();
	bool GetIsExtended();
	float GetInitialTangentLenth();
};


// Class FSD.EliminationObjective
// 0x0060 (0x01E8 - 0x0188)
class UEliminationObjective : public UObjective
{
public:
	int                                                RoomCount;                                                // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	class UDebrisPositioning*                          Positioning;                                              // 0x0190(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 CostDistanceCurve;                                        // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ReducedCostCurve;                                         // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ObjectToSpawn;                                            // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DebrisRadius;                                             // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	TArray<class UDebrisBase*>                         ObjectDebris;                                             // 0x01B8(0x0010) (Edit, ExportObject, ZeroConstructor)
	class UEnemyDescriptor*                            EnemyTarget;                                              // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ObjectiveTrackerClass;                                    // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                EnemyGroupDifficulty;                                     // 0x01D8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EnemiesKilled;                                            // 0x01DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                EnemiesToKill;                                            // 0x01E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EliminationObjective");
		return ptr;
	}


	void RegisterTargetSpawned(class APawn** Target);
	void ReceiveTargetKilled(class UHealthComponentBase** Health);
	void OnTargetKilled(class UHealthComponentBase** Health);
	void OnRep_EnemiesToKill(int* prevAmount);
	void OnRep_EnemiesKilled(int* prevAmount);
};


// Class FSD.EncounterSettings
// 0x00D0 (0x0100 - 0x0030)
class UEncounterSettings : public UDataAsset
{
public:
	struct FIRandRange                                 StationaryEnemyCount;                                     // 0x0030(0x0008) (Edit)
	TArray<class UEnemyDescriptor*>                    CommonEnemies;                                            // 0x0038(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    SpecialEnemies;                                           // 0x0048(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    DisruptiveEnemies;                                        // 0x0058(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    StationaryEnemies;                                        // 0x0068(0x0010) (Edit, ZeroConstructor)
	TArray<class UCritterDescriptor*>                  CommonCritters;                                           // 0x0078(0x0010) (Edit, ZeroConstructor)
	TArray<struct FEncounterRareCritterItem>           RareCritters;                                             // 0x0088(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    SpecialEncounters;                                        // 0x0098(0x0010) (Edit, ZeroConstructor)
	float                                              RequiredDifficultyPerDiversity;                           // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GlobalDifficultyScale;                                    // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRandInterval                               EncounterDifficulty;                                      // 0x00B0(0x0010) (Edit)
	struct FRandInterval                               StationaryDifficulty;                                     // 0x00C0(0x0010) (Edit)
	struct FRandRange                                  CritterSpawnDifficulty;                                   // 0x00D0(0x0008) (Edit)
	struct FGameplayTag                                SmallRoomTag;                                             // 0x00D8(0x0008) (Edit)
	struct FGameplayTag                                MediumRoomTag;                                            // 0x00E0(0x0008) (Edit)
	struct FGameplayTag                                LargeRoomTag;                                             // 0x00E8(0x0008) (Edit)
	float                                              SmallRoomDifficultyModifier;                              // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MediumRoomDifficultyModifier;                             // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LargeRoomDifficultyModifier;                              // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EncounterSettings");
		return ptr;
	}

};


// Class FSD.EncounterActor
// 0x0000 (0x0330 - 0x0330)
class AEncounterActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EncounterActor");
		return ptr;
	}


	void Receive_EncounterHasSpawned(class APawn** spawnedPawn);
};


// Class FSD.EncounterManager
// 0x0060 (0x0158 - 0x00F8)
class UEncounterManager : public UActorComponent
{
public:
	float                                              SpawnDistanceFromRoomBounds;                              // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	TArray<struct FEncounterManagerItem>               Encounters;                                               // 0x0100(0x0010) (ZeroConstructor, Transient)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UEnemySpawnManager*                          SpawnManager;                                             // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UEnemyDescriptor*>                    EnemyPool;                                                // 0x0120(0x0010) (ZeroConstructor, Transient)
	TArray<class UEnemyDescriptor*>                    EncounterPool;                                            // 0x0130(0x0010) (ZeroConstructor, Transient)
	TArray<class UCritterDescriptor*>                  CritterPool;                                              // 0x0140(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EncounterManager");
		return ptr;
	}


	void ShowSpawnLocations();
	TArray<class UEnemyDescriptor*> GetEnemyPool();
	TArray<class UEnemyDescriptor*> GetEncounterPool();
	TArray<class UCritterDescriptor*> GetCritterPool();
};


// Class FSD.EnemyFamily
// 0x0020 (0x0050 - 0x0030)
class UEnemyFamily : public UDataAsset
{
public:
	class UTexture2D*                                  Icon;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       Name;                                                     // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyFamily");
		return ptr;
	}

};


// Class FSD.ObjectInfoComponent
// 0x0000 (0x00F8 - 0x00F8)
class UObjectInfoComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ObjectInfoComponent");
		return ptr;
	}


	class UDialogDataAsset* GetLookAtShout();
	struct FText GetInGameName();
	class UTexture2D* GetInGameIcon();
	struct FText GetInGameDescription();
};


// Class FSD.SimpleObjectInfoComponent
// 0x0040 (0x0138 - 0x00F8)
class USimpleObjectInfoComponent : public UObjectInfoComponent
{
public:
	struct FText                                       InGameName;                                               // 0x00F8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       InGameDescription;                                        // 0x0110(0x0018) (Edit, BlueprintVisible)
	class UDialogDataAsset*                            LookAtShout;                                              // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Icon;                                                     // 0x0130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SimpleObjectInfoComponent");
		return ptr;
	}


	void SetInGameName(struct FString* GameName);
	void SetInGameDescription(struct FString* GameDescription);
};


// Class FSD.EnemyComponent
// 0x0030 (0x0168 - 0x0138)
class UEnemyComponent : public USimpleObjectInfoComponent
{
public:
	class UEnemyFamily*                                Family;                                                   // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            KillShout;                                                // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     mixerName;                                                // 0x0148(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnMixerNameChange;                                        // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyComponent");
		return ptr;
	}


	struct FText GetFamilyName();
	class UTexture2D* GetFamilyIcon();
};


// Class FSD.DroneAbillityStatsComponent
// 0x0010 (0x0108 - 0x00F8)
class UDroneAbillityStatsComponent : public UActorComponent
{
public:
	bool                                               UseOwnArmorDamageMultiplier;                              // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x00F9(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DroneAbillityStatsComponent");
		return ptr;
	}

};


// Class FSD.TestAnimInstance
// 0x06D0 (0x0940 - 0x0270)
class UTestAnimInstance : public UAnimInstance
{
public:
	struct FTestAnimInstanceProxy                      AnimInstanceProxy;                                        // 0x0270(0x06B0) (BlueprintVisible, BlueprintReadOnly, Transient)
	float                                              WalkCycleSpeed;                                           // 0x0920(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartMovingSpeed;                                         // 0x0924(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StopMovingSpeed;                                          // 0x0928(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkCycleMinRate;                                         // 0x092C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeshScale;                                                // 0x0930(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0934(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TestAnimInstance");
		return ptr;
	}

};


// Class FSD.JellyFishAnimInstance
// 0x0000 (0x02C0 - 0x02C0)
class UJellyFishAnimInstance : public UEnemyAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.JellyFishAnimInstance");
		return ptr;
	}

};


// Class FSD.EnemyAttacker
// 0x0000 (0x0028 - 0x0028)
class UEnemyAttacker : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyAttacker");
		return ptr;
	}


	float GetAttackDamageModifier();
};


// Class FSD.EnemyDescriptor
// 0x0128 (0x0158 - 0x0030)
class UEnemyDescriptor : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.EnemyDescriptor.enemyClass
	EVeteranScaling                                    VeteranScaling;                                           // 0x0058(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	TArray<class UEnemyDescriptor*>                    VeteranClasses;                                           // 0x0060(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0070(0x0050) UNKNOWN PROPERTY: MapProperty FSD.EnemyDescriptor.BiomeEnemyClassOverrides
	EEnemySignificance                                 EnemySignificance;                                        // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	struct FVector                                     SpawnOffset;                                              // 0x00C4(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UsesSpawnEffects;                                         // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	ECreatureSize                                      CreatureSize;                                             // 0x00D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00D1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	class UDebrisPositioning*                          Positioning;                                              // 0x00D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                PlacementCategories;                                      // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	class UCaveInfluencer*                             CaveInfluencer;                                           // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FEnemyDebris>                        Debris;                                                   // 0x00F0(0x0010) (Edit, ZeroConstructor)
	float                                              InfluencerRange;                                          // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class UClass*                                      PlacementCarver;                                          // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EDeepPathFinderType                                PathfinderType;                                           // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0111(0x0003) MISSED OFFSET
	float                                              SpawnSpread;                                              // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                IdealSpawnSize;                                           // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanBeUsedForConstantPressure;                             // 0x011C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanBeUsedInEncounters;                                    // 0x011D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x011E(0x0002) MISSED OFFSET
	float                                              DifficultyRating;                                         // 0x0120(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	int                                                MinSpawnCount;                                            // 0x0124(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	int                                                MaxSpawnCount;                                            // 0x0128(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              Rarity;                                                   // 0x012C(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              SpawnAmountModifier;                                      // 0x0130(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               UsesSpawnRarityModifiers;                                 // 0x0134(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	TArray<struct FSpawnRarityItem>                    SpawnRarityModifiers;                                     // 0x0138(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	struct FGuid                                       ID;                                                       // 0x0148(0x0010) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyDescriptor");
		return ptr;
	}


	class UClass* GetEnemyClass(class UBiome** Biome);
};


// Class FSD.BaseCritterDescriptor
// 0x0088 (0x00B8 - 0x0030)
class UBaseCritterDescriptor : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.BaseCritterDescriptor.CritterClass
	unsigned char                                      UnknownData01[0x50];                                      // 0x0058(0x0050) UNKNOWN PROPERTY: MapProperty FSD.BaseCritterDescriptor.BiomeClassOverrides
	class UDebrisPositioning*                          Positioning;                                              // 0x00A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BaseCritterDescriptor");
		return ptr;
	}

};


// Class FSD.CritterDescriptor
// 0x0010 (0x00C8 - 0x00B8)
class UCritterDescriptor : public UBaseCritterDescriptor
{
public:
	struct FIRandRange                                 SpawnAmountPerRoom;                                       // 0x00B8(0x0008) (Edit)
	float                                              SpawnChancePerRoom;                                       // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CritterDescriptor");
		return ptr;
	}

};


// Class FSD.RareCritterDescriptor
// 0x0008 (0x00C0 - 0x00B8)
class URareCritterDescriptor : public UBaseCritterDescriptor
{
public:
	float                                              Rarity;                                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RareCritterDescriptor");
		return ptr;
	}

};


// Class FSD.EnemyDrone
// 0x0000 (0x0460 - 0x0460)
class AEnemyDrone : public AEnemyDeepPathfinderCharacter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyDrone");
		return ptr;
	}

};


// Class FSD.HealthComponentBase
// 0x0080 (0x0178 - 0x00F8)
class UHealthComponentBase : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthChanged;                                          // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamageHealed;                                           // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamageTaken;                                            // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHit;                                                    // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBodypartHit;                                            // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeath;                                                  // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRadialDamage;                                           // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0170(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HealthComponentBase");
		return ptr;
	}


	float TakeRadialDamage(float* damageAmount, struct FVector* BlastCenter, float* blastRadius, float* maxDamageRadius, float* MinDamagePct, class AController** EventInstigator, class AActor** DamageCauser, class UPrimitiveComponent** HitComponent, class UDamageClass** DamageClass);
	float TakePointDamage(float* damageAmount, struct FVector* HitLocation, class AController** EventInstigator, class AActor** DamageCauser, class UDamageClass** DamageClass);
	void TakeDamageSimple(float* damageAmount, class AActor** DamageCauser, class UDamageClass** DamageClass);
	void SetCanTakeDamage(bool* canTakeDamage);
	void Kill();
	bool IsDead();
	bool IsAlive();
	float Heal(float* amount);
	bool GetShowHealthBar();
	float GetHealthPct();
	TScriptInterface<class UHealth> GetHealthComponentForCollider(class UPrimitiveComponent** Primitive);
	float GetHealth();
	class UParticleSystem* GetGenericImpactParticles();
	bool GetCanTakeDamage();
	bool CanTakeDamageFrom(class UDamageClass** DamageClass);
};


// Class FSD.HealthComponent
// 0x00D0 (0x0248 - 0x0178)
class UHealthComponent : public UHealthComponentBase
{
public:
	struct FScriptMulticastDelegate                    OnArmorChanged;                                           // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnArmorDamaged;                                           // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnArmorHealed;                                            // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeathDetailed;                                          // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              Damage;                                                   // 0x01B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	TArray<class USubHealthComponent*>                 SubHealthComponents;                                      // 0x01C0(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               InvulnerableToNonDefinedResistances;                      // 0x01D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET
	TMap<class UPawnStat*, float>                      Resistances;                                              // 0x01D8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               UseDormancy;                                              // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0229(0x0007) MISSED OFFSET
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0230(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0238(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HealthComponent");
		return ptr;
	}


	void ToggleCanTakeDamage();
	void Resupply(float* percentage);
	void OnRep_Damage(float* oldDamage);
	void HealArmor(float* amount);
	bool HasArmor();
	float GetMaxArmor();
	EHealthbarType GetHealthbarType();
	float GetArmorPct();
	float GetArmor();
	void Client_ReceivedHit(float* amount, class UDamageClass** DamageClass, class AActor** DamageCauser, bool* anyHealthLost);
};


// Class FSD.EnemyHealthComponent
// 0x0028 (0x0270 - 0x0248)
class UEnemyHealthComponent : public UHealthComponent
{
public:
	struct FVector                                     KillImpactNormal;                                         // 0x0248(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsBulletSpongeEnemy;                                      // 0x0254(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EEnemyHealthScaling                                EnemyHealthScaling;                                       // 0x0255(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0256(0x0002) MISSED OFFSET
	float                                              Courage;                                                  // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0260(0x0004) MISSED OFFSET
	bool                                               bShowHealthBar;                                           // 0x0264(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRegisterEnemy;                                           // 0x0265(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBossFight;                                             // 0x0266(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0267(0x0001) MISSED OFFSET
	float                                              MixerBuff;                                                // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyHealthComponent");
		return ptr;
	}


	void SetMaxHealth(float* newMaxHealth);
	void OnSubArmorDamaged(float* amount);
	float GetMaxHealth();
};


// Class FSD.PartialEnemyHealthComponent
// 0x0000 (0x0270 - 0x0270)
class UPartialEnemyHealthComponent : public UEnemyHealthComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PartialEnemyHealthComponent");
		return ptr;
	}

};


// Class FSD.EnemyMeleeAttack
// 0x0030 (0x0060 - 0x0030)
class UEnemyMeleeAttack : public UDataAsset
{
public:
	TArray<class UAnimMontage*>                        Montages;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Damage;                                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CausesKnockBack;                                          // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	float                                              KnockBackHorizontalForce;                                 // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              KnockBackVerticalForce;                                   // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSurfaceAngle;                                          // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyMeleeAttack");
		return ptr;
	}


	class UEnemyMeleeAttack* STATIC_SelectMeleeAttack(class AActor** Attacker, class AActor** Target, TArray<class UEnemyMeleeAttack*>* attacks);
	class UAnimMontage* GetRandomMontage();
	void DamageTarget(class AActor** Target, class AActor** Attacker, float* attackModifier);
};


// Class FSD.EnemyDirectMeleeAttack
// 0x0010 (0x0070 - 0x0060)
class UEnemyDirectMeleeAttack : public UEnemyMeleeAttack
{
public:
	float                                              MaxDistance;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UClass*                                      StatusEffect;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyDirectMeleeAttack");
		return ptr;
	}

};


// Class FSD.EnemyAOEMeleeAttack
// 0x0010 (0x0070 - 0x0060)
class UEnemyAOEMeleeAttack : public UEnemyMeleeAttack
{
public:
	struct FName                                       AttackSocketName;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AttackRadius;                                             // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyAOEMeleeAttack");
		return ptr;
	}

};


// Class FSD.EnemyCarvingAttack
// 0x0020 (0x0080 - 0x0060)
class UEnemyCarvingAttack : public UEnemyMeleeAttack
{
public:
	struct FName                                       AttackSocketName;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AttackRadius;                                             // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveDistanceAdded;                                       // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarveDiameterCM;                                          // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveNoiseCM;                                             // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveBurnThicknessCM;                                     // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyCarvingAttack");
		return ptr;
	}

};


// Class FSD.EnemyMeleeAttackAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UEnemyMeleeAttackAnimNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyMeleeAttackAnimNotify");
		return ptr;
	}

};


// Class FSD.EnemyRangedAttack
// 0x0020 (0x0050 - 0x0030)
class UEnemyRangedAttack : public UDataAsset
{
public:
	class UAnimMontage*                                Montage;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttackSocketName;                                         // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RandomAngle;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyRangedAttack");
		return ptr;
	}

};


// Class FSD.EnemyRangedAttackAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UEnemyRangedAttackAnimNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyRangedAttackAnimNotify");
		return ptr;
	}

};


// Class FSD.StopLeadingNotify
// 0x0000 (0x0038 - 0x0038)
class UStopLeadingNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StopLeadingNotify");
		return ptr;
	}

};


// Class FSD.SpawnSettings
// 0x0028 (0x0058 - 0x0030)
class USpawnSettings : public UDataAsset
{
public:
	TArray<class UParticleSystem*>                     SpawnEffects;                                             // 0x0030(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<class USoundCue*>                           SpawnSounds;                                              // 0x0040(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	struct FRandRange                                  SpawnDuration;                                            // 0x0050(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpawnSettings");
		return ptr;
	}

};


// Class FSD.EnemySpawnManager
// 0x0188 (0x0280 - 0x00F8)
class UEnemySpawnManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEnemyDestroyed;                                         // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemyDied;                                              // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemySpawned;                                           // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USpawnEffectsComponent*                      SpawnEffects;                                             // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               SpawningEnabled;                                          // 0x0130(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	TArray<class APawn*>                               ActiveEnemies;                                            // 0x0138(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class APawn*>                               ActiveSwarmerEnemies;                                     // 0x0148(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TMap<class UEnemyDescriptor*, struct FSpawnRarityModifierItem> SpawnRarityModifiers;                                     // 0x0158(0x0050) (ZeroConstructor, Transient)
	TArray<class APawn*>                               ActiveCritters;                                           // 0x01A8(0x0010) (ZeroConstructor, Transient)
	TArray<class APawn*>                               CritcalEnemies;                                           // 0x01B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                MaxActiveEnemies;                                         // 0x01C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxActiveSwarmers;                                        // 0x01CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxActiveCritters;                                        // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceBeforeCleanup;                                 // 0x01D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                SwarmerTag;                                               // 0x01D8(0x0008) (Edit)
	struct FGameplayTag                                RegularTag;                                               // 0x01E0(0x0008) (Edit)
	struct FGameplayTag                                CritterTag;                                               // 0x01E8(0x0008) (Edit)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FSpawnQueueItem>                     SpawnQueue;                                               // 0x01F8(0x0010) (ZeroConstructor, Transient)
	bool                                               bDestroyingAllEnemies;                                    // 0x0208(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x77];                                      // 0x0209(0x0077) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemySpawnManager");
		return ptr;
	}


	void SpawnerDestroyed(class APawn** Actor);
	bool SpawnEnemy(class UEnemyDescriptor** Descriptor, struct FTransform* Transform, struct FScriptDelegate* Callback, bool* useSpawnFX, bool* Alert);
	void RegisterSpawner(class APawn** Actor);
	void RegisterSpawnedEnemy(class AActor** enemy);
	void OnMatchStarted();
	void OnMatchEnded();
	void EnemyDestroyed(class AActor** Actor);
	void EnemyDeath(class UHealthComponentBase** HealthComponent);
	void DestroyAllEnemies();
	bool CanSpawn(class UEnemyDescriptor** EnemyDescriptor);
};


// Class FSD.SpawnEffectsComponent
// 0x00D0 (0x01C8 - 0x00F8)
class USpawnEffectsComponent : public UActorComponent
{
public:
	struct FSpawnEffectsArray                          ActiveEffects;                                            // 0x00F8(0x00C8) (Net)
	class UMaterialInstance*                           BiomeMaterialOverride;                                    // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpawnEffectsComponent");
		return ptr;
	}

};


// Class FSD.PheromoneSpawnerComponent
// 0x0068 (0x0160 - 0x00F8)
class UPheromoneSpawnerComponent : public UActorComponent
{
public:
	struct FRandRange                                  SpawnInterval;                                            // 0x00F8(0x0008) (Edit)
	float                                              AttackPositioningCostModifier;                            // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class UEnemyDescriptor*                            enemy;                                                    // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class AActor*, float>                         InfectedActors;                                           // 0x0110(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PheromoneSpawnerComponent");
		return ptr;
	}

};


// Class FSD.EnemyTemperatureReplicatorComponent
// 0x0040 (0x0138 - 0x00F8)
class UEnemyTemperatureReplicatorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTemperatureEffectChanged;                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIsFrozenChanged;                                        // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIsOnFireChanged;                                        // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UEnemyTemperatureComponent>   EnemyTemperatureComponent;                                // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                TemperatureEffect;                                        // 0x0130(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsFrozen;                                                // 0x0134(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsOnFire;                                                // 0x0135(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0136(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyTemperatureReplicatorComponent");
		return ptr;
	}


	void OnRep_TemperatureEffect();
	void OnRep_IsOnFire();
	void OnRep_IsFrozen();
	bool IsOnFire();
	bool IsFrozen();
	float GetTemperatureEffect();
	void FloatDelegate__DelegateSignature(float* Value);
	void BoolDelegate__DelegateSignature(bool* Value);
};


// Class FSD.EnemyWaveController
// 0x0008 (0x0030 - 0x0028)
class UEnemyWaveController : public UObject
{
public:
	bool                                               IsComplete;                                               // 0x0028(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSuitableForSolo;                                        // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyWaveController");
		return ptr;
	}


	void StartWave();
};


// Class FSD.EnemyWaveManager
// 0x0068 (0x0160 - 0x00F8)
class UEnemyWaveManager : public UActorComponent
{
public:
	TArray<struct FWaveEntry>                          ScriptedWaves;                                            // 0x00F8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FWaveEntry>                          EndMissionWaves;                                          // 0x0108(0x0010) (Edit, ZeroConstructor)
	TArray<class UEnemyWaveController*>                ActiveScriptedWaves;                                      // 0x0118(0x0010) (ZeroConstructor, Transient)
	float                                              StartDelay;                                               // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              spawnRadiusFromSpawnPoint;                                // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ScriptedWavesEnabled;                                     // 0x0130(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               NormalWavesEnabled;                                       // 0x0131(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               OverrideDifficultyScriptedWaveInternal;                   // 0x0132(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0133(0x0001) MISSED OFFSET
	struct FRandRange                                  OverrideScriptedWaveInterval;                             // 0x0134(0x0008) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	class AFSDGameMode*                                GameMode;                                                 // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UEnemySpawnManager*                          SpawnManager;                                             // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0150(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyWaveManager");
		return ptr;
	}


	class UEnemyWaveController* TriggerWave(class UClass** waveClass, bool* resetScriptedWaveTimer);
	void TriggerEndWave(bool* cancelAllWaves);
	void OnMatchEnded();
	void OnEnemySpawned(class APawn** enemy);
	void EnableScriptedWaves();
	void EnableNormalWaves();
	void DisableScriptedWaves();
	void DisableNormalWaves();
};


// Class FSD.EscortObjective
// 0x0058 (0x01E0 - 0x0188)
class UEscortObjective : public UObjective
{
public:
	int                                                ScanCount;                                                // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	class UDebrisPositioning*                          Positioning;                                              // 0x0190(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 CostDistanceCurve;                                        // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DebrisRadius;                                             // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	TArray<class UDebrisBase*>                         ObjectDebris;                                             // 0x01A8(0x0010) (Edit, ExportObject, ZeroConstructor)
	class UClass*                                      ObjectToSpawn;                                            // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             ScanLocations;                                            // 0x01C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                AreasScanned;                                             // 0x01D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                AreasToScan;                                              // 0x01D4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AEscortMule*                                 EscortMule;                                               // 0x01D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EscortObjective");
		return ptr;
	}


	void SetEscortMule(class AEscortMule** MULE);
	void OnRep_AreasToScan(int* prevAmount);
	void OnRep_AreasScanned(int* prevAmount);
	void OnEscortMuleSpawnedEvent();
};


// Class FSD.EscortMule
// 0x0000 (0x0458 - 0x0458)
class AEscortMule : public AMULE
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EscortMule");
		return ptr;
	}

};


// Class FSD.ExplosiveBarrelEvent
// 0x0008 (0x0480 - 0x0478)
class AExplosiveBarrelEvent : public AGameEvent
{
public:
	class UDamageComponent*                            EndDamage;                                                // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExplosiveBarrelEvent");
		return ptr;
	}

};


// Class FSD.BarrelDispenser
// 0x0040 (0x0370 - 0x0330)
class ABarrelDispenser : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	class UClass*                                      BarrelClass;                                              // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0348(0x0008) MISSED OFFSET
	class USingleUsableComponent*                      Usable;                                                   // 0x0350(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              FirstBarrelGenerationTime;                                // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BarrelGenerationTime;                                     // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsReady;                                                  // 0x0368(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasBarrel;                                                // 0x0369(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x036A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BarrelDispenser");
		return ptr;
	}


	void SetPicked();
	void OnUsed(class APlayerCharacter** user);
	void FoldUp();
	void Deploy();
};


// Class FSD.BarrelDispenserAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UBarrelDispenserAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BarrelDispenserAnimInstance");
		return ptr;
	}

};


// Class FSD.ExtruderPlant
// 0x0028 (0x0358 - 0x0330)
class AExtruderPlant : public AActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAnimationAsset*                             ExtrudeAnimation;                                         // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             RetractAnimation;                                         // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             Audio;                                                    // 0x0348(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0350(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExtruderPlant");
		return ptr;
	}

};


// Class FSD.FakeFallComponent
// 0x0028 (0x0120 - 0x00F8)
class UFakeFallComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00F8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FakeFallComponent");
		return ptr;
	}


	void StartFakeFall();
};


// Class FSD.FakeMoverSettings
// 0x0060 (0x0090 - 0x0030)
class UFakeMoverSettings : public UDataAsset
{
public:
	EDeepPathFinderSize                                PathfinderColiSize;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               StickToSurface;                                           // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AlignRotationToSurface;                                   // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0033(0x0001) MISSED OFFSET
	float                                              AirFriction;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SurfaceFriction;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Gravity;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirGravity;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FFakeMoverPropulsion                        Propulsion;                                               // 0x0044(0x0014) (Edit, BlueprintVisible)
	struct FFakeMoverTarget                            NearestPlayerInfluence;                                   // 0x0058(0x001C) (Edit, BlueprintVisible)
	struct FFakeMoverTarget                            TargetInfluence;                                          // 0x0074(0x001C) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FakeMoverSettings");
		return ptr;
	}

};


// Class FSD.FakePhysicsMover
// 0x00A0 (0x03D0 - 0x0330)
class AFakePhysicsMover : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FFakeMoverState                             MoverState;                                               // 0x0338(0x0060) (Edit, BlueprintVisible)
	struct FFakeMoveState                              posVel;                                                   // 0x0398(0x0024) (Net, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x03C0(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              SyncTime;                                                 // 0x03C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FakePhysicsMover");
		return ptr;
	}


	void Teleport(struct FVector* Pos, struct FVector* Vel);
	void OnRep_PosVel(struct FFakeMoveState* posVel);
	void OnRep_MoveSettings(class UFakeMoverSettings** MoveSettings);
	void ApplyImpulse(struct FVector* Impulse);
};


// Class FSD.FallingStateComponent
// 0x0058 (0x0188 - 0x0130)
class UFallingStateComponent : public UCharacterStateComponent
{
public:
	float                                              FallDamageStartVelocity;                                  // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FallDamageModifier;                                       // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoClimbLookForwardDistance;                             // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxClimbHeight;                                           // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinClimbHeight;                                           // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleCheckZOffset;                                      // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinInputDotProduct;                                       // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpZVelocity;                                            // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DebugAutoClimb;                                           // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UDialogDataAsset*                            FallingShout;                                             // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShoutAfterDistance;                                       // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	class UUseAnimationSetting*                        ClimbUseSettings;                                         // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0170(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FallingStateComponent");
		return ptr;
	}


	void Server_ClimbLedge(bool* shouldPlayAnimation);
	void All_ShowFallImpact(class UFSDPhysicalMaterial** PhysMat);
	void All_ShowClimbLedge();
};


// Class FSD.FindFriendSessionsBlueprintCallProxy
// 0x0050 (0x0078 - 0x0028)
class UFindFriendSessionsBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0050(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FindFriendSessionsBlueprintCallProxy");
		return ptr;
	}


	class UFindFriendSessionsBlueprintCallProxy* STATIC_FindFriendSessions(class UObject** WorldContextObject, struct FString* FriendId);
};


// Class FSD.FirstPersonSkeletalMeshComponent
// 0x0000 (0x0BC0 - 0x0BC0)
class UFirstPersonSkeletalMeshComponent : public USkeletalMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FirstPersonSkeletalMeshComponent");
		return ptr;
	}


	struct FVector STATIC_CalcFirstPersonFOVPositionCorrection(class APlayerController** PlayerController, struct FVector* origPos);
};


// Class FSD.FirstPersonStaticMeshComponent
// 0x0000 (0x0610 - 0x0610)
class UFirstPersonStaticMeshComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FirstPersonStaticMeshComponent");
		return ptr;
	}

};


// Class FSD.FirstPersonWidgetComponent
// 0x0000 (0x06C0 - 0x06C0)
class UFirstPersonWidgetComponent : public UWidgetComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FirstPersonWidgetComponent");
		return ptr;
	}

};


// Class FSD.FirstPersonParticleSystemComponent
// 0x0000 (0x07D0 - 0x07D0)
class UFirstPersonParticleSystemComponent : public UParticleSystemComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FirstPersonParticleSystemComponent");
		return ptr;
	}


	class UParticleSystemComponent* STATIC_SpawnFirstPersonEmitterAttached(class UParticleSystem** EmitterTemplate, class USceneComponent** AttachToComponent, struct FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale, TEnumAsByte<EAttachLocation>* LocationType, bool* bAutoDestroy);
};


// Class FSD.FirstPersonPointLightComponent
// 0x0000 (0x03C0 - 0x03C0)
class UFirstPersonPointLightComponent : public UPointLightComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FirstPersonPointLightComponent");
		return ptr;
	}

};


// Class FSD.Flare
// 0x0068 (0x0398 - 0x0330)
class AFlare : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class UProjectileMovementComponent*                Movement;                                                 // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                MaxFlares;                                                // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProductionTime;                                           // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ChromaColor;                                              // 0x034C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFlareOn;                                                // 0x035C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x035D(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0360(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      WeaponPreviewClass;                                       // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	class USoundCue*                                   ImpactGroundSound;                                        // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0390(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Flare");
		return ptr;
	}


	void OnUpdateShadowRadius();
	void OnRep_IsFlareOn();
	void OnFlareSpawnCompleted();
	void OnFlareIgnite();
	void OnFlareExtinguish();
	void Inhibit();
	class UClass* GetWeaponViewClass();
	class AFlare* STATIC_GetFlareDefaultObject(class UClass** flareClass);
	void ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit);
	void ActivateFlare();
};


// Class FSD.FlareGunProjectile
// 0x0010 (0x03D8 - 0x03C8)
class AFlareGunProjectile : public AProjectile
{
public:
	float                                              Duration;                                                 // 0x03C8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               IsFlareOn;                                                // 0x03CC(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x03CD(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlareGunProjectile");
		return ptr;
	}


	void OnUpdateShadowRadius();
	void OnRep_IsFlareOn();
	void OnProjectileSpawnCompleted();
	void OnFlareIgnite();
	void OnFlareExtinguish();
	void OnDroppodImpact(class AMiningPod** DropPod);
	void Inhibit();
	void ActivateFlare();
};


// Class FSD.FlareController
// 0x0028 (0x0120 - 0x00F8)
class UFlareController : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnShadowQualityChanged;                                   // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FFlareMeta>                          FlaresMeta;                                               // 0x0108(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlareController");
		return ptr;
	}


	void STATIC_UnregisterFlareGunProjectile(class AFlareGunProjectile** flareprj);
	void STATIC_UnregisterFlare(class AFlare** Flare);
	void STATIC_RegisterFlareGunProjectile(class AFlareGunProjectile** flareprj);
	void STATIC_RegisterFlare(class AFlare** Flare);
	class AActor* STATIC_FindFlareNear(class UObject** WorldContextObject, struct FVector* Pos, bool* allowMoving, float* maxLightRadiusFraction);
};


// Class FSD.NegPointLightComponent
// 0x0000 (0x03C0 - 0x03C0)
class UNegPointLightComponent : public UPointLightComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NegPointLightComponent");
		return ptr;
	}

};


// Class FSD.PerkAsset
// 0x00B8 (0x00E8 - 0x0030)
class UPerkAsset : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnPerkClaimed;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerkEquipped;                                           // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerkUnequipped;                                         // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerkHighlighted;                                        // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGuid                                       SavegameID;                                               // 0x0070(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FText                                       Title;                                                    // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEquippable;                                            // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x00A1(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.PerkAsset.PerkHudWidgetClass
	unsigned char                                      UnknownData02[0x10];                                      // 0x00D0(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.PerkAsset.PerkLogicClasses
	bool                                               bIsHighlighted;                                           // 0x00E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PerkAsset");
		return ptr;
	}


	bool Unequip(class UObject** WorldContext, class UClass** CharacterClass);
	void SetHighlighted(bool* IsHighlighted);
	void STATIC_SetCharacterPerks(class UObject** WorldContext, class UClass** CharacterClass, TArray<class UPerkAsset*>* perks);
	bool IsPerkAvailableInTier(int* Tier);
	bool IsEquippedBy(class UObject** WorldContext, class UClass** ByCharacterClass);
	EPerkTierState GetStateAtTier(class UObject** WorldContext, int* Tier);
	int GetRankTier(int* Rank);
	struct FText GetRankDescription(int* Rank);
	int GetRankCost(int* Rank);
	bool GetRankAtTier(int* Tier, int* Rank);
	class UClass* GetPerkHUDWidgetClass();
	int GetCurrentRank(class UObject** WorldContext);
	struct FString GetAdditionalRankDescription(int* Rank);
	bool Equip(class UObject** WorldContext, class UClass** CharacterClass);
	bool BuyPerkAtTier(class UObject** WorldContext, int* Tier);
};


// Class FSD.FloatPerkAsset
// 0x0020 (0x0108 - 0x00E8)
class UFloatPerkAsset : public UPerkAsset
{
public:
	TArray<struct FFloatPerkRank>                      Ranks;                                                    // 0x00E8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FFloatPerkEffect>                    Effects;                                                  // 0x00F8(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloatPerkAsset");
		return ptr;
	}


	float GetPerkValue(class UObject** WorldContext);
	float GetLastTierValue();
	float STATIC_GetFloatPerkValue(class UObject** WorldContext, class UFloatPerkAsset** Perk, float* UnclaimedValue);
};


// Class FSD.FloatPerkActivation
// 0x0000 (0x0030 - 0x0030)
class UFloatPerkActivation : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloatPerkActivation");
		return ptr;
	}

};


// Class FSD.StatPerkActivation
// 0x0010 (0x0040 - 0x0030)
class UStatPerkActivation : public UFloatPerkActivation
{
public:
	class UPawnStat*                                   PawnStat;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EPawnStatType                                      StatType;                                                 // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatPerkActivation");
		return ptr;
	}

};


// Class FSD.FloatPerkComponent
// 0x0010 (0x0108 - 0x00F8)
class UFloatPerkComponent : public UActorComponent
{
public:
	float                                              FloatValue;                                               // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class APlayerCharacter*                            PlayerCharacter;                                          // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloatPerkComponent");
		return ptr;
	}


	void Receive_OnInitialized();
};


// Class FSD.CreateComponentPerkActivation
// 0x0008 (0x0038 - 0x0030)
class UCreateComponentPerkActivation : public UFloatPerkActivation
{
public:
	class UClass*                                      ComponentClass;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CreateComponentPerkActivation");
		return ptr;
	}

};


// Class FSD.KillNearbyCreaturePerkComponent
// 0x0028 (0x0130 - 0x0108)
class UKillNearbyCreaturePerkComponent : public UFloatPerkComponent
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0108(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.KillNearbyCreaturePerkComponent.enemyClass

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.KillNearbyCreaturePerkComponent");
		return ptr;
	}

};


// Class FSD.BezerkPerkComponent
// 0x0010 (0x0118 - 0x0108)
class UBezerkPerkComponent : public UFloatPerkComponent
{
public:
	class UPawnStat*                                   BoostedStat;                                              // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AmountPerValue;                                           // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BezerkPerkComponent");
		return ptr;
	}


	void OnHealthChanged(float* Health);
};


// Class FSD.ThornsPerkComponent
// 0x0008 (0x0110 - 0x0108)
class UThornsPerkComponent : public UFloatPerkComponent
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ThornsPerkComponent");
		return ptr;
	}


	void OnHit(float* Damage, class UDamageClass** inDamageClass, class AActor** DamageCauser, bool* anyHealthLost);
};


// Class FSD.SalutePerkComponent
// 0x0010 (0x0118 - 0x0108)
class USalutePerkComponent : public UFloatPerkComponent
{
public:
	float                                              Cooldown;                                                 // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FleeRadius;                                               // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SalutePerkComponent");
		return ptr;
	}


	void OnSalute();
};


// Class FSD.HeightenedSensesComponent
// 0x0008 (0x0110 - 0x0108)
class UHeightenedSensesComponent : public UFloatPerkComponent
{
public:
	int                                                UsesLeft;                                                 // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HeightenedSensesComponent");
		return ptr;
	}


	void TriggerPerk();
	void OnGrabbed(ECharacterState* NewState);
};


// Class FSD.FloodFillSettings
// 0x0038 (0x0068 - 0x0030)
class UFloodFillSettings : public UDataAsset
{
public:
	struct FVector                                     NoiseSize;                                                // 0x0030(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreqMultiplier;                                           // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AmplitudeMultiplier;                                      // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinValue;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxValue;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Turbulence;                                               // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Invert;                                                   // 0x004D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	int                                                Octaves;                                                  // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<struct FLayeredNoise>                       NoiseLayers;                                              // 0x0058(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloodFillSettings");
		return ptr;
	}

};


// Class FSD.DetailNoise
// 0x0008 (0x0070 - 0x0068)
class UDetailNoise : public UFloodFillSettings
{
public:
	float                                              NoiseRange;                                               // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DetailNoise");
		return ptr;
	}

};


// Class FSD.FlyingStateComponent
// 0x0000 (0x0130 - 0x0130)
class UFlyingStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlyingStateComponent");
		return ptr;
	}

};


// Class FSD.ForgingFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UForgingFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ForgingFunctionLibrary");
		return ptr;
	}


	void SortSchematicDelegate__DelegateSignature(class USchematic** Schematic1, class USchematic** Schematic2, bool* FirstIsLarger);
	class USchematic* STATIC_GiveForginMasteryReward(class UObject** WorldContextObject);
	bool STATIC_GiveForgingXP(class UObject** WorldContextObject);
	TArray<class USchematic*> STATIC_GetOwnedSchematicsSorted(class UObject** WorldContextObject, bool* SmallestFirst, struct FScriptDelegate* IsLargerThan);
	TArray<class USchematic*> STATIC_GetOwnedSchematics(class UObject** WorldContextObject);
	ESchematicType STATIC_GetNextForgingMasterRewardType(class UObject** WorldContextObject);
	int STATIC_GetForgingXP(class UObject** WorldContextObject);
	float STATIC_GetForgingLevelProgress(class UObject** WorldContextObject);
	int STATIC_GetForgingLevel(class UObject** WorldContextObject);
	TArray<class USchematic*> STATIC_GetForgedSchematics(class UObject** WorldContextObject);
	TArray<class USchematic*> STATIC_GetAllSchematicsSorted(class UObject** WorldContextObject, bool* SmallestFirst, struct FScriptDelegate* IsLargerThan);
	TArray<class USchematic*> STATIC_GetAllSchematics(class UObject** WorldContextObject);
};


// Class FSD.FormationData
// 0x00A0 (0x00D0 - 0x0030)
class UFormationData : public UDataAsset
{
public:
	TArray<struct FFormationDataItem>                  FormationItems;                                           // 0x0030(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FGameplayTagQuery                           LeaderQuery;                                              // 0x0040(0x0048) (Edit)
	struct FGameplayTagQuery                           MemberQuery;                                              // 0x0088(0x0048) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FormationData");
		return ptr;
	}

};


// Class FSD.GroundFormationData
// 0x0010 (0x00E0 - 0x00D0)
class UGroundFormationData : public UFormationData
{
public:
	int                                                FormationSize;                                            // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FormationSpread;                                          // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomSpread;                                             // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GroundFormationData");
		return ptr;
	}

};


// Class FSD.FlyingFormationData
// 0x0010 (0x00E0 - 0x00D0)
class UFlyingFormationData : public UFormationData
{
public:
	int                                                FormationSize;                                            // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FormationSpread;                                          // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomSpread;                                             // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlyingFormationData");
		return ptr;
	}

};


// Class FSD.FlameThrowerItem
// 0x0168 (0x0878 - 0x0710)
class AFlameThrowerItem : public AAmmoDrivenWeapon
{
public:
	class UParticleSystemComponent*                    FlameParticleComponent;                                   // 0x0710(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            DamageComponent;                                          // 0x0718(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStickyFlameSpawner*                         StickyFlames;                                             // 0x0720(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            AoEHeatDamageComponent;                                   // 0x0728(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            ExplodingTargetsDamageComponent;                          // 0x0730(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMotionAudioController*                      MotionAudio;                                              // 0x0738(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FDecalData                                  ImpactDecal;                                              // 0x0740(0x0018) (Edit)
	float                                              DecalDelay;                                               // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	class UParticleSystem*                             ImpactParticles;                                          // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    ImpactParticleInstance;                                   // 0x0768(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             FP_LongReachParticles;                                    // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TP_LongReachParticles;                                    // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeryLongReachThreshold;                                   // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0784(0x0004) MISSED OFFSET
	class UParticleSystem*                             FP_VeryLongReachParticles;                                // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TP_VeryLongReachParticles;                                // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               FlameParameterNames;                                      // 0x0798(0x0010) (Edit, ZeroConstructor)
	float                                              DamageSphereRadius;                                       // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFlameDistance;                                         // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlameGrowthPerSecond;                                     // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlameEndPointResponsiveness;                              // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlameIntensityPerSecond;                                  // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07BC(0x0004) MISSED OFFSET
	class UClass*                                      OnFireStatusEffect;                                       // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChanceToFleeOnDamage;                                     // 0x07C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeltPointRadius;                                          // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeltPointBuildTime;                                       // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeltCarveTime;                                            // 0x07D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MeltSteamParticle;                                        // 0x07D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x07E0(0x0010) (ZeroConstructor, Transient)
	bool                                               LongReachEnabled;                                         // 0x07F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x07F1(0x000F) MISSED OFFSET
	bool                                               AoEHeatEnabled;                                           // 0x0800(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0801(0x0003) MISSED OFFSET
	float                                              KilledTargetsExplosionChance;                             // 0x0804(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ShowDamageParticle;                                       // 0x0808(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x080C(0x0004) MISSED OFFSET
	class UParticleSystem*                             DamangeTargetsParticles;                                  // 0x0810(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             KilledTargetsExplodingParticles;                          // 0x0818(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   KilledTargetsExplodingSound;                              // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0828(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlameThrowerItem");
		return ptr;
	}


	void TriggerAoEHeat();
	void ServerMeltIce(TArray<struct FVector>* meltPoints);
	void ServerDoDamage(struct FVector_NetQuantize* Start, struct FVector_NetQuantize* End);
	void OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat);
	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
	void All_ShowTargetBurstIntoFire(struct FVector_NetQuantize* Location, struct FRotator* Rotation);
	void All_FlameFeedback(struct FVector_NetQuantize* Location, struct FRotator* Rotation);
};


// Class FSD.FormationsManagerComponent
// 0x0028 (0x0120 - 0x00F8)
class UFormationsManagerComponent : public UActorComponent
{
public:
	class UEnemySpawnManager*                          SpawnManager;                                             // 0x00F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UFormationData*>                      FormationData;                                            // 0x0100(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0110(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FormationsManagerComponent");
		return ptr;
	}

};


// Class FSD.FragileDebrisCleaner
// 0x0010 (0x0270 - 0x0260)
class UFragileDebrisCleaner : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0260(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FragileDebrisCleaner");
		return ptr;
	}

};


// Class FSD.FrozenStateComponent
// 0x0028 (0x0158 - 0x0130)
class UFrozenStateComponent : public UCharacterStateComponent
{
public:
	struct FRandRange                                  DefrostAmount;                                            // 0x0130(0x0008) (Edit)
	class USoundBase*                                  AudioFreeFromIce;                                         // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFSDPhysicalMaterial*                        IcePhysicalMaterial;                                      // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFSDPhysicalMaterial*                        DwarfFleshMaterial;                                       // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FrozenStateComponent");
		return ptr;
	}


	void Server_ThawPlayer();
	void ReceiveOnDefrosting();
};


// Class FSD.FSDAchievement
// 0x00E8 (0x0118 - 0x0030)
class UFSDAchievement : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET
	struct FString                                     SteamAPIAchievementName;                                  // 0x0048(0x0010) (Edit, ZeroConstructor)
	struct FString                                     SteamAPIStatName;                                         // 0x0058(0x0010) (Edit, ZeroConstructor)
	float                                              AchievementTargetValue;                                   // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x006C(0x0008) MISSED OFFSET
	EFSDAchievementType                                AchievementType;                                          // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xA3];                                      // 0x0075(0x00A3) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDAchievement");
		return ptr;
	}


	void SetAchievementProgressForEntireServer(float* Progress, class UObject** WorldContext);
	void SetAchievementProgress(float* Progress, class AFSDPlayerController** Player, class UObject** WorldContext);
	void STATIC_ResetStatForAchievement(class UFSDAchievement** AchievementToReset, class AFSDPlayerController** Player);
	float GetAchievementTargetValue();
};


// Class FSD.FSDAdvancedLabel
// 0x0038 (0x0268 - 0x0230)
class UFSDAdvancedLabel : public UUserWidget
{
public:
	struct FText                                       FormattedText;                                            // 0x0230(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       ControllerOverrideText;                                   // 0x0248(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               UpperCase;                                                // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EInputSource                                       PreviewAs;                                                // 0x0261(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0262(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDAdvancedLabel");
		return ptr;
	}


	void SetText(struct FText* NewText, struct FText* OverrideControllerText);
	void Refresh();
	void OnReset();
	void OnNewLine(int* Index);
	void OnLanguageChanged(struct FString* NewCulture);
	void OnInputSourceChanged(EInputSource* Source);
	void OnAddString(struct FString* Value);
	void OnAddKeyName(struct FString* Name);
	void OnAddIcon(struct FString* Name, struct FActionIconMapping* Icon);
	struct FText GetText();
	bool GetIsDesignTime();
	EInputSource GetCurrentInputSource();
	class UTextBlock* CreateTextBlock(struct FString* Text, struct FSlateFontInfo* InFontInfo, struct FLinearColor* Color);
	class UImage* CreateImageSized(class UTexture2D** Texture, int* Width, int* Height);
	class UImage* CreateImage(class UTexture2D** Texture, bool* MatchSize);
	class UHorizontalBox* CreateHorizontalBox();
};


// Class FSD.AchievementList
// 0x0118 (0x0148 - 0x0030)
class UAchievementList : public UDataAsset
{
public:
	class UFSDAchievement*                             WeakspotAchievement;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             MissionTimeAchievement;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             MissionHosterAchievement;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             BarrelKickerAchievement;                                  // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard3CompletedAchievement;                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard3StreakAchievement;                                 // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard4CompletedAchievement;                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard4StreakAchievement;                                 // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard5CompletedAchievement;                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard5StreakAchievement;                                 // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard3NoKillNoSupplyAchievement;                         // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard4NoKillNoSupplyAchievement;                         // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             Hazard5NoKillNoSupplyAchievement;                         // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             PlayedWithLowerRankAchievement;                           // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             MilestoneAchievement;                                     // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             OwnedPerkAchievement;                                     // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             SinglePromotionAchievement;                               // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             SilverPromotionAchievement;                               // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             GoldPromotionAchievement;                                 // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             AllVanityEquippedAchievement;                             // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             MoustacheBuyerAchievement;                                // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             MutatorAchievement;                                       // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             StateOfTheArtAchievement;                                 // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             ExploringMyOptionsAchievement;                            // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             AdvancedRoboticsAchievement;                              // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             WithoutAPaddleAchievement;                                // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             SupplyPodsCalledStat;                                     // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             LootbugsKilledStat;                                       // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             PraetoriansKilledStat;                                    // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             NormalDeepDiveCompleted;                                  // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             EliteDeepDiveCompleted;                                   // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             DeepDiveCompletedUnderTime;                               // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             DeepDivesCompleted;                                       // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UFSDAchievement*>                     AllAchievements;                                          // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AchievementList");
		return ptr;
	}

};


// Class FSD.GamepadCursorSettings
// 0x0010 (0x0048 - 0x0038)
class UGamepadCursorSettings : public UDeveloperSettings
{
public:
	float                                              MaxSpeed;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              Acceleration;                                             // 0x003C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              StickySlowDown;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DeadZone;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GamepadCursorSettings");
		return ptr;
	}

};


// Class FSD.AnimNotify_PlaySound2D
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_PlaySound2D : public UAnimNotify
{
public:
	class USoundBase*                                  Sound;                                                    // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_PlaySound2D");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_PlaySound
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_PlaySound : public UAnimNotifyState
{
public:
	class USoundCue*                                   Sound;                                                    // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_PlaySound");
		return ptr;
	}

};


// Class FSD.AnimNotify_FSDPlayParticleEffect
// 0x0058 (0x0090 - 0x0038)
class UAnimNotify_FSDPlayParticleEffect : public UAnimNotify
{
public:
	class UParticleSystem*                             PSTemplate;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AlwaysZUp;                                                // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	struct FVector                                     Scale;                                                    // 0x005C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0068(0x0018) MISSED OFFSET
	unsigned char                                      Attached : 1;                                             // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0084(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_FSDPlayParticleEffect");
		return ptr;
	}

};


// Class FSD.EnemyPlaySoundKey
// 0x0000 (0x0030 - 0x0030)
class UEnemyPlaySoundKey : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyPlaySoundKey");
		return ptr;
	}

};


// Class FSD.AnimNotify_PushSoundMix
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_PushSoundMix : public UAnimNotify
{
public:
	class USoundMix*                                   SoundMix;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_PushSoundMix");
		return ptr;
	}

};


// Class FSD.EnemyPlaySoundByKeyAnimNotify
// 0x0020 (0x0058 - 0x0038)
class UEnemyPlaySoundByKeyAnimNotify : public UAnimNotify
{
public:
	class UEnemyPlaySoundKey*                          SoundKey;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bFollow : 1;                                              // 0x0048(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	struct FName                                       AttachName;                                               // 0x004C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyPlaySoundByKeyAnimNotify");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_SoundMix
// 0x0010 (0x0040 - 0x0030)
class UAnimNotifyState_SoundMix : public UAnimNotifyState
{
public:
	class USoundMix*                                   SoundMix;                                                 // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_SoundMix");
		return ptr;
	}

};


// Class FSD.EnemySpawnEffectsKey
// 0x0000 (0x0030 - 0x0030)
class UEnemySpawnEffectsKey : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemySpawnEffectsKey");
		return ptr;
	}

};


// Class FSD.EnemySpawnEffectsByKeyAnimNotify
// 0x0018 (0x0050 - 0x0038)
class UEnemySpawnEffectsByKeyAnimNotify : public UAnimNotify
{
public:
	class UEnemySpawnEffectsKey*                       EffectKey;                                                // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Attached : 1;                                             // 0x0040(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0044(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemySpawnEffectsByKeyAnimNotify");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_EnemyPlaySoundByKey
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_EnemyPlaySoundByKey : public UAnimNotifyState
{
public:
	class UEnemyPlaySoundKey*                          SoundKey;                                                 // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_EnemyPlaySoundByKey");
		return ptr;
	}

};


// Class FSD.AnimNotify_Shout
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_Shout : public UAnimNotify
{
public:
	class UDialogDataAsset*                            Shout;                                                    // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ShoutNetworked;                                           // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              LocalShoutVolumeMultiplier;                               // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_Shout");
		return ptr;
	}

};


// Class FSD.AnimNotify_CameraShake
// 0x0018 (0x0050 - 0x0038)
class UAnimNotify_CameraShake : public UAnimNotify
{
public:
	float                                              InnerRadius;                                              // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ControllerOnly;                                           // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UClass*                                      CameraShake;                                              // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_CameraShake");
		return ptr;
	}

};


// Class FSD.AnimNotify_FootStep
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_FootStep : public UAnimNotify
{
public:
	bool                                               IsLeft;                                                   // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_FootStep");
		return ptr;
	}

};


// Class FSD.AnimNotify_TerrainFootStep
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_TerrainFootStep : public UAnimNotify
{
public:
	class UParticleSystem*                             ParticleTemplate;                                         // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_TerrainFootStep");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_SpawnMesh
// 0x0030 (0x0060 - 0x0030)
class UAnimNotifyState_SpawnMesh : public UAnimNotifyState
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseFirstPersonComponent;                                  // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x003C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0044(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0050(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_SpawnMesh");
		return ptr;
	}

};


// Class FSD.AnimNotify_SpawnActor
// 0x0028 (0x0060 - 0x0038)
class UAnimNotify_SpawnActor : public UAnimNotify
{
public:
	class UClass*                                      Actor;                                                    // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0048(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0054(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_SpawnActor");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_SpawnSkinnedMesh
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_SpawnSkinnedMesh : public UAnimNotifyState
{
public:
	EItemCategory                                      ItemCategory;                                             // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseFirstPersonComponent;                                  // 0x0031(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0034(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x003C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0048(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_SpawnSkinnedMesh");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_HideBone
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_HideBone : public UAnimNotifyState
{
public:
	struct FName                                       BoneName;                                                 // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_HideBone");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_InputWindow
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_InputWindow : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_InputWindow");
		return ptr;
	}

};


// Class FSD.SpawnReleasedActor
// 0x0000 (0x0028 - 0x0028)
class USpawnReleasedActor : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpawnReleasedActor");
		return ptr;
	}


	bool Released();
	bool Attached(class AActor** Parent);
};


// Class FSD.AnimNotifyState_SpawnAndReleaseActor
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_SpawnAndReleaseActor : public UAnimNotifyState
{
public:
	class UClass*                                      Actor;                                                    // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_SpawnAndReleaseActor");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_HideEquippedItem
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_HideEquippedItem : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_HideEquippedItem");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_WeaponReload
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_WeaponReload : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_WeaponReload");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_ConstrainItem
// 0x0010 (0x0040 - 0x0030)
class UAnimNotifyState_ConstrainItem : public UAnimNotifyState
{
public:
	struct FName                                       OldConstraint;                                            // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NewConstraint;                                            // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotifyState_ConstrainItem");
		return ptr;
	}

};


// Class FSD.GameAnimationsSettings
// 0x0030 (0x0068 - 0x0038)
class UGameAnimationsSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             FootstepTestingSound;                                     // 0x0038(0x0018) (Edit, ZeroConstructor, Config)
	struct FSoftObjectPath                             FootstepTestingParticles;                                 // 0x0050(0x0018) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameAnimationsSettings");
		return ptr;
	}

};


// Class FSD.DynamicMeshScaler
// 0x0010 (0x0108 - 0x00F8)
class UDynamicMeshScaler : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DynamicMeshScaler");
		return ptr;
	}

};


// Class FSD.FSDCheatManager
// 0x0020 (0x0098 - 0x0078)
class UFSDCheatManager : public UCheatManager
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0078(0x0004) MISSED OFFSET
	int                                                RoomJumpCount;                                            // 0x007C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PreviousMaxDistanceBeforeCleanup;                         // 0x0080(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               UnlimitedScoutFlareDuration;                              // 0x0084(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    ToggleHoopGameMovement;                                   // 0x0088(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDCheatManager");
		return ptr;
	}


	void SwitchCharacter(class UClass** NewCharacter);
	void SpawnEnemies(class UEnemyDescriptor** desscriptor, int* count);
	void SpawnCritters(class UCritterDescriptor** Descriptor, int* count);
	void SpawnBosco(class UClass** aControllerClass);
	void ShowTutorialDebug();
	void SetStandingDown(bool* standingDown);
	void SetSpawnEnemies(bool* SpawnEnemies);
	void SetQuadPickAxe(bool* quad);
	void SetHUDVisible(bool* ShowHUD);
	void SetGodMode(bool* God);
	void SetFastMovement(bool* fast);
	void ResetTutorials();
	void ResetSpacerigIntroMessage();
	void R_RemoveResources(int* Number);
	void R_RemoveCredits(int* Number);
	void R_AddResources(int* Number);
	void R_AddPerkPoints(int* amount);
	void R_AddNitra(float* amount);
	void R_AddMOM(float* amount);
	void R_AddMatrixCores(int* Number);
	void R_AddGold(float* amount);
	void R_AddCredits(int* Number);
	void R_AddCraftingResource(int* amount, int* Type);
	void R_Add_Jadiz(int* amount);
	void R_Add_BitterGem(int* amount);
	void R_Add_Aquarq(int* amount);
	bool IsInGodMode();
	void GetListOfRoomNames(TArray<struct FString>* roomNames);
	void DestroyAllInstances(class UClass** destroy);
	void STATIC_Cheat_UnlockAllWeapons(class UObject** WorldContextObject);
	void STATIC_Cheat_UnlockAllUpgrades(class UObject** WorldContextObject);
	void STATIC_Cheat_UnlockAll_Poses(class UObject** WorldContextObject);
	void STATIC_Cheat_UnlockAll_Beers(class UObject** WorldContextObject);
	void Cheat_SetHealth(float* NewHealthValue, class APlayerCharacter** Player);
	void STATIC_Cheat_Schematic_UnlockAll(class UObject** WorldContextObject);
	void STATIC_Cheat_Schematic_ResetAll(class UObject** WorldContextObject);
	void STATIC_Cheat_Schematic_GiveRandom(class UObject** WorldContextObject);
	void STATIC_Cheat_Schematic_ForgeAll(class UObject** WorldContextObject);
	void STATIC_Cheat_Resources(class UObject** WorldContextObject, int* amount);
	void STATIC_Cheat_ResetEquippedUpgrades(class UObject** WorldContextObject);
	void STATIC_Cheat_RemoveResources(class UObject** WorldContextObject, int* amount);
	void STATIC_Cheat_GenerateNewMissionSeed(class UObject** WorldContextObject, bool* Enabled);
	void STATIC_Cheat_ForceTreasure(class UObject** WorldContextObject);
	void STATIC_Cheat_Campaign_Advance(class UObject** WorldContextObject);
	void STATIC_Cheat_AddXP(class UObject** WorldContextObject, int* amount);
	void STATIC_Cheat_AddPerkPoints(class UObject** WorldContextObject, int* amount);
	void STATIC_Cheat_AddCredits(class UObject** WorldContextObject, int* amount);
	void C_UnlockOverclocking();
	void C_UnlockAllWeapons();
	void C_UnlockAllUpgrades();
	void C_UnlockAllDrinks();
	void C_UnlockAllDeepDives();
	void C_UnlockAll_Poses();
	void C_UnlockAll_Beers();
	void C_UnlockAll();
	void C_ToggleHoopGameMovement();
	void C_ToggleFadingEnabled();
	void C_ToggleFadingDebug();
	void C_ToggleCanShowBlood();
	void C_SpawnScriptedWaveIndex(int* Index);
	void C_SpawnScriptedWave();
	void C_SpawnNormalWave();
	void C_SpawnEvenRewarder();
	void C_SpawnBarrelOnPlayer(int* amount);
	void C_Skin_ResetAll();
	void C_Skin_GiveAll();
	void C_SetTestMission(int* missionIndex);
	void C_SetRetiredCount(int* Number);
	void C_SetPlayers(int* Number);
	void C_SetHealth(float* Health);
	void C_SetFastFlares();
	void C_SetEnglish(int* Val);
	void C_SetAmmoCostEnabled(class UObject** WorldContextObject, bool* Enabled);
	void C_ScoutFlareInfiniteDuration(bool* Enabled);
	void C_Schematics_UnlockAll();
	void C_Schematics_ResetAll();
	void C_Schematics_ForgeAll();
	void C_Schematics_ClearHasSeenFirstMessage();
	void C_Schematic_GiveRandom();
	void C_Revive();
	void C_Retirement_SetLevel(int* Level);
	void C_Retirement_SetCampaignComplete();
	void C_Retirement_ClearHasSeenRewards();
	void C_Resupply();
	void C_ResetSteamAchievementStats();
	void C_ResetSkinsAndUpgrades();
	void C_ResetForgingXP();
	void C_ResetDeepDives();
	void C_ResetCheatedResources(int* newAmount);
	void C_ResetAllDrinks();
	void C_ResetAchievements();
	void C_RemoveRetiredCount(int* Number);
	void C_RemovePlayerRanks(int* Number);
	void C_RemoveAllWidgets();
	void C_RefreshDeepDives();
	void C_RecordMode();
	void C_MachineEvents_Track(bool* Track);
	void C_MachineEvents_FinishCurrent();
	void C_LevelUpCharacter(int* amount);
	void C_KillAll();
	void C_JumpToNextRoom();
	void C_IncrementAllMissionStats(int* amount);
	void C_GodMode();
	void C_GiveAll();
	void C_GenerateNewMissions(bool* Enabled);
	void C_FixedPLSSeed(int* Seed);
	void C_FixedMissionSeed(int* Seed);
	void C_FailMission();
	void STATIC_C_FadeFromBlack(class UObject** WorldContextObject);
	void C_CompleteObjectives();
	void C_CompleteMission();
	void C_ClearAllMissionStats();
	void C_ClearAllMilestones();
	void C_ChangeIntoxication(int* Percent);
	void C_Campaign_ResetProgress();
	void C_Campaign_ResetCompleted();
	void C_Campaign_Advance();
	void C_AddXP(int* Number);
	void C_AddUncappedXP(int* amount);
	void C_AddForgingXP(int* Number);
};


// Class FSD.FSDCloudLoadSave
// 0x0048 (0x0070 - 0x0028)
class UFSDCloudLoadSave : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnCloudLoadAll;                                           // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCloudLoadAllFailed;                                     // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FString                                     SteamTicket;                                              // 0x0048(0x0010) (ZeroConstructor, Transient)
	struct FString                                     SteamBranch;                                              // 0x0058(0x0010) (ZeroConstructor, Transient)
	int                                                NumFailedSaves;                                           // 0x0068(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDCloudLoadSave");
		return ptr;
	}


	void StartCloudLoadAll();
};


// Class FSD.FSDCustomDPIScalingRule
// 0x0000 (0x0028 - 0x0028)
class UFSDCustomDPIScalingRule : public UDPICustomScalingRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDCustomDPIScalingRule");
		return ptr;
	}

};


// Class FSD.FSDFindSessionsCallbackProxy
// 0x0080 (0x00A8 - 0x0028)
class UFSDFindSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRefresh;                                                // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0058(0x0038) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFSDFindSteamSessions*                       FSDFindSteamSessions;                                     // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDFindSessionsCallbackProxy");
		return ptr;
	}


	void OnFSDCompleted(bool* bSuccess, TArray<struct FBlueprintSessionResult>* Results);
	class UFSDFindSessionsCallbackProxy* STATIC_FSDFindSessions(class UObject** WorldContextObject, class APlayerController** PlayerController, int* MaxResults, bool* bUseLAN);
	class UFSDFindSessionsCallbackProxy* STATIC_FSDFindFullSessions(class UObject** WorldContextObject, class APlayerController** PlayerController, int* MaxResults);
};


// Class FSD.FSDFlyingBugController
// 0x0018 (0x0468 - 0x0450)
class AFSDFlyingBugController : public AFSDAIController
{
public:
	class UBehaviorTree*                               BehaviourTree;                                            // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	bool                                               SetTargetOnAlert;                                         // 0x0460(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               SyncTargetWithBB;                                         // 0x0461(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0462(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDFlyingBugController");
		return ptr;
	}


	void OnSeePawn(class APawn** SeenPawn);
	void OnDamage(float* aDamage);
	void AlertOnlyMe();
	void Alerted();
};


// Class FSD.DashingFlyingBugController
// 0x0000 (0x0468 - 0x0468)
class ADashingFlyingBugController : public AFSDFlyingBugController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DashingFlyingBugController");
		return ptr;
	}

};


// Class FSD.FSDFriendsAndInvites
// 0x0050 (0x0078 - 0x0028)
class UFSDFriendsAndInvites : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnFriendsChanged;                                         // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFriendInvitesChanged;                                   // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRequestRefresh;                                         // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FBlueprintFriend>                    Friends;                                                  // 0x0058(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<struct FBlueprintFriend>                    FriendInvites;                                            // 0x0068(0x0010) (BlueprintVisible, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDFriendsAndInvites");
		return ptr;
	}


	void Init();
};


// Class FSD.MissionResultInfo
// 0x0078 (0x00A0 - 0x0028)
class UMissionResultInfo : public UObject
{
public:
	bool                                               HasInfo;                                                  // 0x0028(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              MissionTime;                                              // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MissionTotalHazBonus;                                     // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FText                                       MissionHazName;                                           // 0x0038(0x0018) (BlueprintVisible, Transient)
	float                                              MissionHazBonus;                                          // 0x0050(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ComplexityBonus;                                          // 0x0054(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ComplexityDots;                                           // 0x0058(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LenghtBonus;                                              // 0x005C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LenghtDots;                                               // 0x0060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FText                                       WarningTitle;                                             // 0x0068(0x0018) (BlueprintVisible, Transient)
	float                                              WarningBonus;                                             // 0x0080(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class UTexture2D*                                  WarningIcon;                                              // 0x0088(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalCreditsSum;                                          // 0x0090(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TotalXPSum;                                               // 0x0094(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               WasSuccess;                                               // 0x0098(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionResultInfo");
		return ptr;
	}

};


// Class FSD.CampaignNotification
// 0x0018 (0x0040 - 0x0028)
class UCampaignNotification : public UObject
{
public:
	class UCampaign*                                   Campaign;                                                 // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCampaignMission*                            mission;                                                  // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                Progress;                                                 // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCampaignCompleted;                                     // 0x003C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CampaignNotification");
		return ptr;
	}

};


// Class FSD.FSDGameInstance
// 0x15C8 (0x1730 - 0x0168)
class UFSDGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0168(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNewMessage;                                             // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTemporaryBuffChanged;                                   // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGameSettingsChanged;                                    // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGraphicsSettingsChanged;                                // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPressStart;                                             // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      MiningPodClass;                                           // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnJoinPendingInvite;                                      // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinChangedEvent;                                       // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoaderStart;                                            // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayLevelSequenceInCharacterWorld;                      // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoaderStop;                                             // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSelectionStart;                                // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartForging;                                           // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnForgingDone;                                            // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSelectionStop;                                 // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectionRefresh;                          // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTutorialManagerSet;                                     // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalPlayerCharacterSet;                                // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowReconnectScreen;                                    // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnXBoxAccountPickerClosed;                                // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnXBoxChangeUser;                                         // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMixerStateChanged;                                      // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGravityChanged;                                         // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewPostProcessingManager;                               // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPreviewSkinChanged;                                     // 0x02E8(0x0010) (ZeroConstructor, InstancedReference)
	bool                                               ShowingReconnectScreen;                                   // 0x02F8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02F9(0x0007) MISSED OFFSET
	struct FPendingRewards                             PendingMissionRewards;                                    // 0x0300(0x0190) (Transient)
	TWeakObjectPtr<class UMouseCursorWidget>           MouseCursorWidget;                                        // 0x0490(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnShowCharacterSelector;                                  // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowViewer3D;                                           // 0x04A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectorEquipSlot;                         // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectorEquip;                             // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectorRotate;                            // 0x04D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowEndScreen;                                          // 0x04E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x04F8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasStartedAMission;                                       // 0x0500(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0501(0x0007) MISSED OFFSET
	struct FString                                     FSDPassword;                                              // 0x0508(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	bool                                               FSDPrivateServer;                                         // 0x0518(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               SoloSession;                                              // 0x0519(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsJoiningInvite;                                          // 0x051A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               FirstTimeInFrontend;                                      // 0x051B(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               SessionFirstStartOnSpaceRig;                              // 0x051C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShowFirstCharacterSelector;                               // 0x051D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShowSaveWarning;                                          // 0x051E(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x051F(0x0001) MISSED OFFSET
	class AActor*                                      WorldViewTargetDummy;                                     // 0x0520(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UMissionResultInfo*                          MissionResultInfo;                                        // 0x0528(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     LastPerksLoadout;                                         // 0x0530(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class AActor*                                      CharacterSelectionLastViewTarget;                         // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasSeenInfoScreen;                                        // 0x0548(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0549(0x0007) MISSED OFFSET
	struct FTransform                                  CharacterSelectionViewTargetTransform;                    // 0x0550(0x0030) (BlueprintVisible, Transient, IsPlainOldData)
	struct FTransform                                  LoaderViewTargetTransform;                                // 0x0580(0x0030) (BlueprintVisible, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnGeneratedMissionChanged;                                // 0x05B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGameStateSeamlessTravelStorage             GameStateSeamlessTravelStorage;                           // 0x05C0(0x0150)
	TWeakObjectPtr<class ADonkeyCharacter>             Donkey;                                                   // 0x0710(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBoscoChanged;                                           // 0x0718(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               DEBUGSpawnRandomMissions;                                 // 0x0728(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xB];                                       // 0x0729(0x000B) MISSED OFFSET
	int                                                DEBUGSeedOverride;                                        // 0x0734(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               CanPlayOnline;                                            // 0x0738(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0739(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSteamSearchRegionChanged;                               // 0x0740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSteamServerJoinStatusChanged;                           // 0x0750(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewSpaceRigNotification;                                // 0x0760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UDiscordWrapper*                             DiscordWI;                                                // 0x0770(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTwitchWrapper*                              TwitchWI;                                                 // 0x0778(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCommunityGoalWrapper*                       CommunityWI;                                              // 0x0780(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGoogleAnalyticsWrapper*                     GoogleAnalyticsWI;                                        // 0x0788(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USpecialEvent*                               ForcedSpecialEvent;                                       // 0x0790(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCampaignNotification;                                   // 0x0798(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewBossFight;                                           // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBossFightRemoved;                                       // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FBossFight>                          ActiveBossFights;                                         // 0x07C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData07[0x38];                                      // 0x07D8(0x0038) MISSED OFFSET
	float                                              LastDreadnaughtKillTime;                                  // 0x0810(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0814(0x0004) MISSED OFFSET
	class UCampaignNotification*                       CampaignNotification;                                     // 0x0818(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x10];                                      // 0x0820(0x0010) MISSED OFFSET
	TWeakObjectPtr<class APostProcessingManager>       PostProcessingManager;                                    // 0x0830(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FFadeData                                   Fading;                                                   // 0x0838(0x0040) (Edit)
	TArray<struct FSpaceRigNotification>               SpaceRigNotifications;                                    // 0x0878(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class ABosco>                       Drone;                                                    // 0x0888(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             LocalPlayerCharacter;                                     // 0x0890(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ATutorialManager>             TutorialManager;                                          // 0x0898(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ACharacterSelectionSwitcher*                 CharacterSelectionSwitcher;                               // 0x08A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bGameSettingsChanged;                                     // 0x08A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1];                                       // 0x08A9(0x0001) MISSED OFFSET
	ESteamSearchRegion                                 SteamSearchRegion;                                        // 0x08AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESteamServerJoinStatus                             SteamServerJoinStatus;                                    // 0x08AB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x24];                                      // 0x08AC(0x0024) MISSED OFFSET
	class UAsyncManager*                               AsyncManager;                                             // 0x08D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsOnPressStartScreen;                                     // 0x08D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasSeenStartScreen;                                       // 0x08D9(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x6];                                       // 0x08DA(0x0006) MISSED OFFSET
	class UClass*                                      ProceduralLevel;                                          // 0x08E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      IconGenerationManagerClass;                               // 0x08E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UIconGenerationManager*                      IconGenerationManager;                                    // 0x08F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x8];                                       // 0x08F8(0x0008) MISSED OFFSET
	class UCampaignManager*                            CampaignManager;                                          // 0x0900(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UDeepDiveManager*                            DeepDiveManager;                                          // 0x0908(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UDamageManager*                              DamageManager;                                            // 0x0910(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionGenerationManager*                   MissionGenerationManager;                                 // 0x0918(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGeneratedMission*                           GeneratedMission;                                         // 0x0920(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMusicManager*                               MusicManager;                                             // 0x0928(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundClassManager*                          SoundClassManager;                                        // 0x0930(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDifficultySetting*                          DesiredDifficulty;                                        // 0x0938(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UFSDSaveGame*                                SaveGame;                                                 // 0x0940(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	EDisconnectReason                                  DisconnectReason;                                         // 0x0948(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0949(0x0007) MISSED OFFSET
	TArray<class UWorld*>                              AlwaysLoadedWorlds;                                       // 0x0950(0x0010) (ZeroConstructor, Transient)
	bool                                               ShowCharacterSelectionWorld;                              // 0x0960(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x0961(0x0007) MISSED OFFSET
	class UClass*                                      Viewer3DClass;                                            // 0x0968(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShowLoaderWorld;                                          // 0x0970(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CharacterSelectionWorldActive;                            // 0x0971(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               MixerInteractivityEnabled;                                // 0x0972(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               LoaderWorldActive;                                        // 0x0973(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ResetHUDWhenReturning;                                    // 0x0974(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0975(0x0003) MISSED OFFSET
	class UStatHat*                                    StatHat;                                                  // 0x0978(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USchematic*                                  ActiveForgeSchematic;                                     // 0x0980(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UFSDCloudLoadSave*                           FSDCloudLoadSave;                                         // 0x0988(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UFSDSessionUpdater*                          SessionUpdater;                                           // 0x0990(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFSDSendToURL*                               SendToURL;                                                // 0x0998(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFSDFriendsAndInvites*                       FriendsAndInvites;                                        // 0x09A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	double                                             SessionStartTime;                                         // 0x09A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SessionStartTimestamp;                                    // 0x09B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InKBytesPerSecond;                                        // 0x09B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              OutKBytesPerSecond;                                       // 0x09B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x09BC(0x0004) MISSED OFFSET
	class UTemporaryBuff*                              TemporaryBuff;                                            // 0x09C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x28];                                      // 0x09C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.FSDGameInstance.NextLoaderSequence
	EAlwaysLoadedWorlds                                NextLoaderLevel;                                          // 0x09F0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData19[0x7];                                       // 0x09F1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData20[0x28];                                      // 0x09F1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.FSDGameInstance.DeepDiveLoaderSequence
	unsigned char                                      UnknownData21[0x28];                                      // 0x0A20(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.FSDGameInstance.DeepDiveLoaderSequence2
	unsigned char                                      UnknownData22[0x28];                                      // 0x0A48(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.FSDGameInstance.FriendsAndInvitesOddish
	unsigned char                                      UnknownData23[0xCC0];                                     // 0x0A70(0x0CC0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameInstance");
		return ptr;
	}


	void UpdateSteamPresence();
	void UpdatePresences();
	void UpdateGlobelMissionSeed();
	void UpdateDiscordPresence();
	void StopPhotographyInputProcessor();
	void StopPersonalAnalytics();
	void SteamServerJoinStatusDelegate__DelegateSignature(ESteamServerJoinStatus* Status);
	void SteamSearchRegionDelegate__DelegateSignature(ESteamSearchRegion* Region);
	void StartPhotographyInputProcessor();
	void StartPersonalAnalytics();
	class AProceduralSetup* SpawnProcedural();
	bool ShouldPendingRewardsBeShown();
	bool ShouldPendingRewardsBeGiven();
	void SetViewer3DClass(class UClass** NewClass);
	void SetSteamServerJoinStatus(ESteamServerJoinStatus* NewStatus);
	void SetSteamSearchRegion(ESteamSearchRegion* NewRegion);
	void SetSelectedMission(class UGeneratedMission** mission, bool* updateSessionSettings);
	void SetProceduralMap(class UClass** procedural);
	void SetLoaderWorldVisible(bool* V, bool* resetHud);
	void SetHasSeenInfoScreen();
	void SetFSDPassword(struct FString* pw);
	void SetDiscordPresence(struct FDiscordRichPresenceData* presence);
	void SetCharacterSelectionWorldVisible(bool* V, ECharselectionCameraLocation* cameraLocation, bool* resetHud, bool* resetToDefaultWeapon);
	void SetCharacterSelectionSwitcher(class ACharacterSelectionSwitcher** switcher);
	void SendSteamInfo();
	void RestoreCursors();
	void ResetSaveGame();
	void RemoveRemporaryBuff();
	void RemoveBosco();
	void RegisterBossFight(class AActor** boss, class UEnemyHealthComponent** Health, class UEnemyComponent** enemy);
	void PostInit(bool* reload);
	void PairingUsePreviousProfile();
	void PairingUseNewProfile();
	void OnNewFSDSessionID(struct FString* sessionId);
	void OnNetworkFailure(class UWorld** World, class UNetDriver** NetDriver, TEnumAsByte<ENetworkFailure>* failType, struct FString* errorMessage);
	void OnLoadComplete(struct FString* MapName);
	float STATIC_MessageAge(struct FFSDChatMessage* Msg);
	void LoadSaveGame(class UFSDSaveGame** toLoad);
	void LatestMessages(int* Num, bool* resetAge, TArray<struct FFSDChatMessage>* OutMessages);
	bool STATIC_IsScreenFadingToBlack(class UObject** WorldContext);
	bool STATIC_IsScreenFadingFromBlack(class UObject** WorldContext);
	bool STATIC_IsScreenFading(class UObject** WorldContext);
	bool IsMutatorActive(class UClass** mutatorClass);
	bool IsCampaignMission();
	bool HasSignedIn();
	bool HasPendingInvite();
	bool HasAnalytics();
	void GraphicsUserSettingsChanged();
	void GiveTemporaryBuff(class UTemporaryBuff** buff, class APlayerCharacter** Player);
	struct FVector2D GetViewportSize();
	void GetSoftReferenceToPLS();
	bool GetPendingRewards(struct FPendingRewardsStats* OutStats, struct FPendingRewards* OutRewards);
	bool GetNextSpaceRigNotification(struct FSpaceRigNotification* NextNotification);
	TArray<class UMutator*> GetMutators(class UClass** mutatorClass);
	class AFSDPlayerController* GetLocalFSDPlayerController();
	bool GetHasSeenInfoScreen();
	int GetGlobalMissionSeed();
	class UGeneratedMission* GetGeneratedMission();
	class UMutator* GetFirstMutator(class UClass** mutatorClass);
	float GetCurrentFadeAmount();
	class APlayerCharacter* GetCharacterSelectorCharacter();
	void GameUserSettingsChanged();
	void STATIC_FadeScreenToBlack(class UObject** WorldContext, float* FadeTime, float* Delay, bool* ResetExistingFades, bool* CapFramerate, bool* FadeWorldOnly);
	void STATIC_FadeScreenFromBlack(class UObject** WorldContext, float* FadeTime, float* Delay, bool* ResetExistingFades, bool* CapFramerate, bool* FadeWorldOnly);
	void DeregisterBossFight(class AActor** boss);
	void CloseSessionLobby();
	void ClearPendingRewards();
	void ClearMessages();
	void ClearGameStateSeamlessTravelStorage();
	void ClearCampaignNotifications();
	void ChangeSkinPreview(class UItemSkin** PreviewSkin);
	void CancelJoin();
	void BossFightDelegate__DelegateSignature(struct FBossFight* BossFight);
	void STATIC_BlackoutScreen(class UObject** WorldContext, bool* FadeWorldOnly);
	void AddStatValue(struct FString* Key, float* Value);
	void AddStatCount(struct FString* Key, int* count);
	void AddSpaceRigNotification(struct FSpaceRigNotification* NewNotification, struct FString* ID, bool* TriggerEvent);
};


// Class FSD.SoundClassManager
// 0x0010 (0x0038 - 0x0028)
class USoundClassManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SoundClassManager");
		return ptr;
	}

};


// Class FSD.FSDGameMode
// 0x0180 (0x0598 - 0x0418)
class AFSDGameMode : public AGameMode
{
public:
	struct FScriptMulticastDelegate                    OnMatchStarted;                                           // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllControllersReady;                                    // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerLoggedIn;                                         // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDonkeyCalled;                                           // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               GenerationStarted;                                        // 0x0458(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class UPheromoneSpawnerComponent*                  PheromoneComponent;                                       // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemySpawnManager*                          EnemySpawnManager;                                        // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UObjectivesManager*                          ObjectivesManager;                                        // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UKeepInsideWorld*                            KeepInsideWorld;                                          // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDifficultyManager*                          DifficultyManagerComponent;                               // 0x0480(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMissionManager*                             MissionManager;                                           // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEncounterManager*                           EncounterManagerComponent;                                // 0x0490(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCritterManager*                             CritterManager;                                           // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class AFSDPlayerController*>                PlayerControllers;                                        // 0x04A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UFormationsManagerComponent*                 FormationsManager;                                        // 0x04B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x04B8(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x04B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.FSDGameMode.DropPodClass
	unsigned char                                      UnknownData03[0x28];                                      // 0x0500(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.FSDGameMode.DropodEscapeClass
	unsigned char                                      UnknownData04[0x28];                                      // 0x0528(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.FSDGameMode.droneClass
	float                                              ContinueCountdown;                                        // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               PreventAllLatejoin;                                       // 0x0554(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0555(0x0003) MISSED OFFSET
	float                                              PlayerSpawnHeightOffset;                                  // 0x0558(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FriendlyFireGracePeriod;                                  // 0x055C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UEnemyDescriptor*>                    ForcedEnemyPool;                                          // 0x0560(0x0010) (Edit, ZeroConstructor)
	bool                                               UseStationaryEncounter;                                   // 0x0570(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AllowSpecialEncounters;                                   // 0x0571(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x26];                                      // 0x0572(0x0026) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameMode");
		return ptr;
	}


	void StartGame();
	void SpawnMissionCriticalItems();
	void SignalEndLevelToClients();
	void ResetDeaths();
	void RecieveEndLevel();
	void RecieveAllDwarvesDown();
	void Recieve_ContinueTimerEnded();
	void ReceivePostSeamlessTravel();
	void OnLevelGenerationComplete(int* pass);
	void OnControllerDestroyed(class AActor** Controller);
	void LoadMission(struct FString* MapName);
	class AActor* GetPlayerStart(class AFSDPlayerController** Controller);
	class UEncounterManager* GetEncounterManager();
	struct FSoftObjectPath GetDropPodEscapePath();
	class UClass* GetDropPodEscapeClass();
	class UClass* GetDropPodClass();
	class UClass* GetDroneClass();
	class UDifficultyManager* GetDifficultyManager();
	int GetCurrentLevel();
	bool FSDSetPause(class APlayerController** PC, EPauseReason* pauseReason);
	bool FSDKickPlayer(class APlayerController** KickedPlayer, struct FText* KickReason);
	bool FSDClearPause(EPauseReason* pauseReason);
	void EndLevel();
	void DonkeyButtonPressed();
	void DestroyNonLocalPlayers();
	void Debug_ShowPlayerSpheres();
	bool AllPlayersHaveSelectedCharacter();
	bool AllPlayersHaveGeneratedLevel();
	void AddControllerForGracePeriod(class APlayerCharacter** APlayerCharacter);
	void AboutMission();
};


// Class FSD.FSDGameModeSpaceRig
// 0x0018 (0x05B0 - 0x0598)
class AFSDGameModeSpaceRig : public AFSDGameMode
{
public:
	unsigned char                                      AmountOfPlayersSpawnedInMedbay;                           // 0x0598(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               StartedSession;                                           // 0x0599(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x059A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameModeSpaceRig");
		return ptr;
	}


	class AActor* GetFreeSpawnOfType(ESpacerigStartType* aType, class AFSDPlayerController** AController);
};


// Class FSD.MissionGenerationManager
// 0x0058 (0x0080 - 0x0028)
class UMissionGenerationManager : public UObject
{
public:
	TMap<int, struct FGeneratedMissionGroup>           AllMissionGroups;                                         // 0x0028(0x0050) (ZeroConstructor, Transient)
	bool                                               ResetSelectedMission;                                     // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionGenerationManager");
		return ptr;
	}


	TArray<class UGeneratedMission*> GetMissions(int* Seed);
	class UGeneratedMission* GetMissionFromSeeds(int* GlobalSeed, int* MissionSeed);
	TArray<class UGeneratedMission*> GetAvailableMissions();
};


// Class FSD.FSDTagSettings
// 0x00F0 (0x0120 - 0x0030)
class UFSDTagSettings : public UDataAsset
{
public:
	struct FGameplayTagQuery                           IsFriendlyQuery;                                          // 0x0030(0x0048) (Edit)
	struct FGameplayTagQuery                           IsNeutralQuery;                                           // 0x0078(0x0048) (Edit)
	struct FGameplayTagQuery                           IsHostileQuery;                                           // 0x00C0(0x0048) (Edit)
	struct FFSDTagsRoot                                Root;                                                     // 0x0108(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDTagSettings");
		return ptr;
	}

};


// Class FSD.FSDGameSession
// 0x0010 (0x0358 - 0x0348)
class AFSDGameSession : public AGameSession
{
public:
	TArray<struct FUniqueNetIdRepl>                    BannedPlayers;                                            // 0x0348(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameSession");
		return ptr;
	}

};


// Class FSD.GameStats
// 0x0010 (0x0340 - 0x0330)
class AGameStats : public AInfo
{
public:
	int                                                NumberOfPlayersEscapedInPod;                              // 0x0330(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalGoldMined;                                           // 0x0334(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalEnemiesKilled;                                       // 0x0338(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MissionHaz;                                               // 0x033C(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameStats");
		return ptr;
	}


	void OnPlayerMinedGold(class UCappedResource** Resource, float* amount);
};


// Class FSD.FSDGameState
// 0x0398 (0x0728 - 0x0390)
class AFSDGameState : public AGameState
{
public:
	struct FScriptMulticastDelegate                    OnMissionTimeUpdated;                                     // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainGenerated;                                       // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainGenerationStarting;                              // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchStarted;                                           // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchEnded;                                             // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGameEventCompletedEvent;                                // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerJoined;                                           // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerLeave;                                            // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnContinueActive;                                         // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnContinueCountdownChanged;                               // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllDwarvesDown;                                         // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamMemberCampaignMissionChanged;                       // 0x0440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemyKilledEvent;                                       // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerCharacterRegistered;                              // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                CurrentLevel;                                             // 0x0470(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	class AMiningPod*                                  EscapePod;                                                // 0x0478(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     FSDSessionID;                                             // 0x0480(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnBoscoReviveCounterChanged;                              // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class USoundCue*>                           MusicManagerNetworkedCues;                                // 0x04A0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnObjectivesCompleted;                                    // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectiveAdded;                                         // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDifficultyChanged;                                      // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCountdownStarted;                                       // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCountdownTimeChanged;                                   // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCountdownFinished;                                      // 0x0500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x0510(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x0518(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DelayLateJoin;                                            // 0x0520(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0521(0x0007) MISSED OFFSET
	class UPrimitiveComponent*                         FakeMovementBase;                                         // 0x0528(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                PlayerSurvivalCreditBonus;                                // 0x0530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ResourceAmountPenalty;                                    // 0x0534(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ObjectivesCreditPenalty;                                  // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	struct FText                                       TextMissionCompleted;                                     // 0x0540(0x0018) (Edit)
	struct FText                                       TextSecondaryObjective;                                   // 0x0558(0x0018) (Edit)
	struct FText                                       TextSurvivalBonus;                                        // 0x0570(0x0018) (Edit)
	struct FText                                       TextMined;                                                // 0x0588(0x0018) (Edit)
	struct FText                                       TextCollected;                                            // 0x05A0(0x0018) (Edit)
	struct FText                                       TextBonus;                                                // 0x05B8(0x0018) (Edit)
	int                                                BoscoReviveCounter;                                       // 0x05D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05D4(0x0004) MISSED OFFSET
	class USpawnEffectsComponent*                      SpawnEffects;                                             // 0x05D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTracerManager*                              TracerManager;                                            // 0x05E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDynamicMeshScaler*                          MeshScaler;                                               // 0x05E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UFlareController*                            FlareController;                                          // 0x05F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGemProximityTracker*                        GemProximityTracker;                                      // 0x05F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAttackerManagerComponent*                   AttackerManager;                                          // 0x0600(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundMixManagerComponent*                   SoundMixManager;                                          // 0x0608(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTeamResourcesComponent*                     TeamResources;                                            // 0x0610(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               IsOnSpaceRig;                                             // 0x0618(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PlayerMadeItToDropPod;                                    // 0x0619(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x061A(0x0006) MISSED OFFSET
	TArray<class APlayerCharacter*>                    ActivePlayerCharacters;                                   // 0x0620(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FReplicatedObjectives                       Objectives;                                               // 0x0630(0x0018) (Net, Transient)
	struct FText                                       CompletedGameEventName;                                   // 0x0648(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FGeneratedMissionSeed                       GeneratedMissionSeed;                                     // 0x0660(0x0040) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               objectivesCompleted;                                      // 0x06A0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x06A1(0x0007) MISSED OFFSET
	class UDifficultySetting*                          CurrentDifficultySetting;                                 // 0x06A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UPlayerProximityTracker*                     ProximityTracker;                                         // 0x06B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AGameStats*                                  GameStats;                                                // 0x06B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           MissionTime;                                              // 0x06C0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           MissionStartTime;                                         // 0x06C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           MissionHaz;                                               // 0x06C8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               PreventLatejoinCharacterDuplication;                      // 0x06CC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               StartPressed;                                             // 0x06CD(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ContinuePressed;                                          // 0x06CE(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x06CF(0x0001) MISSED OFFSET
	int                                                ContinuesCountdown;                                       // 0x06D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AllDwarvesDown;                                           // 0x06D4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x06D5(0x0003) MISSED OFFSET
	int                                                CountdownRemaining;                                       // 0x06D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x06DC(0x0004) MISSED OFFSET
	struct FText                                       countdownText;                                            // 0x06E0(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	bool                                               CanCarryOverResources;                                    // 0x06F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2F];                                      // 0x06F9(0x002F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameState");
		return ptr;
	}


	void StartCountdown(int* Duration, struct FText* countdownName);
	void SetPreventLatejoinCharacterDuplication(bool* prevent);
	void SetPlayersHaveReachedDroppod(bool* newHasPlayerReached);
	void SetCurrentDifficulty(class UDifficultySetting** Setting, bool* updateSessionSettings);
	void SetCompletionData(bool* objectivesCompleted, int* playersInPod);
	void ReceiveGeneratedMissionReplicated();
	void PostLocalizedGameMessage(struct FText* Msg, TArray<struct FText>* Arguments);
	void PostGameMessage(struct FString* Msg);
	void OnRep_StartPressed(bool* oldStartPressed);
	void OnRep_ObjectivesCompleted();
	void OnRep_MusicManagerNetworkedCues();
	void OnRep_MissionTime();
	void OnRep_GeneratedMissionSeed();
	void OnRep_FSDSessionID();
	void OnRep_CurrentDifficultySetting();
	void OnRep_CountdownText();
	void OnRep_CountdownRemaining(int* prevTime);
	void OnRep_ContinuePressed();
	void OnRep_ContinueCountdown();
	void OnRep_CompletedGameEvent();
	void OnRep_BoscoReviveCounter();
	void OnRep_AllDwarvesDown();
	int MissionEndscreenSeed();
	bool IsCountingDown();
	bool HasObjectivesReplicated();
	void HandleSeamlessTravelEvent();
	class AFSDPlayerState* GetServerPlayerState();
	class UObjective* GetSecondaryObjective();
	class AProceduralSetup* GetProceduralSetup();
	class UObjective* GetPrimaryObjective();
	bool GetPreventLatejoinCharacterDuplication();
	bool GetPlayersHaveReachedDroppod();
	TArray<class UClass*> GetPlayableCharacters();
	TArray<class UObjective*> GetObjectives();
	TArray<class AFSDPlayerState*> GetNetworkSortedPlayerArray();
	int GetMissionTime();
	bool GetMissionSuccessful();
	int GetMissionStartTime();
	int GetMissionRewardXP(bool* primary);
	int GetMissionRewardCreditSum();
	TArray<struct FCreditsReward> GetMissionRewardCredits();
	bool GetMissionCompletedCreditReward(bool* primary, int* OutReward);
	int GetGlobalMissionSeed();
	class AGameStats* GetGameStats();
	TMap<class UResourceData*, float> GetCollectedResources();
	void ClientNewMessage(struct FFSDChatMessage* Msg);
	void Client_StartPressed();
	void Client_NewLocalizedMessage(struct FFSDLocalizedChatMessage* Msg);
	bool AllMissionEndResultsReceived();
	void All_SpawnScaledEffectAt(struct FScaledEffect* effect, struct FVector_NetQuantize* Location);
	void All_SpawnScaledEffectAndCueAt(struct FScaledEffect* effect, class USoundCue** Audio, struct FVector_NetQuantize* Location);
};


// Class FSD.FSDCreateSessionCallbackProxy
// 0x0068 (0x0090 - 0x0028)
class UFSDCreateSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0048(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDCreateSessionCallbackProxy");
		return ptr;
	}


	class UFSDCreateSessionCallbackProxy* STATIC_FSDCreateSession(class UObject** WorldContextObject, class APlayerController** PlayerController, int* PublicConnections, bool* bUseLAN, bool* bFriendsOnly);
};


// Class FSD.FSDGameUserSettings
// 0x01F0 (0x0308 - 0x0118)
class UFSDGameUserSettings : public UGameUserSettings
{
public:
	struct FScriptMulticastDelegate                    OnUseHoldToRunChanged;                                    // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFOVChanged;                                             // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLanguageChanged;                                        // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGameServerNameChanged;                                  // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCanShowBloodChanged;                                    // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              volumeMaster;                                             // 0x0168(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              volumeSFX;                                                // 0x016C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              volumeMusic;                                              // 0x0170(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              volumeVoice;                                              // 0x0174(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	class USoundClass*                                 soundClassMaster;                                         // 0x0178(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class USoundClass*                                 soundClassSFX;                                            // 0x0180(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class USoundClass*                                 soundClassUI;                                             // 0x0188(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class USoundClass*                                 soundClassMusic;                                          // 0x0190(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class USoundClass*                                 soundClassVoice;                                          // 0x0198(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUseVoiceChat;                                            // 0x01A0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUsePushToTalk;                                           // 0x01A1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x01A2(0x0006) MISSED OFFSET
	struct FString                                     LocalGameServerName;                                      // 0x01A8(0x0010) (ZeroConstructor, Config)
	bool                                               AutoRefreshServerlist;                                    // 0x01B8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01B9(0x0003) MISSED OFFSET
	float                                              MouseXSensitivity;                                        // 0x01BC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MouseYSensitivity;                                        // 0x01C0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               UseSeperateSensetivity;                                   // 0x01C4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               InvertMouse;                                              // 0x01C5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               InvertScroolWheel;                                        // 0x01C6(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               UseHoldToRun;                                             // 0x01C7(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               UseToggleLaserpointer;                                    // 0x01C8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01C9(0x0003) MISSED OFFSET
	float                                              FOV;                                                      // 0x01CC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HeadbobbingScale;                                         // 0x01D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               UseStreamerProgram;                                       // 0x01D4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01D5(0x0003) MISSED OFFSET
	struct FHUDElements                                HUDElements;                                              // 0x01D8(0x0078) (Config)
	struct FCharacterOptions                           CharacterOptions;                                         // 0x0250(0x0001) (BlueprintVisible, Config)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0251(0x0003) MISSED OFFSET
	float                                              UIDPIScale;                                               // 0x0254(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0258(0x0004) MISSED OFFSET
	bool                                               EnableCustomUIScale;                                      // 0x025C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x025D(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputSourceChanged;                                     // 0x0260(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnableTutorialHintsChanged;                             // 0x0270(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowFPSChanged;                                         // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowNetInfoChanged;                                     // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FIntPoint                                   ResolutionToBeApplied;                                    // 0x02A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               VSyncToBeApplied;                                         // 0x02A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EWindowMode>                           InFullscreenModeToBeApplied;                              // 0x02A9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               InFullscreenModeToBeAppliedValid;                         // 0x02AA(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               VSyncToBeAppliedValid;                                    // 0x02AB(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ResolutionToBeAppliedValid;                               // 0x02AC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowUpgradeExtraDetails;                                 // 0x02AD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x02AE(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShowUpgradeExtraDetailsChanged;                         // 0x02B0(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCustomKeyBindingsChanged;                               // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FCustomKeyBinding>                   CustomKeyBindings;                                        // 0x02D0(0x0010) (ZeroConstructor, Config)
	EInputSource                                       CurrentInputSource;                                       // 0x02E0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EInputSource                                       RequestedInputSource;                                     // 0x02E1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTutorialHintsEnabled;                                    // 0x02E2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowSubtitles;                                           // 0x02E3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowFPS;                                                 // 0x02E4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowNetInfo;                                             // 0x02E5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCanShowBlood;                                            // 0x02E6(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               PreventLatejoinCharacterDuplication;                      // 0x02E7(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	struct FControllerSettings                         ControllerSettings;                                       // 0x02E8(0x000C) (Config)
	unsigned char                                      UnknownData08[0x4];                                       // 0x02F4(0x0004) MISSED OFFSET
	TArray<struct FGuid>                               SelectedDifficultyLevels;                                 // 0x02F8(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameUserSettings");
		return ptr;
	}


	void UpdateVolumeSettings(class USoundClass** Master, class USoundClass** Music, class USoundClass** SFX, class USoundClass** UI, class USoundClass** Voice);
	bool ToggleShowUpgradeExtraDetails();
	void SetVSyncEnabledToBeApplied(bool* bEnable);
	void SetVolume(EVolumeType* volumeType, float* Volume);
	void SetVoiceChatEnabled(bool* bEnable);
	void SetUseToggleLaserpointer(bool* UseToggleLaserpointer);
	void SetUseStreamerProgram(bool* UseStreamerProgram);
	void SetUseSeparateSensitivity(bool* newSetting);
	void SetUseHoldToRun(bool* UseHoldToRun);
	void SetUseCustomUIScale(bool* UseCustomScale);
	void SetUIDPIScale(float* uiscale);
	void SetTutorialHintsEnabled(bool* Enabled);
	void SetShowSubtitles(bool* Show);
	void SetShowNetInfo(bool* Visible);
	void SetShowFPS(bool* Visible);
	void SetScreenResolutionToBeApplied(struct FIntPoint* Resolution);
	void SetPushToTalk(bool* bEnable);
	void SetPreventLatejoinCharacterDuplication(bool* prevent);
	void SetMouseYSensitivity(float* newSensitivity);
	void SetMouseXSensitivity(float* newSensitivity);
	void SetInvertMouseWheel(bool* invertMouseWheel);
	void SetInvertMouse(bool* InvertMouse);
	void SetInputSource(EInputSource* NewSource);
	void SetHeadBobbingScale(float* HeadbobbingScale);
	void SetGrapplingHookAutoSwitch(bool* shouldAutoSwitch);
	void SetGameServerName(struct FString* Name);
	void SetFullscreenModeToBeApplied(TEnumAsByte<EWindowMode>* InFullscreenMode);
	void SetFOV(float* FOV);
	void SetDisableMasterEQ(bool* B);
	void SetDifficultySelected(class UDifficultySetting** Difficulty, bool* IsSelected);
	void SetCanShowBlood(bool* bloodAllowed);
	void SetAutoRefreshServerlist(bool* Value);
	void SetAimSensitivity(float* NewValue);
	void SetAimOuterAcceleration(float* NewValue);
	void SetAimDeadZone(float* NewValue);
	void ResetGraphicsChanges();
	void ResetControllerSettings();
	void RemoveCustomKeyBinding(struct FName* ActionName, EKeyBindingAxis* Axis, int* Index);
	bool IsVoiceChatEnabled();
	bool STATIC_IsCurrentInputSource(EInputSource* InputSource);
	void InitializeDifficultySelection(class UObject** WorldContext, TArray<class UDifficultySetting*>* StartSelection);
	bool GetVSyncEnabledToBeApplied();
	float GetVolume(EVolumeType* volumeType);
	bool GetUseToggleLaserpointer();
	bool GetUseStreamerProgram();
	bool GetUseSeparateSensitivity();
	bool GetUseHoldToRun();
	bool GetUseCustomUIScale();
	float GetUIDPIScale();
	bool GetTutorialHintsEnabled();
	bool GetShowSubtitles();
	bool GetShowNetInfo();
	bool GetShowFPS();
	struct FIntPoint GetScreenResolutionToBeApplied();
	bool GetPushToTalk();
	bool GetPreventLatejoinCharacterDuplication();
	float GetMouseYSensitivity();
	float GetMouseXSensitivity();
	bool GetKeyBinding(struct FName* ActionName, EKeyBindingAxis* Axis, int* Index, struct FKey* outKey);
	bool GetIsDifficultySelected(class UDifficultySetting** Difficulty);
	bool GetInvertMouseWheel();
	bool GetInvertMouse();
	EInputSource STATIC_GetInputSource();
	float GetHeadBobbingScale();
	bool GetGrapplingHookAutoSwitch();
	TEnumAsByte<EWindowMode> GetFullscreenModeToBeApplied();
	class UFSDGameUserSettings* STATIC_GetFSDGameUserSettings();
	float GetFOV();
	bool GetDisableMasterEQ();
	EInputSource GetCurrentInputSource();
	bool GetAutoRefreshServerlist();
	bool GetAllKeyBindings(struct FName* ActionName, EKeyBindingAxis* Axis, TArray<struct FKey>* OutKeys);
	TArray<struct FCustomKeyBinding> GetAllActionBindings(struct FKey* Key);
	float GetAimSensitivity();
	float GetAimOuterAcceleration();
	float GetAimDeadZone();
	struct FString GameServerName();
	bool STATIC_FSDSetCurrentLanguage(class UObject** WorldContextObject, struct FString* Culture);
	class UFSDGameUserSettings* STATIC_FSDGameUserSettings();
	void ClearCustomKeyBindings();
	bool CanShowBlood();
	void ApplyGraphicsChanges();
	bool AddCustomKeyBinding(struct FName* ActionName, EKeyBindingAxis* Axis, struct FKey* Key, int* Index);
};


// Class FSD.FSDHUD
// 0x0008 (0x0428 - 0x0420)
class AFSDHUD : public AHUD
{
public:
	unsigned char                                      IsVisibleFlags;                                           // 0x0420(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0421(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDHUD");
		return ptr;
	}


	bool ToggleHUDVisibility(EHUDVisibilityReason* reason);
	void SetHUDVisible(bool* IsVisible, EHUDVisibilityReason* reason);
	void RadarPointAdded(class URadarPointComponent** radarPoint);
	void PlayerSpawned(class APlayerCharacter** Player);
	void OnVisibilityChanged();
	bool IsHUDVisibleFlagSet(EHUDVisibilityReason* reason);
	void HandleSeamlessTravel();
	bool GetHUDVisible();
};


// Class FSD.FSDMainHUDWidget
// 0x0000 (0x0230 - 0x0230)
class UFSDMainHUDWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDMainHUDWidget");
		return ptr;
	}


	void OnRadarPointAdded(class URadarPointComponent** Point);
	void AddRadarPoint(class URadarPointComponent** Point);
};


// Class FSD.FSDJoinSessionCallbackProxy
// 0x0118 (0x0140 - 0x0028)
class UFSDJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0048(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDJoinSessionCallbackProxy");
		return ptr;
	}


	class UFSDJoinSessionCallbackProxy* STATIC_FSDJoinSession(class UObject** WorldContextObject, class APlayerController** PlayerController, struct FBlueprintSessionResult* SearchResult, struct FString* FSDPassword, bool* fromInvite);
};


// Class FSD.FSDLiveUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDLiveUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDLiveUtils");
		return ptr;
	}


	void STATIC_ShowAccountPicker(class UFSDGameInstance** gInstance, int* GamePlayerID);
	void STATIC_OpenGamerCard(class APlayerState** Requestor, class APlayerState** Requestee);
};


// Class FSD.FSDMatchmakingCallbackProxy
// 0x0100 (0x0128 - 0x0028)
class UFSDMatchmakingCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCancelled;                                              // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptDelegate                             FailDelegateHandle;                                       // 0x0058(0x0014) (ZeroConstructor, Transient, InstancedReference)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0068(0x0028) MISSED OFFSET
	class UMissionTemplate*                            mission;                                                  // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UBiome*                                      Biome;                                                    // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDifficultySetting*                          Difficulty;                                               // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x00A8(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDMatchmakingCallbackProxy");
		return ptr;
	}


	class UFSDMatchmakingCallbackProxy* STATIC_FSDMatchmaking(class UObject** WorldContextObject, class APlayerController** PlayerController, struct FScriptDelegate* FailDelegate, class UDifficultySetting** DesiredDifficulty, class UBiome** desiredBiome, class UMissionTemplate** desiredMission);
	void STATIC_CancelMatchmaking();
};


// Class FSD.FSDMath
// 0x0000 (0x0028 - 0x0028)
class UFSDMath : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDMath");
		return ptr;
	}


	struct FVector STATIC_SphericalToCartesian(float* Radius, float* azimuth, float* elecation);
	bool STATIC_PercentageCheck(float* percentage);
	void STATIC_GetAzimuthAndElevation(struct FVector* Direction, struct FTransform* coordinateSystem, float* azimuth, float* elevation);
	void STATIC_CartesianToSpherical(struct FVector* Location, float* outAzimuth, float* outElevation, float* outRadius);
};


// Class FSD.FSDOnlineSessionClient
// 0x0000 (0x0190 - 0x0190)
class UFSDOnlineSessionClient : public UOnlineSessionClient
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDOnlineSessionClient");
		return ptr;
	}

};


// Class FSD.FSDPhysicalMaterial
// 0x00A8 (0x0128 - 0x0080)
class UFSDPhysicalMaterial : public UPhysicalMaterial
{
public:
	class UParticleSystem*                             ImpactParticles;                                          // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           ImpactMaterialOverride;                                   // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ImpactSound;                                              // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseImpactDecalOverrides;                                  // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	TArray<struct FDecalData>                          ImpactDecals;                                             // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	class USoundCue*                                   FirstPersonDamageIndicatorSound;                          // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsWeakPoint;                                              // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	float                                              DamageMultiplier;                                         // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             FootstepParticle;                                         // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           FootstepMaterialOverride;                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDecalData                                  LeftFootprintDecal;                                       // 0x00D0(0x0018) (Edit)
	struct FDecalData                                  RightFootprintDecal;                                      // 0x00E8(0x0018) (Edit)
	class USoundCue*                                   FootstepSound;                                            // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExtraFallVelocity;                                        // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UParticleSystem*                             FallImpactEffect;                                         // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FallImpactSound;                                          // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReactiveTerrain;                                          // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPhysicalMaterial");
		return ptr;
	}


	class UParticleSystemComponent* SpawnImpactParticles(class UObject** WorldContextObject, struct FVector* Location, struct FVector* Normal);
	class UFSDPhysicalMaterial* STATIC_GetPhysicalMaterialFromPrimitive(class UPrimitiveComponent** Component);
};


// Class FSD.OptionalBloodPhysicalMaterial
// 0x0008 (0x0130 - 0x0128)
class UOptionalBloodPhysicalMaterial : public UFSDPhysicalMaterial
{
public:
	class UParticleSystem*                             BloodlessImpactParticles;                                 // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OptionalBloodPhysicalMaterial");
		return ptr;
	}

};


// Class FSD.FSDPlayerCameraManager
// 0x0000 (0x2660 - 0x2660)
class AFSDPlayerCameraManager : public APlayerCameraManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPlayerCameraManager");
		return ptr;
	}

};


// Class FSD.FSDPlayerControllerBase
// 0x0048 (0x06C0 - 0x0678)
class AFSDPlayerControllerBase : public APlayerController
{
public:
	class UMaterialParameterCollection*                GlobalMaterialParameterCollection;                        // 0x0678(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPlayerVoiceStatusChanged;                               // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0690(0x0003) MISSED OFFSET
	bool                                               bStartWithBlackScreen;                                    // 0x0693(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	class UWindowManager*                              WindowManager;                                            // 0x0698(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x06A0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPlayerControllerBase");
		return ptr;
	}


	void ToggleAnalogCursor(bool* Visible);
	void StopAspectRatioAxisConstraint();
	void StartAspectRatioAxisConstraint();
	void SetHUDVisible(bool* IsVisible, EHUDVisibilityReason* reason);
	void Server_Cheat_SwitchCharacter(class UClass** NewCharacter);
	void RequestPLSData();
	void RecievePreClientTravel();
	void RecieveHUDVisibilityChanged(bool* IsVisible);
	bool IsHUDVisibleFlagSet(EHUDVisibilityReason* reason);
	void Client_WasKicked(EDisconnectReason* reason);
};


// Class FSD.FSDPlayerController
// 0x01C0 (0x0880 - 0x06C0)
class AFSDPlayerController : public AFSDPlayerControllerBase
{
public:
	struct FScriptMulticastDelegate                    OnEndLevelReceived;                                       // 0x06C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReceiveVoiceChanged;                                    // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTransmitVoiceChanged;                                   // 0x06E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelFinished;                                          // 0x06F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowTutorialHint;                                       // 0x0700(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeTutorialHintDuration;                             // 0x0710(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHideCurrentTutorialHint;                                // 0x0720(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerCharacterPossesed;                                // 0x0730(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMixerNameChange;                                        // 0x0740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0750(0x000C) MISSED OFFSET
	bool                                               IsOnSpaceRig;                                             // 0x075C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bReceivedEndLevel;                                        // 0x075D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x075E(0x0002) MISSED OFFSET
	TArray<class USoundMix*>                           InitialSoundMixes;                                        // 0x0760(0x0010) (Edit, ZeroConstructor)
	bool                                               ServerTravelDone;                                         // 0x0770(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0771(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnChatOpened;                                             // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFSDWidgetEffectsComponent*                  WidgetEffects;                                            // 0x0788(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UChromaComponent*                            ChromaEffects;                                            // 0x0790(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USteelSeriesComponent*                       SteelSeriesEffects;                                       // 0x0798(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	ESpacerigStartType                                 SpacerigSpawnType;                                        // 0x07A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x13];                                      // 0x07A1(0x0013) MISSED OFFSET
	bool                                               bDetectGravityChanges;                                    // 0x07B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xCB];                                      // 0x07B5(0x00CB) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPlayerController");
		return ptr;
	}


	void ToggleVoiceOn(bool* Enabled);
	void SpawnSupplyPod(class UClass** SupplyBeacon, class UClass** SupplyPod, struct FVector* atLocation, float* Radius, struct FString* ViewerName, struct FString* Description);
	void SpawnEnemyPack(struct FVector* atLocation, float* Radius, int* packSize, struct FString* ViewerName, struct FString* Description);
	void ShowTutorialHint(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title, float* Duration);
	void SetPlayerStart(class AActor** Start);
	void SetAchievementProgressFromServer(class UFSDAchievement** AchievementToSet, float* Progress);
	void ServerSetUserHoldToRun(bool* Value);
	void Server_TravelDone();
	void Server_TerrainLateJoinPartReceived();
	void Server_SpawnSupplyPod(class UClass** SupplyBeacon, class UClass** SupplyPod, struct FVector* atLocation, float* Radius, struct FString* ViewerName, struct FString* Description);
	void Server_SpawnEnemies(class UClass** enemyClass, struct FVector* atLocation, float* Radius, int* packSize, struct FString* ViewerName, struct FString* Description);
	void Server_SetLateJoinDone();
	void Server_SetGenerationStatus(struct FString* Status, float* Fraction);
	void Server_SetGenerationFraction(float* Fraction);
	void Server_SetGenerationDone();
	void Server_SetControllerReady();
	void Server_ResetHUD();
	void Server_NewMessage(struct FString* Sender, struct FString* Text, EChatSenderType* SenderType);
	void Server_AddTeamResources(class UResourceData** ResourceData, float* amount, struct FString* ViewerName, struct FString* Description);
	void Server_ActivateTemporaryBuff(class UTemporaryBuff** buff);
	void SendRequestedPLSData();
	void SendLevelUpStatistics(int* currentRank);
	void RecievePawnDestroyed();
	void RecieveOnControllerReady();
	void RecieveClientTravelDone();
	void ReceivingVoiceSignature__DelegateSignature(bool* isRecieving);
	void ReceiveEndLevel();
	void ReceivedEndLevelDelegate__DelegateSignature();
	void Receive_EndLevel_WaitForData(bool* areObjectivesCompleted, int* numberOfPlayersInPod);
	void ReadyToContinueFromEndScreen();
	void OnShowTutorialHint__DelegateSignature(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title, float* Duration);
	void OnSaveGamePlayerProgressChanged(int* Rank, int* Stars);
	void OnSaveGameCreditsChanged(int* Credits);
	void OnSaveGameCharacterProgressChanged(class UClass** CharacterClass, int* Level, float* Progress);
	void OnPlayerStateSelectedCharacterChanged(class UClass** CharacterClass);
	void OnPlayerSpawnBegin(int* PlayerId);
	void OnHideTutorialHint__DelegateSignature();
	void OnGenerationDone();
	void OnChangeTutorialHintDuration__DelegateSignature(float* NewDuration);
	EFSDMixerLoginState MixerState();
	void MixerLogout();
	void MixerLogin();
	void LevelFinishedSignature__DelegateSignature();
	void HideTutorialHint();
	bool HasPendingRewards();
	bool GetUseToggleLaserpointer();
	bool GetUseHoldToRun();
	class USteelSeriesComponent* GetSteelSeriesEffectsComponent();
	class AActor* GetPlayerStart();
	bool GetPendingRewards(struct FPendingRewardsStats* OutStats, struct FPendingRewards* OutRewards);
	class AFSDPlayerState* GetFSDPlayerState();
	class UChromaComponent* GetChromaEffectsComponent();
	class AActor* FindPlayerStart();
	void EndLevel();
	void Client_TerrainLateJoinVisibleChunks(TArray<uint32_t>* visibleChunks);
	void Client_TerrainLateJoinPart(TArray<struct FGrenadeExplodeOperationData>* explosions, TArray<struct FCarveWithColliderOperationData>* colliderCarves, TArray<struct FCarveWithSTLMeshOperationData>* meshCarves, TArray<struct FPickaxeDigOperationData>* pickAxe, TArray<struct FRemoveFloatingIslandOperationData>* floating, TArray<struct FDrillOperationData>* drills, TArray<struct FMeltOperationData>* melts);
	void Client_TerrainLateJoinDone();
	void Client_TerrainLateJoinDebris(TArray<int>* instanceComponentPairs);
	void Client_RecievePLSSizes(int* influenceCount, int* carverCount, int* levelCarverCount);
	void Client_RecievePLSLevelCarver(struct FLevelGenerationCarverLists* levelCarvers);
	void Client_RecievePLSInstantCarver(struct FGeneratedInstantCarverLists* instantCarvers);
	void Client_RecievePLSInfluencers(struct FGeneratedInfluenceSets* influenceSet);
	void Client_PlayCue(class USoundCue** SoundCue);
	void Client_EndLevel_WaitForData(bool* areObjectivesCompleted, int* numberOfPlayersInPod);
	void Client_DeductResource(class UResourceData** Resource, int* amount);
	void Client_CollectTreasureVictoryPose(class UTreasureRewarder** rewarder, class UVictoryPose** targetPose, class UPlayerCharacterID** targetCharacter);
	void Client_CollectTreasureSkin(class UTreasureRewarder** rewarder, class UItemSkin** targetSkin, class UItemID** targetItem);
	void Client_CollectTreasureDrink(class UTreasureRewarder** rewarder, class UDrinkableDataAsset** Drinkable);
	void ApplyPendingRewards();
	void AddTeamResources(class UResourceData** ResourceData, float* amount, struct FString* ViewerName, struct FString* Description);
};


// Class FSD.FSDPlayerStart
// 0x0030 (0x0360 - 0x0330)
class AFSDPlayerStart : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0330(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.FSDPlayerStart.PreferredClass
	class AFSDPlayerController*                        usedBy;                                                   // 0x0358(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPlayerStart");
		return ptr;
	}

};


// Class FSD.SpacerigStart
// 0x0030 (0x0390 - 0x0360)
class ASpacerigStart : public APlayerStart
{
public:
	struct FScriptMulticastDelegate                    OnPlayerSpawn;                                            // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerLeave;                                            // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFSDPlayerController*                        usedBy;                                                   // 0x0380(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	ESpacerigStartType                                 StartType;                                                // 0x0388(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0389(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpacerigStart");
		return ptr;
	}

};


// Class FSD.PlayerStatsComponent
// 0x00B0 (0x01A8 - 0x00F8)
class UPlayerStatsComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnKillAdded;                                              // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                TotalKills;                                               // 0x0108(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalRevived;                                             // 0x010C(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalDeaths;                                              // 0x0110(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalSupplypodsRequested;                                 // 0x0114(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalGoldMined;                                           // 0x0118(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalMOMsMined;                                           // 0x011C(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalMineralsMined;                                       // 0x0120(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalXPGained;                                            // 0x0124(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               EscapedInPod;                                             // 0x0128(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	class UClass*                                      LastPlayedClass;                                          // 0x0130(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FEndMissionResult                           EndMissionResult;                                         // 0x0138(0x0060) (BlueprintVisible, Net, Transient)
	struct FScriptMulticastDelegate                    OnEndMissionResultReady;                                  // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerStatsComponent");
		return ptr;
	}


	void SendMissionAnalytics(bool* trackMorkite);
	void SendEndMissionResult(struct FEndMissionResult* Result);
	void OnResourceMined(class UCappedResource** Resource, float* amount);
	void OnRep_EndMissionResult();
	bool IsEndMissionResultReady();
	bool GetSurvivedInPod();
	void EndMissionResultDelegate__DelegateSignature(struct FEndMissionResult* Result);
};


// Class FSD.FSDPlayerState
// 0x00F0 (0x0548 - 0x0458)
class AFSDPlayerState : public APlayerState
{
public:
	struct FScriptMulticastDelegate                    OnPlayerCharacterSpawned;                                 // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerTalkingChanged;                                   // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSelectedCharacterChanged;                               // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              FractionLevelGenerated;                                   // 0x0488(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	struct FString                                     LevelGenerationState;                                     // 0x0490(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnSupplyStatusChangedEvent;                               // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemyKilledEvent;                                       // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UVanityItem*>                         LatestEquipedVanity;                                      // 0x04C0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	class UClass*                                      SelectedCharacter;                                        // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsServer;                                                // 0x04D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShouldCopyProperties;                                     // 0x04D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      gameOwnerStatus;                                          // 0x04DA(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsOnSpaceRig;                                             // 0x04DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	class UPlayerStatsComponent*                       PlayerStatsComponent;                                     // 0x04E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerRejoinState*                          RejoinState;                                              // 0x04E8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USaveGameStateComponent*                     SaveGameStateComponent;                                   // 0x04F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class APlayerCharacter*                            PlayerCharacter;                                          // 0x04F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInMission;                                              // 0x0500(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsTalking;                                                // 0x0501(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasGeneratedLevel;                                        // 0x0502(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HasSelectedCharacter;                                     // 0x0503(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                PlayerSortId;                                             // 0x0504(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPlayerNameChanged;                                      // 0x0508(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFractionLevelGenerated;                                 // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelGenerationStateChanged;                            // 0x0528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UPlayerResourceComponent*                    PlayerResources;                                          // 0x0538(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      SupplyAmmoStatus;                                         // 0x0540(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      SupplyHealthStatus;                                       // 0x0541(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0542(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPlayerState");
		return ptr;
	}


	void SetSelectedCharacter(class UClass** NewCharacter);
	void ServerSetSelectedCharacter(class UClass** NewCharacter);
	void Server_SetSupplyStatus(unsigned char* StatusHealth, unsigned char* StatusAmmo);
	void Server_SetGameOwnerStatus(int* gameOwnerStatus);
	void OnRep_SupplyHealthStatus();
	void OnRep_SupplyAmmoStatus();
	void OnRep_SelectedCharacter();
	void OnRep_PlayerCharacter();
	void OnRep_LevelGenerationState();
	void OnRep_GameOwnerStatus();
	void OnRep_FractionLevelGenerated();
	void OnLateJoinFinished();
	bool HasNormalOwnerStatus();
	int GetXPRewardsSum();
	TArray<struct FXPReward> GetXPRewardsCustom(TMap<class UResourceData*, float>* Resources, int* EnemiesKilled, bool* FailPrimaryObjectiveCompleted, bool* FailSecondaryObjectiveCompleted);
	TArray<struct FXPReward> GetXPRewards();
	TArray<struct FXPReward> GetXPRewardDeepDive(int* StagesCompleted);
	float GetSupplyHealthStatus();
	float GetSupplyAmmoStatus();
	int GetSelectedCharacterLevel();
	struct FCharacterProgress GetSelectCharacterProgress();
	class UPlayerResourceComponent* GetPlayerResourceComponent();
	int GetPlayerRank();
	class AFSDPlayerController* GetPlayerController();
	bool GetGameOwnerStatus(EGameOwnerStatus* Status);
	TArray<struct FCreditsReward> GetDeepDiveCreditsReward(int* StagesCompleted, int* goldCollected);
	EChatSenderType GetChatSenderType();
	struct FCharacterProgress GetCharacterProgress(class UClass** CharacterClass);
	int GetCharacterLevel(class UClass** CharacterClass);
	void CharacterSelected();
};


// Class FSD.ItemUpgradePreviewComponent
// 0x0020 (0x0118 - 0x00F8)
class UItemUpgradePreviewComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPreviewUpgradeChanged;                                  // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UItemUpgrade*                                PreviewUpgrade;                                           // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemUpgradePreviewComponent");
		return ptr;
	}


	void SetPreviewUpgrade(class UItemUpgrade** InUpgrade);
	void RefreshPreviewUpgrade();
	void ItemUpgradeDelegate__DelegateSignature(class UItemUpgrade** PreviewUpgrade);
};


// Class FSD.FSDPostProcessingActor
// 0x0020 (0x0350 - 0x0330)
class AFSDPostProcessingActor : public AActor
{
public:
	EPostProcessingType                                PostProcessingType;                                       // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET
	class UPostProcessComponent*                       PostProcessComponent;                                     // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FWeightedBlendables                         InitialBlendables;                                        // 0x0340(0x0010) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDPostProcessingActor");
		return ptr;
	}


	void STATIC_UnapplyPostProcessingBlendablesByType(class UObject** WorldContext, EPostProcessingType* Type);
	void STATIC_UnapplyPostProcessingBlendablesByID(class UObject** WorldContext, struct FName* InID);
	void STATIC_UnapplyPostProcessingBlendable(class UObject** WorldContext, EPostProcessingType* Type, TScriptInterface<class UBlendableInterface>* InBlendableObject);
	void STATIC_UnapplyAllPostProcessingBlendables(class UObject** WorldContext);
	void SetPostProcessManager(class APostProcessingManager** InManager);
	class UMaterialInstanceDynamic* STATIC_GetPostProcessingMaterialInstance(class UObject** WorldContext, class UMaterialInterface** Material);
	class UMaterialInstanceDynamic* STATIC_ApplyPostProcessingMaterial(class UObject** WorldContext, EPostProcessingType* Type, class UMaterialInterface** Material, float* InWeight, struct FName* InID);
	void STATIC_ApplyPostProcessingBlendable(class UObject** WorldContext, EPostProcessingType* Type, TScriptInterface<class UBlendableInterface>* InBlendableObject, float* InWeight, struct FName* InID);
};


// Class FSD.FSDSaveGame
// 0x0830 (0x0858 - 0x0028)
class UFSDSaveGame : public USaveGame
{
public:
	struct FScriptMulticastDelegate                    OnCreditsChanged;                                         // 0x0028(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSaveChanged;                                   // 0x0038(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterCanRetire;                                     // 0x0048(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterRetired;                                       // 0x0058(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerProgressChanged;                                  // 0x0068(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTutorialsReset;                                         // 0x0078(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPersonalMetricsChanged;                                 // 0x0088(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAnonymousMetricsChanged;                                // 0x0098(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUnlocked;                                           // 0x00A8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemPurchased;                                          // 0x00B8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUINotificationChange;                               // 0x00C8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	int                                                VersionNumber;                                            // 0x00D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUpgradeOverhaulMessageShown;                             // 0x00DC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnForgingXPChanged;                                       // 0x00E0(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceAmountChanged;                                  // 0x00F0(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinUnlocked;                                           // 0x0100(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0110(0x0010) MISSED OFFSET
	struct FDateTime                                   SaveSlotTimeStamp;                                        // 0x0120(0x0008) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnPerkPointsChanged;                                      // 0x0128(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FMissionStatSave                            MissionStatsSave;                                         // 0x0138(0x0018)
	struct FMilestoneSave                              Milestones;                                               // 0x0150(0x0010)
	struct FPerkClaimsSave                             OwnedPerks;                                               // 0x0160(0x0010)
	struct FCharacterPerksSave                         EquippedPerks;                                            // 0x0170(0x0010)
	TArray<struct FCharacterPerksSave>                 EquippedPerkLoadouts;                                     // 0x0180(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0190(0x0008) MISSED OFFSET
	struct FSchematicSave                              SchematicSave;                                            // 0x0198(0x0038)
	int                                                SaveCreatedInPatch;                                       // 0x01D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	struct FString                                     AnonymousID;                                              // 0x01D8(0x0010) (ZeroConstructor)
	int                                                PerkPoints;                                               // 0x01E8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               HasRecievedDiscordReward;                                 // 0x01EC(0x0001) (ZeroConstructor, IsPlainOldData)
	EFSDFaction                                        Faction;                                                  // 0x01ED(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x01EE(0x0002) MISSED OFFSET
	TArray<struct FGuid>                               UnLockedMissions;                                         // 0x01F0(0x0010) (ZeroConstructor)
	TMap<struct FGuid, struct FUnLockedMissionParameters> UnLockedMissionParameters;                                // 0x0200(0x0050) (ZeroConstructor)
	TArray<struct FGuid>                               UnLockedPlanetZones;                                      // 0x0250(0x0010) (ZeroConstructor)
	struct FCampaignSave                               CampaignSave;                                             // 0x0260(0x0048)
	struct FDeepDiveSave                               DeepDiveSave;                                             // 0x02A8(0x0070)
	TArray<struct FCharacterSave>                      CharacterSaves;                                           // 0x0318(0x0010) (ZeroConstructor)
	int                                                Credits;                                                  // 0x0328(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FForgingSave                                Forging;                                                  // 0x032C(0x0008)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	struct FDrinkSave                                  Drinks;                                                   // 0x0338(0x0058)
	TMap<struct FGuid, struct FItemUpgradeSelection>   ItemUpgradeSelections;                                    // 0x0390(0x0050) (ZeroConstructor)
	TArray<struct FUpgradeLoadout>                     ItemUpgradeLoadouts;                                      // 0x03E0(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               PurchasedItemUpgrades;                                    // 0x03F0(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               UnLockedItemUpgrades;                                     // 0x0400(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               UnlockedItems;                                            // 0x0410(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               OwnedItems;                                               // 0x0420(0x0010) (ZeroConstructor)
	TMap<struct FGuid, struct FItemNotificationInfo>   ItemsWithNotification;                                    // 0x0430(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0480(0x0050) UNKNOWN PROPERTY: SetProperty FSD.FSDSaveGame.SkinnableItems
	TMap<struct FGuid, struct FSkinList>               UnlockedItemSkins;                                        // 0x04D0(0x0050) (ZeroConstructor)
	TArray<class UVanityItem*>                         UnLockedVanityItems;                                      // 0x0520(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FGuid>                               UnLockedVanityItemIDs;                                    // 0x0530(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               HiddenUICategories;                                       // 0x0540(0x0010) (ZeroConstructor)
	int                                                LastCollectedCommunityRewardPeriodID;                     // 0x0550(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	struct FEventRewardSave                            EventRewardSave;                                          // 0x0558(0x0050)
	struct FItemUINotifications                        ItemUINotifications;                                      // 0x05A8(0x0068)
	struct FString                                     RejoinSessionId;                                          // 0x0610(0x0010) (ZeroConstructor)
	bool                                               FirstRejoinAttempt;                                       // 0x0620(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasOpenedDeepDiveTerminal;                               // 0x0621(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x6];                                       // 0x0622(0x0006) MISSED OFFSET
	struct FResourcesSave                              Resources;                                                // 0x0628(0x00A0)
	bool                                               FirstSession;                                             // 0x06C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x06C9(0x0007) MISSED OFFSET
	TArray<struct FWatchedTutorial>                    WatchedTutorials;                                         // 0x06D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FConsoleOptionsInSaveGame                   ConsoleOptions;                                           // 0x06E0(0x00D0)
	struct FOptionsInSaveGame                          WindowsOptions;                                           // 0x07B0(0x0008)
	bool                                               HasPlayedTutorial;                                        // 0x07B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HasPlayedIntroMessage;                                    // 0x07B9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HasSentSteamInfo;                                         // 0x07BA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasClaimedSteamGroupLoot;                                 // 0x07BB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBoscoAllowed;                                           // 0x07BC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HasRefundedUpgradeCostDifference;                         // 0x07BD(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               HasJoinedXboxClub;                                        // 0x07BE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasSeenAnalyticsPopUp;                                    // 0x07BF(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AllowAnalyticsTracking;                                   // 0x07C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AllowPersonalAnalyticsTracking;                           // 0x07C1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x07C2(0x0002) MISSED OFFSET
	float                                              TotalPlayTimeSeconds;                                     // 0x07C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<struct FGuid, int>                            SelectedLoadout;                                          // 0x07C8(0x0050) (ZeroConstructor)
	uint32_t                                           UserIdx;                                                  // 0x0818(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           CurrLoadoutIdx;                                           // 0x081C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           SaveToDiskCounter;                                        // 0x0820(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           BackupSaveIndex;                                          // 0x0824(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           ExternalBackupSaveIndex;                                  // 0x0828(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumberOfGamesPlayed;                                      // 0x082C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LastPlayedCharacter;                                      // 0x0830(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShowInfoScreen;                                           // 0x0838(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0839(0x0007) MISSED OFFSET
	struct FString                                     LastShownVersion;                                         // 0x0840(0x0010) (BlueprintVisible, ZeroConstructor)
	class UFSDGameInstance*                            FSDGameInstance;                                          // 0x0850(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDSaveGame");
		return ptr;
	}


	void TutorialsResetDelegate__DelegateSignature();
	bool TrySellResource(class UResourceData** Resource, int* amount, int* Price);
	bool TryDeductResources(TMap<class UResourceData*, int>* Resources);
	bool TryDeductCredits(int* amount);
	bool TryBuyResource(class UResourceData** Resource, int* amount, int* Price);
	void SkinSignature__DelegateSignature(class UItemSkin** Skin, class UItemID** ItemID);
	bool ShouldDisplayFirstSchematicMessage();
	bool SetPersonalAnalytics(bool* State);
	void SetHasSentSteamInfo();
	void SetHasJoinedXboxClub();
	void SetHasClaimSteamGroupLoot();
	void SetFaction(EFSDFaction* newFaction, bool* Reasign);
	void SetEquippedItem(EItemCategory* Category, class UPlayerCharacterID** PlayerId, class UClass** Item);
	void SetDiscordReward(bool* State);
	void SetCharacterLoadout(class UClass** CharacterClass, int* loadoutNumber);
	void SetBoscoAllowed(bool* aIsBoscoAllowed);
	bool SetAnonymousAnalytics(bool* State);
	void SaveToDisk();
	void RetirementSignature__DelegateSignature(class UClass** CharacterClass, int* RetirementCount);
	int RetireCharacter(class UPlayerCharacterID** characterID);
	void ResourceAmountChangedDelegate__DelegateSignature(class UResourceData** Resource, float* currentAmount);
	void ResetTutorials();
	void ResetRejoinSessionId();
	void RejoinAttempted();
	void RefreshLoadoutFromCharacter(class UClass** CharacterClass);
	bool RecievedDiscordReward();
	struct FString PromotedClassesString();
	void PlayerProgressChangedSignature__DelegateSignature(int* Rank, int* Stars);
	void PersonalMatricsChangedSignature__DelegateSignature(bool* AllowPersonalMetrics);
	void PerkPointsChangedSignature__DelegateSignature(int* PerkPoints, int* Change);
	void MarkRetirementRewardScreenSeen(class UPlayerCharacterID** characterID);
	void MarkFirstSchematicMessageSeen();
	void ItemUnlockedDelegate__DelegateSignature();
	void ItemUINotificationDelegate__DelegateSignature();
	bool IsObsolete();
	bool IsFirstRejoinAttempt();
	bool HasSeenRetirementRewardScreen();
	bool HasCharacterRetired(class UClass** CharacterClass);
	bool HasCharacterCompletedRetirementCampaign(class UClass** characerClass);
	bool STATIC_HasBackupWithMoreProgress(class UFSDGameInstance** GameInstance);
	bool HasAnyCharacterRetired();
	int GetTotalGamesPlayed();
	struct FDateTime GetSlotTimeStamp();
	struct FString GetSlotLoadedFrom();
	int GetSelectedLoadoutIndex(class UClass** CharacterClass);
	int GetResourceSellingPrice(class UResourceData** Resource, int* amount);
	int GetResourceBuyingPrice(class UResourceData** Resource, int* amount);
	float GetResourceAmount(class UResourceData** Resource);
	int GetRequiredXPForLevel(int* Level);
	struct FString GetRejoinSessionId();
	int GetPurchasableItemCount();
	int GetPlayerRetirementRank();
	int GetPlayerRank();
	int GetPerkPoints();
	bool GetHasSentSteamInfo();
	bool GetHasClaimedSteamGroupLoot();
	EFSDFaction GetFaction();
	class UClass* GetEquippedItem(EItemCategory* Category, class UPlayerCharacterID** PlayerId);
	int GetCredits();
	int GetClassLevel(class UClass** CharacterClass);
	int GetCharacterRetirementCount(struct FGuid* PlayerId);
	bool GetBoscoAllowed();
	TArray<class UFSDSaveGame*> STATIC_GetAllSavesFromDisk(class UFSDGameInstance** GameInstance);
	void ForgingXPDelegate__DelegateSignature(float* XP);
	bool DeductPerkPoints(int* amount);
	void CreditsChangedSignature__DelegateSignature(int* Credits);
	void CheckPromotionAchievementProgress(class UObject** WorldContext);
	void CharacterSignature__DelegateSignature(class UClass** CharacterClass);
	void CharacterProgressChangedSignature__DelegateSignature(class UClass** CharacterClass, int* Level, float* Progress);
	bool CanAfford(TMap<class UResourceData*, int>* Resources);
	void AnonymousMatricsChangedSignature__DelegateSignature(bool* AllowAnonymousMetrics);
	void AddPerkPoints(int* amount);
	void AddGamePlayed();
	int AddCredits(int* amount);
};


// Class FSD.OptionalUICategory
// 0x0038 (0x0068 - 0x0030)
class UOptionalUICategory : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGuid                                       Guid;                                                     // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FText                                       Description;                                              // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OptionalUICategory");
		return ptr;
	}


	void VisibilityChanged__DelegateSignature(class UOptionalUICategory** Category, bool* IsVisible);
	void SetVisible(class UObject** WorldContext, bool* IsCategoryVisible);
	bool IsVisible(class UObject** WorldContext);
};


// Class FSD.FSDSendToURL
// 0x0018 (0x0040 - 0x0028)
class UFSDSendToURL : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDSendToURL");
		return ptr;
	}

};


// Class FSD.FSDSessionUpdater
// 0x0058 (0x0080 - 0x0028)
class UFSDSessionUpdater : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnNewFSDSessionID;                                        // 0x0028(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0038(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDSessionUpdater");
		return ptr;
	}

};


// Class FSD.FSDFindSteamSessions
// 0x0028 (0x0050 - 0x0028)
class UFSDFindSteamSessions : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnFindResult;                                             // 0x0028(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0038(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDFindSteamSessions");
		return ptr;
	}

};


// Class FSD.FSDLookupSessionId
// 0x0058 (0x0080 - 0x0028)
class UFSDLookupSessionId : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0048(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDLookupSessionId");
		return ptr;
	}


	class UFSDLookupSessionId* STATIC_FSDLookupSessionId(class UObject** WorldContextObject, struct FString* sessionKey);
};


// Class FSD.FSDSkeletalMeshComponent
// 0x0000 (0x0BC0 - 0x0BC0)
class UFSDSkeletalMeshComponent : public USkeletalMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDSkeletalMeshComponent");
		return ptr;
	}

};


// Class FSD.FSDSteamUserStats
// 0x0010 (0x0108 - 0x00F8)
class UFSDSteamUserStats : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDSteamUserStats");
		return ptr;
	}

};


// Class FSD.FSDSteamUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDSteamUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDSteamUtils");
		return ptr;
	}


	bool STATIC_PlayerIsFollowingUsOnSteam();
	void STATIC_OpenURLInSteamBrowser(struct FString* URL);
	bool STATIC_IsSteamLoaded();
	bool STATIC_IsDev(class APlayerState** PlayerState);
	bool STATIC_HasDeluxeEdition();
	bool STATIC_HasContentCreatorEdition();
	struct FString STATIC_GetSteamRegion();
	struct FString STATIC_GetSteamLanguage();
	struct FString STATIC_GetSteamBranchString();
	ESteamBranch STATIC_GetSteamBranch();
	struct FString STATIC_GetPlayerSteamName();
	struct FString STATIC_GetPlayerSteamID();
};


// Class FSD.FSDXboxUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDXboxUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDXboxUtils");
		return ptr;
	}


	bool STATIC_ShowCheatTerminal();
};


// Class FSD.FSDOddishUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDOddishUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDOddishUtils");
		return ptr;
	}


	bool STATIC_IsOddishLoaded();
	struct FString STATIC_GetOddishUserId();
};


// Class FSD.FSDLevelLoadingPersistentWidget
// 0x0000 (0x0230 - 0x0230)
class UFSDLevelLoadingPersistentWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDLevelLoadingPersistentWidget");
		return ptr;
	}

};


// Class FSD.ItemRefundList
// 0x0068 (0x0098 - 0x0030)
class UItemRefundList : public UDataAsset
{
public:
	bool                                               ResetListOnSave;                                          // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x10];                                      // 0x0031(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.ItemRefundList.Items
	TMap<struct FGuid, struct FItemRefundListItem>     ItemsToRefund;                                            // 0x0048(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemRefundList");
		return ptr;
	}

};


// Class FSD.FSDLabelWidget
// 0x0000 (0x02A0 - 0x02A0)
class UFSDLabelWidget : public UTextBlock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDLabelWidget");
		return ptr;
	}


	void SetWrapTextAt(float* WrapAt);
	void SetWrappingPolicy(ETextWrappingPolicy* Policy);
	void SetMargin(struct FMargin* NewMargin);
	void SetLineHeightPercentage(float* percentage);
	void SetFontSize(int* Size);
	int GetFontSize();
};


// Class FSD.FSDWidgetBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFSDWidgetBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDWidgetBlueprintLibrary");
		return ptr;
	}


	void WidgetDelegate__DelegateSignature(class UUserWidget** Widget);
	void WidgetCreatedOrReusedDelegate__DelegateSignature(bool* WasCreated, class UUserWidget** Widget, int* ActiveIndex);
	bool STATIC_TextSmallerThan(struct FText* Text1, struct FText* Text2);
	bool STATIC_TextGreaterThan(struct FText* Text1, struct FText* Text2);
	void STATIC_SimpleBox(struct FVector2D* Position, struct FVector2D* Size, struct FLinearColor* Tint, struct FPaintContext* Context);
	void STATIC_SetMousePosition(class UObject** WorldContextObject, int* X, int* Y);
	void STATIC_SetChildrenVisibility(class UPanelWidget** Panel, ESlateVisibility* Visibility, int* StartIndex, class UClass** OptionalClassFilter);
	void STATIC_PrintStrings(class UObject** WorldContextObject, TArray<struct FString>* InStrings, bool* bPrintToScreen, bool* bPrintToLog, struct FLinearColor* TextColor, float* Duration);
	struct FString STATIC_MidIgnoringWhiteSpace(struct FString* Source, int* Index, int* count);
	void STATIC_Line(struct FVector2D* Pos1, struct FVector2D* Pos2, struct FLinearColor* Tint, struct FPaintContext* Context);
	int STATIC_LengthIgnoringWhitespace(struct FString* Source);
	bool STATIC_IsWindowsPlatform(class UObject** WorldContextObject);
	bool STATIC_IsWhiteSpaceAt(struct FString* Source, int* Index);
	bool STATIC_IsWhiteSpace(struct FString* Source);
	bool STATIC_IsHUDVisible(class UObject** WorldContextObject);
	struct FString STATIC_IntToRomanNumeral(int* Value);
	bool STATIC_HasAnyVisibleChildren(class UPanelWidget** Panel, int* StartIndex, class UClass** OptionalClassFilter);
	struct FString STATIC_GetShortTimeString(int* TotalSeconds, bool* BlinkDelimiter);
	class AFSDPlayerState* STATIC_GetOwningFSDPlayerState(class UWidget** Target);
	struct FText STATIC_GetKeyName(struct FKey* Key);
	class UWidget* STATIC_GetFocusedWidget(class UObject** WorldContextObject, class APlayerController** Controller);
	struct FVector2D STATIC_GetDrawSize(struct FPaintContext* InContext);
	class UFSDCheatManager* STATIC_GetCheatManager(class UObject** WorldContextObject);
	class UWidget* STATIC_FindChildWidget(class UClass** WidgetClass, bool* SearchChildren, class UPanelWidget** ParentWidget);
	class UVerticalBox* STATIC_CreateVerticalBox(class UObject** WorldContext);
	class UTextBlock* STATIC_CreateTextBlock(class UObject** WorldContext, struct FText* Text, struct FSlateFontInfo* Font, TEnumAsByte<ETextJustify>* Justification, struct FLinearColor* Color, bool* WrapText);
	class USpacer* STATIC_CreateSpacer(class UObject** WorldContext, struct FVector2D* Size);
	TArray<class UUserWidget*> STATIC_CreateOrReuseChildrenWithCallbackEx(class UPanelWidget** Panel, int* count, class UClass** WidgetClass, struct FScriptDelegate* OnCreatedOrReused, struct FScriptDelegate* OnCollapsed);
	TArray<class UUserWidget*> STATIC_CreateOrReuseChildrenWithCallback(class UPanelWidget** Panel, int* count, class UClass** WidgetClass, struct FScriptDelegate* OnCreatedOrReused);
	TArray<class UUserWidget*> STATIC_CreateOrReuseChildren(class UPanelWidget** Panel, int* count, class UClass** WidgetClass);
	class UImage* STATIC_CreateImageSized(class UObject** WorldContext, class UTexture2D** Texture, struct FLinearColor* Tint, struct FVector2D* Size);
	class UImage* STATIC_CreateImage(class UObject** WorldContext, class UTexture2D** Texture, struct FLinearColor* Tint, bool* AutoSize);
	class UHorizontalBox* STATIC_CreateHorizontalBox(class UObject** WorldContext);
	void STATIC_Box(struct FVector2D* Position, struct FVector2D* Size, struct FSlateBrush* Brush, struct FLinearColor* Tint, struct FPaintContext* Context);
	class UWidget* STATIC_AddChildToVerticalBoxEx(class UVerticalBox** VerticalBox, class UWidget** Widget, TEnumAsByte<EHorizontalAlignment>* HorizontalAlignment, TEnumAsByte<EVerticalAlignment>* VerticalAlignment, float* Size, struct FMargin* Padding, class UVerticalBoxSlot** OutSlot, class UVerticalBox** OutVerticalBox);
	class UWidget* STATIC_AddChildToHorizontalBoxEx(class UHorizontalBox** HorizontalBox, class UWidget** Widget, TEnumAsByte<EHorizontalAlignment>* HorizontalAlignment, TEnumAsByte<EVerticalAlignment>* VerticalAlignment, float* Size, struct FMargin* Padding, class UHorizontalBoxSlot** OutSlot, class UHorizontalBox** OutHorizontalBox);
};


// Class FSD.FSDWidgetEffectsComponent
// 0x0050 (0x0148 - 0x00F8)
class UFSDWidgetEffectsComponent : public UActorComponent
{
public:
	TArray<struct FWidgetPing>                         WidgetPings;                                              // 0x00F8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FWidgetFade>                         WidgetFades;                                              // 0x0108(0x0010) (ZeroConstructor, Transient)
	TArray<struct FWidgetTextCounter>                  WidgetTextCounters;                                       // 0x0118(0x0010) (ZeroConstructor, Transient)
	TArray<struct FCustomCounter>                      CustomCounters;                                           // 0x0128(0x0010) (ZeroConstructor, Transient)
	TArray<struct FWidgetMover>                        WidgetMovers;                                             // 0x0138(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDWidgetEffectsComponent");
		return ptr;
	}


	void STATIC_StartTextCounter(class UObject** WorldContext, float* Start, float* End, float* Duration, int* MaxDigits, float* StartDelay, class UTextBlock** Widget);
	void STATIC_StartCounter(class UObject** WorldContext, class UObject** Owner, float* Start, float* End, float* Duration, struct FScriptDelegate* OnCount, float* StartDelay);
	void STATIC_PingWidget(class UObject** WorldContext, class UWidget** Widget, float* amount, float* Duration, EPingType* PingType, float* StartDelay);
	void STATIC_MoveWidget(class UObject** WorldContext, class UUserWidget** Widget, struct FVector2D* Start, struct FVector2D* End, float* Duration, EMoveType* MoveType, float* StartDelay);
	void STATIC_MoveOutWidget(class UObject** WorldContext, class UUserWidget** Widget, struct FVector2D* MoveToOffset, float* Duration, float* StartDelay);
	void STATIC_MoveInWidget(class UObject** WorldContext, class UUserWidget** Widget, struct FVector2D* MoveFromOffset, float* Duration, float* StartDelay);
	void STATIC_FadeWidget(class UObject** WorldContext, class UUserWidget** Widget, float* StartFade, float* EndFade, float* Duration, float* StartDelay);
	void STATIC_FadeOutWidget(class UObject** WorldContext, class UUserWidget** Widget, float* Duration, float* StartDelay);
	void STATIC_FadeInWidget(class UObject** WorldContext, class UUserWidget** Widget, float* Duration, float* StartDelay);
};


// Class FSD.StatusEffectSettings
// 0x0008 (0x0038 - 0x0030)
class UStatusEffectSettings : public UDataAsset
{
public:
	class UClass*                                      Frozen;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectSettings");
		return ptr;
	}

};


// Class FSD.EnemySettings
// 0x0018 (0x0048 - 0x0030)
class UEnemySettings : public UDataAsset
{
public:
	TArray<class UEnemyDescriptor*>                    EnemiesAllowedInWaves;                                    // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FRandRange                                  EnemyWaveRange;                                           // 0x0040(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemySettings");
		return ptr;
	}

};


// Class FSD.DanceSettings
// 0x0010 (0x0040 - 0x0030)
class UDanceSettings : public UDataAsset
{
public:
	TArray<class UAnimSequence*>                       DanceMoves;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DanceSettings");
		return ptr;
	}

};


// Class FSD.UpgradeSettings
// 0x0110 (0x0140 - 0x0030)
class UUpgradeSettings : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.UpgradeSettings.UpgradesToCostRefund
	TArray<int>                                        ClassAUpgradeCosts;                                       // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        ClassBUpgradeCosts;                                       // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        GearAUpgradeCosts;                                        // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        GearBUpgradeCosts;                                        // 0x0070(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        ArmorUpgradeCosts;                                        // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        PickaxeUpgradeCosts;                                      // 0x0090(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        ClassBoscoUpgradeCosts;                                   // 0x00A0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ClassAResourceCosts;                                      // 0x00B0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ClassBResourceCosts;                                      // 0x00C0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    GearAResourceCosts;                                       // 0x00D0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    GearBResourceCosts;                                       // 0x00E0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ArmorResourceCosts;                                       // 0x00F0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    PickaxeResourceCosts;                                     // 0x0100(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ClassBoscoResourceCosts;                                  // 0x0110(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    OldClassAResourceCosts;                                   // 0x0120(0x0010) (Edit, ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    OldClassBResourceCosts;                                   // 0x0130(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UpgradeSettings");
		return ptr;
	}


	void STATIC_AddUpgradesFromItems(TArray<class UClass*>* Items);
};


// Class FSD.AfflictionSettings
// 0x00B0 (0x00E0 - 0x0030)
class UAfflictionSettings : public UDataAsset
{
public:
	TArray<struct FRuntimeFloatCurve>                  IceScalers;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<class UStaticMesh*>                         IceMeshes;                                                // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FRandRange                                  ScaleDelay;                                               // 0x0050(0x0008) (Edit)
	class USoundCue*                                   FreezeSound;                                              // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   IceBreakSound;                                            // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   BurningSound;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EletrocutedSound;                                         // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPawnAffliction*                             StaggerAffliction;                                        // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UParticleSystem*>                     FreezeParticles;                                          // 0x0080(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<class UParticleSystem*>                     IceBreakParticles;                                        // 0x0090(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<class UParticleSystem*>                     BurningParticles;                                         // 0x00A0(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<class UParticleSystem*>                     EletrocutedParticles;                                     // 0x00B0(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<class UParticleSystem*>                     ExplodingParticles;                                       // 0x00C0(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<class USoundCue*>                           ExplodingSounds;                                          // 0x00D0(0x0010) (Edit, EditFixedSize, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AfflictionSettings");
		return ptr;
	}

};


// Class FSD.CommunityGoalSettings
// 0x0028 (0x0058 - 0x0030)
class UCommunityGoalSettings : public UDataAsset
{
public:
	TArray<class UCommunityGoalFaction*>               ActiveCommunityFactions;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UCommunityGoal*>                      ActiveCommunityGoals;                                     // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UCommunityGoal*                              DSMUGoal;                                                 // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunityGoalSettings");
		return ptr;
	}


	class UCommunityGoal* GetGoal(ECommunityGoalIndex* Goal);
	class UCommunityGoal* FindGoal(struct FString* Goal);
};


// Class FSD.GameData
// 0x08F8 (0x0920 - 0x0028)
class UGameData : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.GameData.BarrelClass
	struct FGVisibilityGroups                          VisibilityGroups;                                         // 0x0050(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UDanceSettings*                              DanceSettings;                                            // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGameAnimationSettings*                      AnimationSettings;                                        // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UEnemySettings*                              EnemySettings;                                            // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDamageSettings*                             DamageSettings;                                           // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPlanetZoneSetup*                            ZoneSettings;                                             // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTreasureSettings*                           TreasureSettings;                                         // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDrinkSettings*                              DrinkSettings;                                            // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UUpgradeSettings*                            UpgradeSettings;                                          // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USpawnSettings*                              SpawnSettings;                                            // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDeepDiveSettings*                           DeepDiveSettings;                                         // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UEncounterSettings*                          EncounterSettings;                                        // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UForginSettings*                             ForgingSettings;                                          // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USchematicSettings*                          SchematicSettings;                                        // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UItemSkinSettings*                           SkinSettings;                                             // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USpecialEventSettings*                       SpecialEventSettings;                                     // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UProceduralSettings*                         ProceduralSettings;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFSDTagSettings*                             TagSettings;                                              // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UVictoryPoseSettings*                        VictoryPoseSettings;                                      // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAfflictionSettings*                         AfflictionSettings;                                       // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCommunityGoalSettings*                      CommunityGoalSettings;                                    // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGDMissionStats                             MissionStats;                                             // 0x0148(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDMilestones                               Milestones;                                               // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDPerks                                    perks;                                                    // 0x0248(0x0020) (Edit)
	struct FGDBarMenu                                  BarMenu;                                                  // 0x0268(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDItemCategoryIDs                          ItemCategoryIDs;                                          // 0x0278(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UTexture2D*>                          LoadoutIconList;                                          // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FGDDamageClasses                            DamageClasses;                                            // 0x02B8(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGDStats                                    Stats;                                                    // 0x02F8(0x00F0) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGDResources                                Resources;                                                // 0x03E8(0x00D8) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDTerrainTypes                             TerrainTypes;                                             // 0x04C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDGameStatsTracking                        GameStatsTracking;                                        // 0x0510(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDAudio                                    Audio;                                                    // 0x0530(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGDDifficulty                               Difficulty;                                               // 0x0570(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UStatusEffectSettings*                       StatusEffects;                                            // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGDCharacterRetirement                      Retirement;                                               // 0x0588(0x00C0) (Edit)
	struct FGDPlayerAndCharacterProgression            PlayerAndCharacterProgression;                            // 0x0648(0x00A0) (Edit, EditConst)
	class UCharacterSettings*                          CharacterSettings;                                        // 0x06E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAchievementList*                            Achievements;                                             // 0x06F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  SchematicGATable;                                         // 0x06F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  EnemySpawnParamsTable;                                    // 0x0700(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMissionTemplate*>                    TestMissions;                                             // 0x0708(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0718(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.GameData.TestBiome
	class UGlobalMissionSetup*                         MissionSetup;                                             // 0x0740(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0748(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.GameData.CampaignManagerClass
	class UPlayerCharacterID*                          BoscoID;                                                  // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UPlayerCharacterID*, class UInventoryList*> InventoryLists;                                           // 0x0778(0x0050) (Edit, ZeroConstructor)
	class UBiome*                                      DefaultBiome;                                             // 0x07C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FText>                               GenericBiomeQuotes;                                       // 0x07D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UMissionTemplate*                            DefaultMission;                                           // 0x07E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CaveGeneratorPLSClass;                                    // 0x07E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGlobalMissionParameters*                    DefaultMissionParameters;                                 // 0x07F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UItemRefundList*>                     ItemRefunds;                                              // 0x07F8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0808(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.GameData.DefaultCharacter
	struct FGameplayTag                                XBoxExcludeRoomTag;                                       // 0x0830(0x0008) (Edit)
	unsigned char                                      UnknownData04[0xE8];                                      // 0x0838(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameData");
		return ptr;
	}


	void UnloadPreloadedAssets();
	bool IsPerkTierUnLocked(class UObject** WorldContext, int* Tier);
	bool IsCheatConsolesEnabled();
	int GetRequiredPerkClaimsForTier(int* Tier);
	TArray<class UClass*> GetRankedHeroClasses();
	struct FText GetPlayerRankName(int* Rank);
	class UClass* GetPlayerClassFromID(class UPlayerCharacterID** ID);
	class UPlayerCharacterID* GetPlayerCharacterID(struct FGuid* ID);
	void GetPerkTierState(class UObject** WorldContext, int* Tier, bool* TierUnLocked, int* NextRequiredCount, int* NextProgressCount);
	TArray<class UPerkAsset*> GetOwnedPerks(class UObject** WorldContext);
	class UInventoryList* GetInventoryList(class UPlayerCharacterID** characterID);
	int GetHighestPerkTier();
	class UDifficultySetting* GetDifficultySetting(int* Index);
	int GetDifficultyIndex(class UDifficultySetting** Difficulty);
	class UClass* GetDefaultCharacter();
	struct FRetirementCostItem GetCharacterRetirementCost(class UObject** WorldContext, class UPlayerCharacterID** ID);
	TArray<class UPerkAsset*> GetCharacterNonEquippedPerks(class UObject** WorldContext, class UClass** CharacterClass);
	TArray<class UPerkAsset*> GetCharacterEquippedPerks(class UObject** WorldContext, class UClass** CharacterClass);
	TArray<class UDrinkableDataAsset*> GetBarDrinkables(class UObject** WorldContext, bool* IncludeDailySpecial, bool* includeNotUnlocked, bool* includePlayerRankTooLow);
	class UDrinkableDataAsset* GetBarDailySpecial(class UObject** WorldContext);
	TArray<class UPerkAsset*> GetAvailablePerks();
	int GetAmountOfPurchasedPerks(class UObject** WorldContext);
	TArray<class UHUDVisibilityGroup*> GetAllVisibilityGroups();
	TArray<class UMissionStat*> GetAllMissionStats();
	TArray<class UMissionStat*> GetAllInfirmaryStats();
	int CalculateClaimablePerkPoints(class UObject** WorldContext);
};


// Class FSD.DLCBase
// 0x0000 (0x0030 - 0x0030)
class UDLCBase : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DLCBase");
		return ptr;
	}

};


// Class FSD.GameDLC
// 0x0038 (0x0068 - 0x0030)
class UGameDLC : public UDLCBase
{
public:
	int                                                SteamID;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     OddishID;                                                 // 0x0038(0x0010) (Edit, ZeroConstructor)
	struct FString                                     XBoxDLCName;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     UWPStoreID;                                               // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameDLC");
		return ptr;
	}

};


// Class FSD.TimedDLC
// 0x0010 (0x0040 - 0x0030)
class UTimedDLC : public UDLCBase
{
public:
	struct FDateTime                                   StartDate;                                                // 0x0030(0x0008) (Edit, ZeroConstructor)
	struct FDateTime                                   EndDate;                                                  // 0x0038(0x0008) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TimedDLC");
		return ptr;
	}

};


// Class FSD.AlwaysLockedDLC
// 0x0000 (0x0030 - 0x0030)
class UAlwaysLockedDLC : public UDLCBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AlwaysLockedDLC");
		return ptr;
	}

};


// Class FSD.PlatformExclusiveDLC
// 0x0008 (0x0038 - 0x0030)
class UPlatformExclusiveDLC : public UDLCBase
{
public:
	EFSDTargetPlatform                                 Platform;                                                 // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlatformExclusiveDLC");
		return ptr;
	}

};


// Class FSD.AndDLC
// 0x0010 (0x0040 - 0x0030)
class UAndDLC : public UDLCBase
{
public:
	TArray<class UDLCBase*>                            DLCs;                                                     // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AndDLC");
		return ptr;
	}

};


// Class FSD.OrDLC
// 0x0010 (0x0040 - 0x0030)
class UOrDLC : public UDLCBase
{
public:
	TArray<class UDLCBase*>                            DLCs;                                                     // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OrDLC");
		return ptr;
	}

};


// Class FSD.NotDLC
// 0x0008 (0x0038 - 0x0030)
class UNotDLC : public UDLCBase
{
public:
	class UDLCBase*                                    DLC;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NotDLC");
		return ptr;
	}

};


// Class FSD.EventRewardFrame
// 0x0030 (0x0360 - 0x0330)
class AEventRewardFrame : public AActor
{
public:
	class USpecialEventUsableComponent*                EventUsable;                                              // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class AEventRewardDispenser*>               Dispensers;                                               // 0x0338(0x0010) (ZeroConstructor, Transient)
	bool                                               keyInserted;                                              // 0x0348(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0349(0x0007) MISSED OFFSET
	TArray<struct FString>                             EventPlayerIDs;                                           // 0x0350(0x0010) (Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventRewardFrame");
		return ptr;
	}


	void SetKeyInserted(bool* keyInserted);
	void SetDispenseRewards(bool* dispensRewards);
	void RegisterDispenser(class AEventRewardDispenser** Dispenser);
	bool GetDispensRewards();
};


// Class FSD.EventRewardDispenser
// 0x0040 (0x0370 - 0x0330)
class AEventRewardDispenser : public AActor
{
public:
	struct FUniqueNetIdRepl                            PlayerId;                                                 // 0x0330(0x0028) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	class AEventRewardFrame*                           DispenserFrame;                                           // 0x0358(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               PoweredUp;                                                // 0x0360(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               IsActivated;                                              // 0x0361(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0362(0x0006) MISSED OFFSET
	class USchematic*                                  SelectedReward;                                           // 0x0368(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventRewardDispenser");
		return ptr;
	}


	void SetSelectedReward(class USchematic** InReward);
	bool PowerUp(class APlayerCharacter** InPlayerCharacter);
	void OnRewardSelected();
	void OnRep_SelectedReward();
	void OnRep_PoweredUp();
	void OnRep_PlayerId();
	void OnRep_IsActivated();
	void OnPoweredUp();
	void OnOwnerAssigned();
	void OnOpenDispenser();
	bool IsOwningPlayer(class APlayerCharacter** PlayerCharacter);
	class APlayerCharacter* GetPlayerCharacter();
	class AFSDPlayerState* GetPlayer();
};


// Class FSD.EventRewardType
// 0x0098 (0x00C8 - 0x0030)
class UEventRewardType : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.EventRewardType.IconFront
	unsigned char                                      UnknownData01[0x28];                                      // 0x0070(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.EventRewardType.IconBack
	struct FLinearColor                                IconFrontTint;                                            // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconBackTint;                                             // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BackgroundTint;                                           // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventRewardType");
		return ptr;
	}

};


// Class FSD.EventStarterButton
// 0x0028 (0x0358 - 0x0330)
class AEventStarterButton : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USingleUsableComponent*                      Usable;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBootupEvent;                                            // 0x0340(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0350(0x0004) MISSED OFFSET
	bool                                               Booted;                                                   // 0x0354(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsOpenForUse;                                             // 0x0355(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsEventActive;                                            // 0x0356(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0357(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventStarterButton");
		return ptr;
	}


	void SetIsEventActive(bool* IsEventActive);
	void OnUseProgress(float* Progress);
	void OnRep_OpenForUse();
	void OnRep_Booted();
	void OnOpenedForUse(bool* wasOpened);
	void OnBooted();
	void CloseForUse(class APlayerCharacter** user);
	void BootUpEvent();
};


// Class FSD.GameEventAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UGameEventAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameEventAnimInstance");
		return ptr;
	}

};


// Class FSD.EventStarterAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UEventStarterAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventStarterAnimInstance");
		return ptr;
	}

};


// Class FSD.CoreInfuserAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UCoreInfuserAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CoreInfuserAnimInstance");
		return ptr;
	}


	void OnRewardSelected();
};


// Class FSD.CoreInfuserPlatformAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UCoreInfuserPlatformAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CoreInfuserPlatformAnimInstance");
		return ptr;
	}

};


// Class FSD.EventParticipant
// 0x0000 (0x0028 - 0x0028)
class UEventParticipant : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventParticipant");
		return ptr;
	}


	bool SetupEvent(class AGameEvent** GameEvent);
	void OnEventTriggered();
	void OnEventProgress(float* Progress);
	void OnEventOpened();
	void OnEventFinished(bool* eventSuccess);
	bool AdvanceOneObjective();
	bool AddEventProgress(float* Progress);
};


// Class FSD.GameAnimationSettings
// 0x0000 (0x0030 - 0x0030)
class UGameAnimationSettings : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameAnimationSettings");
		return ptr;
	}

};


// Class FSD.GameFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GameFunctionLibrary");
		return ptr;
	}


	void STATIC_SpawnOrUpdateAudio2D(class UObject** WorldContext, class USoundBase** Sound, float* VolumeMultiplier, float* PitchMultiplier, struct FName* FloatParamName, float* FloatParam, class UAudioComponent** AudioComponent);
	void STATIC_SetUsePushToTalk(bool* enable);
	void STATIC_SetGlobalGravityZ(class UObject** WorldContextObject, float* GravityZ);
	void STATIC_SetGlobalGravityScale(class UObject** WorldContextObject, float* GravityScale);
	bool STATIC_IsWorldTickEnabled(class UObject** WorldContextObject);
	bool STATIC_IsPlayingOffline(class UObject** WorldContextObject);
	bool STATIC_IsPlayInEditor(class UObject** WorldContextObject);
	class UWindowManager* STATIC_GetWindowManager(class UObject** WorldContextObject);
	bool STATIC_GetUsePushToTalk();
	struct FString STATIC_GetProjectVersion();
	class UMixerWrapper* STATIC_GetMixerWrapper(class UObject** WorldContextObject);
	struct FString STATIC_GetMajorProjectVersion();
	class APlayerCharacter* STATIC_GetLocalPlayerCharacter(class UObject** WorldContext);
	class UGoogleAnalyticsWrapper* STATIC_GetGoogleAnalyticsWrapper(class UObject** WorldContextObject);
	float STATIC_GetGlobalGravityZ(class UObject** WorldContextObject);
	class AFSDGameModeSpaceRig* STATIC_GetFSDSRGameMode(class UObject** WorldContextObject);
	class UFSDSaveGame* STATIC_GetFSDSaveGame(class UObject** WorldContextObject);
	class AFSDGameState* STATIC_GetFSDGameState(class UObject** WorldContextObject);
	class AFSDGameMode* STATIC_GetFSDGameMode(class UObject** WorldContextObject);
	class UFSDGameInstance* STATIC_GetFSDGameInstance(class UObject** WorldContextObject);
	class UGameData* STATIC_GetFSDGameData();
	class UDiscordWrapper* STATIC_GetDiscordWrapper(class UObject** WorldContextObject);
	class UDeepDiveManager* STATIC_GetDeepDiveManager(class UObject** WorldContextObject);
	class ADeepCSGWorld* STATIC_GetCSGWorld(class UObject** WorldContextObject);
	class UCommunityGoalWrapper* STATIC_GetCommunityGoalWrapper(class UObject** WorldContextObject);
	int STATIC_GetChangelist();
	class UCampaignManager* STATIC_GetCampaingManager(class UObject** WorldContextObject);
};


// Class FSD.FSDGameplayStatics
// 0x0000 (0x0028 - 0x0028)
class UFSDGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDGameplayStatics");
		return ptr;
	}


	class UParticleSystemComponent* STATIC_SpawnScaledEmitterAtLocation(class UObject** WorldContextObject, struct FScaledEffect* ScaledEffect, struct FVector* Location, struct FRotator* Rotation, bool* bAutoDestroy);
};


// Class FSD.ResourceBasedObjective
// 0x0000 (0x0188 - 0x0188)
class UResourceBasedObjective : public UObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceBasedObjective");
		return ptr;
	}

};


// Class FSD.GatherGemsObjective
// 0x0018 (0x01A0 - 0x0188)
class UGatherGemsObjective : public UResourceBasedObjective
{
public:
	int                                                GemsRequired;                                             // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GemsSpawnedModifier;                                      // 0x018C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GemsCollected;                                            // 0x0190(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	class UGemResourceData*                            GemResource;                                              // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GatherGemsObjective");
		return ptr;
	}


	void OnResourceChanged(class UCappedResource** CappedResource, float* amount);
	void OnRep_GemsCollected(int* prevAmount);
};


// Class FSD.GatheItemsObjective
// 0x0018 (0x01A0 - 0x0188)
class UGatheItemsObjective : public UResourceBasedObjective
{
public:
	int                                                ItemsRequired;                                            // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemsSpawnedModifier;                                     // 0x018C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemsCollected;                                           // 0x0190(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	class UCollectableResourceData*                    ItemResource;                                             // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GatheItemsObjective");
		return ptr;
	}


	void OnResourceChanged(class UCappedResource** CappedResource, float* amount);
	void OnRep_ItemsCollected(int* prevAmount);
};


// Class FSD.CarriableItem
// 0x0008 (0x0338 - 0x0330)
class ACarriableItem : public AActor
{
public:
	bool                                               StrictDeposit;                                            // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CarriableItem");
		return ptr;
	}


	void Throw(struct FVector* force);
	void Receive_OnDeposited();
};


// Class FSD.ResourcePouch
// 0x0028 (0x0360 - 0x0338)
class AResourcePouch : public ACarriableItem
{
public:
	class UCarriableInstantUsable*                     Usable;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundCue*                                   ImpactGroundSound;                                        // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0348(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourcePouch");
		return ptr;
	}


	void ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit);
};


// Class FSD.GemTracker
// 0x0008 (0x0100 - 0x00F8)
class UGemTracker : public UActorComponent
{
public:
	struct FName                                       TrackName;                                                // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GemTracker");
		return ptr;
	}

};


// Class FSD.GemProximityTracker
// 0x0020 (0x0118 - 0x00F8)
class UGemProximityTracker : public UActorComponent
{
public:
	TArray<TWeakObjectPtr<class UGemTracker>>          Trackers;                                                 // 0x00F8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<struct FTrackPositionList>                  TrackerLists;                                             // 0x0108(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GemProximityTracker");
		return ptr;
	}

};


// Class FSD.GemResourceData
// 0x0060 (0x0148 - 0x00E8)
class UGemResourceData : public UResourceData
{
public:
	class UDebrisPositioning*                          DebrisPositioning;                                        // 0x00E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               CheckIfCompletelyCoveredByTerrain;                        // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	struct FIRandRange                                 GemValue;                                                 // 0x00F4(0x0008) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class UGemResourceCreator*                         ResourceCreator;                                          // 0x0100(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCaveInfluencer*                             CaveInfluencer;                                           // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InfluencerRange;                                          // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	TArray<class UDebrisBase*>                         GemDebris;                                                // 0x0118(0x0010) (Edit, ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0128(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.GemResourceData.GemClasses
	TArray<class UClass*>                              GemClassesLoaded;                                         // 0x0138(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GemResourceData");
		return ptr;
	}


	int STATIC_GetCollectedGemsCreditValue(class AFSDGameState** GameState);
	int STATIC_GetCollectedGemsAmount(class AFSDGameState** GameState);
};


// Class FSD.GemResourceCreator
// 0x0010 (0x0040 - 0x0030)
class UGemResourceCreator : public UDataAsset
{
public:
	class UGemResourceData*                            ResourceData;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               CheckIfFreeSpaceAbove;                                    // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                SearchSize;                                               // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GemResourceCreator");
		return ptr;
	}

};


// Class FSD.RandomGemResourceCreator
// 0x0008 (0x0048 - 0x0040)
class URandomGemResourceCreator : public UGemResourceCreator
{
public:
	class UCurveFloat*                                 PlacementDistanceProbabilityCurve;                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomGemResourceCreator");
		return ptr;
	}

};


// Class FSD.DistributedGemResourceCreator
// 0x0008 (0x0048 - 0x0040)
class UDistributedGemResourceCreator : public UGemResourceCreator
{
public:
	class UCurveFloat*                                 PlacementDistanceProbabilityCurve;                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DistributedGemResourceCreator");
		return ptr;
	}

};


// Class FSD.GeneratedMission
// 0x00F0 (0x0118 - 0x0028)
class UGeneratedMission : public UObject
{
public:
	class UBiome*                                      Biome;                                                    // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                Seed;                                                     // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                GlobalSeed;                                               // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                missionIndex;                                             // 0x0038(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UMissionTemplate*                            Template;                                                 // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       MissionName;                                              // 0x0048(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient)
	class UClass*                                      PrimaryObjective;                                         // 0x0060(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      SecondaryObjective;                                       // 0x0068(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TMap<class UClass*, struct FGMMutatorItem>         Mutators;                                                 // 0x0070(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UMissionWarning*                             MissionWarning;                                           // 0x00C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMissionMutator*                             MissionMutator;                                           // 0x00C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMissionComplexity*                          ComplexityLimit;                                          // 0x00D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMissionDuration*                            DurationLimit;                                            // 0x00D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      MissionDNA;                                               // 0x00E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EMissionStructure                                  MissionStructure;                                         // 0x00E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x00E9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.GeneratedMission.LoaderLevelSequence

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GeneratedMission");
		return ptr;
	}


	void Recieve_SetupPLS(class AProceduralSetup** pls);
	bool IsLocked(class AFSDPlayerController** Player);
	class UClass* GetPLS();
	TArray<class UMutator*> GetMutators(class UClass** mutatorClass);
	float GetMissionScale();
	class UMissionDNA* GetMissionDNA();
	class AProceduralSetup* CreatePLS(int* Seed);
	bool AreMissionsEqual(class UGeneratedMission** Other);
};


// Class FSD.PLSTester
// 0x0068 (0x0398 - 0x0330)
class APLSTester : public AActor
{
public:
	int                                                PLSSeed;                                                  // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MissionSeed;                                              // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionComplexity*                          LimitComplexity;                                          // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionDuration*                            LimitDuration;                                            // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionMutator*                             Mutator;                                                  // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionWarning*                             Warning;                                                  // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBiome*                                      Biome;                                                    // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionTemplate*                            MissionTemplate;                                          // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMissionTemplate*                            CustomMissionTemplate;                                    // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDifficultySetting*                          OverrideDifficulty;                                       // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SimulatePlayerCount;                                      // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	struct FText                                       CustomMissionName;                                        // 0x0380(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PLSTester");
		return ptr;
	}

};


// Class FSD.Gem
// 0x0018 (0x0350 - 0x0338)
class AGem : public ACarriableItem
{
public:
	class UCarriableInstantUsable*                     Usable;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UResourceData*                               ResourceType;                                             // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ResourceAmount;                                           // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               hasBeenReleased;                                          // 0x034C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x034D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Gem");
		return ptr;
	}


	void SetHasBeenReleased(bool* hasBeenReleased);
	bool GetHasBeenReleased();
};


// Class FSD.GetFriendsListBlueprintCallProxy
// 0x0048 (0x0070 - 0x0028)
class UGetFriendsListBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0050(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GetFriendsListBlueprintCallProxy");
		return ptr;
	}


	class UGetFriendsListBlueprintCallProxy* STATIC_GetFriendsList(class UObject** WorldContextObject, struct FString* ListName);
};


// Class FSD.GlowPlant
// 0x0070 (0x03A0 - 0x0330)
class AGlowPlant : public AActor
{
public:
	class UStaticMeshComponent*                        TrunkMesh;                                                // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0338(0x0020) MISSED OFFSET
	class UPointLightComponent*                        MainLight;                                                // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0360(0x0004) MISSED OFFSET
	float                                              IntensityBase;                                            // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RadiusBase;                                               // 0x0368(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IntensityPerPart;                                         // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RadiusPerPart;                                            // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IntensityAllParts;                                        // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RadiusAllParts;                                           // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxIntensity;                                             // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinIntensity;                                             // 0x0380(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeOnMaxLight;                                           // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IntensityFadeInTime;                                      // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IntensityFadeOutTime;                                     // 0x038C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxEmissive;                                              // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinEmissive;                                              // 0x0394(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EmissiveFadeInTime;                                       // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EmissiveFadeOutTime;                                      // 0x039C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GlowPlant");
		return ptr;
	}


	void OnDeath();
	void OnDamage(class UPrimitiveComponent** hitSphere);
};


// Class FSD.RoomGenerationItem
// 0x0000 (0x0338 - 0x0338)
class ARoomGenerationItem : public AGenerationItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomGenerationItem");
		return ptr;
	}

};


// Class FSD.GoogleAnalyticsWrapper
// 0x0128 (0x0150 - 0x0028)
class UGoogleAnalyticsWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x1];                                       // 0x0028(0x0001) MISSED OFFSET
	bool                                               DevTest;                                                  // 0x0029(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     LastUnlockedWeapons;                                      // 0x0030(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	struct FString                                     LastKnownClass;                                           // 0x0040(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	struct FString                                     BoscoLoadOut;                                             // 0x0050(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	bool                                               WasCampaign;                                              // 0x0060(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FString                                     LastCampaignName;                                         // 0x0068(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                LastCampaignProgress;                                     // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               WasLastCampaignMission;                                   // 0x007C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	int                                                LastCampaignSize;                                         // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FString                                     LastWeaponsLoadout;                                       // 0x0088(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FString                                     LastUpgradesLoadout;                                      // 0x0098(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FString                                     SchematicInformation;                                     // 0x00A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FPartyAnalyticsInformation                  PartyInfo;                                                // 0x00B8(0x0014) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FDeepDiveAnalyticsInformation               DeepDiveInfo;                                             // 0x00CC(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FString                                     DiscordCommunityTrackingID;                               // 0x00D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     CommunityGoalsTrackingID;                                 // 0x00E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData05[0x54];                                      // 0x00F8(0x0054) MISSED OFFSET
	bool                                               ShouldUpdateSchematicTrackingInformation;                 // 0x014C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x014D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GoogleAnalyticsWrapper");
		return ptr;
	}


	void StartMissionPartyInfo(class AFSDGameState** GameState);
	void SetShouldUpdateSchematicInformation();
	void ResetBoscoLoadout();
	void RecordTotalTimeHit(struct FString* Key, struct FString* Campaign, bool* Rank, int* Time);
	void RecordOpenScreen(struct FString* Key, bool* Rank);
	void RecordMachineEventEnd(struct FString* EventName, bool* WasCompleted, float* completionTime);
	void RecordKickPlayer(struct FString* reason, class APlayerController** KickedPlayer);
	void RecordGAUserTiming(struct FString* TimingCategory, int* TimingValue, struct FString* TimingName);
	void RecordGAMissionTotalTimeHit(struct FString* Key, struct FString* Campaign, bool* Rank, int* totalTime, int* Progress, int* XP, int* Credits);
	void RecordGAMissionTimeEvent(int* Time);
	void RecordGAEvent(struct FString* EventCategory, struct FString* EventAction, struct FString* EventLabel, int* EventValue, EFSDGoogleAnalyticsProperties* Property);
	void RecordGADeepDiveStageHit(struct FString* Key, bool* Rank, int* stageTime, int* timeSinceStartOfDive, int* totalTime, int* nitraLeft);
	void RecordCustomGAEvent(struct FString* EventCategory, struct FString* EventAction, struct FString* EventLabel, int* EventValue, struct FString* TrackingId);
	struct FString ProcessCampaignName(class UClass** Campaign);
	void PlayerLatejoin();
	void PlayerDropout();
	void OnPlayerLeaveBind(class AFSDPlayerState** PlayerState);
	void OnPlayerJoinBind(class AFSDPlayerState** PlayerState);
	void HandleMatchStarted();
	struct FString GetAnalyticsFText(struct FText* Text);
	void EndMissionPartyInfo();
};


// Class FSD.GrabbedStateComponent
// 0x0010 (0x0140 - 0x0130)
class UGrabbedStateComponent : public UCharacterStateComponent
{
public:
	TWeakObjectPtr<class UGrabberComponent>            CurrentGrabber;                                           // 0x0130(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0138(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrabbedStateComponent");
		return ptr;
	}


	void OnRep_Grabber();
};


// Class FSD.FlyingLifter
// 0x00C8 (0x0600 - 0x0538)
class AFlyingLifter : public AAFlyingBug
{
public:
	class UGrabberComponent*                           GrabberComp;                                              // 0x0538(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           GrabCapsule;                                              // 0x0540(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             GrabStart;                                                // 0x0548(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             GrabEnd;                                                  // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             GrabbedIdleLoop;                                          // 0x0558(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UInDangerComponent*                          InDanger;                                                 // 0x0560(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             ScreamComponent;                                          // 0x0568(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0570(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGrabSuccess;                                            // 0x0578(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0588(0x0001) MISSED OFFSET
	bool                                               ShouldScream;                                             // 0x0589(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x058A(0x0001) MISSED OFFSET
	EGrabberState                                      GrabberState;                                             // 0x058B(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x058C(0x0008) MISSED OFFSET
	float                                              WanderingSpeed;                                           // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WanderingAcceleration;                                    // 0x0598(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChaseSpeed;                                               // 0x059C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChaseAcceleration;                                        // 0x05A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CarrySpeed;                                               // 0x05A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CarryAcceleration;                                        // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FleeSpeed;                                                // 0x05AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FleeAcceleration;                                         // 0x05B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               CanReachTarget;                                           // 0x05B4(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x05B5(0x0003) MISSED OFFSET
	int                                                MinCarryTimes;                                            // 0x05B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxCarryTimes;                                            // 0x05BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CarryCooldown;                                            // 0x05C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x05C4(0x0004) MISSED OFFSET
	class USoundBase*                                  ScreamSound;                                              // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FleeSound;                                                // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           FleeAnimation;                                            // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCapsuleComponent*                           GrabberCollider;                                          // 0x05E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               ParalyzeOnGrab;                                           // 0x05E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x05E9(0x0003) MISSED OFFSET
	float                                              ExtraUpForce;                                             // 0x05EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScreamDistance;                                           // 0x05F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               HasGrabbed;                                               // 0x05F4(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               WasFrozen;                                                // 0x05F5(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x05F6(0x0002) MISSED OFFSET
	class UPointLightComponent*                        GrabLight;                                                // 0x05F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlyingLifter");
		return ptr;
	}


	void SetLight(class UPointLightComponent** ALight);
	bool SelectAnotherTarget();
	void OnStateBroke(class AActor** aReleasedPlayer);
	void OnRep_State();
	void OnRep_ShouldScream();
	void OnInDanger();
	void OnGrabberCollide(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	bool GetJustGrabbed();
	void DropTarget();
	void ChangeState(EGrabberState* aGrabberState);
};


// Class FSD.FlyingLifterAnimInstance
// 0x0000 (0x02F0 - 0x02F0)
class UFlyingLifterAnimInstance : public USimpleMovingEnemyAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlyingLifterAnimInstance");
		return ptr;
	}

};


// Class FSD.GrabberComponent
// 0x00A0 (0x0198 - 0x00F8)
class UGrabberComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnGrabbedActor;                                           // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReleasedActor;                                          // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0118(0x0004) MISSED OFFSET
	struct FName                                       GrabAttachName;                                           // 0x011C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ManualGrabTime;                                           // 0x0124(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	float                                              GrabTime;                                                 // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               StunOnGrab;                                               // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanPlayerShoot;                                           // 0x012D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x012E(0x0001) MISSED OFFSET
	EOutline                                           PlayerOutlineOnGrab;                                      // 0x012F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EGrabbedStateCameraMode                            CameraMode;                                               // 0x0130(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              CarryCooldown;                                            // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               NeedsPathToTarget;                                        // 0x0138(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x17];                                      // 0x0139(0x0017) MISSED OFFSET
	class USoundCue*                                   BeginGrabedSound;                                         // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GrabedLoopSound;                                          // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   EndGrabedSound;                                           // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            BeginGrabbedShout;                                        // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            EndGrabbedShout;                                          // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            AttentionGrabbedShout;                                    // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0180(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrabberComponent");
		return ptr;
	}


	void SetPlayerReleased();
	bool SetPlayerGrabbed();
	void OnPrimWake(class UPrimitiveComponent** WakingComponent, struct FName* BoneName);
	bool HasGrabbed();
	void All_ReleasedTarget(class AActor** releasedTarget);
	void All_GrabbedTarget(class AActor** grabbedTarget);
};


// Class FSD.GrapplingHookGun
// 0x0050 (0x04C0 - 0x0470)
class AGrapplingHookGun : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	class UCoolDownItemAggregator*                     CoolDownAggregator;                                       // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               AutoFire;                                                 // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0481(0x0003) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x0484(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPReloadAnim;                                             // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPReloadAnim;                                             // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPGunslingAnim;                                           // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPGunslingAnim;                                           // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x04A8(0x0010) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WindUpTime;                                               // 0x04BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrapplingHookGun");
		return ptr;
	}


	void OnReleaseHook();
	float STATIC_GetCooldownDuration(class UClass** GrapplingHookGun);
};


// Class FSD.GravityChangedComponent
// 0x0018 (0x0110 - 0x00F8)
class UGravityChangedComponent : public UActorComponent
{
public:
	bool                                               bAwakeOnGravityChanged;                                   // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 PrimitiveComponents;                                      // 0x0100(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GravityChangedComponent");
		return ptr;
	}


	void OnGravityChanged(float* Gravity, float* Change);
};


// Class FSD.GrenadeAnimationSet
// 0x0020 (0x0050 - 0x0030)
class UGrenadeAnimationSet : public UDataAsset
{
public:
	class UAnimMontage*                                FP_EquipAnimation;                                        // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_EquipAnimation;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_ThrowAnimation;                                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_ThrowAnimation;                                        // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrenadeAnimationSet");
		return ptr;
	}

};


// Class FSD.Grenade
// 0x0078 (0x03A8 - 0x0330)
class AGrenade : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	class UProjectileMovementComponent*                Movement;                                                 // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              Duration;                                                 // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExplosionDelay;                                           // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ExplodeOnImpact;                                          // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	int                                                MaxGrenades;                                              // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasExploded;                                              // 0x0358(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0359(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x035A(0x0002) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x035C(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class UItemID*                                     ItemID;                                                   // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WeaponPreviewClass;                                       // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 HandAttachMesh;                                           // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ImpactGroundSound;                                        // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ImpactGroundParticles;                                    // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGrenadeAnimationSet*                        GrenadeAnimationSetOverride;                              // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Grenade");
		return ptr;
	}


	void OnRep_HasExploded();
	void OnExploded();
	bool IsNonFriendlyPawn(class AActor** Actor);
	bool IsNonFriendly(class AActor** Actor);
	class UClass* GetWeaponViewClass();
	class AGrenade* STATIC_GetGrenadeDefaultObject(class UClass** grenadeClass);
	void ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit);
};


// Class FSD.MolotovComponent
// 0x0018 (0x0110 - 0x00F8)
class UMolotovComponent : public UActorComponent
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x00F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      BurningFlamesClass;                                       // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MolotovComponent");
		return ptr;
	}


	void Trigger();
};


// Class FSD.AreaSpawnerComponent
// 0x0010 (0x0108 - 0x00F8)
class UAreaSpawnerComponent : public UActorComponent
{
public:
	class UClass*                                      ActorToSpawn;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EDeepPathFinderSize                                PathfinderSize;                                           // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	float                                              ChanceToSpawn;                                            // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AreaSpawnerComponent");
		return ptr;
	}


	void SpawnInArea(struct FVector* Origin, float* Radius, float* maxVerticalDistance, class APawn** Instigator);
};


// Class FSD.HugeExplosionComponent
// 0x0028 (0x0120 - 0x00F8)
class UHugeExplosionComponent : public UActorComponent
{
public:
	class UParticleSystem*                             ExplosionEffect;                                          // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExplosionSpeed;                                           // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExplosionSize;                                            // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HugeExplosionComponent");
		return ptr;
	}


	void TriggerExplosion(struct FVector* Location);
};


// Class FSD.GroundLeechEnemy
// 0x0068 (0x0490 - 0x0428)
class AGroundLeechEnemy : public AEnemyPawn
{
public:
	struct FScriptMulticastDelegate                    OnTargetChanged;                                          // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MaxAttackDistance;                                        // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TrackingSpeed;                                            // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PullingSpeed;                                             // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RetractingSpeed;                                          // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class USplineMeshComponent*                        TentacleSpline;                                           // 0x0458(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EGroundLeechState                                  State;                                                    // 0x0460(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0461(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x0464(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UHealthComponent>             TargetHealth;                                             // 0x046C(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FVector_NetQuantize                         TentacleLocation;                                         // 0x0474(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FVector_NetQuantize                         TentacleVelocity;                                         // 0x0480(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	float                                              StateTime;                                                // 0x048C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GroundLeechEnemy");
		return ptr;
	}


	void ReceiveMoved();
	void OnRep_Target();
	void OnRep_State();
	bool HasTarget();
	class USplineMeshComponent* GetSplineComponent();
	struct FVector GetMouthLocation();
};


// Class FSD.GroundToAirComponent
// 0x0078 (0x0170 - 0x00F8)
class UGroundToAirComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnChangedPathfinderState;                                 // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	float                                              WalkTime;                                                 // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WalkTimeMaxRandomOffset;                                  // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WalkTimeMinRandomOffset;                                  // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               WalkUseTimer;                                             // 0x011C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	struct FStateStats                                 WalkStats;                                                // 0x0120(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyTime;                                                  // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyTimeMaxRandomOffset;                                   // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyTimeMinRandomOffset;                                   // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FlyUseTimer;                                              // 0x0140(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	struct FStateStats                                 FlyStats;                                                 // 0x0144(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFlying;                                                 // 0x0158(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x17];                                      // 0x0159(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GroundToAirComponent");
		return ptr;
	}


	void SetIsFlying(bool* aIsFlying);
	void SetAllowedToChangeState(bool* aIsAllowed);
	void OnRep_StateChange();
	bool GetIsWalking();
	bool GetIsFlying();
	void Engage();
};


// Class FSD.GrowthComponent
// 0x0098 (0x0190 - 0x00F8)
class UGrowthComponent : public UActorComponent
{
public:
	class USceneComponent*                             ScaleComponent;                                           // 0x00F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FRuntimeFloatCurve                          CurrentGrowthCurve;                                       // 0x0100(0x0088) (Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrowthComponent");
		return ptr;
	}


	void StopGrow();
	void StartGrow(class USceneComponent** aComponentToScale, struct FRuntimeFloatCurve* aCurve);
};


// Class FSD.GuntowerActivationPlatform
// 0x0070 (0x03A0 - 0x0330)
class AGuntowerActivationPlatform : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SKMesh;                                                   // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           Trigger;                                                  // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnProgressUpdatedDelegate;                                // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayersInsideChangedDelegate;                           // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnProgressFilled;                                         // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0378(0x0008) MISSED OFFSET
	class AGuntowerModule*                             AssignedModule;                                           // 0x0380(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DoneAt;                                                   // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	float                                              DisabledTime;                                             // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayersInside;                                            // 0x0394(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Disabled;                                                 // 0x0398(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsShutDown;                                               // 0x0399(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x039A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GuntowerActivationPlatform");
		return ptr;
	}


	void Shutdown();
	void SetPlatformActive(bool* IsActive);
	void ReEnable();
	void OnShutDown();
	void OnRep_PlayersInside();
	void OnRep_IsShutDown();
	void OnRep_Disabled();
	void OnPlayersInsideChanged(int* PlayersInside);
	void OnOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	void OnFinished();
	void OnDisabledChanged(bool* IsDisabled);
	void ModuleDestroyed(class UHealthComponentBase** Health);
	class AGuntowerModule* GetAssignedModule();
	void EndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	bool CanWidgetAppear();
	void AssignModule(class AGuntowerModule** towerModule);
};


// Class FSD.GuntowerEvent
// 0x0038 (0x04B0 - 0x0478)
class AGuntowerEvent : public AGameEvent
{
public:
	class UDamageComponent*                            EndExplosionDamage;                                       // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0480(0x0010) MISSED OFFSET
	float                                              TowerExplodeDelay;                                        // 0x0490(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DelayBetweenExplosions;                                   // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class AGuntowerModule*>                     TowerModules;                                             // 0x0498(0x0010) (ZeroConstructor, Transient)
	int                                                ActiveHostileModules;                                     // 0x04A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GuntowerEvent");
		return ptr;
	}


	void OnRep_ModuleActive();
	void OnModuleExploded(class AGuntowerModule** explodedModule);
};


// Class FSD.GuntowerModule
// 0x00C0 (0x0498 - 0x03D8)
class AGuntowerModule : public AFSDPawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET
	class USoundCue*                                   ExposeWeakpointSound;                                     // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   deathSound;                                               // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             deathParticles;                                           // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class AActor>>               WeakpointActors;                                          // 0x03F8(0x0010) (ZeroConstructor)
	struct FName                                       BodyBone;                                                 // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       TopConnectionPointName;                                   // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CurrentTurretRotation;                                    // 0x0418(0x000C) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	class UAnimSequenceBase*                           IntroductionAnimation;                                    // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        ArmorPiece1;                                              // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        ArmorPiece2;                                              // 0x0438(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        ArmorPiece3;                                              // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      ModuleMesh;                                               // 0x0448(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGunTowerHealthComponent*                    GuntowerModuleHealth;                                     // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UClass*>                              PossibleChildModules;                                     // 0x0458(0x0010) (Edit, ZeroConstructor)
	class AGuntowerEvent*                              OwningEvent;                                              // 0x0468(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AGuntowerModule*                             ChildModule;                                              // 0x0470(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              WeakpointsExposedTime;                                    // 0x0478(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	float                                              HideArmorTime;                                            // 0x0480(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ArmorShootoutDelay;                                       // 0x0484(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ArmorLaunchPower;                                         // 0x0488(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ModuleID;                                                 // 0x048C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsPassiveModule;                                          // 0x0490(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ModuleIsActive;                                           // 0x0491(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AreWeakpointsExposed;                                     // 0x0492(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AreWeaponsExposed;                                        // 0x0493(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ConstantRotation;                                         // 0x0494(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsArmorOff;                                               // 0x0495(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Exploded;                                                 // 0x0496(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0497(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GuntowerModule");
		return ptr;
	}


	void SpawnNewChildModule(int* modulesLeftToSpawn, TArray<class AGuntowerActivationPlatform*>* activationPlatforms);
	void ShootOutArmor();
	void SetModuleActive();
	void OnTearArmor();
	void OnRep_IsModuleActive();
	void OnRep_IsArmorOff();
	void OnRep_Exploded();
	void OnRep_AreWeakpointExposed();
	void OnActivationChanged(bool* IsActivated);
	void Introduce();
	void HideWeakpoints();
	void HideArmor();
	int GetModuleID();
	void DoExplosion();
	void DeactivateTowerModule();
	void All_PlayIntroductionAnim();
	void ActivateTowerModule();
};


// Class FSD.HostileGuntowerModule
// 0x0038 (0x04D0 - 0x0498)
class AHostileGuntowerModule : public AGuntowerModule
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0498(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      DestroyedMesh;                                            // 0x04A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    DestroyedSmoke;                                           // 0x04A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemyComponent*                             EnemyComponent;                                           // 0x04B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              ModuleMaxHealth;                                          // 0x04B8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	struct FRotator                                    CurrentAimRotation;                                       // 0x04C0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HostileGuntowerModule");
		return ptr;
	}


	void OnWeakpointDied(class UHealthComponentBase** Health);
	void OnRep_ModuleMaxHealth();
	void OnModuleDied(class UHealthComponentBase** Health);
};


// Class FSD.HostileTargetingGuntowerModule
// 0x0040 (0x0510 - 0x04D0)
class AHostileTargetingGuntowerModule : public AHostileGuntowerModule
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04D0(0x0010) MISSED OFFSET
	float                                              TurretRotationSpeed;                                      // 0x04E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x04E4(0x000C) MISSED OFFSET
	class AActor*                                      TargetedActor;                                            // 0x04F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetingRotationSpeed;                                   // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetingFromBone;                                        // 0x04FC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeUntilForgetTarget;                                    // 0x0504(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0508(0x0004) MISSED OFFSET
	bool                                               AlwaysUpdateAimRotation;                                  // 0x050C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x050D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HostileTargetingGuntowerModule");
		return ptr;
	}


	void OnPerceptionUpdated(class AActor** sensedActor, struct FAIStimulus* Stimulus);
};


// Class FSD.LMGGuntoweModule
// 0x0088 (0x0598 - 0x0510)
class ALMGGuntoweModule : public AHostileTargetingGuntowerModule
{
public:
	class UHitscanComponent*                           HitScanComp;                                              // 0x0510(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            DamageComp;                                               // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             AimAtWhenNoTarget;                                        // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             FireAudio;                                                // 0x0528(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0530(0x0010) MISSED OFFSET
	class UParticleSystem*                             TracerEffect;                                             // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MuzzleEffect;                                             // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ShootTailSound;                                           // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0558(0x0008) MISSED OFFSET
	int                                                BurstSize;                                                // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0564(0x000C) MISSED OFFSET
	float                                              MaxAimOffset;                                             // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IdleAimRotationSpeed;                                     // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0578(0x0010) MISSED OFFSET
	float                                              TimeBetweenShots;                                         // 0x0588(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenBursts;                                        // 0x058C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AimSpeed;                                                 // 0x0590(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0594(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LMGGuntoweModule");
		return ptr;
	}


	void ShowShot(struct FHitResult* Result);
};


// Class FSD.RandomFiringGuntowerModule
// 0x0180 (0x0650 - 0x04D0)
class ARandomFiringGuntowerModule : public AHostileGuntowerModule
{
public:
	class UStaticMeshComponent*                        LaserFrontTop;                                            // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LaserFrontBottom;                                         // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LaserBackTop;                                             // 0x04E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LaserBackBottom;                                          // 0x04E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    FrontTopLaserMuzzle;                                      // 0x04F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    FrontBottomLaserMuzzle;                                   // 0x04F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BackTopLaserMuzzle;                                       // 0x0500(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BackBottomLaserMuzzle;                                    // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC4];                                      // 0x0510(0x00C4) MISSED OFFSET
	struct FRotator                                    OtherCurrentRotation;                                     // 0x05D4(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x05E0(0x0010) MISSED OFFSET
	class UParticleSystem*                             LaserImpact;                                              // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             LaserSound;                                               // 0x05F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0600(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              BoneSpaceTurretMaxYaw;                                    // 0x0608(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BoneSpaceTurretMaxPitch;                                  // 0x060C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenAttacks;                                       // 0x0610(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeUntilNextAttack;                                      // 0x0614(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ModuleRotationSpeed;                                      // 0x0618(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TurretAimSpeed;                                           // 0x061C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LaserLeghtRatio;                                          // 0x0620(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenHits;                                          // 0x0624(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0628(0x0004) MISSED OFFSET
	float                                              ChanceToInvert;                                           // 0x062C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlatformDissolveRadius;                                   // 0x0630(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlatformDissolveSqueeze;                                  // 0x0634(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0638(0x0010) MISSED OFFSET
	bool                                               IsAttacking;                                              // 0x0648(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0649(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomFiringGuntowerModule");
		return ptr;
	}

};


// Class FSD.RadialFireModule
// 0x0048 (0x0518 - 0x04D0)
class ARadialFireModule : public AHostileGuntowerModule
{
public:
	class UClass*                                      projectileClass;                                          // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AttackEndRotation;                                        // 0x04D8(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RotationSpeedTurret;                                      // 0x04E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04E8(0x0004) MISSED OFFSET
	float                                              DelayBetweenShots;                                        // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04F0(0x0004) MISSED OFFSET
	bool                                               IsAttacking;                                              // 0x04F4(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04F5(0x0003) MISSED OFFSET
	struct FName                                       LeftFireSocket;                                           // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightFireSocket;                                          // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FrontFireSocket;                                          // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BackFireSocket;                                           // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RadialFireModule");
		return ptr;
	}


	void OnFire();
};


// Class FSD.HomingFireModule
// 0x0018 (0x0528 - 0x0510)
class AHomingFireModule : public AHostileTargetingGuntowerModule
{
public:
	struct FName                                       ShootDroneSocket;                                         // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HomingProjectileClass;                                    // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenShots;                                         // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0524(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HomingFireModule");
		return ptr;
	}

};


// Class FSD.HomingDroneBomb
// 0x0048 (0x0410 - 0x03C8)
class AHomingDroneBomb : public AProjectile
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET
	class UEnemyHealthComponent*                       Health;                                                   // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundCue*                                   ArmingSound;                                              // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HomingUpdateInterval;                                     // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetSearchInterval;                                     // 0x03E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ArmTime;                                                  // 0x03E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x03F0(0x0020) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HomingDroneBomb");
		return ptr;
	}


	void UpdateHomingSpeed();
	void SearchForTarget();
};


// Class FSD.GunTowerModuleAnimInstance
// 0x0020 (0x0290 - 0x0270)
class UGunTowerModuleAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0270(0x0004) MISSED OFFSET
	struct FRotator                                    CurrentLookAtRotation;                                    // 0x0274(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsModuleActive;                                           // 0x0280(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AreWeakpointsExposed;                                     // 0x0281(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x0282(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GunTowerModuleAnimInstance");
		return ptr;
	}

};


// Class FSD.RandomFireModuleAnimInstance
// 0x0010 (0x02A0 - 0x0290)
class URandomFireModuleAnimInstance : public UGunTowerModuleAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0290(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomFireModuleAnimInstance");
		return ptr;
	}

};


// Class FSD.GuntowerWeakPoint
// 0x0048 (0x0420 - 0x03D8)
class AGuntowerWeakPoint : public AFSDPawn
{
public:
	class USceneComponent*                             Root;                                                     // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemyHealthComponent*                       Health;                                                   // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Mesh;                                                     // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UWeakpointGlowComponent*                     HitGlow;                                                  // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03F8(0x0008) MISSED OFFSET
	class UDamageClass*                                DamageToParent;                                           // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             deathParticles;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   deathSound;                                               // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0418(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GuntowerWeakPoint");
		return ptr;
	}


	void OnExposedChanged(bool* isExposed);
	void OnDeath(class UHealthComponentBase** HealthComponent);
	void DamageParent(float* ammount);
};


// Class FSD.GunTowerHealthComponent
// 0x0000 (0x0270 - 0x0270)
class UGunTowerHealthComponent : public UEnemyHealthComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GunTowerHealthComponent");
		return ptr;
	}

};


// Class FSD.WidgetComponentCustomMaterial
// 0x0000 (0x06C0 - 0x06C0)
class UWidgetComponentCustomMaterial : public UWidgetComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WidgetComponentCustomMaterial");
		return ptr;
	}

};


// Class FSD.HealthBarComponent
// 0x0000 (0x06C0 - 0x06C0)
class UHealthBarComponent : public UWidgetComponentCustomMaterial
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HealthBarComponent");
		return ptr;
	}

};


// Class FSD.HealthDamageTracker
// 0x0020 (0x0118 - 0x00F8)
class UHealthDamageTracker : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTrackedPercentageReachedEvent;                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              TiggerOnPercentage;                                       // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UHealthComponentBase*                        Health;                                                   // 0x0110(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HealthDamageTracker");
		return ptr;
	}


	void ResetTrackedDamage();
	void OnDamageTaken(float* amount);
};


// Class FSD.HitscanBaseComponent
// 0x0118 (0x0270 - 0x0158)
class UHitscanBaseComponent : public UWeaponFireComponent
{
public:
	struct FScriptMulticastDelegate                    OnSpreadChanged;                                          // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              SpreadPerShot;                                            // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x0170(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0178(0x0004) MISSED OFFSET
	float                                              Damage;                                                   // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0180(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0184(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WeakpointDamageMultiplier;                                // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                MaxPenetrations;                                          // 0x0194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EImpactDecalSize                                   ImpactDecalSize;                                          // 0x0198(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0199(0x0003) MISSED OFFSET
	float                                              friendlyFireModifier;                                     // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               UseDynamicSpread;                                         // 0x01A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01A1(0x0003) MISSED OFFSET
	float                                              MinSpread;                                                // 0x01A4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MinSpreadWhenMoving;                                      // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpreadWhenSprinting;                                   // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpread;                                                // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          SpreadCurve;                                              // 0x01B8(0x0088) (Edit)
	float                                              SpreadRecoveryPerSecond;                                  // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0244(0x0008) MISSED OFFSET
	float                                              VerticalSpreadMultiplier;                                 // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HorizontalSpredMultiplier;                                // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxVerticalSpread;                                        // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxHorizontalSpread;                                      // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x025C(0x0004) MISSED OFFSET
	ERicochetBehavior                                  RicochetBehavior;                                         // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	float                                              RicochetChance;                                           // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RicochetOnWeakspotOnly;                                   // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0269(0x0003) MISSED OFFSET
	float                                              RicochetMaxRange;                                         // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HitscanBaseComponent");
		return ptr;
	}


	void Server_StopFire();
	void Server_RemoveDebris(int* instance, int* Component);
	float GetCurrentVerticalSpread();
	float GetCurrentHorizontalSpread();
};


// Class FSD.HitscanComponent
// 0x00A8 (0x0318 - 0x0270)
class UHitscanComponent : public UHitscanBaseComponent
{
public:
	struct FScriptMulticastDelegate                    OnHit;                                                    // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               BulletsCanCarve;                                          // 0x0280(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0281(0x0003) MISSED OFFSET
	struct FIRandRange                                 NormalBulletsPerCarvingOne;                               // 0x0284(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
	float                                              CarveDiameter;                                            // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveNoise;                                               // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GeneralImpactAudioVolume;                                 // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpactDelay;                                              // 0x029C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ImpactParticles;                                          // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ImpactSound;                                              // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              DamagedActorCache;                                        // 0x02B0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x58];                                      // 0x02C0(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HitscanComponent");
		return ptr;
	}


	void Server_RegisterRicochetHit_Terrain(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UFSDPhysicalMaterial** PhysMaterial);
	void Server_RegisterRicochetHit_Destructable(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex);
	void Server_RegisterRicochetHit(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial);
	void Server_RegisterHit_Terrain(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UFSDPhysicalMaterial** PhysMaterial);
	void Server_RegisterHit_Destructable(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex);
	void Server_RegisterHit(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial);
	void All_ShowRicochetHit_Terrain(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, unsigned char* MaterialID, class UFSDPhysicalMaterial** PhysMaterial);
	void All_ShowRicochetHit_Destructable(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex);
	void All_ShowRicochetHit(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, bool* SpawnDecal, class UFSDPhysicalMaterial** PhysMaterial);
	void All_ShowHit_Terrain(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, unsigned char* MaterialID, class UFSDPhysicalMaterial** PhysMaterial);
	void All_ShowHit_Destructable(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, class UPrimitiveComponent** Target, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex);
	void All_ShowHit(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal, bool* SpawnDecal, class UFSDPhysicalMaterial** PhysMaterial);
};


// Class FSD.HostileGuntowerModuleController
// 0x0010 (0x0460 - 0x0450)
class AHostileGuntowerModuleController : public AFSDAIController
{
public:
	class UAIPerceptionComponent*                      Perception;                                               // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HostileGuntowerModuleController");
		return ptr;
	}


	void OnPerceptionUpdated(class AActor** sensedActor, struct FAIStimulus* Stimulus);
};


// Class FSD.HUDHealthBar
// 0x00D0 (0x0320 - 0x0250)
class UHUDHealthBar : public UFSDUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnOwnerDead;                                              // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FLinearColor                                BackgroundColor;                                          // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HealthColor;                                              // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DamageColor;                                              // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<EHealthbarType, struct FHealthBarLooks>       HealthBarLooks;                                           // 0x0290(0x0050) (Edit, ZeroConstructor)
	struct FLinearColor                                OutlineColor;                                             // 0x02E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                OutlineThickness;                                         // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HealthAnimationFactor;                                    // 0x02F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthPerCell;                                            // 0x02F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinHealthCells;                                           // 0x02FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxHealthCells;                                           // 0x0300(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0304(0x0004) MISSED OFFSET
	TScriptInterface<class UHealth>                    TargetHealth;                                             // 0x0308(0x0030) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AnimatedHealth;                                           // 0x0318(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x031C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HUDHealthBar");
		return ptr;
	}


	void SetHealthComponent(TScriptInterface<class UHealth>* Health, float* Damage);
	float GetCurrentHealth();
};


// Class FSD.HUDVisibilityGroup
// 0x0068 (0x0098 - 0x0030)
class UHUDVisibilityGroup : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnModeChanged;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	EHUDVisibilityGroups                               GroupID;                                                  // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FText                                       Title;                                                    // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               AllowDynamicMode;                                         // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AllowHiddenMode;                                          // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	bool                                               bDynamicallyVisible;                                      // 0x0078(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	TArray<struct FHUDVisibilityRegisteredWidget>      RegisteredWidgets;                                        // 0x0080(0x0010) (ZeroConstructor, Transient)
	EHUDVisibilityMode                                 RecommendedMode;                                          // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EHUDVisibilityMode                                 MinimalMode;                                              // 0x0091(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0092(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HUDVisibilityGroup");
		return ptr;
	}


	void VisibilityDelegate__DelegateSignature(class UHUDVisibilityGroup** Group, bool* IsVisible);
	void SetModeFromPreset(EHUDVisibilityPresets* Preset);
	void SetMode(EHUDVisibilityMode* InMode);
	void STATIC_SetHudGroupDynamicallyVisible(class UHUDVisibilityGroup** Group, bool* IsVisible);
	void SetGroupDynamicallyVisible(bool* IsVisible);
	void STATIC_RegisterWidgetWithVisibilityGroup(class UWidget** Widget, class UHUDVisibilityGroup** Group, ESlateVisibility* VisibleMode, ESlateVisibility* HiddenMode);
	void STATIC_RegisterMultipleWidgetsWithVisibilityGroup(TArray<class UWidget*>* Widgets, class UHUDVisibilityGroup** Group, ESlateVisibility* VisibleMode, ESlateVisibility* HiddenMode);
	void ModeDelegate__DelegateSignature(class UHUDVisibilityGroup** Group, EHUDVisibilityMode* Mode);
	bool IsModeAllowed(EHUDVisibilityMode* InMode);
	bool IsInDynamicMode();
	bool STATIC_IsHudGroupVisible(class UHUDVisibilityGroup** Group);
	bool IsGroupVisible();
	EHUDVisibilityMode GetMode();
	TArray<EHUDVisibilityMode> GetAllowedModes();
};


// Class FSD.HydraHead
// 0x0198 (0x05C0 - 0x0428)
class AHydraHead : public AEnemyPawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0428(0x0008) MISSED OFFSET
	struct FTransform                                  RestTransform;                                            // 0x0430(0x0030) (BlueprintVisible, IsPlainOldData)
	struct FTransform                                  LastTransform;                                            // 0x0460(0x0030) (BlueprintVisible, IsPlainOldData)
	struct FTransform                                  DesiredTransform;                                         // 0x0490(0x0030) (BlueprintVisible, Net, IsPlainOldData)
	unsigned char                                      UnknownData01[0x90];                                      // 0x04C0(0x0090) MISSED OFFSET
	float                                              MovementAlpha;                                            // 0x0550(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadMovementDuration;                                     // 0x0554(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              CanSwayCooldown;                                          // 0x0558(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SwayRange;                                                // 0x055C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	class USplineMeshComponent*                        NeckSplineMesh;                                           // 0x0568(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      HydraBody;                                                // 0x0570(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              NeckBaseTangentLength;                                    // 0x0578(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NeckBasePositionOffset;                                   // 0x057C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NeckBaseTangentOffset;                                    // 0x0588(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NeckTopTangentLength;                                     // 0x0594(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NeckTopPositionOffset;                                    // 0x0598(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NeckTopTangentOffset;                                     // 0x05A4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      lookAtTargetActor;                                        // 0x05B0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x05B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HydraHead");
		return ptr;
	}


	void UpdateSpline();
	void MoveHydraHead(struct FTransform* newDesiredTransform, float* newCanSwayCooldown, float* newHeadMovementDuration);
	void LookAtActor(class AActor** TargetActor);
};


// Class FSD.TriggerAI
// 0x0000 (0x0028 - 0x0028)
class UTriggerAI : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TriggerAI");
		return ptr;
	}


	bool OnTriggerAI(struct FName* TriggerName);
	void OnMessageAI(struct FName* TriggerName);
};


// Class FSD.Craftable
// 0x0000 (0x0028 - 0x0028)
class UCraftable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Craftable");
		return ptr;
	}


	void PreviewItem(class AFSDPlayerState** PlayerState, bool* Show);
	bool IsOwned(class UClass** CharacterClass, class AFSDPlayerState** PlayerState);
	TArray<struct FCraftingCost> GetResourceCost();
	int GetRequiredPlayerRank();
	int GetCraftingCreditsCost();
	struct FText GetCraftableName();
	class UTexture2D* GetCraftableIcon();
	struct FText GetCraftableDescription();
	void CraftItem(class UClass** CharacterClass, class AFSDPlayerState** PlayerState);
	bool CanCraft(class AFSDPlayerState** PlayerState);
};


// Class FSD.FootStepNotifyTarget
// 0x0000 (0x0028 - 0x0028)
class UFootStepNotifyTarget : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FootStepNotifyTarget");
		return ptr;
	}

};


// Class FSD.Health
// 0x0000 (0x0028 - 0x0028)
class UHealth : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Health");
		return ptr;
	}


	bool IsDead();
	bool IsAlive();
	class AActor* GetOwner();
	float GetMaxHealth();
	EHealthbarType GetHealthbarType();
	float GetHealth();
};


// Class FSD.ImpactComponent
// 0x0070 (0x0168 - 0x00F8)
class UImpactComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnImpactedEvent;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHighAcceleration;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               DebugText;                                                // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2B];                                      // 0x0119(0x002B) MISSED OFFSET
	bool                                               TrackAcceleration;                                        // 0x0144(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               TrackVelocity;                                            // 0x0145(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0146(0x0006) MISSED OFFSET
	float                                              TriggerHighAccelAt;                                       // 0x014C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0150(0x0008) MISSED OFFSET
	float                                              TriggerAtVelocityDifference;                              // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x015C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ImpactComponent");
		return ptr;
	}


	void SetCheckVelocity(bool* aCheckVelocity);
	void SetCheckAcceleration(bool* aCheckAcceleration);
	void EnableImpactCheckhing(class USceneComponent** cmp);
	void DisableImpactChecking();
};


// Class FSD.WeaponImpactComponent
// 0x0078 (0x0170 - 0x00F8)
class UWeaponImpactComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnImpactedEvent;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHighAcceleration;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               DebugText;                                                // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	struct FName                                       ImpactSocketName;                                         // 0x011C(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      ActiveMesh;                                               // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0130(0x0028) MISSED OFFSET
	bool                                               TrackAcceleration;                                        // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               TrackVelocity;                                            // 0x0159(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x015A(0x0006) MISSED OFFSET
	float                                              TriggerHighAccelAt;                                       // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0164(0x0008) MISSED OFFSET
	float                                              TriggerAtVelocityDifference;                              // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponImpactComponent");
		return ptr;
	}


	void EnableImpactCheckhing(class USkeletalMeshComponent** cmp);
	void DisableImpactChecking();
};


// Class FSD.ImpactAudioComponent
// 0x0030 (0x0780 - 0x0750)
class UImpactAudioComponent : public UAudioComponent
{
public:
	unsigned char                                      UnknownData00[0x14];                                      // 0x0750(0x0014) MISSED OFFSET
	float                                              MakeSoundAtAcceleration;                                  // 0x0764(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ListenForDeath;                                           // 0x0768(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x0769(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ImpactAudioComponent");
		return ptr;
	}


	void OnOwnerDeath(class UHealthComponentBase** HealthComponent);
	class UImpactAudioComponent* STATIC_AddImpactAudioToActor(class AActor** Actor, class USceneComponent** AttachToComponent, class UClass** ComponentClass);
};


// Class FSD.FSDReverbVolume
// 0x0018 (0x0348 - 0x0330)
class AFSDReverbVolume : public AActor
{
public:
	class USphereComponent*                            Collision;                                                // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UReverbEffect*                               Reverb;                                                   // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Priority;                                                 // 0x0340(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0344(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDReverbVolume");
		return ptr;
	}

};


// Class FSD.InDangerComponent
// 0x0038 (0x0130 - 0x00F8)
class UInDangerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnInDanger;                                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UHealthComponentBase>         ParentHealthComponent;                                    // 0x0108(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              DamageTimeLimit;                                          // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageThreshold;                                          // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RunsOnClients;                                            // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0119(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InDangerComponent");
		return ptr;
	}


	void SetIsActive(bool* aFlag);
	void OnDamage(float* amount);
	bool GetIsActive();
};


// Class FSD.NetMontageAble
// 0x0000 (0x0028 - 0x0028)
class UNetMontageAble : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NetMontageAble");
		return ptr;
	}


	float QueueMontage(class UAnimMontage** Montage);
	class USkeletalMeshComponent* GetSkeletalMesh();
	class UAnimInstance* GetAnimInstance();
};


// Class FSD.InputFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UInputFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InputFunctionLibrary");
		return ptr;
	}


	void STATIC_SetMouseSmoothingOn(bool* smoothingOn);
	bool STATIC_IsMouseSmoothingOn();
	bool STATIC_IsKeyEventAction(struct FKeyEvent* KeyEvent, struct FName* ActionName, bool* IgnoreCustomBindings);
	bool STATIC_IsAxisMappedToDirectional(struct FName* Name, struct FKey* Key, int* Direction, bool* IgnoreCustomBindings);
	bool STATIC_IsActionMappedTo(struct FName* Name, struct FKey* Key, bool* IgnoreCustomBindings);
	bool STATIC_GetControllerActionMapping(struct FName* Name, struct FInputActionKeyMapping* Mapping);
	struct FInputAxisKeyMapping STATIC_GetAxisMapping(struct FName* Name, int* Axis, class APlayerController** Controller);
	struct FInputActionKeyMapping STATIC_GetActionMapping(struct FName* Name, class APlayerController** Controller);
};


// Class FSD.InsectSwarmEnemy
// 0x0008 (0x0468 - 0x0460)
class AInsectSwarmEnemy : public AEnemyDeepPathfinderCharacter
{
public:
	class UParticleSystemComponent*                    SwarmParticles;                                           // 0x0460(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InsectSwarmEnemy");
		return ptr;
	}

};


// Class FSD.InsectSwarmSpawner
// 0x0020 (0x0448 - 0x0428)
class AInsectSwarmSpawner : public AEnemyPawn
{
public:
	class UClass*                                      SwarmType;                                                // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpawnHeightOffset;                                        // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AlertDistance;                                            // 0x0434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RespawnDelay;                                             // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AInsectSwarmEnemy>            SwarmInstance;                                            // 0x043C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0444(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InsectSwarmSpawner");
		return ptr;
	}


	void OnSwarmSpawned(class AInsectSwarmEnemy** Swarm);
	void OnSwarmDestroyed(class AActor** DestroyedActor);
};


// Class FSD.InventoryComponent
// 0x0180 (0x0278 - 0x00F8)
class UInventoryComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnItemsLoaded;                                            // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemClicked;                                            // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemEquipped;                                           // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUnequipped;                                         // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGrenadeCountChanged;                                    // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlareCountChanged;                                      // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlareProduction;                                        // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResuppliedEvent;                                        // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCarriableChangedEvent;                                  // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bItemsLoaded;                                             // 0x0188(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0189(0x0007) MISSED OFFSET
	class UInventoryList*                              InventoryList;                                            // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ThrownGrenadeClass;                                       // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class AItem*>                               Items;                                                    // 0x01A0(0x0010) (Net, ZeroConstructor, Transient)
	class AManualMiningItem*                           MiningItem;                                               // 0x01B0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AThrownGrenadeItem*                          GrenadeItem;                                              // 0x01B8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class ALaserPointerItem*                           LaserPointerItem;                                         // 0x01C0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ATerrainScannerItem*                         TerrainScannerItem;                                       // 0x01C8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ARecallableSentryGunItem*                    RecallableSentryGunItem;                                  // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AJetPackItem*                                JetPackItem;                                              // 0x01D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AItem*                                       PickedUpItem;                                             // 0x01E0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ARessuplyPodItem*                            ResupplyItem;                                             // 0x01E8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AItem*                                       PreviousItem;                                             // 0x01F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AItem*>                               EquipHistory;                                             // 0x01F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0208(0x0008) MISSED OFFSET
	class AActor*                                      CarriedItem;                                              // 0x0210(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     FlareOffset;                                              // 0x0218(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlareAngle;                                               // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlareCooldown;                                            // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlareProductionTime;                                      // 0x022C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                FlareChromaColor;                                         // 0x0230(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FlareProductionTimeLeft;                                  // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxFlares;                                                // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                Flares;                                                   // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FlareCooldownRemaining;                                   // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      flareClass;                                               // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UItemUpgrade*>                        FlareUpgrades;                                            // 0x0258(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	class AItem*                                       EquippedItem;                                             // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InventoryComponent");
		return ptr;
	}


	void StartGrenadeThrow();
	void Server_ThrowFlare();
	void Server_Equip(class AItem** Item);
	void Server_DropCarriedItem();
	void Resupply(float* percentage);
	class AItem* PickupItem(class UClass** itemClass);
	void OnRep_PickedUpItem();
	void OnRep_Items();
	void OnRep_EquippedItem(class AItem** oldItem);
	void OnRep_CarriedItem();
	void OnCharacterStateChanged(ECharacterState* NewState);
	int GetTotalAmmoLeft();
	class ARecallableSentryGunItem* GetRecallableSentryGunItem();
	TArray<class AItem*> GetAllItems();
	void EquipLastItem();
	void EquipAtIndex(int* Index);
	void Equip(class AItem** Item);
	void EndGrenadeThrow();
	void DropPickedupItem();
	void CreateStartingEquipmentWhenItemsLoaded();
	void Client_Resupply(float* percentage);
	void AnimationNotify2();
	void AnimationNotify1();
};


// Class FSD.InventoryList
// 0x0130 (0x0160 - 0x0030)
class UInventoryList : public UDataAsset
{
public:
	TArray<class UItemID*>                             Items;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UItemID*>                             PrimaryWeapons;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UItemID*>                             SecondaryWeapons;                                         // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemID*>                             TraversalTools;                                           // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemID*>                             ClassTools;                                               // 0x0070(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemID*>                             Armors;                                                   // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemID*>                             Flares;                                                   // 0x0090(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemID*>                             Grenades;                                                 // 0x00A0(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemID*>                             MiningTools;                                              // 0x00B0(0x0010) (Edit, ZeroConstructor)
	class UItemID*                                     LaserPointerItem;                                         // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UItemID*                                     TerrainScannerItem;                                       // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UItemID*                                     ResupplyItem;                                             // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.InventoryList.IconWeaponSetOutline
	unsigned char                                      UnknownData01[0x28];                                      // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.InventoryList.IconWeaponSetFill
	unsigned char                                      UnknownData02[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.InventoryList.LaserpointerMarkerMaterial
	unsigned char                                      UnknownData03[0x10];                                      // 0x0150(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InventoryList");
		return ptr;
	}


	class UItemID* GetPreviousUnlockedItem(class UObject** WorldContextObject, EItemCategory* Category, class UItemID** currentItem, class UPlayerCharacterID** ItemOwner);
	class UItemID* GetPreviousItem(EItemCategory* Category, class UItemID** currentItem);
	int GetNumberOfItems(EItemCategory* Category);
	class UItemID* GetNextUnlockedItem(class UObject** WorldContextObject, EItemCategory* Category, class UItemID** currentItem, class UPlayerCharacterID** ItemOwner);
	class UItemID* GetNextItem(EItemCategory* Category, class UItemID** currentItem);
	TArray<class UClass*> GetLoadedItemListFiltered(EItemCategory* Category, struct FScriptDelegate* Filter);
	TArray<class UClass*> GetLoadedItemList(EItemCategory* Category);
	TArray<class UItemID*> GetItemList(EItemCategory* Category);
	int GetItemIndex(EItemCategory* Category, class UItemID** Item);
	void CheckForInventoryAchievements(class UObject** WorldContextObject);
};


// Class FSD.RejoinListener
// 0x0000 (0x0028 - 0x0028)
class URejoinListener : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RejoinListener");
		return ptr;
	}

};


// Class FSD.Targetable
// 0x0000 (0x0028 - 0x0028)
class UTargetable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Targetable");
		return ptr;
	}


	void ShowDamageEffects(class UParticleSystem** particles, struct FVector* Location, struct FRotator* Orientation);
	class UHealthComponentBase* GetTargetHealthComponent();
	struct FVector GetTargetCenterMass();
	bool GetIsTargetable();
};


// Class FSD.AnimNotify_CycleItemComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_CycleItemComplete : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimNotify_CycleItemComplete");
		return ptr;
	}

};


// Class FSD.HeatMaterialComponent
// 0x0018 (0x0110 - 0x00F8)
class UHeatMaterialComponent : public UActorComponent
{
public:
	struct FName                                       ParameterName;                                            // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            MaterialIntances;                                         // 0x0100(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HeatMaterialComponent");
		return ptr;
	}


	void OnTemperatureChanged(float* Temperature, bool* Overheated);
	void AddHeatMaterial(class UMaterialInstanceDynamic** MaterialInstance);
};


// Class FSD.ItemCharacterAnimationSet
// 0x0118 (0x0148 - 0x0030)
class UItemCharacterAnimationSet : public UDataAsset
{
public:
	class UAnimSequence*                               FP_Idle;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FP_InspectWeapon;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               FP_Walk;                                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               FP_Sprint;                                                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               FP_JumpStart;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               FP_JumpLoop;                                              // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               FP_JumpLand;                                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECharacterAnimSet                                  AnimationSetType;                                         // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class UBlendSpace1D*                               TP_LookUpDown;                                            // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               TP_LookUpDown_Aim;                                        // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Sprint;                                                // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Idle;                                                  // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Idle_Aim;                                              // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_LookForward;                                           // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_LookForward_Aim;                                       // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_JumpStart;                                             // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_JumpStart_Aim;                                         // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_JumpLoop;                                              // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_JumpLoop_Aim;                                          // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TP_JumpLand;                                              // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Forward;                                           // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Forward_Aim;                                       // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Right;                                             // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Right_Aim;                                         // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Left;                                              // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Left_Aim;                                          // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Back;                                              // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Run_Back_Aim;                                          // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Revived;                                               // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Downed;                                                // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               TP_Downed_Loop;                                           // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Loadout;                                                  // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimSequence*>                       Loadout_IdleBreaks;                                       // 0x0130(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              CameraOffset;                                             // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0144(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemCharacterAnimationSet");
		return ptr;
	}

};


// Class FSD.ItemMarker
// 0x0000 (0x0330 - 0x0330)
class AItemMarker : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemMarker");
		return ptr;
	}


	void OnMarkerVisibilityChanged(bool* Visible);
	void OnMarkerValidChanged(bool* Valid);
};


// Class FSD.ItemPlacerAggregator
// 0x0040 (0x0150 - 0x0110)
class UItemPlacerAggregator : public UItemAggregator
{
public:
	float                                              PlacementDistance;                                        // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxOffsetZ;                                               // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinOffsetZ;                                               // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ItemHeight;                                               // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutOnPlaced;                                            // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsVisible;                                                // 0x0128(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsValid;                                                  // 0x0129(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x012A(0x0006) MISSED OFFSET
	class UClass*                                      MarkerType;                                               // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AItemMarker*                                 PlacementMarker;                                          // 0x0138(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanOnlyPlaceOnTerrain;                                    // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	class AItem*                                       Item;                                                     // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemPlacerAggregator");
		return ptr;
	}


	void ToggleValid(bool* Valid);
	void ToggleMarker(bool* Visible);
	bool GetPlacement(struct FTransform* Placement);
};


// Class FSD.ItemsBarIcon
// 0x0028 (0x0258 - 0x0230)
class UItemsBarIcon : public UUserWidget
{
public:
	bool                                               Selected;                                                 // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class UItemsBar*                                   ItemBar;                                                  // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class APlayerCharacter*                            Character;                                                // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AItem*                                       Item;                                                     // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                Index;                                                    // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemsBarIcon");
		return ptr;
	}


	void OnUnselect();
	void OnSelect();
	void OnInit();
};


// Class FSD.ItemsBar
// 0x0038 (0x0288 - 0x0250)
class UItemsBar : public UFSDUserWidget
{
public:
	class UClass*                                      DefaultItemWidget;                                        // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowSupplyItem;                                          // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0259(0x0007) MISSED OFFSET
	TArray<class UItemsBarIcon*>                       ItemIcons;                                                // 0x0260(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	class UItemsBarIcon*                               SupplyIcon;                                               // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UItemsBarIcon*                               SelectedIcon;                                             // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0280(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemsBar");
		return ptr;
	}


	void OnSupplyItemUnequipped(class UItemsBarIcon** ItemIcon);
	void OnSupplyItemEquipped(class UItemsBarIcon** ItemIcon);
	void OnSupplyItemAdded(class UItemsBarIcon** ItemIcon);
	void OnItemUnequipped(class UItemsBarIcon** ItemIcon);
	void OnItemsLoaded();
	void OnItemEquipped(class UItemsBarIcon** ItemIcon);
	void OnItemClicked();
	void OnItemAdded(class UItemsBarIcon** ItemIcon);
	void OnClear();
	void ItemEquipped(class AItem** NewItem);
	void ItemClicked(class AItem** NewItem);
};


// Class FSD.SkinBank
// 0x0018 (0x0048 - 0x0030)
class USkinBank : public UDataAsset
{
public:
	class UItemID*                                     ItemID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UItemSkin*>                           Skins;                                                    // 0x0038(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinBank");
		return ptr;
	}


	void SortSkins();
	void AddSkins(TArray<class UItemSkin*>* skinsToAdd);
};


// Class FSD.SkinnableComponent
// 0x0020 (0x0118 - 0x00F8)
class USkinnableComponent : public UActorComponent
{
public:
	class USkinBank*                                   SkinBank;                                                 // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemSkin*                                   EquippedSkin;                                             // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinnableComponent");
		return ptr;
	}


	void UpdateSkin(class AFSDPlayerState** Player);
	void OnLoadoutChanged();
	TArray<class UItemSkin*> STATIC_GetSkinsForItem(class UItemID** ItemID);
	class UItemSkin* STATIC_GetEquippedSkin(class UItemID** ItemID, class AFSDPlayerState** Player);
	void STATIC_EquipSkin(class UItemSkin** Skin, class UItemID** ItemID, class AFSDPlayerState** Player);
};


// Class FSD.DroneSkinnableComponent
// 0x0000 (0x0118 - 0x0118)
class UDroneSkinnableComponent : public USkinnableComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DroneSkinnableComponent");
		return ptr;
	}

};


// Class FSD.ItemSkinSet
// 0x0000 (0x0030 - 0x0030)
class UItemSkinSet : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemSkinSet");
		return ptr;
	}

};


// Class FSD.ItemSkin
// 0x0080 (0x00D0 - 0x0050)
class UItemSkin : public USavableDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnSkinUnlocked;                                           // 0x0050(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinEquipped;                                           // 0x0060(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinUnequipped;                                         // 0x0070(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	bool                                               UnlockedFromStart;                                        // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	class UDLCBase*                                    RequiredDLC;                                              // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SortPriority;                                             // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	struct FText                                       SkinName;                                                 // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UItemSkinSet*                                SkinSet;                                                  // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          SkinIconMaterial;                                         // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class USkinEffect*>                         SkinEffects;                                              // 0x00C0(0x0010) (Edit, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemSkin");
		return ptr;
	}


	bool Unlock(class UObject** WorldContext, class UItemID** ItemID, bool* broadcast);
	void Receive_SkinItem(class UObject** Skinnable);
	void ItemSkinSignature__DelegateSignature(class UItemSkin** Skin);
	void ItemSkinEquipSignature__DelegateSignature(class UItemSkin** Skin);
	bool IsLocked(class UObject** WorldContext, class UItemID** skinnableID);
	bool IsEquippedOnItem(class UItemID** ItemID, class AFSDPlayerState** PlayerState);
};


// Class FSD.SkinEffect
// 0x0000 (0x0028 - 0x0028)
class USkinEffect : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinEffect");
		return ptr;
	}


	void Receive_RemoveFromItem(class UMeshComponent** Mesh, class AActor** Skinnable, bool* IsFirstPerson);
	void Receive_AddToItem(class UMeshComponent** Mesh, class AActor** Skinnable, bool* IsFirstPerson);
};


// Class FSD.MeshSkinEffect
// 0x0040 (0x0068 - 0x0028)
class UMeshSkinEffect : public USkinEffect
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.MeshSkinEffect.Mesh
	unsigned char                                      UnknownData01[0x10];                                      // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MeshSkinEffect.Materials
	struct FName                                       SocketName;                                               // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MeshSkinEffect");
		return ptr;
	}

};


// Class FSD.MaterialSkinEffect
// 0x0010 (0x0038 - 0x0028)
class UMaterialSkinEffect : public USkinEffect
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MaterialSkinEffect.Materials

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MaterialSkinEffect");
		return ptr;
	}

};


// Class FSD.PreviewActor
// 0x0030 (0x0360 - 0x0330)
class APreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class UItemSkin*                                   CurrentSkin;                                              // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0340(0x0010) MISSED OFFSET
	class USkeletalMesh*                               DefaultMesh;                                              // 0x0350(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      itemClass;                                                // 0x0358(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PreviewActor");
		return ptr;
	}


	void UnSkinItem(class USkinEffect** Skin);
	void SkinItem(class USkinEffect** Skin);
	void SetItemClass(class UClass** itemClass);
	void OnUnSkinItem(class USkinEffect** Skin);
	void OnSkinPreviewChanged(class UItemSkin** PreviewSkin);
	void OnSkinItem(class USkinEffect** Skin);
	void OnSkinChanged();
	void ChangeSkin(class UItemSkin** NewSkin);
};


// Class FSD.ItemSkinSettings
// 0x0060 (0x0090 - 0x0030)
class UItemSkinSettings : public UDataAsset
{
public:
	TArray<class USkinBank*>                           SkinBanks;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)
	TMap<class UItemSkin*, struct FItemSkinOwners>     ItemSkins;                                                // 0x0040(0x0050) (Edit, ZeroConstructor, Transient, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemSkinSettings");
		return ptr;
	}

};


// Class FSD.ItemSkinFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UItemSkinFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemSkinFunctionLibrary");
		return ptr;
	}

};


// Class FSD.ItemSkinSchematicCollection
// 0x0038 (0x0068 - 0x0030)
class UItemSkinSchematicCollection : public UDataAsset
{
public:
	class UItemSkin*                                   Skin;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USchematicCategory*                          Category;                                                 // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USchematicPricingTier*                       PricingTier;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USchematicRarity*                            Rarity;                                                   // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EItemSkinCollectionType                            CollectionType;                                           // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EItemSkinCollectionType                            LastGeneratedCollectionType;                              // 0x0051(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	TArray<class USchematic*>                          Schematics;                                               // 0x0058(0x0010) (Edit, ExportObject, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemSkinSchematicCollection");
		return ptr;
	}

};


// Class FSD.ItemUpgrade
// 0x00F8 (0x0148 - 0x0050)
class UItemUpgrade : public USavableDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCrafted;                                                // 0x0058(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEquipped;                                               // 0x0068(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnequipped;                                             // 0x0078(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FText                                       Name;                                                     // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                Cost;                                                     // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseOldCost;                                               // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EUpgradeTiers                                      UpgradeTier;                                              // 0x00BD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EUpgradeClass                                      upgradeClass;                                             // 0x00BE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00BF(0x0001) MISSED OFFSET
	class UItemUpgradeCategory*                        Category;                                                 // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<class UResourceData*, float>                  UpgradeCraftingCost;                                      // 0x00C8(0x0050) (Edit, ZeroConstructor, EditConst)
	TArray<class UResourceData*>                       ResourceCost;                                             // 0x0118(0x0010) (Edit, ZeroConstructor)
	TArray<class UItemUpgradeElement*>                 Elements;                                                 // 0x0128(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<struct FItemUpgradeStatText>                StatTexts;                                                // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemUpgrade");
		return ptr;
	}


	void UnequipUpgrade(class UClass** itemClass, class AFSDPlayerState** PlayerState);
	void ItemUpgradeSignature__DelegateSignature(class UItemUpgrade** Upgrade);
	TArray<struct FItemUpgradeStatText> GetUpgradeStatTexts();
	struct FText STATIC_GetUpgradeName(class UItemUpgrade** Upgrade);
	TArray<struct FCraftingCost> GetUpgradeCost();
	struct FString GetSourceName();
	struct FUpgradeValues STATIC_GetGenericUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UItemUpgrade** upgradeClass);
	float GetCreditsCost();
	void EquipUpgrade(class UClass** itemClass, class AFSDPlayerState** PlayerState);
	void CraftItem(class UClass** itemClass, class AFSDPlayerController** PlayerController, class UClass** previewedCharacter);
};


// Class FSD.CombinedUpgrade
// 0x0020 (0x0168 - 0x0148)
class UCombinedUpgrade : public UItemUpgrade
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0148(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.CombinedUpgrade.CombinedUpgrades
	TArray<class UItemUpgrade*>                        LoadedUpgrades;                                           // 0x0158(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CombinedUpgrade");
		return ptr;
	}


	TArray<class UItemUpgrade*> GetUpgrades();
};


// Class FSD.OverclockUpgrade
// 0x0008 (0x0170 - 0x0168)
class UOverclockUpgrade : public UCombinedUpgrade
{
public:
	class USchematicCategory*                          SchematicCategory;                                        // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OverclockUpgrade");
		return ptr;
	}

};


// Class FSD.ItemUpgradeCategory
// 0x0040 (0x0070 - 0x0030)
class UItemUpgradeCategory : public UDataAsset
{
public:
	struct FText                                       CategoryName;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CategoryDescription;                                      // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  CategoryIcon;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      CategoryTint;                                             // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemUpgradeCategory");
		return ptr;
	}

};


// Class FSD.ItemUpgradeElement
// 0x0000 (0x0030 - 0x0030)
class UItemUpgradeElement : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemUpgradeElement");
		return ptr;
	}

};


// Class FSD.SkeletalMeshSkinEffect
// 0x0040 (0x0068 - 0x0028)
class USkeletalMeshSkinEffect : public USkinEffect
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.SkeletalMeshSkinEffect.Mesh
	unsigned char                                      UnknownData01[0x10];                                      // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.SkeletalMeshSkinEffect.Materials
	ESkeletalMeshSkinEffectType                        MeshType;                                                 // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkeletalMeshSkinEffect");
		return ptr;
	}

};


// Class FSD.FireWeaponSoundUpgradeElement
// 0x0008 (0x0038 - 0x0030)
class UFireWeaponSoundUpgradeElement : public UItemUpgradeElement
{
public:
	class USoundCue*                                   FireSound;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FireWeaponSoundUpgradeElement");
		return ptr;
	}

};


// Class FSD.TracerUpgradeElement
// 0x0008 (0x0038 - 0x0030)
class UTracerUpgradeElement : public UItemUpgradeElement
{
public:
	class UParticleSystem*                             Tracer;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TracerUpgradeElement");
		return ptr;
	}

};


// Class FSD.TrailUpgradeElement
// 0x0008 (0x0038 - 0x0030)
class UTrailUpgradeElement : public UItemUpgradeElement
{
public:
	class UParticleSystem*                             Trail;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TrailUpgradeElement");
		return ptr;
	}

};


// Class FSD.ReplaceMaterialUpgradeElement
// 0x0010 (0x0040 - 0x0030)
class UReplaceMaterialUpgradeElement : public UItemUpgradeElement
{
public:
	class UMaterialInterface*                          TargetMaterial;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ReplaceWithMaterial;                                      // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ReplaceMaterialUpgradeElement");
		return ptr;
	}

};


// Class FSD.ReplaceSkeletonMeshUpgradeElement
// 0x0018 (0x0048 - 0x0030)
class UReplaceSkeletonMeshUpgradeElement : public UItemUpgradeElement
{
public:
	class USkeletalMesh*                               TargetMesh;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               ReplaceWithMesh;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReplaceWithAnimInstance;                                  // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ReplaceSkeletonMeshUpgradeElement");
		return ptr;
	}

};


// Class FSD.MuzzleEffectUpgradeElement
// 0x0010 (0x0040 - 0x0030)
class UMuzzleEffectUpgradeElement : public UItemUpgradeElement
{
public:
	class UParticleSystem*                             FPMuzzleFlash;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TPMuzzleFlash;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MuzzleEffectUpgradeElement");
		return ptr;
	}

};


// Class FSD.HitScanImpactUpgradeElement
// 0x0010 (0x0040 - 0x0030)
class UHitScanImpactUpgradeElement : public UItemUpgradeElement
{
public:
	class UParticleSystem*                             ImpactParticle;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ImpactSound;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HitScanImpactUpgradeElement");
		return ptr;
	}

};


// Class FSD.StandardItemUpgrade
// 0x0008 (0x0150 - 0x0148)
class UStandardItemUpgrade : public UItemUpgrade
{
public:
	float                                              amount;                                                   // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercentage;                                             // 0x014C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x014D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StandardItemUpgrade");
		return ptr;
	}

};


// Class FSD.BeltDrivenWeaponUpgrade
// 0x0008 (0x0158 - 0x0150)
class UBeltDrivenWeaponUpgrade : public UStandardItemUpgrade
{
public:
	EBeltDrivenWeaponUpgrade                           upgradeType;                                              // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BeltDrivenWeaponUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBeltDrivenWeaponUpgrade* upgradeType);
};


// Class FSD.GatlingGunUpgrade
// 0x0008 (0x0150 - 0x0148)
class UGatlingGunUpgrade : public UItemUpgrade
{
public:
	EGatlingGunUpgrade                                 upgradeType;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GatlingGunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EGatlingGunUpgrade* upgradeType);
};


// Class FSD.AmmoDrivenWeaponUpgrade
// 0x0008 (0x0158 - 0x0150)
class UAmmoDrivenWeaponUpgrade : public UStandardItemUpgrade
{
public:
	EAmmoDrivenWeapnUpgradeType                        upgradeType;                                              // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AmmoDrivenWeaponUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAmmoDrivenWeapnUpgradeType* upgradeType);
};


// Class FSD.BoltActionRifleUpgrade
// 0x0008 (0x0158 - 0x0150)
class UBoltActionRifleUpgrade : public UStandardItemUpgrade
{
public:
	EBoltActionRifleUpgrades                           upgradeType;                                              // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoltActionRifleUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBoltActionRifleUpgrades* upgradeType);
};


// Class FSD.DualMachinePistolsUpgrade
// 0x0008 (0x0150 - 0x0148)
class UDualMachinePistolsUpgrade : public UItemUpgrade
{
public:
	EDualMachinePistolsUpgrades                        upgradeType;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DualMachinePistolsUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EDualMachinePistolsUpgrades* upgradeType);
};


// Class FSD.AssaultRifleUpgrade
// 0x0008 (0x0150 - 0x0148)
class UAssaultRifleUpgrade : public UItemUpgrade
{
public:
	EAssaultRifleUpgrade                               upgradeType;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AssaultRifleUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAssaultRifleUpgrade* upgradeType);
};


// Class FSD.AutoCannonUpgrade
// 0x0008 (0x0158 - 0x0150)
class UAutoCannonUpgrade : public UStandardItemUpgrade
{
public:
	EAutoCannonUpgrades                                upgradeType;                                              // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoCannonUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAutoCannonUpgrades* upgradeType);
};


// Class FSD.SawedOffShotgunUpgrade
// 0x0008 (0x0150 - 0x0148)
class USawedOffShotgunUpgrade : public UItemUpgrade
{
public:
	ESawedOffShotgunUpgrades                           upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SawedOffShotgunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ESawedOffShotgunUpgrades* upgradeType);
};


// Class FSD.BurstWeaponUpgrade
// 0x0008 (0x0150 - 0x0148)
class UBurstWeaponUpgrade : public UItemUpgrade
{
public:
	EBurstWeaponUpgrades                               upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BurstWeaponUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBurstWeaponUpgrades* upgradeType);
};


// Class FSD.AutoShotgunUpgrade
// 0x0008 (0x0150 - 0x0148)
class UAutoShotgunUpgrade : public UItemUpgrade
{
public:
	EAutoShotgunUpgrades                               upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoShotgunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAutoShotgunUpgrades* upgradeType);
};


// Class FSD.ChargedWeaponUpgrade
// 0x0008 (0x0158 - 0x0150)
class UChargedWeaponUpgrade : public UStandardItemUpgrade
{
public:
	EChargedWeaponUpgrades                             upgradeType;                                              // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedWeaponUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EChargedWeaponUpgrades* upgradeType);
};


// Class FSD.BasicPistolUpgrade
// 0x0008 (0x0150 - 0x0148)
class UBasicPistolUpgrade : public UItemUpgrade
{
public:
	EBasicPistol                                       upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BasicPistolUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EBasicPistol* upgradeType);
};


// Class FSD.RevolverUpgrade
// 0x0008 (0x0150 - 0x0148)
class URevolverUpgrade : public UItemUpgrade
{
public:
	ERevolerUpgrades                                   upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RevolverUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ERevolerUpgrades* upgradeType);
};


// Class FSD.CryoSprayUpgrade
// 0x0008 (0x0158 - 0x0150)
class UCryoSprayUpgrade : public UStandardItemUpgrade
{
public:
	ECryoSprayUpgrades                                 upgradeType;                                              // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CryoSprayUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ECryoSprayUpgrades* upgradeType);
};


// Class FSD.CryoSprayProjectileUpgrade
// 0x0010 (0x0158 - 0x0148)
class UCryoSprayProjectileUpgrade : public UItemUpgrade
{
public:
	float                                              MaxFireCost;                                              // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UClass*                                      projectileClass;                                          // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CryoSprayProjectileUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** projectileClass);
};


// Class FSD.WeaponHitCounterUpgrade
// 0x0008 (0x0150 - 0x0148)
class UWeaponHitCounterUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      ComponentClass;                                           // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponHitCounterUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, class UClass** ComponentClass);
};


// Class FSD.FlameThrowerUpgrade
// 0x0008 (0x0150 - 0x0148)
class UFlameThrowerUpgrade : public UItemUpgrade
{
public:
	EFlameThrowerUpgradeType                           upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlameThrowerUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EFlameThrowerUpgradeType* upgradeType);
};


// Class FSD.StickyFlameStatusEffectUpgrade
// 0x0008 (0x0150 - 0x0148)
class UStickyFlameStatusEffectUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      StatusEffect;                                             // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StickyFlameStatusEffectUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** StatusEffect);
};


// Class FSD.AutoMinerUpgrade
// 0x0008 (0x0150 - 0x0148)
class UAutoMinerUpgrade : public UItemUpgrade
{
public:
	EAutoMinerUpgradeType                              upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoMinerUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EAutoMinerUpgradeType* upgradeType);
};


// Class FSD.InventoryItemUpgrade
// 0x0008 (0x0158 - 0x0150)
class UInventoryItemUpgrade : public UStandardItemUpgrade
{
public:
	EInventoryItemUpgradeType                          upgradeType;                                              // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InventoryItemUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EInventoryItemUpgradeType* upgradeType);
};


// Class FSD.CapacityUpgrade
// 0x0008 (0x0150 - 0x0148)
class UCapacityUpgrade : public UItemUpgrade
{
public:
	float                                              amount;                                                   // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CapacityUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player);
};


// Class FSD.CooldownUpgrade
// 0x0008 (0x0150 - 0x0148)
class UCooldownUpgrade : public UItemUpgrade
{
public:
	float                                              amount;                                                   // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CooldownUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player);
};


// Class FSD.MultiHitscanUpgrade
// 0x0008 (0x0150 - 0x0148)
class UMultiHitscanUpgrade : public UItemUpgrade
{
public:
	EMultiHitscanUpgradeType                           upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MultiHitscanUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EMultiHitscanUpgradeType* upgradeType, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.ManualMiningUpgrade
// 0x0008 (0x0150 - 0x0148)
class UManualMiningUpgrade : public UItemUpgrade
{
public:
	EManualMiningUpgradeType                           upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ManualMiningUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EManualMiningUpgradeType* upgradeType);
};


// Class FSD.HitscanBaseUpgrade
// 0x0008 (0x0158 - 0x0150)
class UHitscanBaseUpgrade : public UStandardItemUpgrade
{
public:
	EHitScanBaseUpgradeType                            upgradeType;                                              // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HitscanBaseUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EHitScanBaseUpgradeType* upgradeType);
};


// Class FSD.DamageUpgrade
// 0x0010 (0x0160 - 0x0150)
class UDamageUpgrade : public UStandardItemUpgrade
{
public:
	EDamageUpgrade                                     upgradeType;                                              // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDamageComponentType                               DamageComponentType;                                      // 0x0151(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0152(0x0006) MISSED OFFSET
	class UClass*                                      RequiredClass;                                            // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, EDamageUpgrade* upgradeType, EDamageComponentType* DamageComponentType);
};


// Class FSD.FlatDamageUpgrade
// 0x0010 (0x0158 - 0x0148)
class UFlatDamageUpgrade : public UItemUpgrade
{
public:
	float                                              Damage;                                                   // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlatDamageUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UDamageClass** DamageClass, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.RandomDamageUpgrade
// 0x0008 (0x0150 - 0x0148)
class URandomDamageUpgrade : public UItemUpgrade
{
public:
	struct FRandRange                                  DamageRange;                                              // 0x0148(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomDamageUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player);
};


// Class FSD.DamageConversionUpgrade
// 0x0010 (0x0158 - 0x0148)
class UDamageConversionUpgrade : public UItemUpgrade
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConversionPercentage;                                     // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DamageIsAdded;                                            // 0x0154(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0155(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageConversionUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, class UDamageClass** DamageClass);
};


// Class FSD.TargetStateDamageBonusUpgrade
// 0x0010 (0x0158 - 0x0148)
class UTargetStateDamageBonusUpgrade : public UItemUpgrade
{
public:
	ETargetStateDamageBonusType                        TargetState;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              Bonus;                                                    // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TargetStateDamageBonusUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ETargetStateDamageBonusType* TargetState);
};


// Class FSD.StatusDamageBonusUpgrade
// 0x0020 (0x0168 - 0x0148)
class UStatusDamageBonusUpgrade : public UItemUpgrade
{
public:
	TArray<class UClass*>                              StatusEffects;                                            // 0x0148(0x0010) (Edit, ZeroConstructor)
	float                                              Bonus;                                                    // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusDamageBonusUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** StatusEffect, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.TargetSpecificDamageBonusUpgrade
// 0x0058 (0x01A0 - 0x0148)
class UTargetSpecificDamageBonusUpgrade : public UItemUpgrade
{
public:
	float                                              Bonus;                                                    // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	struct FGameplayTagQuery                           TagQuery;                                                 // 0x0150(0x0048) (Edit)
	struct FName                                       Key;                                                      // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TargetSpecificDamageBonusUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, struct FName* Key, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.PushSatusEffectDamageBonusUpgrade
// 0x0010 (0x0158 - 0x0148)
class UPushSatusEffectDamageBonusUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      StatusEffect;                                             // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Chance;                                                   // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PushSatusEffectDamageBonusUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** StatusEffect, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.GatlingHotShellsBonusUpgrade
// 0x0018 (0x0160 - 0x0148)
class UGatlingHotShellsBonusUpgrade : public UItemUpgrade
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConversionPercentage;                                     // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DamageIsAdded;                                            // 0x0154(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0155(0x0003) MISSED OFFSET
	float                                              TemperatureRequired;                                      // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x015C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GatlingHotShellsBonusUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UDamageClass** DamageClass);
};


// Class FSD.ExplosionUpgrade
// 0x0008 (0x0150 - 0x0148)
class UExplosionUpgrade : public UItemUpgrade
{
public:
	EExplosionUpgrade                                  upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExplosionUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** upgradedItem, class UClass** componentItem, class AFSDPlayerState** Player, EExplosionUpgrade* upgradeType, bool* includePreview, float* outBaseValue, float* outUpgradeValue);
};


// Class FSD.SingleUsableUpgrade
// 0x0008 (0x0150 - 0x0148)
class USingleUsableUpgrade : public UItemUpgrade
{
public:
	ESingleUsableUpgradeType                           upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SingleUsableUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class UClass** subItem, class AFSDPlayerState** Player, ESingleUsableUpgradeType* upgradeType);
};


// Class FSD.FlareUpgrade
// 0x0008 (0x0150 - 0x0148)
class UFlareUpgrade : public UItemUpgrade
{
public:
	EFlareUpgradeType                                  upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlareUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** flareClass, EFlareUpgradeType* upgradeType);
};


// Class FSD.FearAoEBonusUpgrade
// 0x0008 (0x0150 - 0x0148)
class UFearAoEBonusUpgrade : public UItemUpgrade
{
public:
	float                                              FearFactor;                                               // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FearAoEBonusUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player);
};


// Class FSD.GrenadeUpgrade
// 0x0008 (0x0150 - 0x0148)
class UGrenadeUpgrade : public UItemUpgrade
{
public:
	EGrenadeUpgradeType                                upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrenadeUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** flareClass, EGrenadeUpgradeType* upgradeType);
};


// Class FSD.LineCutterProjectileUpgrade
// 0x0008 (0x0150 - 0x0148)
class ULineCutterProjectileUpgrade : public UItemUpgrade
{
public:
	ELineCutterProjectileUpgradeType                   upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineCutterProjectileUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, ELineCutterProjectileUpgradeType* upgradeType);
};


// Class FSD.LineCutterUpgrade
// 0x0008 (0x0150 - 0x0148)
class ULineCutterUpgrade : public UItemUpgrade
{
public:
	ELineCutterUpgradeType                             upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineCutterUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, ELineCutterUpgradeType* upgradeType);
};


// Class FSD.ProjectileUpgrade
// 0x0010 (0x0160 - 0x0150)
class UProjectileUpgrade : public UStandardItemUpgrade
{
public:
	EProjectileUpgrade                                 upgradeType;                                              // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UClass*                                      projectileClass;                                          // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProjectileUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, EProjectileUpgrade* upgradeType);
};


// Class FSD.FlareGunUpgrade
// 0x0008 (0x0150 - 0x0148)
class UFlareGunUpgrade : public UItemUpgrade
{
public:
	EFlaregunUpgrades                                  upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlareGunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EFlaregunUpgrades* upgradeType);
};


// Class FSD.FlaregunProjectileUpgrade
// 0x0010 (0x0158 - 0x0148)
class UFlaregunProjectileUpgrade : public UItemUpgrade
{
public:
	EFlaregunProjectileUpgrades                        upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlaregunProjectileUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedItem, class AFSDPlayerState** Player, EFlaregunProjectileUpgrades* upgradeType);
};


// Class FSD.ChargedProjectileUpgrade
// 0x0010 (0x0158 - 0x0148)
class UChargedProjectileUpgrade : public UItemUpgrade
{
public:
	EChargedProjectileUpgrades                         upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedProjectileUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class UClass** upgradedActor, class AFSDPlayerState** Player, EChargedProjectileUpgrades* upgradeType);
};


// Class FSD.ElectricalSMGUpgrade
// 0x0008 (0x0150 - 0x0148)
class UElectricalSMGUpgrade : public UItemUpgrade
{
public:
	EElectricalSMGUpgrades                             upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ElectricalSMGUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EElectricalSMGUpgrades* upgradeType);
};


// Class FSD.GrapplingHookUpgrade
// 0x0008 (0x0150 - 0x0148)
class UGrapplingHookUpgrade : public UItemUpgrade
{
public:
	EGrapplingHookUpgrade                              upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GrapplingHookUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EGrapplingHookUpgrade* upgradeType);
};


// Class FSD.ZiplineGunUpgrade
// 0x0010 (0x0158 - 0x0148)
class UZiplineGunUpgrade : public UItemUpgrade
{
public:
	EZiplineGunUpgrades                                upgradeType;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ZiplineGunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EZiplineGunUpgrades* upgradeType);
};


// Class FSD.SentryGunUpgrade
// 0x0008 (0x0150 - 0x0148)
class USentryGunUpgrade : public UItemUpgrade
{
public:
	ESentryGunUpgradeType                              upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryGunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, ESentryGunUpgradeType* upgradeType);
};


// Class FSD.SentryGunTypeUpgrade
// 0x0010 (0x0158 - 0x0148)
class USentryGunTypeUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      SentryGunType;                                            // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MarkerType;                                               // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryGunTypeUpgrade");
		return ptr;
	}

};


// Class FSD.ArmorRegeneratorUpgrade
// 0x0008 (0x0150 - 0x0148)
class UArmorRegeneratorUpgrade : public UItemUpgrade
{
public:
	EArmorRegeneratorUpgrades                          upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorRegeneratorUpgrade");
		return ptr;
	}


	float STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EArmorRegeneratorUpgrades* upgradeType, bool* includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.AddComponentUpgrade
// 0x0010 (0x0158 - 0x0148)
class UAddComponentUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      ComponentClass;                                           // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ServerOnly;                                               // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AddComponentUpgrade");
		return ptr;
	}


	bool STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, class UClass** ComponentClass, bool* includePreview);
};


// Class FSD.TriggeredStatusEffectUpgrade
// 0x0038 (0x0180 - 0x0148)
class UTriggeredStatusEffectUpgrade : public UItemUpgrade
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0148(0x0010) MISSED OFFSET
	class UClass*                                      StatusEffect;                                             // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ETriggeredStatusEffectType                         upgradeType;                                              // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	float                                              AoERange;                                                 // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UPawnAffliction*                             PawnAfflictionOnTrigger;                                  // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AffectOwnerOnly;                                          // 0x0170(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0171(0x0003) MISSED OFFSET
	float                                              EffectDuration;                                           // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Owner;                                                    // 0x0178(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TriggeredStatusEffectUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, class UClass** StatusEffect, ETriggeredStatusEffectType* aUpgradeType);
	void All_OnAoETriggered(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal);
};


// Class FSD.ArmorUpgrade
// 0x0008 (0x0150 - 0x0148)
class UArmorUpgrade : public UItemUpgrade
{
public:
	EArmorUpgradeType                                  upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** armorClass, EArmorUpgradeType* aUpgradeType);
	struct FUpgradeValues STATIC_GetUpgradedStatValue(class AFSDPlayerState** Player, class UClass** armorClass, class UPawnStat** Stat);
};


// Class FSD.ArmorStatUpgrade
// 0x0010 (0x0158 - 0x0148)
class UArmorStatUpgrade : public UItemUpgrade
{
public:
	class UPawnStat*                                   Stat;                                                     // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              amount;                                                   // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorStatUpgrade");
		return ptr;
	}

};


// Class FSD.BoscoUpgrade
// 0x0008 (0x0150 - 0x0148)
class UBoscoUpgrade : public UItemUpgrade
{
public:
	EBoscoUpgrades                                     upgradeType;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              amount;                                                   // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BoscoUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EBoscoUpgrades* upgradeType);
};


// Class FSD.PlatformGunUpgrade
// 0x0008 (0x0150 - 0x0148)
class UPlatformGunUpgrade : public UItemUpgrade
{
public:
	EPlatformGunUpgrades                               myUpgradeType;                                            // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlatformGunUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class AFSDPlayerState** Player, class UClass** Item, EPlatformGunUpgrades* aUpgradeType);
};


// Class FSD.DetPackUpgrade
// 0x0008 (0x0150 - 0x0148)
class UDetPackUpgrade : public UItemUpgrade
{
public:
	float                                              amount;                                                   // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDetPackUpgrades                                   upgradeType;                                              // 0x014C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x014D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DetPackUpgrade");
		return ptr;
	}


	struct FUpgradeValues STATIC_GetUpgradedValue(class UClass** Item, class AFSDPlayerState** Player, EDetPackUpgrades* upgradeType);
};


// Class FSD.BonusDamageUpgrade
// 0x0008 (0x0150 - 0x0148)
class UBonusDamageUpgrade : public UItemUpgrade
{
public:
	class UDamageBonusBase*                            DamageBonus;                                              // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BonusDamageUpgrade");
		return ptr;
	}

};


// Class FSD.Upgradable
// 0x0000 (0x0028 - 0x0028)
class UUpgradable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Upgradable");
		return ptr;
	}


	void Upgraded(TArray<class UItemUpgrade*>* Upgrades);
};


// Class FSD.UpgradableGear
// 0x0000 (0x0028 - 0x0028)
class UUpgradableGear : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UpgradableGear");
		return ptr;
	}


	void GetGearStatEntry(class AFSDPlayerState** PlayerState, TArray<struct FGearStatEntry>* Stats);
};


// Class FSD.JellyBreeder
// 0x0098 (0x05D0 - 0x0538)
class AJellyBreeder : public AAFlyingBug
{
public:
	class UAnimSequenceBase*                           EggSpawnAnimation;                                        // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             EggParticles;                                             // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  EggSound;                                                 // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UEnemyDescriptor*                            EnemyToSpawn;                                             // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      EggClass;                                                 // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenBursts;                                        // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenEggs;                                          // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CloseToSpawnEggTime;                                      // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x056C(0x000C) MISSED OFFSET
	float                                              EmissionInterpInSpeed;                                    // 0x0578(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EmissionInterpOutSpeed;                                   // 0x057C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EmissionInAlpha;                                          // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EmissionOutAlpha;                                         // 0x0584(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxEmission;                                              // 0x0588(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          mat;                                                      // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    Mid;                                                      // 0x0598(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                EggBurstSize;                                             // 0x05A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	int                                                MaxJellies;                                               // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05AC(0x0004) MISSED OFFSET
	int                                                MatIndex;                                                 // 0x05B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierOnHighPlayerCount;                              // 0x05B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           WeakPointMaterial;                                        // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           UnWeakPointMaterial;                                      // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsInBreedMode;                                            // 0x05C8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x05C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.JellyBreeder");
		return ptr;
	}


	void TookDamage(float* aAmount);
	void SpawnEnemies(class AProjectile** aEgg, int* aAmountToSpawn);
	void SawPawn(class APawn** aSeenPawn);
	void PlaySpawnEggAnim();
	void OnRep_BreedMode();
	void OnJellyDestroyed(class AActor** AActor);
	void BreedModeFlipped(bool* aIsLayingEggs);
};


// Class FSD.JellyBreederAnimInstance
// 0x0010 (0x0300 - 0x02F0)
class UJellyBreederAnimInstance : public UFlyingBugAnimInstance
{
public:
	bool                                               ReadyToSpawnEggs;                                         // 0x02F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x02F1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.JellyBreederAnimInstance");
		return ptr;
	}

};


// Class FSD.JellyEggAnimInstance
// 0x0010 (0x0280 - 0x0270)
class UJellyEggAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0270(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.JellyEggAnimInstance");
		return ptr;
	}

};


// Class FSD.JetPackItem
// 0x0038 (0x04A8 - 0x0470)
class AJetPackItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0470(0x0004) MISSED OFFSET
	float                                              ActiveTime;                                               // 0x0474(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 VerticalAccelerationCurve;                                // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VerticalAcceleration;                                     // 0x0480(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxVerticalSpeed;                                         // 0x0484(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxHorizontalSpeed;                                       // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxHorizontalDrift;                                       // 0x048C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BurnDuration;                                             // 0x0490(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RechargeDuration;                                         // 0x0494(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Fuel;                                                     // 0x0498(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Active;                                                   // 0x049C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x049D(0x0003) MISSED OFFSET
	class UPlayerMovementComponent*                    CharacterMovement;                                        // 0x04A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.JetPackItem");
		return ptr;
	}


	void Server_StopThruster();
	void Server_StartThruster();
	void OnRep_Fuel(float* OldFuel);
	void OnRep_Active();
	void OnFuelChanged(float* Value, float* Delta);
};


// Class FSD.KeepInsideWorld
// 0x0018 (0x0110 - 0x00F8)
class UKeepInsideWorld : public UActorComponent
{
public:
	TArray<TWeakObjectPtr<class AActor>>               ActorsToKeepInsideWorld;                                  // 0x00F8(0x0010) (ZeroConstructor, Transient)
	int                                                IteratorIndex;                                            // 0x0108(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.KeepInsideWorld");
		return ptr;
	}


	void STATIC_UnregisterForKeepInsideWorld(class UObject** WorldContextObject, class AActor** Actor);
	void STATIC_RegisterForKeepInsideWorld(class UObject** WorldContextObject, class AActor** Actor);
};


// Class FSD.LaserPointerMarker
// 0x0038 (0x0368 - 0x0330)
class ALaserPointerMarker : public AActor
{
public:
	struct FText                                       LookAtName;                                               // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FLinearColor                                LookAtColor;                                              // 0x0348(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      LookAtTarget;                                             // 0x0358(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LookAtIcon;                                               // 0x0360(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LaserPointerMarker");
		return ptr;
	}

};


// Class FSD.LaserPointerWaypoint
// 0x0020 (0x0350 - 0x0330)
class ALaserPointerWaypoint : public AActor
{
public:
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ALaserPointerItem>            LaserPointer;                                             // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Normal;                                                   // 0x0340(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                Index;                                                    // 0x034C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LaserPointerWaypoint");
		return ptr;
	}


	void OnShow();
	void OnHide();
};


// Class FSD.LaserPointerItem
// 0x01B8 (0x0628 - 0x0470)
class ALaserPointerItem : public AAnimatedItem
{
public:
	class UClass*                                      MarkerType;                                               // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SecondaryMarkerType;                                      // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class ALaserPointerMarker>          ActiveMarker;                                             // 0x0480(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      WaypointType;                                             // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxWaypoints;                                             // 0x0490(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	TArray<class ALaserPointerWaypoint*>               Waypoints;                                                // 0x0498(0x0010) (ZeroConstructor, Transient)
	int                                                NextWaypointIndex;                                        // 0x04A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	struct FHoldButton                                 LaserpointButton;                                         // 0x04B0(0x0028) (Edit)
	float                                              MarkerLifeTime;                                           // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorMinerals;                                            // 0x04DC(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorEnemy;                                               // 0x04EC(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorOther;                                               // 0x04FC(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UDialogDataAsset*                            DefaultLookAtShout;                                       // 0x0510(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            DefaultEnemyShout;                                        // 0x0518(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             PointerComponent;                                         // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FHitResult                                  LookAtHit;                                                // 0x0528(0x0088) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	TWeakObjectPtr<class UObjectInfoComponent>         LookAtInfo;                                               // 0x05B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FText                                       LookAtName;                                               // 0x05B8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FText                                       LookAtDescription;                                        // 0x05D0(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FLinearColor                                LookAtColor;                                              // 0x05E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LookAtDistance;                                           // 0x05F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05FC(0x0004) MISSED OFFSET
	class UTexture2D*                                  LookAtIcon;                                               // 0x0600(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ELaserPointerTargetType                            TargetType;                                               // 0x0608(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0609(0x0007) MISSED OFFSET
	class AActor*                                      ExtraActor;                                               // 0x0610(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UDialogDataAsset*                            LookAtShout;                                              // 0x0618(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AFSDGameState*                               GameState;                                                // 0x0620(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LaserPointerItem");
		return ptr;
	}


	void ToggleLaserVisible(bool* aVisible);
	void ServerPlaceMarker(struct FVector* Location, struct FText* Name, struct FLinearColor* Color, class AActor** Target, ELaserPointerTargetType* TypeOfTarget, class UTexture2D** Icon, class UClass** aMarkerType);
	void Server_SecondaryUse();
	void OnPointOfInterest(class AActor** TargetActor, struct FVector* TargetLocation, class UTexture2D** TargetIcon);
	void OnMarkerPlaced(struct FVector* Location, struct FText* Name, struct FLinearColor* Color, class AActor** Target, ELaserPointerTargetType* TypeOfTarget);
	void GetPointTransform(struct FTransform* PointTransform);
};


// Class FSD.LineItemComponent
// 0x0000 (0x05A0 - 0x05A0)
class ULineItemComponent : public USphereComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineItemComponent");
		return ptr;
	}

};


// Class FSD.LineCarverComponent
// 0x0020 (0x05C0 - 0x05A0)
class ULineCarverComponent : public ULineItemComponent
{
public:
	float                                              HRange;                                                   // 0x05A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VRange;                                                   // 0x05A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CielingNoiseRange;                                        // 0x05A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WallNoiseRange;                                           // 0x05AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloorNoiseRange;                                          // 0x05B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloorAngle;                                               // 0x05B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x05B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineCarverComponent");
		return ptr;
	}

};


// Class FSD.LineItem
// 0x0018 (0x0350 - 0x0338)
class ALineItem : public AGenerationItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0338(0x0008) MISSED OFFSET
	TArray<int>                                        Indicies;                                                 // 0x0340(0x0010) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineItem");
		return ptr;
	}

};


// Class FSD.LineCarver
// 0x0020 (0x0370 - 0x0350)
class ALineCarver : public ALineItem
{
public:
	class UFloodFillSettings*                          CeilingNoiseOverride;                                     // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          WallNoiseOverride;                                        // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          FloorNoiseOverride;                                       // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Cielingheight;                                            // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloorDepth;                                               // 0x036C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineCarver");
		return ptr;
	}

};


// Class FSD.LineSegmentCarverComponent
// 0x0030 (0x05B0 - 0x0580)
class ULineSegmentCarverComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	bool                                               Visible;                                                  // 0x0588(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0589(0x0003) MISSED OFFSET
	int                                                Layer;                                                    // 0x058C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Cielingheight;                                            // 0x0590(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloorDepth;                                               // 0x0594(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          CeilingNoiseOverride;                                     // 0x0598(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          WallNoiseOverride;                                        // 0x05A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          FloorNoiseOverride;                                       // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineSegmentCarverComponent");
		return ptr;
	}

};


// Class FSD.LineSegmentCarver
// 0x0018 (0x0350 - 0x0338)
class ALineSegmentCarver : public AGenerationItem
{
public:
	class ULineSegmentCarverComponent*                 LineComponent;                                            // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineSegmentCarver");
		return ptr;
	}

};


// Class FSD.LineCutterProjectile
// 0x0190 (0x0558 - 0x03C8)
class ALineCutterProjectile : public AProjectile
{
public:
	struct FScaledEffect                               EletricHitEffect;                                         // 0x03C8(0x0010) (Edit)
	struct FScaledEffect                               ProjectileDisappearEffect;                                // 0x03D8(0x0010) (Edit, BlueprintVisible)
	float                                              SwipeRadius;                                              // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DoubleLineDistanceMultiplier;                             // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OverlapRadius;                                            // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DestroyOnTerrainCollision;                                // 0x03F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsDead;                                                   // 0x03F5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EImpactDecalSize                                   EletricDecalSize;                                         // 0x03F6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EImpactDecalSize                                   ImpactDecalSize;                                          // 0x03F7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x03F8(0x0040) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLineDestroy;                                            // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineSetMaxSize;                                         // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineMuliMaxSize;                                        // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineLifespanEnd;                                        // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineAddMaxSize;                                         // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerformHit;                                             // 0x0488(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineEffectHide;                                         // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FVector                                     LeftLastPosition;                                         // 0x04A8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightLastPosition;                                        // 0x04B4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             LineRoot;                                                 // 0x04C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             LeftSphere;                                               // 0x04C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RightSphere;                                              // 0x04D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             LeftSphere2;                                              // 0x04D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RightSphere2;                                             // 0x04E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BeamParticle;                                             // 0x04E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BeamParticle2;                                            // 0x04F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    LeftHitParticles;                                         // 0x04F8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    RightHitParticles;                                        // 0x0500(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x0508(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    LineRotation;                                             // 0x050C(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData)
	ELineRotation                                      RotationMode;                                             // 0x0518(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldExplode;                                            // 0x0519(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyOne;                                                  // 0x051A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsDoubleLine;                                             // 0x051B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LineMaxSize;                                              // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LineExpansionDelay;                                       // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLineExpansion;                                      // 0x0524(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FireRate;                                                 // 0x0528(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x0530(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0538(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineCutterProjectile");
		return ptr;
	}


	void UpdateBeamLocations();
	void TerrainSweep(struct FVector* Left, struct FVector* Right);
	void SpawnDecal(struct FHitResult* Result);
	void SetExtraBeamVisibility(bool* IsVisible);
	void Server_RemoveDebris(int* instance, int* Component);
	void PerformHit__DelegateSignature(struct FHitResult* Result);
	void OnRep_LineRotation();
	void LineSetMaxSize__DelegateSignature(float* MaxSize, float* MaxSizeVisual);
	void LineMuliMaxSize__DelegateSignature(float* Multiplier);
	void LineLifeSpanDestroy__DelegateSignature();
	void LineEffectHide__DelegateSignature();
	void LineDestroy__DelegateSignature(struct FHitResult* Result);
	void LineAddMaxSize__DelegateSignature(float* Size);
	void Fire(struct FVector* Origin, struct FVector* Direction, float* distance);
};


// Class FSD.GuntowerLineProjectile
// 0x0070 (0x0438 - 0x03C8)
class AGuntowerLineProjectile : public AProjectile
{
public:
	struct FScriptMulticastDelegate                    OnLineDestroy;                                            // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USceneComponent*                             LeftLinePoint;                                            // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RightLinePoint;                                           // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            DamageComponent;                                          // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BeamParticles;                                            // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              PlatformDissolveRadius;                                   // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlatformDissolveSqueeze;                                  // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    HitParticles;                                             // 0x0400(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0408(0x0020) MISSED OFFSET
	float                                              TimeBetweenLineChecks;                                    // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x042C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GuntowerLineProjectile");
		return ptr;
	}


	void TurnOffParticles();
	void LineDestroy__DelegateSignature(struct FHitResult* Result);
	void Fire(struct FVector* Origin, struct FVector* Direction, float* distance);
};


// Class FSD.LineFillerComponent
// 0x0020 (0x05C0 - 0x05A0)
class ULineFillerComponent : public ULineItemComponent
{
public:
	float                                              Range;                                                    // 0x05A0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              NoiseRange;                                               // 0x05A4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRandRange                                  RandomRange;                                              // 0x05A8(0x0008) (Edit)
	struct FRandRange                                  RandomNoiseRange;                                         // 0x05B0(0x0008) (Edit)
	struct FRandRange                                  FillAmount;                                               // 0x05B8(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineFillerComponent");
		return ptr;
	}

};


// Class FSD.LineFiller
// 0x0020 (0x0370 - 0x0350)
class ALineFiller : public ALineItem
{
public:
	class UFloodFillSettings*                          NoiseOverride;                                            // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRandRange                                  RangeScale;                                               // 0x0358(0x0008) (Edit)
	struct FRandRange                                  NoiseRangeScale;                                          // 0x0360(0x0008) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineFiller");
		return ptr;
	}

};


// Class FSD.LineSegmentFillerComponent
// 0x0030 (0x05B0 - 0x0580)
class ULineSegmentFillerComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	bool                                               Visible;                                                  // 0x0588(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0589(0x0007) MISSED OFFSET
	class UFloodFillSettings*                          NoiseOverride;                                            // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRandRange                                  RangeScale;                                               // 0x0598(0x0008) (Edit)
	struct FRandRange                                  NoiseRangeScale;                                          // 0x05A0(0x0008) (Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineSegmentFillerComponent");
		return ptr;
	}

};


// Class FSD.LineSegmentFiller
// 0x0018 (0x0350 - 0x0338)
class ALineSegmentFiller : public AGenerationItem
{
public:
	class ULineSegmentFillerComponent*                 LineComponent;                                            // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineSegmentFiller");
		return ptr;
	}

};


// Class FSD.LocalizationFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class ULocalizationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LocalizationFunctionLibrary");
		return ptr;
	}


	TArray<struct FLocalizedLanguageInfo> STATIC_GetLocalizedLanguages();
};


// Class FSD.FSDLocalizationSettings
// 0x0010 (0x0048 - 0x0038)
class UFSDLocalizationSettings : public UDeveloperSettings
{
public:
	TArray<struct FFSDTranslationProgress>             CommunityTranslationProgress;                             // 0x0038(0x0010) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDLocalizationSettings");
		return ptr;
	}

};


// Class FSD.LoginBlueprintCallProxy
// 0x0040 (0x0068 - 0x0028)
class ULoginBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0050(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LoginBlueprintCallProxy");
		return ptr;
	}


	class ULoginBlueprintCallProxy* STATIC_Login(class UObject** WorldContextObject);
};


// Class FSD.LookingAtWidget
// 0x0040 (0x0270 - 0x0230)
class ULookingAtWidget : public UUserWidget
{
public:
	float                                              TargetSelectDuration;                                     // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetLostDuration;                                       // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UCharacterSightComponent>     CharacterSight;                                           // 0x0240(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       CurrentTarget;                                            // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UPawnAfflictionComponent>     CurrentTargetAfflictions;                                 // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TScriptInterface<class UHealth>                    CurrentTargetHealth;                                      // 0x0258(0x0030) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetLostTime;                                           // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTargetSet;                                               // 0x026C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x026D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LookingAtWidget");
		return ptr;
	}


	void SetCurrentTarget(class AActor** NewActor, TScriptInterface<class UHealth>* HealthComponent, float* OverrideTargetLostTime);
	void ResetCurrentTarget();
	void ReceiveUpdateTarget(class AActor** InCurrentTarget, float* DeltaTime);
	void ReceiveTargetLost();
	void ReceiveNewTarget(class AActor** InCurrentTarget);
	bool IsValidTarget(class AActor** TargetActor, TScriptInterface<class UHealth>* TargetHealth);
	bool IsBossFight(TScriptInterface<class UHealth>* Health);
	class UHealthComponentBase* GetLookingAtHealth();
	class AActor* GetLookingAtActor();
	bool GetCharacterTemperatureEffect(float* TemperatureEffect);
};


// Class FSD.ManualMiningItem
// 0x02C8 (0x0738 - 0x0470)
class AManualMiningItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	bool                                               QuadDamageCarving;                                        // 0x0478(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0479(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    ActiveMiningEvent;                                        // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFirstPersonStaticMeshComponent*             FPAnimationEventMesh;                                     // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TPAnimationEventMesh;                                     // 0x0498(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            DamageComponent;                                          // 0x04A0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            SpecialDamageComponent;                                   // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              SpecialCooldown;                                          // 0x04B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpecialCooldownRemaining;                                 // 0x04B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x04B8(0x0010) MISSED OFFSET
	struct FCoolDownProgressStyle                      SpecialCooldownUI;                                        // 0x04C8(0x0040) (Edit)
	int                                                RockMiningBonus;                                          // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DirtMiningBonus;                                          // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageRange;                                              // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OnDamageEnemySlowdownEffect;                              // 0x0518(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       WideDamageTrackingTags;                                   // 0x0520(0x0020) (Edit)
	class USoundCue*                                   MiningSound;                                              // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        MineRumble;                                               // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        PartialMineRumble;                                        // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        DamageRumble;                                             // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GeneralImpactAudioVolume;                                 // 0x0560(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	class UParticleSystem*                             ImpactParticles;                                          // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitCooldown;                                              // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MiningDuration;                                           // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceConsideredSameHit;                                // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlockParticlesScaleFP;                                    // 0x057C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlockParticlesScaleTP;                                    // 0x0580(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EManualMiningState                                 State;                                                    // 0x0584(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x163];                                     // 0x0585(0x0163) MISSED OFFSET
	bool                                               ActiveMiningEnabled;                                      // 0x06E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x06E9(0x0003) MISSED OFFSET
	int                                                MaxActiveMiningCount;                                     // 0x06EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActiveMiningSpeedBoost;                                   // 0x06F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               PreventQMining;                                           // 0x06F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x06F5(0x0003) MISSED OFFSET
	float                                              QMiningExpectedDelay;                                     // 0x06F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              QMiningInitialDelay;                                      // 0x06FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              QMiningReducedPlayRatePct;                                // 0x0700(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0704(0x0004) MISSED OFFSET
	double                                             QMiningLastHitTime;                                       // 0x0708(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ActiveMiningSucceedSound;                                 // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ActiveMiningFailedSound;                                  // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0720(0x0010) MISSED OFFSET
	bool                                               PowerAttackEnabled;                                       // 0x0730(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0731(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ManualMiningItem");
		return ptr;
	}


	void SpecialTargetDamageEffects(struct FVector* ImpactPoint, struct FVector* ImpactNormal);
	void SetSpecialCoolDownDuration(float* newCooldownDuration);
	void Server_SetState(EManualMiningState* NewState);
	void Server_RemoveDebrisInstance(struct FVector_NetQuantize* HitPos, int* DebrisIndex, int* remappedIndex);
	void Server_HitBlock(struct FVector_NetQuantize* Position, int* Material, bool* removeDebris, bool* isSpecial);
	void Server_DoPowerAttack();
	void Server_DigBlock2(struct FVector* carvePos, struct FVector* carveDirection, int* TerrainMaterial, bool* isSpecial);
	void Server_DamageTarget(class UPrimitiveComponent** TargetComponent, bool* isSpecial, struct FVector_NetQuantize* ImpactPoint, struct FVector_NetQuantizeNormal* ImpactNormal, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex);
	void RefreshSpecialCooldown();
	void OnRep_State(EManualMiningState* oldState);
	float GetSpecialCooldownProgress();
	void All_SimulateHitBlock(struct FVector_NetQuantize* Position, int* materia, bool* removeDebris, bool* isSpecial);
	void All_SimulateDigDebris(struct FVector_NetQuantize* Position, class UParticleSystem** particles, class USoundCue** cue);
	void All_SimulateDigBlock(struct FVector_NetQuantize* Position, bool* spawnParticles, int* Material, float* Density, bool* isSpecial);
	void All_SimulateDamageTarget(class UPrimitiveComponent** TargetComponent, bool* isSpecial, struct FVector_NetQuantize* ImpactPoint, struct FVector_NetQuantizeNormal* ImpactNormal, class UFSDPhysicalMaterial** PhysMaterial, unsigned char* BoneIndex);
	void All_DoPowerAttack();
};


// Class FSD.MasteryIconWidget
// 0x0000 (0x0230 - 0x0230)
class UMasteryIconWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MasteryIconWidget");
		return ptr;
	}


	void ReceiveUnlocked();
};


// Class FSD.MilestoneAsset
// 0x00B0 (0x00E0 - 0x0030)
class UMilestoneAsset : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnMilestoneClaimed;                                       // 0x0030(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMilestoneReached;                                       // 0x0040(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FGuid                                       SavegameID;                                               // 0x0050(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UTexture2D*                                  LargeImage;                                               // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       FormattedTitle;                                           // 0x0068(0x0018) (Edit)
	int                                                FormattedValueOffset;                                     // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class UMissionStat*                                TrackingStat;                                             // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.MilestoneAsset.TrackingCharacter
	TArray<struct FMilestoneTier>                      Tiers;                                                    // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UFSDGameInstance*                            GameInstance;                                             // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastTierReached;                                          // 0x00D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPendingMilestoneReached;                                 // 0x00D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xB];                                       // 0x00D5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MilestoneAsset");
		return ptr;
	}


	TArray<class UMilestoneAsset*> STATIC_SortMilestonesByProgress(class UObject** WorldContext, TArray<class UMilestoneAsset*>* Milestones);
	void OnMissionStatChanged(class UMissionStat** Stat, float* Value);
	bool IsCompleted(class UObject** WorldContext);
	bool IsClaimable(class UObject** WorldContext);
	struct FText GetTitleForTier(int* Tier);
	struct FText GetTitle(class UObject** WorldContext);
	int GetNextPerkPointsReward(class UObject** WorldContext);
	void GetCurrentProgress(class UObject** WorldContext, int* Tier, float* Progress, float* CurrentCount, float* TargetCount);
	int GetClaimedTier(class UObject** WorldContext);
	bool GetClaimedProgress(class UObject** WorldContext, int* Tier, float* Progress, float* CurrentCount, float* TargetCount);
	class UTexture2D* GetCategoryIcon();
	void ClearPendingMilestoneReached();
	int ClaimNextTier(class UObject** WorldContext);
};


// Class FSD.MiningPodCalldownLocation
// 0x0000 (0x0330 - 0x0330)
class AMiningPodCalldownLocation : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MiningPodCalldownLocation");
		return ptr;
	}

};


// Class FSD.MiningPodAnimInstance
// 0x0000 (0x0270 - 0x0270)
class UMiningPodAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MiningPodAnimInstance");
		return ptr;
	}

};


// Class FSD.MissionChallenge
// 0x0000 (0x0030 - 0x0030)
class UMissionChallenge : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionChallenge");
		return ptr;
	}

};


// Class FSD.MiningPod
// 0x0148 (0x0478 - 0x0330)
class AMiningPod : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	float                                              DropHeight;                                               // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x033C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0348(0x0008) MISSED OFFSET
	class UAutoCarverComponent*                        AutoCarver;                                               // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0358(0x0010) MISSED OFFSET
	class UCurveFloat*                                 DropCurve;                                                // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DepartCurve;                                              // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 CarverDropCurve;                                          // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarverRotationSpeed;                                      // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CarverScale;                                              // 0x0384(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0390(0x0020) (Edit)
	class UBoxComponent*                               DwarfCheckerBox;                                          // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              DepartureTime;                                            // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	struct FText                                       DepartueCountdownName;                                    // 0x03C0(0x0018) (Edit)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET
	struct FMiningPodDialogs                           Dialogs;                                                  // 0x03E0(0x0050) (Edit, ZeroConstructor, IsPlainOldData)
	EMiningPodMission                                  MissionType;                                              // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasLanded;                                                // 0x0431(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0432(0x0006) MISSED OFFSET
	class UOutlineComponent*                           PodOutline;                                               // 0x0438(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FVector                                     StartLocation;                                            // 0x0440(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EMiningPodState                                    State;                                                    // 0x044C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EMiningPodRampState                                RampState;                                                // 0x044D(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x044E(0x0002) MISSED OFFSET
	float                                              TargetDropTime;                                           // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetDepartureTime;                                      // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeToDrop;                                               // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	class UObjectivesManager*                          ObjectivesManager;                                        // 0x0460(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0468(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MiningPod");
		return ptr;
	}


	class AMiningPod* STATIC_SpawnPodAtLocation(class UObject** WorldContextObject, class UClass** podClass, struct FTransform* Transform);
	void SetMuleInstance(class ADonkeyCharacter** Donkey);
	void RecieveReturnTimerFifteenSecondWarning();
	void RecieveReturnTimerExpired();
	void PrepForTakeOff();
	void PowerUp();
	void PoweredUp();
	void OnRep_State();
	void OnRep_RampState();
	void OnPrepForTakeOff();
	void OnPoweringUp();
	void OnPoweredUp();
	void OnHostInsidePod(bool* isInside);
	void OnDropStarted();
	void OnDroppodImpact();
	void OnDrillingStarted();
	void OnDeparting();
	void OnCountdownFinished();
	void OnCountdownChanged(int* newTime);
	void OnAllDwavesInsidePod(bool* AllInside);
	int GetTimeToDeparture();
	bool GetHasLanded();
	struct FVector GetDonkeyReturnPickupLocation();
	void ForceTakeoff();
	void ExitSpacerig();
	void STATIC_DropToTarget(class UObject** WorldContextObject, class UClass** podClass, struct FTransform* dropLocation, int* DropDelay);
	void STATIC_DropToMission(class UObject** WorldContextObject, class UClass** podClass, struct FVector* Location);
	void DepositAllPlayersMaterials();
	void Depart();
	void CorrectLocationsForSpawnedOnLocation();
	struct FVector STATIC_AdjustLandingLocationToGround(class UObject** WorldContextObjet, struct FVector* initialLocation);
};


// Class FSD.MissionManager
// 0x0010 (0x0108 - 0x00F8)
class UMissionManager : public UActorComponent
{
public:
	TArray<class URunningMissionBP*>                   RunningBlueprints;                                        // 0x00F8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionManager");
		return ptr;
	}


	void OnMatchStarted();
};


// Class FSD.MissionMutator
// 0x0048 (0x0078 - 0x0030)
class UMissionMutator : public UDataAsset
{
public:
	class UClass*                                      MissionBP;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MissionMutator.BannedObjectives
	TArray<class UMutator*>                            Mutators;                                                 // 0x0048(0x0010) (Edit, ZeroConstructor)
	struct FText                                       Title;                                                    // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionMutator");
		return ptr;
	}

};


// Class FSD.Mutator
// 0x0000 (0x0030 - 0x0030)
class UMutator : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Mutator");
		return ptr;
	}

};


// Class FSD.VeinMutator
// 0x0010 (0x0040 - 0x0030)
class UVeinMutator : public UMutator
{
public:
	class UVeinResourceData*                           VeinResource;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Modifier;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VeinMutator");
		return ptr;
	}

};


// Class FSD.CraftingMaterialMutator
// 0x0008 (0x0038 - 0x0030)
class UCraftingMaterialMutator : public UMutator
{
public:
	float                                              Modifier;                                                 // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CraftingMaterialMutator");
		return ptr;
	}

};


// Class FSD.ResourceMutator
// 0x0018 (0x0048 - 0x0030)
class UResourceMutator : public UMutator
{
public:
	TArray<class UResourceData*>                       Resources;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)
	float                                              Modifier;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceMutator");
		return ptr;
	}

};


// Class FSD.SupplyPodMutator
// 0x0008 (0x0038 - 0x0030)
class USupplyPodMutator : public UMutator
{
public:
	float                                              CostModifier;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SupplyPodMutator");
		return ptr;
	}

};


// Class FSD.PlayerShieldsMutator
// 0x0008 (0x0038 - 0x0030)
class UPlayerShieldsMutator : public UMutator
{
public:
	float                                              ShieldModifier;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerShieldsMutator");
		return ptr;
	}

};


// Class FSD.EnemyRarityMutator
// 0x0018 (0x0048 - 0x0030)
class UEnemyRarityMutator : public UMutator
{
public:
	float                                              RarityMultiplier;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpawnAmountMultiplier;                                    // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DifficultyMultiplier;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UEnemyDescriptor*                            EnemyDescriptor;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyRarityMutator");
		return ptr;
	}

};


// Class FSD.EncounterOverrideMutator
// 0x0000 (0x0030 - 0x0030)
class UEncounterOverrideMutator : public UMutator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EncounterOverrideMutator");
		return ptr;
	}

};


// Class FSD.NoHeadlightMutator
// 0x0000 (0x0030 - 0x0030)
class UNoHeadlightMutator : public UMutator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NoHeadlightMutator");
		return ptr;
	}

};


// Class FSD.DifficultyMutator
// 0x0030 (0x0060 - 0x0030)
class UDifficultyMutator : public UMutator
{
public:
	float                                              ExtraLargeEnemyDamageResistanceMultiplier;                // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyDamageResistanceMultiplier;                          // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SmallEnemyDamageResistanceMultiplier;                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyDamageModifierMultiplier;                            // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyCountModifierMultiplier;                             // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeakpointDamageMultiplier;                                // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HazardBonus;                                              // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FriendlyFireModifierMultiplier;                           // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyWaveIntervalModifier;                                // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyNormalWaveIntervalModifier;                          // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyNormalWaveDifficultyMultiplier;                      // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DifficultyMutator");
		return ptr;
	}

};


// Class FSD.ResourceVeinMutator
// 0x0018 (0x0048 - 0x0030)
class UResourceVeinMutator : public UMutator
{
public:
	class UResourceData*                               Resource;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeinLengthMultiplier;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RangeMultiplier;                                          // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseRangeMultiplier;                                     // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceVeinMutator");
		return ptr;
	}

};


// Class FSD.RewardMutator
// 0x0020 (0x0050 - 0x0030)
class URewardMutator : public UMutator
{
public:
	struct FText                                       RewardText;                                               // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              XPMultiplier;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CreditMultiplier;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RewardMutator");
		return ptr;
	}

};


// Class FSD.CommunicationMutator
// 0x0008 (0x0038 - 0x0030)
class UCommunicationMutator : public UMutator
{
public:
	float                                              PitchMultiplier;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CommunicationMutator");
		return ptr;
	}

};


// Class FSD.ForceStationaryEncounterMutator
// 0x0010 (0x0040 - 0x0030)
class UForceStationaryEncounterMutator : public UMutator
{
public:
	class UEnemyGroupDescriptor*                       EnemyGroup;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FIRandRange                                 GroupSize;                                                // 0x0038(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ForceStationaryEncounterMutator");
		return ptr;
	}

};


// Class FSD.ExplosiveEnemiesMutator
// 0x0010 (0x0040 - 0x0030)
class UExplosiveEnemiesMutator : public UMutator
{
public:
	TArray<class UClass*>                              DamageComponents;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExplosiveEnemiesMutator");
		return ptr;
	}


	void ExplodeEnemy(class AFSDPawn** enemy);
};


// Class FSD.RunningMissionBP
// 0x0000 (0x0028 - 0x0028)
class URunningMissionBP : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RunningMissionBP");
		return ptr;
	}


	void StartLogic();
};


// Class FSD.InfestedEnemiesMutator
// 0x0010 (0x0040 - 0x0030)
class UInfestedEnemiesMutator : public UMutator
{
public:
	TArray<class UParticleSystem*>                     SpawnEffects;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.InfestedEnemiesMutator");
		return ptr;
	}


	class UParticleSystem* GetParticleSystem(class AFSDPawn** enemy);
};


// Class FSD.StatusEffectMissionBP
// 0x0050 (0x0078 - 0x0028)
class UStatusEffectMissionBP : public URunningMissionBP
{
public:
	struct FGameplayTagQuery                           EnemyQuery;                                               // 0x0028(0x0048) (Edit)
	class UClass*                                      StatusEffect;                                             // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectMissionBP");
		return ptr;
	}


	void OnEnemySpawned(class APawn** Pawn);
};


// Class FSD.NoOxygenMutator
// 0x0018 (0x0048 - 0x0030)
class UNoOxygenMutator : public UMutator
{
public:
	float                                              OxygenReplenishmentRate;                                  // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UClass*                                      OxygenComponent;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReplenishOxygenEffect;                                    // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NoOxygenMutator");
		return ptr;
	}

};


// Class FSD.PlayerDamageTakenMutator
// 0x0058 (0x0088 - 0x0030)
class UPlayerDamageTakenMutator : public UMutator
{
public:
	float                                              DamageMultiplier;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x0034(0x0050) UNKNOWN PROPERTY: SetProperty FSD.PlayerDamageTakenMutator.SkipDamageClasses

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerDamageTakenMutator");
		return ptr;
	}

};


// Class FSD.MissionMutatorManager
// 0x0000 (0x00F8 - 0x00F8)
class UMissionMutatorManager : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionMutatorManager");
		return ptr;
	}

};


// Class FSD.MissionPlayerAndCharacterWidget
// 0x0040 (0x0270 - 0x0230)
class UMissionPlayerAndCharacterWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0230(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionPlayerAndCharacterWidget");
		return ptr;
	}


	void UpdateValues(int* PlayerRank, int* PlayerStars, int* CharacterLevel, float* CharacterProgress);
	void StepCounter(float* TimeScale, bool* CounterFinished);
	void PingPlayerRank();
	void PingCharacterLevel(int* Level, int* Stars);
	void InitCounter(struct FPlayerProgress* PlayerProgressStart, struct FCharacterProgress* CharacterProgressStart, struct FPlayerProgress* PlayerProgressFinish, struct FCharacterProgress* CharacterProgressFinish);
};


// Class FSD.FSDMissionSettings
// 0x00B8 (0x00F0 - 0x0038)
class UFSDMissionSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             DefaultRoomGenerator;                                     // 0x0038(0x0018) (Edit, ZeroConstructor, Config)
	TMap<int, struct FMissionHazardSetting>            MissionComplexitySettings;                                // 0x0050(0x0050) (Edit, ZeroConstructor, Config)
	TMap<int, struct FMissionHazardSetting>            MissionDurationSettings;                                  // 0x00A0(0x0050) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FSDMissionSettings");
		return ptr;
	}


	float STATIC_GetTotalHazardBonus(class UObject** WorldContextObject, class UGeneratedMission** mission, class UDifficultySetting** DifficultySetting);
};


// Class FSD.MissionStatCategory
// 0x0020 (0x0050 - 0x0030)
class UMissionStatCategory : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionStatCategory");
		return ptr;
	}

};


// Class FSD.MissionStat
// 0x0050 (0x0080 - 0x0030)
class UMissionStat : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnCountChanged;                                           // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGuid                                       SavegameID;                                               // 0x0040(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FText                                       Title;                                                    // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UMissionStatCategory*                        Category;                                                 // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFSDAchievement*                             StatAchievement;                                          // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EMissionStatType                                   MissionStatType;                                          // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DoNotShowInMissionStatView;                               // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ShowAllValuesCombined;                                    // 0x007A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ShowHighestValue;                                         // 0x007B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionStat");
		return ptr;
	}


	void StatCountChanged__DelegateSignature(class UMissionStat** MissionStat, float* Value);
	struct FText STATIC_MissionStatToText(EMissionStatType* StatType, float* Value);
	void STATIC_Increment(class UObject** WorldContext, class UMissionStat** Stat, class UClass** CharacterClass, float* amount);
	float GetStatMinCount(class UObject** WorldContext);
	float GetStatMaxCount(class UObject** WorldContext);
	struct FText GetStatCountTotalAsText(class UObject** WorldContext);
	float GetStatCountTotal(class UObject** WorldContext);
	float GetStatCountPct(class UObject** WorldContext, class UClass** CharacterClass);
	struct FText GetStatCountAsText(class UObject** WorldContext, class UClass** CharacterClass);
	float GetStatCount(class UObject** WorldContext, class UClass** CharacterClass);
	struct FString GetSourceTitle();
	struct FText GetLowestStatCountAsText(class UObject** WorldContext);
	class UTexture2D* GetIcon();
	struct FText GetHighestStatCountAsText(class UObject** WorldContext);
	struct FText GetCategoryTitle();
};


// Class FSD.MissionStatsCollector
// 0x0028 (0x0120 - 0x00F8)
class UMissionStatsCollector : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0108(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionStatsCollector");
		return ptr;
	}


	void OnResourceIncremented(class UCappedResource** Resource, float* amount);
};


// Class FSD.GlobalMissionParameters
// 0x0010 (0x0040 - 0x0030)
class UGlobalMissionParameters : public UDataAsset
{
public:
	TArray<struct FResourceSpawner>                    DefaultResources;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GlobalMissionParameters");
		return ptr;
	}

};


// Class FSD.MissionTemplate
// 0x0168 (0x0198 - 0x0030)
class UMissionTemplate : public UDataAsset
{
public:
	class UGlobalMissionParameters*                    GlobalMissionParameters;                                  // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0038(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.MissionTemplate.PrimaryObjective
	unsigned char                                      UnknownData01[0x10];                                      // 0x0060(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MissionTemplate.PrimaryObjectives
	unsigned char                                      UnknownData02[0x10];                                      // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MissionTemplate.SecondaryObjectives
	unsigned char                                      UnknownData03[0x10];                                      // 0x0080(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MissionTemplate.DeepDiveObjectives
	TArray<class UMutator*>                            BaseMutators;                                             // 0x0090(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData04[0x28];                                      // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.MissionTemplate.pls
	unsigned char                                      UnknownData05[0x28];                                      // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.MissionTemplate.Level
	TArray<class UMissionComplexity*>                  LockedComplexities;                                       // 0x00F0(0x0010) (Edit, ZeroConstructor)
	TArray<class UMissionDuration*>                    LockedDurations;                                          // 0x0100(0x0010) (Edit, ZeroConstructor)
	struct FText                                       MissionName;                                              // 0x0110(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  MissionIcon;                                              // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MissionIconBorderColor;                                   // 0x0130(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionTypeIndex;                                         // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	struct FString                                     MissionTypeAnalyticsIndex;                                // 0x0148(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              DNA;                                                      // 0x0158(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              DebrisComponents;                                         // 0x0168(0x0010) (Edit, ZeroConstructor)
	bool                                               MustBeUnlocked;                                           // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0179(0x0003) MISSED OFFSET
	float                                              RoomEncounerScale;                                        // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StationaryEnemyScale;                                     // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0184(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0194(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionTemplate");
		return ptr;
	}


	void Receive_SetMissionParameters(class UGeneratedMission** mission, struct FRandomStream* Random);
	bool IsLocked(class UFSDSaveGame** SaveGame);
	void GetSoftReferenceToPLS();
	struct FObjectiveMissionIcon GetPrimaryObjectiveIcon();
	class UClass* GetPLS();
};


// Class FSD.GlobalMissionSetup
// 0x0088 (0x00B8 - 0x0030)
class UGlobalMissionSetup : public UDataAsset
{
public:
	struct FIRandRange                                 ExtraBiomes;                                              // 0x0030(0x0008) (Edit)
	struct FIRandRange                                 AdditionalMissionsForExtraBiomes;                         // 0x0038(0x0008) (Edit)
	struct FIRandRange                                 MissionsPerZone;                                          // 0x0040(0x0008) (Edit)
	TArray<struct FMissionBiomeItem>                   Biomes;                                                   // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FMissionTemplateItem>                AvailableMissions;                                        // 0x0058(0x0010) (Edit, ZeroConstructor)
	class UMissionNameBank*                            MissionNames;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FIRandRange                                 MutatorWarningCount;                                      // 0x0070(0x0008) (Edit)
	TArray<class UMissionMutator*>                     Mutators;                                                 // 0x0078(0x0010) (Edit, ZeroConstructor)
	TArray<class UMissionWarning*>                     Warnings;                                                 // 0x0088(0x0010) (Edit, ZeroConstructor)
	TArray<class UPlanetZone*>                         PlanetZones;                                              // 0x0098(0x0010) (Edit, ZeroConstructor)
	TArray<class UMissionTemplate*>                    XIMMissionTemplates;                                      // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GlobalMissionSetup");
		return ptr;
	}

};


// Class FSD.CaveItemsMutator
// 0x0008 (0x0038 - 0x0030)
class UCaveItemsMutator : public UMutator
{
public:
	class UClass*                                      Item;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveItemsMutator");
		return ptr;
	}

};


// Class FSD.MissionFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMissionFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionFunctionLibrary");
		return ptr;
	}


	class UMissionGenerationManager* STATIC_GetMissionGenerationManager(class UObject** WorldContextObject);
	class UMissionGenerationManager* STATIC_GetMissionGenerationComponent(class UObject** WorldContextObject);
	int STATIC_GetGlobalMissionSeed();
};


// Class FSD.MissionNameBank
// 0x0020 (0x0050 - 0x0030)
class UMissionNameBank : public UDataAsset
{
public:
	TArray<struct FText>                               FirstNames;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FText>                               LastNames;                                                // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionNameBank");
		return ptr;
	}

};


// Class FSD.MissionDuration
// 0x0030 (0x0060 - 0x0030)
class UMissionDuration : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              HazardBonus;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfDots;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0050(0x0010) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionDuration");
		return ptr;
	}

};


// Class FSD.MissionComplexity
// 0x0030 (0x0060 - 0x0030)
class UMissionComplexity : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              HazardBonus;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfDots;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0050(0x0010) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionComplexity");
		return ptr;
	}

};


// Class FSD.MissionDNA
// 0x0028 (0x0050 - 0x0028)
class UMissionDNA : public UObject
{
public:
	float                                              MissionScale;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMissionComplexity*                          Complexity;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMissionDuration*                            Duration;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTagQuery>                   RoomQueries;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionDNA");
		return ptr;
	}


	float GetDurationHazardBonus();
	float GetComplexityHazardBonus();
};


// Class FSD.DNATester
// 0x0010 (0x0340 - 0x0330)
class ADNATester : public AActor
{
public:
	class UClass*                                      DNA;                                                      // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class URoomGeneratorGroup*                         Group;                                                    // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DNATester");
		return ptr;
	}

};


// Class FSD.MissionWarning
// 0x0088 (0x00B8 - 0x0030)
class UMissionWarning : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.MissionWarning.MissionBP
	unsigned char                                      UnknownData01[0x10];                                      // 0x0058(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.MissionWarning.BannedObjectives
	TArray<class UMissionMutator*>                     BannedMutators;                                           // 0x0068(0x0010) (Edit, ZeroConstructor)
	TArray<class UMutator*>                            Mutators;                                                 // 0x0078(0x0010) (Edit, ZeroConstructor)
	struct FText                                       Title;                                                    // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HazardBonus;                                              // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	class UMissionStat*                                MissionCompletedStat;                                     // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MissionWarning");
		return ptr;
	}

};


// Class FSD.StatusEffectEnemies
// 0x0030 (0x0058 - 0x0028)
class UStatusEffectEnemies : public URunningMissionBP
{
public:
	TArray<class UClass*>                              StatusEffects;                                            // 0x0028(0x0010) (Edit, ZeroConstructor)
	struct FGameplayTagContainer                       AllowedFilter;                                            // 0x0038(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectEnemies");
		return ptr;
	}


	void OnEnemySpawned(class APawn** enemy);
};


// Class FSD.ExterminationReward
// 0x0030 (0x0058 - 0x0028)
class UExterminationReward : public URunningMissionBP
{
public:
	class UResourceData*                               Resource;                                                 // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AwardSize;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       AllowedFilter;                                            // 0x0038(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExterminationReward");
		return ptr;
	}


	void OnEnemyKilled(struct FGameplayTagContainer* GameplayTags);
};


// Class FSD.MotionAudioController
// 0x0050 (0x07A0 - 0x0750)
class UMotionAudioController : public UAudioComponent
{
public:
	float                                              DecaySpeed;                                               // 0x0750(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DebugText;                                                // 0x0754(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               Clamp;                                                    // 0x0755(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               Interp;                                                   // 0x0756(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0757(0x0001) MISSED OFFSET
	float                                              AccelerationThreshold;                                    // 0x0758(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x075C(0x000C) MISSED OFFSET
	float                                              SpeedThreshold;                                           // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeInTime;                                               // 0x076C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeOutTime;                                              // 0x0770(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               AutoPlayOnSpeedThreshold;                                 // 0x0774(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2B];                                      // 0x0775(0x002B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MotionAudioController");
		return ptr;
	}

};


// Class FSD.MountedGun
// 0x0028 (0x0358 - 0x0330)
class AMountedGun : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UWeaponFireComponent*                        WeaponFire;                                               // 0x0348(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGunLogicComponent*                          GunLogic;                                                 // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MountedGun");
		return ptr;
	}


	void Server_Test();
};


// Class FSD.GunLogicComponent
// 0x0040 (0x0138 - 0x00F8)
class UGunLogicComponent : public UActorComponent
{
public:
	class UWeaponFireComponent*                        WeaponFire;                                               // 0x00F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              Mesh;                                                     // 0x0100(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              RateOfFire;                                               // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UParticleSystem*                             MuzzleParticles;                                          // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TracerParticles;                                          // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FireSound;                                                // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TracerSpeed;                                              // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0130(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.GunLogicComponent");
		return ptr;
	}


	void SetMesh(class UMeshComponent** Mesh);
	void OnWeaponFireEnded();
	void OnWeaponFired(struct FVector* Location);
};


// Class FSD.MouseCursorWidget
// 0x0008 (0x0258 - 0x0250)
class UMouseCursorWidget : public UFSDUserWidget
{
public:
	EInputSource                                       TargetInput;                                              // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHovering;                                              // 0x0251(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0252(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MouseCursorWidget");
		return ptr;
	}


	void OnUnhover();
	void OnInputSourceChanged(EInputSource* Source);
	void OnHover();
};


// Class FSD.MultiHitscanComponent
// 0x0080 (0x02F0 - 0x0270)
class UMultiHitscanComponent : public UHitscanBaseComponent
{
public:
	int                                                BulletsPerShot;                                           // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleRadius;                                             // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GeneralImpactAudioVolume;                                 // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	TArray<class AActor*>                              DamagedActorCache;                                        // 0x0280(0x0010) (ZeroConstructor, Transient)
	TArray<struct FMultiHitscanHit>                    Hits;                                                     // 0x0290(0x0010) (ZeroConstructor, Transient)
	TArray<class AActor*>                              ActorsHit;                                                // 0x02A0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x40];                                      // 0x02B0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MultiHitscanComponent");
		return ptr;
	}


	void Server_RegisterHit(TArray<struct FMultiHitscanHit>* hitResults);
	void All_ShowHit(TArray<struct FMultiHitscanHit>* hitResults);
};


// Class FSD.MusicLibrary
// 0x0010 (0x0040 - 0x0030)
class UMusicLibrary : public UDataAsset
{
public:
	TArray<class USoundCue*>                           MusicCues;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MusicLibrary");
		return ptr;
	}

};


// Class FSD.MusicManager
// 0x00A0 (0x0198 - 0x00F8)
class UMusicManager : public UActorComponent
{
public:
	TMap<class UMusicLibrary*, class UAudioComponent*> AudioComponents;                                          // 0x00F8(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	TMap<class USoundCue*, class UAudioComponent*>     NetworkedAudioComponents;                                 // 0x0148(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MusicManager");
		return ptr;
	}


	void StopNetworked(class UMusicLibrary** library);
	void PlayNetworked(class UMusicLibrary** library);
	void PlayLocally(class UMusicLibrary** library);
	void OnNetworkedAudioFinished(class UAudioComponent** AudioComponent);
	void OnAudioFinished(class UAudioComponent** AudioComponent);
};


// Class FSD.NoiseVisualizor
// 0x0040 (0x0370 - 0x0330)
class ANoiseVisualizor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class UFloodFillSettings*                          FloodFillSettings;                                        // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreqMultiplier;                                           // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	float                                              AmplitudeMultiplier;                                      // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	struct FVector                                     NoiseSize;                                                // 0x0348(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	float                                              PointSize;                                                // 0x0354(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	float                                              PostNoiseAmplitude;                                       // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	int                                                Octaves;                                                  // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	struct FVector                                     Origin;                                                   // 0x0360(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	bool                                               ShowNoise;                                                // 0x036C(0x0001) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ShowTerrainNoise;                                         // 0x036D(0x0001) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x036E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NoiseVisualizor");
		return ptr;
	}

};


// Class FSD.NoisyPathfinderTest
// 0x0088 (0x03B8 - 0x0330)
class ANoisyPathfinderTest : public AActor
{
public:
	struct FVector                                     Start;                                                    // 0x0330(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // 0x033C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartDirection;                                           // 0x0348(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndDirection;                                             // 0x0354(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DirectionDistance;                                        // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DirectionPenalty;                                         // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZPenaltyPower;                                            // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZPenaltyScale;                                            // 0x036C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistancePenaltyScale;                                     // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomPenaltyScale;                                       // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPathObstacle>                       Obstacles;                                                // 0x0378(0x0010) (Edit, ZeroConstructor)
	class UTunnelSegmentSetting*                       TunnelSettings;                                           // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                StepSize;                                                 // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Realtime;                                                 // 0x0394(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CarvePath;                                                // 0x0395(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanDiagonal;                                              // 0x0396(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0397(0x0001) MISSED OFFSET
	class UFloodFillSettings*                          FloodFillSettings;                                        // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x03A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NoisyPathfinderTest");
		return ptr;
	}

};


// Class FSD.NoMovementStateComponent
// 0x0008 (0x0138 - 0x0130)
class UNoMovementStateComponent : public UCharacterStateComponent
{
public:
	bool                                               DisableHeadLightOnEnter;                                  // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EnableHeadLightOnExit;                                    // 0x0131(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0132(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NoMovementStateComponent");
		return ptr;
	}

};


// Class FSD.AttachedStateComponent
// 0x0008 (0x0138 - 0x0130)
class UAttachedStateComponent : public UCharacterStateComponent
{
public:
	bool                                               DisableHeadLightOnEnter;                                  // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EnableHeadLightOnExit;                                    // 0x0131(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0132(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AttachedStateComponent");
		return ptr;
	}

};


// Class FSD.OxygenComponent
// 0x0060 (0x0158 - 0x00F8)
class UOxygenComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnOxygenChanged;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOxygenReplenishingEvent;                                // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              OxygenGivenOnRevive;                                      // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurrentOxygen;                                            // 0x011C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              OxygenReplinishmentRate;                                  // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NetworkedOxygen;                                          // 0x0124(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0128(0x0004) MISSED OFFSET
	bool                                               IsReplenishingOxygen;                                     // 0x012C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	float                                              OxygenDepletionPersecond;                                 // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	TArray<struct FOxygenCallback>                     Callbacks;                                                // 0x0138(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0148(0x0008) MISSED OFFSET
	class UClass*                                      NoOxygenStatusEffect;                                     // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OxygenComponent");
		return ptr;
	}


	void RegisterOxygenEvent(struct FScriptDelegate* OxygenCallback, float* oxygenLevel, bool* triggerOnOxygenLoss);
	void OnRevived();
	void OnRep_NetworkedOxygen(int* OldValue);
	void OnRep_IsReplenishingOxygen();
	void OnDeath(class UHealthComponentBase** HealthComponent);
};


// Class FSD.OxygenSourceComponent
// 0x0038 (0x0130 - 0x00F8)
class UOxygenSourceComponent : public UActorComponent
{
public:
	float                                              SourceRadius;                                             // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CenterOffset;                                             // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnOxygenActivationChanged;                                // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UNoOxygenMutator*                            Mutator;                                                  // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0118(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OxygenSourceComponent");
		return ptr;
	}


	void OnTimerTick();
	void OnSourceActivated();
};


// Class FSD.PlayerCharacterID
// 0x0048 (0x0078 - 0x0030)
class UPlayerCharacterID : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AssetName;                                                // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.PlayerCharacterID.Character

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerCharacterID");
		return ptr;
	}


	class UClass* GetCharacterClass();
	class APlayerCharacter* GetCharacter();
};


// Class FSD.ItemID
// 0x0050 (0x0080 - 0x0030)
class UItemID : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x003C(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x004C(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.ItemID.Item
	class UPlayerCharacterID*                          ItemOwner;                                                // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemID");
		return ptr;
	}


	class UClass* GetItemClass();
	class AItem* GetItem();
	class UClass* GetActorClass();
	class AActor* GetActor();
};


// Class FSD.CategoryID
// 0x0018 (0x0048 - 0x0030)
class UCategoryID : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0038(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CategoryID");
		return ptr;
	}

};


// Class FSD.ObjectivesManager
// 0x0040 (0x0138 - 0x00F8)
class UObjectivesManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnObjectivesCompleted;                                    // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllRequiredReturnObjectivesCompleted;                   // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObjective*                                  Objective;                                                // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UObjective*>                          SecondaryObjectives;                                      // 0x0120(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               ObjectivesInitialized;                                    // 0x0130(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               ObjectivesStarted;                                        // 0x0131(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCheatObjectivesCompleted;                                // 0x0132(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0133(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ObjectivesManager");
		return ptr;
	}


	void OnObjectiveChanged(class UObjective** Obj);
	class UObjective* GetSecondaryObjective();
	class UObjective* GetPrimaryObjective();
	void ExitPodDescending();
	void ExitPodArrived();
	void DropPodExited();
};


// Class FSD.NoiseFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UNoiseFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NoiseFunctionLibrary");
		return ptr;
	}


	void STATIC_SphericalNoiseMovementComponent(class UObject** WorldContextObject, class USceneComponent** Component, struct FVector* Center, float* Radius, float* Speed, float* TimeOffset);
	void STATIC_SphericalNoiseMovementActor(class UObject** WorldContextObject, class AActor** Actor, struct FVector* Center, float* Radius, float* Speed, float* TimeOffset);
	struct FVector STATIC_NoiseSphere3D(class UObject** WorldContextObject, float* Time, float* Radius);
	struct FVector2D STATIC_NoiseSphere2D(class UObject** WorldContextObject, float* Time, float* Radius);
	float STATIC_Noise3D(class UObject** WorldContextObject, float* X, float* Y, float* Z);
	float STATIC_Noise2D(class UObject** WorldContextObject, float* X, float* Y);
	float STATIC_Noise(class UObject** WorldContextObject, float* X);
};


// Class FSD.ObstructionChecker
// 0x0050 (0x02B0 - 0x0260)
class UObstructionChecker : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	float                                              DistanceToCheck;                                          // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	float                                              CheckInterval;                                            // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0274(0x0004) MISSED OFFSET
	TArray<struct FVector>                             RayOffsets;                                               // 0x0278(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0288(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ObstructionChecker");
		return ptr;
	}


	void Timer_Tick();
	void Timer_Result();
	void CheckForObstructions();
};


// Class FSD.OptionalUIWidget
// 0x0010 (0x0240 - 0x0230)
class UOptionalUIWidget : public UUserWidget
{
public:
	class UOptionalUICategory*                         Category;                                                 // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ESlateVisibility                                   VisibleFlag;                                              // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ESlateVisibility                                   HiddenFlag;                                               // 0x0239(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x023A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OptionalUIWidget");
		return ptr;
	}


	void OnVisibilityChanged(class UOptionalUICategory** UICategory, bool* IsVisible);
};


// Class FSD.OutlineComponent
// 0x0038 (0x0130 - 0x00F8)
class UOutlineComponent : public UActorComponent
{
public:
	EOutline                                           DefaultOutline;                                           // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ActiveOnHoldTAB;                                          // 0x00F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00FA(0x0002) MISSED OFFSET
	float                                              CustomLaserPointDuration;                                 // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LockCounter;                                              // 0x0100(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EOutline                                           CurrentOutline;                                           // 0x0104(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 OutlinedComponents;                                       // 0x0108(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UPrimitiveComponent*>                 ExcludedComponents;                                       // 0x0118(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OutlineComponent");
		return ptr;
	}


	void UnlockOutline();
	void ToggleDefaultOutline(bool* Visible);
	void SetOutline(EOutline* Outline);
	void RemoveFromOutline(class UPrimitiveComponent** Component);
	void OnToggleOutline(bool* Visible);
	void OnOwnerDeath(class UHealthComponentBase** HealthComponent);
	void OnLocalPlayerSet(class APlayerCharacter** PlayerCharacter);
	void OnItemUnequipped(class AItem** Item);
	void OnItemEquipped(class AItem** Item);
	void LockOutline();
	void EnableActivateOnHoldTab();
	void AddToOutline(class UPrimitiveComponent** Component);
	void AddActorToOutline(class AActor** Actor);
};


// Class FSD.OverclockBank
// 0x0088 (0x00B8 - 0x0030)
class UOverclockBank : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	TMap<class UOverclockUpgrade*, class USchematic*>  Overclocks;                                               // 0x0038(0x0050) (Edit, ZeroConstructor)
	class UPlayerCharacterID*                          UsedByCharacter;                                          // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.OverclockBank.OwningItem

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OverclockBank");
		return ptr;
	}

};


// Class FSD.OverheatingAggregator
// 0x0038 (0x0148 - 0x0110)
class UOverheatingAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnOverheatingProgressChanged;                             // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOverheatedChanged;                                      // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0130(0x0004) MISSED OFFSET
	float                                              HeatLossPerSecond;                                        // 0x0134(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              OverheatedDuration;                                       // 0x0138(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsOverheated;                                            // 0x013C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x013D(0x0003) MISSED OFFSET
	float                                              Temperature;                                              // 0x0140(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0144(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OverheatingAggregator");
		return ptr;
	}


	void Server_SetTemperature(float* NewTemperature);
	void Server_SetIsOverheated(bool* NewOverheated);
	void OverheatingProgressChanged__DelegateSignature(float* Progress);
	void OverheatedChanged__DelegateSignature(bool* Overheated);
	void OnRep_Temperature();
	void OnRep_IsOverheated();
	float GetTemperature();
	float GetOverheatingProgress();
	bool GetIsOverheated();
};


// Class FSD.ParalyzedStateComponent
// 0x0010 (0x0140 - 0x0130)
class UParalyzedStateComponent : public UCharacterStateComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0130(0x0004) MISSED OFFSET
	float                                              CameraArmHeightOffset;                                    // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraArmSpeed;                                           // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ParalyzedStateComponent");
		return ptr;
	}

};


// Class FSD.ParasiteEnemy
// 0x0058 (0x0480 - 0x0428)
class AParasiteEnemy : public AEnemyPawn
{
public:
	class USceneComponent*                             Root;                                                     // 0x0428(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0430(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Tentacles1;                                               // 0x0438(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Tentacles2;                                               // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0448(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0450(0x0018) MISSED OFFSET
	class UParticleSystem*                             deathParticles;                                           // 0x0468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  deathSound;                                               // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ParasiteEnemy");
		return ptr;
	}


	void OnSelfDeath(class UHealthComponentBase** aHealthComponent);
};


// Class FSD.PassedOutStateComponent
// 0x0010 (0x0140 - 0x0130)
class UPassedOutStateComponent : public UCharacterStateComponent
{
public:
	class UDialogDataAsset*                            ReviveShout;                                              // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllPlayersPassedOut;                                     // 0x0138(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PassedOutStateComponent");
		return ptr;
	}


	void ReceiveTeamPassedOut();
};


// Class FSD.PathfinderCollisionComponent
// 0x0000 (0x0610 - 0x0610)
class UPathfinderCollisionComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PathfinderCollisionComponent");
		return ptr;
	}


	void DisablePFCollision();
	void ActivatePFCollision();
};


// Class FSD.PathfinderDebugProbe
// 0x0008 (0x0338 - 0x0330)
class APathfinderDebugProbe : public AActor
{
public:
	class AActor*                                      Dest;                                                     // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PathfinderDebugProbe");
		return ptr;
	}

};


// Class FSD.PathfinderFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UPathfinderFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PathfinderFunctionLibrary");
		return ptr;
	}


	struct FVector STATIC_SnapToGrid(class UObject** WorldContextObject, struct FVector* Origin, EDeepPathFinderType* pathType, EDeepPathFinderSize* pathSize, float* maxSnapDistance);
	bool STATIC_IsPathfinderReady(class UObject** WorldContextObject);
	struct FVector STATIC_FindRandomPositionOnNavmeshAtDistance(class UObject** WorldContextObject, struct FVector* Origin, float* atDistance);
	struct FVector STATIC_FindRandomNearbyPositionOnNavmesh(class UObject** WorldContextObject, struct FVector* Origin, float* Radius);
	struct FVector STATIC_FindPointAlongPathTo(class UObject** WorldContextObject, struct FVector* Origin, struct FVector* Destination, float* atDistance);
};


// Class FSD.PathfinderVehicle
// 0x0030 (0x03C0 - 0x0390)
class APathfinderVehicle : public APawn
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0390(0x0010) MISSED OFFSET
	class UDeepPathfinderMovement*                     PathfinderMovement;                                       // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHealthComponent*                            HealthComponent;                                          // 0x03B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              Speed;                                                    // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PathfinderVehicle");
		return ptr;
	}

};


// Class FSD.PawnAffliction
// 0x0058 (0x0088 - 0x0030)
class UPawnAffliction : public UDataAsset
{
public:
	class UTexture2D*                                  Icon;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      IconColor;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      IconColorBG;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowPlayerIcon;                                          // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowOnEnemyHealthbar;                                    // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	class UPlayerAfflictionOverlay*                    AfflictionOverlay;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              EnemyEffects;                                             // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              PlayerFirstPersonEffects;                                 // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              PlayerThirdPersonEffects;                                 // 0x0070(0x0010) (Edit, ZeroConstructor)
	class UDialogDataAsset*                            PlayerShoutOnBegin;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PawnAffliction");
		return ptr;
	}

};


// Class FSD.AfflictionFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAfflictionFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AfflictionFunctionLibrary");
		return ptr;
	}


	void STATIC_PlayEnemyExplosionEffects(class AFSDPawn** enemy);
};


// Class FSD.PlayerAfflictionOverlay
// 0x0028 (0x0058 - 0x0030)
class UPlayerAfflictionOverlay : public UDataAsset
{
public:
	class UTexture2D*                                  Texture;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextureTint;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WidgetOverride;                                           // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ZOrder;                                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerAfflictionOverlay");
		return ptr;
	}

};


// Class FSD.PawnAfflictionComponent
// 0x0158 (0x0250 - 0x00F8)
class UPawnAfflictionComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAfflictionActivatedEvent;                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAfflictionDeactivatedEvent;                             // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TMap<class UPawnAffliction*, struct FPawnAfflictionItem> ActiveAfflictions;                                        // 0x0118(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FAfflictionEntriesArray                     NetworkedAfflictions;                                     // 0x0168(0x00C8) (Net, Transient)
	class UClass*                                      FrozenEffect;                                             // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BurningEffect;                                            // 0x0238(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFrozenBitsSize                                    EffectSize;                                               // 0x0240(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0241(0x0003) MISSED OFFSET
	float                                              BaseEffectScale;                                          // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseDormancy;                                              // 0x0248(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0249(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PawnAfflictionComponent");
		return ptr;
	}


	void PushAffliction(class UPawnAffliction** affliction, bool* onlyIfNotActive);
	void PopAffliction(class UPawnAffliction** affliction);
	void OnDeath(class UHealthComponentBase** HealthComponent);
	bool IsAfflictedBy(class UPawnAffliction** affliction);
	TArray<class UPawnAffliction*> GetActiveAfflictions();
};


// Class FSD.PlayerAfflictionComponent
// 0x0078 (0x02C8 - 0x0250)
class UPlayerAfflictionComponent : public UPawnAfflictionComponent
{
public:
	struct FScriptMulticastDelegate                    OnShowOverlay;                                            // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHideOverlay;                                            // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TMap<class UPlayerAfflictionOverlay*, int>         ActiveOverlays;                                           // 0x0270(0x0050) (ZeroConstructor, Transient)
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x02C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerAfflictionComponent");
		return ptr;
	}


	void ShowPlayerOverlay(class UPlayerAfflictionOverlay** Overlay);
	void OverlayDelegate__DelegateSignature(class UPlayerAfflictionOverlay** Overlay);
	void HidePlayerOverlay(class UPlayerAfflictionOverlay** Overlay);
};


// Class FSD.EnemyPawnAfflictionComponent
// 0x0000 (0x0250 - 0x0250)
class UEnemyPawnAfflictionComponent : public UPawnAfflictionComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyPawnAfflictionComponent");
		return ptr;
	}

};


// Class FSD.DeepPatherFinderCharacterAfflictionComponent
// 0x0008 (0x0258 - 0x0250)
class UDeepPatherFinderCharacterAfflictionComponent : public UPawnAfflictionComponent
{
public:
	class ADeepPathfinderCharacter*                    Character;                                                // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DeepPatherFinderCharacterAfflictionComponent");
		return ptr;
	}

};


// Class FSD.StaticObjectAfflictionComponent
// 0x0008 (0x0258 - 0x0250)
class UStaticObjectAfflictionComponent : public UPawnAfflictionComponent
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StaticObjectAfflictionComponent");
		return ptr;
	}

};


// Class FSD.AnimatedObjectAfflictionComponent
// 0x0008 (0x0258 - 0x0250)
class UAnimatedObjectAfflictionComponent : public UPawnAfflictionComponent
{
public:
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AnimatedObjectAfflictionComponent");
		return ptr;
	}

};


// Class FSD.PlayerAfflictionOverlayWidget
// 0x0010 (0x0240 - 0x0230)
class UPlayerAfflictionOverlayWidget : public UUserWidget
{
public:
	bool                                               bOverlayActive;                                           // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class UPlayerAfflictionOverlay*                    Overlay;                                                  // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerAfflictionOverlayWidget");
		return ptr;
	}


	void ReceiveEndOverlay();
	void ReceiveBeginOverlay(class UTexture2D** InTexture, struct FLinearColor* InTint);
	void EndOverlay();
	void BeginOverlay(class UPlayerAfflictionOverlay** InOverlay);
};


// Class FSD.PawnStat
// 0x0008 (0x0038 - 0x0030)
class UPawnStat : public UDataAsset
{
public:
	float                                              StartingValue;                                            // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EPawnStatType                                      PawnStatType;                                             // 0x0034(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPawnStatType                                      ValueModificationType;                                    // 0x0035(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PawnStat");
		return ptr;
	}

};


// Class FSD.PawnStatsComponent
// 0x00D0 (0x01C8 - 0x00F8)
class UPawnStatsComponent : public UActorComponent
{
public:
	struct FPawnStatEntriesArray                       Stats;                                                    // 0x00F8(0x00C8) (Net, Transient)
	bool                                               UseDormancy;                                              // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PawnStatsComponent");
		return ptr;
	}


	void RemoveModifier(class UPawnStat** Stat, float* Value);
	float GetStatValue(class UPawnStat** Stat);
	void ChangeModifier(class UPawnStat** Stat, float* CurrentValue, float* NewValue);
	int AddModifier(class UPawnStat** Stat, float* Value);
};


// Class FSD.PerkLogic
// 0x0000 (0x00F8 - 0x00F8)
class UPerkLogic : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PerkLogic");
		return ptr;
	}


	void StartLogic(int* Rank);
	class APlayerCharacter* GetCharacter();
	struct FText GetAdditionalText(int* Rank);
};


// Class FSD.PerkHUDWidget
// 0x0010 (0x0240 - 0x0230)
class UPerkHUDWidget : public UUserWidget
{
public:
	class UPerkAsset*                                  PerkAsset;                                                // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CoolDownProgress;                                         // 0x0238(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x023C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PerkHUDWidget");
		return ptr;
	}


	void SetPerkAsset(class UPerkAsset** InPerk);
	void ReceivePerkAssetChanged();
};


// Class FSD.PhotographyStateComponent
// 0x0000 (0x0130 - 0x0130)
class UPhotographyStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PhotographyStateComponent");
		return ptr;
	}

};


// Class FSD.PillarGenerationComponent
// 0x0020 (0x05A0 - 0x0580)
class UPillarGenerationComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	bool                                               Visible;                                                  // 0x0588(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0589(0x0007) MISSED OFFSET
	class UPillarSettings*                             PillarSettings;                                           // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0598(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PillarGenerationComponent");
		return ptr;
	}

};


// Class FSD.PillarSettings
// 0x0038 (0x0068 - 0x0030)
class UPillarSettings : public UDataAsset
{
public:
	TArray<struct FPillarSegment>                      PillarSegments;                                           // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FRandRange                                  PointRange;                                               // 0x0040(0x0008) (Edit)
	struct FRandRange                                  PointNoiseRange;                                          // 0x0048(0x0008) (Edit)
	struct FRandRange                                  PillarRangeScale;                                         // 0x0050(0x0008) (Edit)
	struct FRandRange                                  PillarNoiseRangeScale;                                    // 0x0058(0x0008) (Edit)
	class UFloodFillSettings*                          Noise;                                                    // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PillarSettings");
		return ptr;
	}

};


// Class FSD.PillarGenerationItem
// 0x0008 (0x0340 - 0x0338)
class APillarGenerationItem : public AGenerationItem
{
public:
	class UPillarGenerationComponent*                  PillarComponent;                                          // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PillarGenerationItem");
		return ptr;
	}

};


// Class FSD.PilotingStateComponent
// 0x0020 (0x0150 - 0x0130)
class UPilotingStateComponent : public UCharacterStateComponent
{
public:
	class AActor*                                      Vehicle;                                                  // 0x0130(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0138(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PilotingStateComponent");
		return ptr;
	}


	void Server_MoveRight(float* Value);
	void Server_MoveForward(float* Value);
	void OnRep_Vehicle();
};


// Class FSD.PlaceableItem
// 0x0020 (0x0490 - 0x0470)
class APlaceableItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacer;                                               // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      PlacableClass;                                            // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlaceableItem");
		return ptr;
	}


	void Server_SpawnItem(struct FVector* Location);
	void ReceiveItemSpawned(class AActor** SpawnedActor);
	void OnCarriedAmountChanged(int* newAmount);
};


// Class FSD.PlanetZoneSetup
// 0x0010 (0x0040 - 0x0030)
class UPlanetZoneSetup : public UDataAsset
{
public:
	TArray<class UPlanetZone*>                         PlanetZones;                                              // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlanetZoneSetup");
		return ptr;
	}


	class UPlanetZone* GetPlanetZoneForBiome(class UBiome** Biome);
};


// Class FSD.PlanetZone
// 0x0040 (0x0070 - 0x0030)
class UPlanetZone : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	TArray<class UBiome*>                              Biomes;                                                   // 0x0038(0x0010) (Edit, ZeroConstructor)
	TArray<struct FRequiredMissionItem>                RequiredMissions;                                         // 0x0048(0x0010) (Edit, ZeroConstructor)
	bool                                               MustBeUnlocked;                                           // 0x0058(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x005C(0x0010) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlanetZone");
		return ptr;
	}


	bool IsUnlocked(class UFSDSaveGame** SaveGame);
	TArray<class UBiome*> GetBiomes();
};


// Class FSD.PlayerAnimInstance
// 0x00E0 (0x0350 - 0x0270)
class UPlayerAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFirstPerson;                                            // 0x0270(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0271(0x0007) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystem*                             DefaultFootstepParticle;                                  // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DefaultFootStepSound;                                     // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemCharacterAnimationSet*                  AnimationSetA;                                            // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UItemCharacterAnimationSet*                  AnimationSetB;                                            // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AnimationSetAIsPrimary;                                   // 0x02A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ECharacterState                                    CharacterState;                                           // 0x02A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x02A2(0x0002) MISSED OFFSET
	float                                              Speed;                                                    // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              WalkRate;                                                 // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Direction;                                                // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    AimRotation;                                              // 0x02B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInitialized;                                            // 0x02BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02BD(0x0003) MISSED OFFSET
	float                                              Pitch;                                                    // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsStandingDown;                                           // 0x02C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInAir;                                                  // 0x02C5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x02C6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSprinting;                                              // 0x02C7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsAiming;                                                 // 0x02C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsAlive;                                                  // 0x02C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsLyingDown;                                              // 0x02CA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               OnZipline;                                                // 0x02CB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsParalyzed;                                              // 0x02CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsGrabbed;                                                // 0x02CD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               BeingRevived;                                             // 0x02CE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsLookingAtMap;                                           // 0x02CF(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsAllowedToPlayMovementAnim;                              // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x02D1(0x0003) MISSED OFFSET
	int                                                DanceMove;                                                // 0x02D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               DanceSequence;                                            // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsDancing;                                                // 0x02E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x02E1(0x0003) MISSED OFFSET
	float                                              CropBeard;                                                // 0x02E4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimMontage*                                ActiveUseMontage;                                         // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x02F0(0x0008) MISSED OFFSET
	class UUseAnimationSetting*                        CurrentUseSetting;                                        // 0x02F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAnimMontage*                                EndUseMontageToPlay;                                      // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimDuration;                                              // 0x0308(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReviveProgress;                                           // 0x030C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReviveExplicitTime;                                       // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0xC];                                       // 0x0314(0x000C) MISSED OFFSET
	float                                              IdleTimeForInspect;                                       // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RepeatDealayForInspect;                                   // 0x0324(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECharacterMoveDirection                            CharacterMoveDirection;                                   // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	float                                              MoveAdjustmentAngle;                                      // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UItemCharacterAnimationSet*                  CarryAnimationSet;                                        // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemCharacterAnimationSet*                  DefaultAnimationSet;                                      // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerAnimInstance");
		return ptr;
	}


	bool StopUseMontage();
	void StopInspectWeapon();
	void StartInspectWeapon();
	void SetAiming();
	void PlayUseMontages(class UUseAnimationSetting** useSetting);
	class UItemCharacterAnimationSet* GetAnimationSet();
};


// Class FSD.PlayerFPAnimInstance
// 0x0090 (0x03E0 - 0x0350)
class UPlayerFPAnimInstance : public UPlayerAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0350(0x0004) MISSED OFFSET
	float                                              HeadBobScale;                                             // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSwayRecoverySpeed;                                  // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSwayAlphaRecoverySpeed;                             // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    WeaponSwayAngle;                                          // 0x0360(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSwayMaxAngle;                                       // 0x036C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CameraAntiSwayAngle;                                      // 0x0370(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSwayAlpha;                                          // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSwayToApply;                                        // 0x0380(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     CameraOffset;                                             // 0x0384(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     NegativeCameraOffset;                                     // 0x0390(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HeadOnlyMode;                                             // 0x039C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x039D(0x0003) MISSED OFFSET
	struct FRotator                                    HeadRotation;                                             // 0x03A0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	class UAnimSequence*                               FP_Idle;                                                  // 0x03B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               FP_Walk;                                                  // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               FP_Sprint;                                                // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               FP_JumpStart;                                             // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               FP_JumpLoop;                                              // 0x03D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               FP_JumpLand;                                              // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerFPAnimInstance");
		return ptr;
	}

};


// Class FSD.PlayerTPAnimInstance
// 0x01A0 (0x04F0 - 0x0350)
class UPlayerTPAnimInstance : public UPlayerAnimInstance
{
public:
	float                                              UpperBodyBlend;                                           // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimingValue;                                              // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    CounerMoveadjustmentAngleRotator;                         // 0x0358(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               FullBodyAnimActive;                                       // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0365(0x0003) MISSED OFFSET
	float                                              FullBodyBlendTime;                                        // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BodyTurnRecoverySpeed;                                    // 0x036C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BodyTurnMaxAngle;                                         // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BodyTurnLerpEXP;                                          // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TurnAnimationDuration;                                    // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x037C(0x000C) MISSED OFFSET
	bool                                               bCaveLeechBiting;                                         // 0x0388(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0389(0x0003) MISSED OFFSET
	float                                              CaveLeechBiteReactDelay;                                  // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0390(0x0004) MISSED OFFSET
	bool                                               IsResettingBodyTurn;                                      // 0x0394(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0395(0x0003) MISSED OFFSET
	struct FRotator                                    BodyTurn;                                                 // 0x0398(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CounterBodyTurn;                                          // 0x03A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               TurningLeft;                                              // 0x03B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               TurningRight;                                             // 0x03B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x03B2(0x0002) MISSED OFFSET
	float                                              TurnProgress;                                             // 0x03B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasPickedUpItem;                                          // 0x03B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x03B9(0x0003) MISSED OFFSET
	float                                              PickedUpItemBlend;                                        // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x03C0(0x0008) MISSED OFFSET
	class UBlendSpace1D*                               TP_LookUpDown;                                            // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UBlendSpace1D*                               TP_LookUpDown_Aim;                                        // 0x03D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UBlendSpace1D*                               A_TP_LookUpDown_Aim;                                      // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UBlendSpace1D*                               B_TP_LookUpDown_Aim;                                      // 0x03E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_JumpLoop;                                              // 0x03E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_JumpLoop_Aim;                                          // 0x03F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_JumpStart;                                             // 0x03F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_JumpStart_Aim;                                         // 0x0400(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_Sprint;                                                // 0x0408(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Idle;                                                // 0x0410(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Idle;                                                // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Idle_Aim;                                            // 0x0420(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Idle_Aim;                                            // 0x0428(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_LookForward;                                           // 0x0430(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_LookForward;                                         // 0x0438(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_LookForward;                                         // 0x0440(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_LookForward_Aim;                                     // 0x0448(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_LookForward_Aim;                                     // 0x0450(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Forward;                                         // 0x0458(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Forward;                                         // 0x0460(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Forward_Aim;                                     // 0x0468(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Forward_Aim;                                     // 0x0470(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Right;                                           // 0x0478(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Right;                                           // 0x0480(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Right_Aim;                                       // 0x0488(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Right_Aim;                                       // 0x0490(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Left;                                            // 0x0498(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Left;                                            // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Left_Aim;                                        // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Left_Aim;                                        // 0x04B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Back;                                            // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Back;                                            // 0x04C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               A_TP_Run_Back_Aim;                                        // 0x04C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               B_TP_Run_Back_Aim;                                        // 0x04D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_Revived;                                               // 0x04D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_Downed;                                                // 0x04E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               TP_Downed_Loop;                                           // 0x04E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerTPAnimInstance");
		return ptr;
	}


	void SetOverrideFullBody(bool* overrideEnabled);
	class UAnimSequence* GetTPSprint();
	class UAnimSequence* GetTPLookForward_Aim();
	class UAnimSequence* GetTPLookForward();
	class UAnimSequence* GetTPJumpStart_Aim();
	class UAnimSequence* GetTPJumpStart();
	class UAnimSequence* GetTPJumpLoop_Aim();
	class UAnimSequence* GetTPJumpLoop();
	class UAnimSequence* GetTPIdle();
	class UAnimSequence* GetTPDowned_Aim();
	class UAnimSequence* GetTPDowned();
	ECharacterAnimSet GetAnimationSetType();
};


// Class FSD.PlayerCharacter
// 0x0820 (0x0F70 - 0x0750)
class APlayerCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0750(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStartedUsingItem;                                       // 0x0760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStoppedUsingItem;                                       // 0x0770(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFirePressed;                                            // 0x0780(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFireReleased;                                           // 0x0790(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCollectedSchematic;                                     // 0x07A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCollectedSkin;                                          // 0x07B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCollectedDrink;                                         // 0x07C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCollectedVictoryPose;                                   // 0x07D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCameraModeChanged;                                      // 0x07E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownCameraTargetChanged;                                // 0x07F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionHoldProgress;                                     // 0x0800(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnThrowCarriableProgress;                                 // 0x0810(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnJumpPressed;                                            // 0x0820(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnJumpReleased;                                           // 0x0830(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryFirePressed;                                   // 0x0840(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryFireReleased;                                  // 0x0850(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnManualMiningBegin;                                      // 0x0860(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnManualMiningEnd;                                        // 0x0870(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaserPointerPressed;                                    // 0x0880(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaserPointerReleased;                                   // 0x0890(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainScannerPressed;                                  // 0x08A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainScannerReleased;                                 // 0x08B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlareThrown;                                            // 0x08C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDropItem;                                               // 0x08D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUpdateMeshes;                                           // 0x08E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOpenChat;                                               // 0x08F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAcceptInvite;                                           // 0x0900(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRejectInvite;                                           // 0x0910(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIgnoreInvite;                                           // 0x0920(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleOutline;                                          // 0x0930(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleMapTool;                                          // 0x0940(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleScanTool;                                         // 0x0950(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepthChanged;                                           // 0x0960(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterStateChanged;                                  // 0x0970(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamagedEnemy;                                           // 0x0980(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaserPointerEvent;                                      // 0x0990(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryLaserPointerEvent;                             // 0x09A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSaluteEvent;                                            // 0x09B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerShout;                                            // 0x09C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x20];                                      // 0x09D0(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRevivedEvent;                                           // 0x09F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReviveCallEvent;                                        // 0x0A00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRevivedOtherCharacter;                                  // 0x0A10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHeadlightOnChanged;                                     // 0x0A20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCallDonkey;                                             // 0x0A30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0A40(0x0020) (Edit, BlueprintVisible)
	class UZipLineStateComponent*                      ZipLineStateComponent;                                    // 0x0A60(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundCue*                                   PowerAttackRefreshedSound;                                // 0x0A68(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCoolDownProgress;                                       // 0x0A70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bIsBeingBittenByCaveLeech;                                // 0x0A80(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0A81(0x0007) MISSED OFFSET
	class UWidgetInteractionComponent*                 WidgetInteraction;                                        // 0x0A88(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FDownCameraSettings                         DownCameraSettings;                                       // 0x0A90(0x0018) (Edit)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0AA8(0x0010) MISSED OFFSET
	TArray<TWeakObjectPtr<class AArmorRegeneratorActor>> ActiveShieldGenerators;                                   // 0x0AB8(0x0010) (ZeroConstructor, Transient)
	struct FGuid                                       SavegameID;                                               // 0x0AC8(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EstimatedVelocity;                                        // 0x0AD8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0AE4(0x000C) MISSED OFFSET
	struct FHoldButton                                 FlareHeadlightButton;                                     // 0x0AF0(0x0028) (Edit)
	struct FHoldButton                                 CycleItemButton;                                          // 0x0B18(0x0028) (Edit)
	struct FHoldButton                                 ToggleHUDButton;                                          // 0x0B40(0x0028) (Edit)
	float                                              EquipLaserpointerHoldDuration;                            // 0x0B68(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPressingMovementInputKey;                               // 0x0B6C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1B];                                      // 0x0B6D(0x001B) MISSED OFFSET
	class UPlayerCharacterID*                          characterID;                                              // 0x0B88(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TutorialManagerType;                                      // 0x0B90(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      FPMesh;                                                   // 0x0B98(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            FirstPersonCamera;                                        // 0x0BA0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             FirstPersonRoot;                                          // 0x0BA8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCharacterIntoxicationComponent*             IntoxicationComponent;                                    // 0x0BB0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMissionStatsCollector*                      MissionStatsCollector;                                    // 0x0BB8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         ThirdPersonSpringArm;                                     // 0x0BC0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            ThirdPersonCamera;                                        // 0x0BC8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        ThirdPersonLight;                                         // 0x0BD0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         FollowSpringArm;                                          // 0x0BD8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            FollowCamera;                                             // 0x0BE0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            DownCamera;                                               // 0x0BE8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCharacterCameraController*                  CameraController;                                         // 0x0BF0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerHealthComponent*                      HealthComponent;                                          // 0x0BF8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCharacterSightComponent*                    SightComponent;                                           // 0x0C00(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UInventoryComponent*                         InventoryComponent;                                       // 0x0C08(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCharacterUseComponent*                      UseComponent;                                             // 0x0C10(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USingleUsableComponent*                      UsableComponent;                                          // 0x0C18(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           OutlineComponent;                                         // 0x0C20(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTrailComponent*                             TrailComponent;                                           // 0x0C28(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCharacterRecoilComponent*                   RecoilComponent;                                          // 0x0C30(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStatusEffectsComponent*                     StatusEffectsComponent;                                   // 0x0C38(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnStatsComponent*                         PawnStatsComponent;                                       // 0x0C40(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerAfflictionComponent*                  PawnAfflictionComponent;                                  // 0x0C48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerAttackPositionComponent*              AttackerPositioningComponent;                             // 0x0C50(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCommunicationComponent*                     CommunicationComponent;                                   // 0x0C58(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerTemperatureComponent*                 TemperatureComponent;                                     // 0x0C60(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerReactiveTerrainTrackerComponent*      ReactiveTerrainTracker;                                   // 0x0C68(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              RunningSpeed;                                             // 0x0C70(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayableCharacter;                                      // 0x0C74(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0C75(0x0003) MISSED OFFSET
	class UAudioComponent*                             SprintSoundComponent;                                     // 0x0C78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundCue*                                   SpringSound;                                              // 0x0C80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAnalogAimSettings                          AimSettings;                                              // 0x0C88(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              DownedCameraMinPitch;                                     // 0x0CC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DownedCameraMaxPitch;                                     // 0x0CCC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DownedCameraTurnDirection;                                // 0x0CD0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TurnToFaceScannerAngularSpeed;                            // 0x0CD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarryingMovementSpeedPenalty;                             // 0x0CD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarryingMaxFallVelocity;                                  // 0x0CDC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxThrowProgress;                                         // 0x0CE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarryingThrowMinForce;                                    // 0x0CE4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarryingThrowMaxForce;                                    // 0x0CE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0CEC(0x0004) MISSED OFFSET
	class UClass*                                      CarryingThrowingStatusEffect;                             // 0x0CF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0CF8(0x0004) MISSED OFFSET
	float                                              ThrowCarriableProgress;                                   // 0x0CFC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TMap<unsigned char, class UCharacterStateComponent*> CharacterStates;                                          // 0x0D00(0x0050) (ExportObject, ZeroConstructor, Transient)
	TWeakObjectPtr<class ATutorialManager>             TutorialManager;                                          // 0x0D50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCharacterStateComponent*                    ActiveCharacterState;                                     // 0x0D58(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               IsInDropPod;                                              // 0x0D60(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInEscapePod;                                            // 0x0D61(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x0D62(0x0002) MISSED OFFSET
	float                                              ButtonMemoryDuration;                                     // 0x0D64(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRunning;                                                // 0x0D68(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0D69(0x0003) MISSED OFFSET
	float                                              ForwardInput;                                             // 0x0D6C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightInput;                                               // 0x0D70(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0xC];                                       // 0x0D74(0x000C) MISSED OFFSET
	float                                              StoppedRunningTime;                                       // 0x0D80(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ShoutPressedTime;                                         // 0x0D84(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUsingItemPressed;                                      // 0x0D88(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUsingPressed;                                          // 0x0D89(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x0D8A(0x0002) MISSED OFFSET
	float                                              UsingDelay;                                               // 0x0D8C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HeadLightOn;                                              // 0x0D90(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsUsing;                                                  // 0x0D91(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x2];                                       // 0x0D92(0x0002) MISSED OFFSET
	float                                              JumpPressedTime;                                          // 0x0D94(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanMove;                                                  // 0x0D98(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanAim;                                                   // 0x0D99(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanUseItem;                                               // 0x0D9A(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanChangeItems;                                           // 0x0D9B(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanMine;                                                  // 0x0D9C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsStandingDown;                                           // 0x0D9D(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               InDanceRange;                                             // 0x0D9E(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsDancing;                                                // 0x0D9F(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DanceStartTime;                                           // 0x0DA0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               PartyTimeAchievementSaluteTriggered;                      // 0x0DA4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0DA5(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPartyTimeBeginSalute;                                   // 0x0DA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyTimeEndSalute;                                     // 0x0DB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFSDAchievement*                             HappyFeetAchievement;                                     // 0x0DC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DanceMove;                                                // 0x0DD0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	ECharacterCameraMode                               CameraMode;                                               // 0x0DD4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInCharacterSelectionWorld;                              // 0x0DD5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x2];                                       // 0x0DD6(0x0002) MISSED OFFSET
	float                                              IdleTime;                                                 // 0x0DD8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0DDC(0x0004) MISSED OFFSET
	class UAnimMontage*                                FPSaluteMontage;                                          // 0x0DE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPSaluteMontage;                                          // 0x0DE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FPDrinkSalute;                                            // 0x0DF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                TPDrinkSalute;                                            // 0x0DF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            SaluteShout;                                              // 0x0E00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            DrinkShout;                                               // 0x0E08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                CurrentSaluteMontage;                                     // 0x0E10(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x0E18(0x0008) MISSED OFFSET
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0E20(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData18[0x10];                                      // 0x0E30(0x0010) MISSED OFFSET
	struct FHeroInfo                                   HeroInfo;                                                 // 0x0E40(0x0080) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FString                                     SteamClassID;                                             // 0x0EC0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UMaterialInstanceDynamic*                    RadarMaterialInstance;                                    // 0x0ED0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                RadarMaterialAngleParameterIndex;                         // 0x0ED8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LastUpdateVisibiltyPos;                                   // 0x0EDC(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     SpawnLocation;                                            // 0x0EE8(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0EF4(0x0004) MISSED OFFSET
	class UFSDPhysicalMaterial*                        FallbackPhysicalMaterial;                                 // 0x0EF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x8];                                       // 0x0F00(0x0008) MISSED OFFSET
	class UCharacterStateComponent*                    NextCharacterState;                                       // 0x0F08(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData21[0x8];                                       // 0x0F10(0x0008) MISSED OFFSET
	bool                                               PlayerIsLeavingInDroppod;                                 // 0x0F18(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData22[0x13];                                      // 0x0F19(0x0013) MISSED OFFSET
	struct FCameraSpringSettings                       CameraSpringSettings;                                     // 0x0F2C(0x003C) (Edit)
	unsigned char                                      UnknownData23[0x8];                                       // 0x0F68(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerCharacter");
		return ptr;
	}


	void UseZipLine(class AZipLineProjectile** zipline, struct FVector* Start, struct FVector* End);
	void Unparalyze();
	void ToggleScanTool(bool* Visible);
	void ToggleHUDReleased();
	void ToggleHUDPressed();
	void ToggleHeadLight();
	void ThrowFlareReleased();
	void ThrowFlarePressed();
	void ThrowFlare();
	void StartTutorials(bool* ResetTutorials);
	void SetStandingDown(bool* standingDown);
	void SetRadarMaterialInstance(class UMaterialInstanceDynamic** matInstance);
	void SetOutsideShieldGenerator(class AArmorRegeneratorActor** Shield);
	void SetIsCharacterSelectionModel();
	void SetInsideShieldGenerator(class AArmorRegeneratorActor** Shield);
	void SetInCharacterSelectionWorld();
	void SetHeadLight(bool* on);
	void SetFallbackPhysicalMaterial(class UFSDPhysicalMaterial** PhysMat);
	void SetCameraMode(ECharacterCameraMode* NewCameraMode);
	void Server_ThrowCarriedItem(struct FVector_NetQuantize* force);
	void Server_StartSalute(class UAnimMontage** startSalute);
	void Server_Shouted();
	void Server_SetUsing(bool* characterIsUsing);
	void Server_SetRunning(bool* characterIsRunning);
	void Server_SetIsThrowingCarriable(bool* isThrowing);
	void Server_SetIsPressingMovementInput(bool* aIsPushingInput);
	void Server_SetIsJumpPressed(bool* InJumpPressed);
	void Server_SetDispenserReward(class AEventRewardDispenser** Dispenser, class USchematic** Reward);
	void Server_SetClientReady();
	void Server_CallDonkey();
	void SendLevelUpStatistics(int* currentRank);
	void ReviveProgress(float* Progress);
	void RejectInvite();
	void ReceiveOnHeadlightOn();
	void PrepareForEndScreen();
	void PilotVehicle(class AActor** Vehicle);
	void Paralyze();
	void OpenChat();
	void OnResourceFull(class UCappedResource** Resource);
	void OnRep_IsStandingDown();
	void OnRep_IsDancing();
	void OnRep_HeadLightOn();
	void OnRep_DanceMove();
	void OnRep_CharacterState(class UCharacterStateComponent** oldState);
	void OnItemEquipped(class AItem** Item);
	void OnCharacterUsed(class APlayerCharacter** user);
	void MouseWheelUp();
	void MouseWheelDown();
	bool LockIfState(ECharacterState* LockIf, ECharacterState* LockTo, bool* canMoveAndAim);
	void JumpRelease();
	void JumpPress();
	void ItemUseDelegate__DelegateSignature(class AItem** Item);
	bool IsWithinDistance(class AActor** Source, float* distance);
	bool IsWalking();
	bool IsStateActive(ECharacterState* State);
	bool IsSaluting();
	bool IsParalyzed();
	bool IsMovementInputPressed();
	bool IsMining();
	bool IsLyingDown();
	bool IsJumpPressed();
	bool IsInState(ECharacterState* aState);
	bool IsFrozen();
	bool IsFirstPerson();
	bool IsDown();
	bool IsAlive();
	void IgnoreInvite();
	bool HasBeenRevived();
	class UTrailComponent* GetTrailComponent();
	class UPlayerTPAnimInstance* GetTPAnimInstance();
	float GetTimeSinceLastRevival();
	ECharacterState GetPreviousState();
	class AFSDPlayerState* GetPlayerState();
	struct FString GetPlayerName();
	class AFSDPlayerController* GetPlayerController();
	struct FString GetLoadoutAnalyticsString();
	class UInventoryList* GetInventoryList();
	struct FText GetHeroName();
	class UTexture2D* GetHeroIcon();
	struct FLinearColor GetHeroColor();
	class UPlayerFPAnimInstance* GetFPAnimInstance();
	class APlayerCharacter* GetDownCameraTarget();
	class USceneComponent* GetDownCameraRotationPoint();
	class USceneComponent* GetDownCameraAttachPoint();
	ECharacterState GetCurrentState();
	float GetClassXP();
	class UCharacterGearComponent* GetCharacterGear();
	float GetBeginRevivedProgress();
	struct FString GetAnalyticsClass();
	struct FVector GetActorGroundLocation();
	TArray<class AArmorRegeneratorActor*> GetActiveShieldGenerators();
	class UPlayerAnimInstance* GetActiveAnimInstance();
	void ForceIsPressingMovementInputKey();
	void FirePressedDelegate__DelegateSignature();
	void ExitVehicle();
	void CycleItemReleased();
	void CycleItemPressed();
	void Client_TargetDamaged(class AActor** Target, TScriptInterface<class UHealth>* Health, float* Damage, float* DamageModifier);
	void CheckWithoutAPaddleAchievement();
	void CheatRevive();
	void CheatGodMode();
	void ChangeState(ECharacterState* NewState);
	void ChangeIfDifferentState(ECharacterState* NewState);
	void BP_OnUpdateMeshes();
	void BP_OnControllerReady();
	void AnnounceSchematicCollected(class USchematic** InSchematic);
	void All_StartSalute(class UAnimMontage** saluteMontage);
	void All_ShowImpactEffects(class UParticleSystem** particles, struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Orientation);
	float AddClassXP(float* amount);
	void AcceptInvite();
};


// Class FSD.PlayerCharacterFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UPlayerCharacterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerCharacterFunctionLibrary");
		return ptr;
	}


	bool STATIC_SetPlayerVoiceMuted(class UObject** WorldContextObject, class AFSDPlayerState** PlayerState, bool* Mute, bool* TrySystemWide, int* LocalUserNum);
	bool STATIC_IsPlayerVoiceMuted(class UObject** WorldContextObject, class AFSDPlayerState** PlayerState, int* LocalUserNum);
	class APlayerCharacter* STATIC_GetRandomPlayer(class UObject** WorldContextObject, bool* MustBeAlive, bool* MustNotBeParalyzed);
	class APlayerCharacter* STATIC_GetNearestVisiblePlayer(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustNotBeParalyzed);
	class APlayerCharacter* STATIC_GetNearestPlayerToPosition(class UObject** WorldContextObject, struct FVector* Position, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* XYOnly);
	class APlayerCharacter* STATIC_GetNearestPlayerFrom(class UWorld** World, struct FVector* From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* XYOnly);
	class APlayerCharacter* STATIC_GetNearestPlayer(class AActor** From, float* MaxDistance, bool* MustBeAlive, bool* MustBeUnparalyzed, bool* XYOnly);
};


// Class FSD.PlayerHealthComponent
// 0x00E8 (0x0330 - 0x0248)
class UPlayerHealthComponent : public UHealthComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0248(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFullHealthCannotHeal;                                   // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealedFromCrystalEvent;                                 // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthRegeneratingChanged;                              // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0280(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerHit;                                              // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MaxHealth;                                                // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxArmor;                                                 // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              ArmorDamage;                                              // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET
	float                                              ReviveArmorReturnRatio;                                   // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthPerCrystalVolume;                                   // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FHealthRegenerationParams                   HealthRegeneration;                                       // 0x02B8(0x0010) (Edit)
	class UCurveFloat*                                 ArmorRegenCurve;                                          // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShieldRegenDelay;                                         // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystem*                             GenericImpactParticles;                                   // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InvulnerabilityDuration;                                  // 0x02E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IronWillCooldown;                                         // 0x02EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      IronWillStatusEffect;                                     // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReviveInvulnerabilityTime;                                // 0x02F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1C];                                      // 0x02FC(0x001C) MISSED OFFSET
	class UPlayerDamageTakenMutator*                   DamageTakenMutator;                                       // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0320(0x0008) MISSED OFFSET
	bool                                               IronWillActive;                                           // 0x0328(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerHealthComponent");
		return ptr;
	}


	void OnRep_MaxHealth();
	void OnRep_MaxArmor();
	void OnRep_ArmorDamage(float* oldDamage);
	bool GetIsHealthRegenerating();
	bool GetIronWillActive();
	float GetHealthRegeneratingTargetRatio();
	void Client_SetHealthRegenerating(bool* isRegenerating);
	void Client_HealthFullCannotHeal();
};


// Class FSD.PlayerMovementComponent
// 0x0040 (0x0780 - 0x0740)
class UPlayerMovementComponent : public UCharacterMovementComponent
{
public:
	bool                                               DebugFastMove;                                            // 0x0740(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0741(0x0007) MISSED OFFSET
	class USoundBase*                                  SlidingOnIceSound;                                        // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MovementPenalty;                                          // 0x0750(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0754(0x0004) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0758(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0760(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerMovementComponent");
		return ptr;
	}

};


// Class FSD.PlayerProximityTracker
// 0x0048 (0x0140 - 0x00F8)
class UPlayerProximityTracker : public UActorComponent
{
public:
	float                                              MaxDistanceBetweenPlayers;                                // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerSpheresUpdateRatePerSecond;                         // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPlayerSphere>                       PlayerSpheres;                                            // 0x0100(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FProximityTriggerItem>               LocalPlayerProximityTriggers;                             // 0x0110(0x0010) (ZeroConstructor, Transient)
	TArray<struct FProximityTriggerItem>               AnyPlayerProximityTriggers;                               // 0x0120(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerProximityTracker");
		return ptr;
	}


	void STATIC_Receive_RegisterForLocalPlayerProximity(class UObject** WorldContextObject, struct FVector* Location, float* distance, struct FScriptDelegate* proximityCallback, bool* triggerOnlyOnce);
	void STATIC_Receive_RegisterForAnyPlayerProximity(class UObject** WorldContextObject, struct FVector* Location, float* distance, struct FScriptDelegate* proximityCallback, bool* triggerOnlyOnce);
	struct FPlayerSphere GetPrimarySphere();
	TArray<struct FPlayerSphere> GetPlayerSpheres();
};


// Class FSD.PlayerRejoinState
// 0x0070 (0x0168 - 0x00F8)
class UPlayerRejoinState : public UActorComponent
{
public:
	class UClass*                                      CharacterClass;                                           // 0x00F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0100(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerRejoinState");
		return ptr;
	}


	void Server_Reset();
	void Server_AddIntValue(struct FGuid* ItemKey, struct FName* ValueKey, int* Value);
	void Server_AddFloatValue(struct FGuid* ItemKey, struct FName* ValueKey, float* Value);
	void Client_SetValues(TArray<struct FRejoinFloat>* floatValues, TArray<struct FRejoinInt>* intValues);
};


// Class FSD.ResourcesComponent
// 0x0058 (0x0150 - 0x00F8)
class UResourcesComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnResourceChanged;                                        // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceIncreased;                                      // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceFull;                                           // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceAdded;                                          // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UCappedResource*>                     Resources;                                                // 0x0138(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	float                                              ResourceCap;                                              // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourcesComponent");
		return ptr;
	}


	void ResourceIncreased(class UCappedResource** Resource, float* Delta);
	void ResourceFull(class UCappedResource** Resource);
	void ResourceChanged(class UCappedResource** Resource, float* currentAmount);
	void OnRep_Resources();
	int STATIC_GetXPFromResourceMap(TMap<class UResourceData*, float>* Resources);
	int GetXpFromMining();
	class UCappedResource* GetResource(class UResourceData** Data, bool* createIfAmountIsZero);
	float GetCapacityPct();
	TArray<class UCappedResource*> GetAllResources();
};


// Class FSD.PlayerResourceComponent
// 0x0000 (0x0150 - 0x0150)
class UPlayerResourceComponent : public UResourcesComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerResourceComponent");
		return ptr;
	}


	class UPlayerResourceComponent* STATIC_GetFromPlayer(class APlayerCharacter** PlayerCharacter);
};


// Class FSD.TemperatureComponent
// 0x0010 (0x0108 - 0x00F8)
class UTemperatureComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TemperatureComponent");
		return ptr;
	}


	bool STATIC_TryPushHeatSource(class AActor** Target, float* Temperature, ETemperatureIntensity* Intensity);
	bool STATIC_TryPopHeatSource(class AActor** Target, float* Temperature, ETemperatureIntensity* Intensity);
	void ChangeTemperature(float* Degrees, class AActor** Source);
};


// Class FSD.PlayerTemperatureComponent
// 0x00B8 (0x01C0 - 0x0108)
class UPlayerTemperatureComponent : public UTemperatureComponent
{
public:
	struct FScriptMulticastDelegate                    OnTemperatureChanged;                                     // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTemperatureStateChanged;                                // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTemperatureChangeRate;                                  // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDefrosting;                                             // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBarVisibilityChanged;                                   // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MinimumTemperature;                                       // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaximumTemperature;                                       // 0x015C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefrostTemperature;                                       // 0x0160(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurnTemperature;                                          // 0x0164(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DouseFireTemperature;                                     // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TemperaturRegainSpeed;                                    // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefrostingRequired;                                       // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	class UClass*                                      OnDefrostedStatusEffect;                                  // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalTemperature;                                        // 0x0180(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentTemperature;                                       // 0x0184(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetTemperature;                                        // 0x0188(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x9];                                       // 0x018C(0x0009) MISSED OFFSET
	int8_t                                             TemperatureChangeSpeed;                                   // 0x0195(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0196(0x0002) MISSED OFFSET
	float                                              DefrostProgress;                                          // 0x0198(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               barVisible;                                               // 0x019C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x13];                                      // 0x019D(0x0013) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x01B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EPlayerTemperatureState                            TemperatureState;                                         // 0x01B8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerTemperatureComponent");
		return ptr;
	}


	void SetNormalTemperature();
	void SetFrozenTemperature();
	void OnRep_TemperatureState(EPlayerTemperatureState* oldState);
	void OnRep_TemperatureChangeSpeed(int8_t* OldSpeed);
	void OnRep_DefrostProgress();
	void OnRep_CurrentTemperature(float* OldTemperature);
	void OnDeath(class UHealthComponentBase** Health);
	int GetTemperatureChangedSpeed();
	float GetDefrostProgress();
	float GetCurrentTemperatureNormalized();
	void Defrost(float* amount);
};


// Class FSD.PlayerTriggerBox
// 0x0050 (0x0388 - 0x0338)
class APlayerTriggerBox : public ATriggerBox
{
public:
	struct FScriptMulticastDelegate                    OnPlayerEntered;                                          // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerExited;                                           // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllPlayersEntered;                                      // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllPlayersExited;                                       // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class APlayerCharacter*>                    PlayersInside;                                            // 0x0378(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerTriggerBox");
		return ptr;
	}


	void TriggerBoxPlayerEvent__DelegateSignature(class APlayerCharacter** Player);
	void TriggerBoxEvent__DelegateSignature();
	bool IsAnyPlayerInside(bool* excludingDeadPlayers);
	void BP_OnPlayerExited(class APlayerCharacter** Player);
	void BP_OnPlayerEntered(class APlayerCharacter** Player);
	void BP_OnAllPlayersExited();
	void BP_OnAllPlayersEntered();
	bool AreAllPlayersInside(bool* excludingDeadPlayers);
};


// Class FSD.PlayerTriggerComponent
// 0x0030 (0x0128 - 0x00F8)
class UPlayerTriggerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTriggerBeginEvent;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTriggerEndEvent;                                        // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UPrimitiveComponent*                         Collider;                                                 // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0120(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerTriggerComponent");
		return ptr;
	}


	void SetCollider(class UPrimitiveComponent** Collider);
	void OnEndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
};


// Class FSD.PostProcessingManager
// 0x0030 (0x0360 - 0x0330)
class APostProcessingManager : public AActor
{
public:
	TArray<TWeakObjectPtr<class AFSDPostProcessingActor>> RegisteredActors;                                         // 0x0330(0x0010) (ZeroConstructor, Transient)
	TArray<struct FPostProcessingBlendable>            CurrentBlendables;                                        // 0x0340(0x0010) (ZeroConstructor, Transient)
	TArray<class UMaterialInstanceDynamic*>            Materials;                                                // 0x0350(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PostProcessingManager");
		return ptr;
	}

};


// Class FSD.CaveInfluencer
// 0x0000 (0x0030 - 0x0030)
class UCaveInfluencer : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CaveInfluencer");
		return ptr;
	}

};


// Class FSD.ProceduralSettings
// 0x0008 (0x0038 - 0x0030)
class UProceduralSettings : public UDataAsset
{
public:
	class UDebrisPositioning*                          SecretRoomPositioning;                                    // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProceduralSettings");
		return ptr;
	}

};


// Class FSD.FakePhysicsProjectile
// 0x00B8 (0x0470 - 0x03B8)
class AFakePhysicsProjectile : public AProjectileBase
{
public:
	struct FFakeMoverState                             MoverState;                                               // 0x03B8(0x0060) (Edit, BlueprintVisible)
	struct FFakeMoveState                              posVel;                                                   // 0x0418(0x0024) (Net, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x0440(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InitialSpeed;                                             // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DampOmega;                                                // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SyncTime;                                                 // 0x0450(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0454(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FakePhysicsProjectile");
		return ptr;
	}


	void SphereBeginOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	void OnRep_PosVel(struct FFakeMoveState* posVel);
};


// Class FSD.ExplosionBaseComponent
// 0x0018 (0x0110 - 0x00F8)
class UExplosionBaseComponent : public UActorComponent
{
public:
	float                                              CarveDiameterCM;                                          // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveNoiseCM;                                             // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveBurnThicknessCM;                                     // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveNormalOffsetCM;                                      // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CarveNormalSqueeze;                                       // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExplosionBaseComponent");
		return ptr;
	}


	void DamageOnly(struct FVector* Location, struct FName* BoneName, class UPrimitiveComponent** Target, class UPhysicalMaterial** PhysicalMaterial, class UDamageComponent** DamageComponent);
	void DamageArmorClients(class AActor** Target, struct FName* BoneName, class UDamageComponent** DamageComponent);
	void DamageAndCarve(struct FVector* Location, struct FVector* ImpactNormal, struct FName* BoneName, class UPrimitiveComponent** Target, class UPhysicalMaterial** PhysicalMaterial, class UDamageComponent** DamageComponent);
};


// Class FSD.ExplosionComponent
// 0x0000 (0x0110 - 0x0110)
class UExplosionComponent : public UExplosionBaseComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ExplosionComponent");
		return ptr;
	}

};


// Class FSD.ProjectileExplosion
// 0x0028 (0x0138 - 0x0110)
class UProjectileExplosion : public UExplosionBaseComponent
{
public:
	struct FScaledEffect                               ExplosionEffect;                                          // 0x0110(0x0010) (Edit)
	class USoundCue*                                   ExplosionSound;                                           // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        ForceFeedbackEffect;                                      // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackAttenuation*                   ForceFeedbackAttanuation;                                 // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProjectileExplosion");
		return ptr;
	}


	void SpawnEffects(struct FVector* Location, struct FVector* Normal);
};


// Class FSD.ProjectileLauncherBaseComponent
// 0x0038 (0x0190 - 0x0158)
class UProjectileLauncherBaseComponent : public UWeaponFireComponent
{
public:
	bool                                               UseSpread;                                                // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0159(0x0003) MISSED OFFSET
	float                                              VerticalSpread;                                           // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HorizontalSpread;                                         // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                      // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UItemUpgrade*>                        ProjectileUpgrades;                                       // 0x0178(0x0010) (ZeroConstructor, Transient)
	float                                              ArcStartAngle;                                            // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x018C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProjectileLauncherBaseComponent");
		return ptr;
	}


	void Server_StopFire();
	void Server_Fire(struct FVector* Origin, struct FVector_NetQuantizeNormal* Direction);
	void ProjectileSpawned__DelegateSignature(class AProjectileBase** Projectile);
	void All_ShowHit();
};


// Class FSD.ProjectileLauncherComponent
// 0x0008 (0x0198 - 0x0190)
class UProjectileLauncherComponent : public UProjectileLauncherBaseComponent
{
public:
	class UClass*                                      projectileClass;                                          // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProjectileLauncherComponent");
		return ptr;
	}


	void SetProjectileClass(class UClass** NewProjectileClass);
};


// Class FSD.ChargedProjectileLauncherComponent
// 0x0010 (0x01A0 - 0x0190)
class UChargedProjectileLauncherComponent : public UProjectileLauncherBaseComponent
{
public:
	class UClass*                                      NormalProjectileClass;                                    // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ChargedProjectileClass;                                   // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedProjectileLauncherComponent");
		return ptr;
	}

};


// Class FSD.RadarPointComponent
// 0x0020 (0x0118 - 0x00F8)
class URadarPointComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnRemove;                                                 // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              PointPriority;                                            // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UClass*                                      WidgetClass;                                              // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RadarPointComponent");
		return ptr;
	}


	void STATIC_MapToRadarPosition(struct FVector* playerPos, struct FVector* playerForward, struct FVector* Pos, bool* snap, struct FVector* radarPos, float* Alpha);
};


// Class FSD.NetworkedRadarPointComponent
// 0x0000 (0x0118 - 0x0118)
class UNetworkedRadarPointComponent : public URadarPointComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.NetworkedRadarPointComponent");
		return ptr;
	}

};


// Class FSD.RandomSelectorItem
// 0x0008 (0x0340 - 0x0338)
class ARandomSelectorItem : public AGenerationItem
{
public:
	int                                                Min;                                                      // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomSelectorItem");
		return ptr;
	}

};


// Class FSD.RandRangeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class URandRangeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandRangeFunctionLibrary");
		return ptr;
	}


	bool STATIC_TryPickRandomText(TArray<struct FText>* TextArray, struct FRandomStream* RandomStream, struct FText* OutResult);
	struct FText STATIC_PickRandomText(TArray<struct FText>* TextArray, struct FRandomStream* RandomStream);
	int STATIC_GetValueFromStream(struct FIRandRange* RandRange, struct FRandomStream* RandomStream);
	float STATIC_GetFloatValue(struct FRandRange* RandRange);
	float STATIC_GetFloatFromStream(struct FRandRange* RandRange, struct FRandomStream* RandomStream);
};


// Class FSD.RandIntervalFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class URandIntervalFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandIntervalFunctionLibrary");
		return ptr;
	}


	float STATIC_GetFloatValue(struct FRandInterval* RandInterval);
};


// Class FSD.RDGComponent
// 0x0010 (0x0108 - 0x00F8)
class URDGComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnDetonated;                                              // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RDGComponent");
		return ptr;
	}

};


// Class FSD.RDGLauncher
// 0x0010 (0x0720 - 0x0710)
class ARDGLauncher : public AAmmoDrivenWeapon
{
public:
	TArray<class URDGComponent*>                       ActiveGrenades;                                           // 0x0710(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RDGLauncher");
		return ptr;
	}


	void Server_DetonateAll();
	void RegisterGrenade(class URDGComponent** Grenade);
};


// Class FSD.ReactiveTerrain
// 0x0000 (0x0028 - 0x0028)
class UReactiveTerrain : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ReactiveTerrain");
		return ptr;
	}


	void Receive_OnActorLeft(class UStatusEffectsComponent** StatusEffects);
	void Receive_OnActorEntered(class UStatusEffectsComponent** StatusEffects);
};


// Class FSD.StatusEffectReactiveTerrain
// 0x0008 (0x0030 - 0x0028)
class UStatusEffectReactiveTerrain : public UReactiveTerrain
{
public:
	class UClass*                                      StatusEffect;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectReactiveTerrain");
		return ptr;
	}

};


// Class FSD.ReactiveTerrainTrackerComponent
// 0x0000 (0x00F8 - 0x00F8)
class UReactiveTerrainTrackerComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ReactiveTerrainTrackerComponent");
		return ptr;
	}

};


// Class FSD.PlayerReactiveTerrainTrackerComponent
// 0x0008 (0x0100 - 0x00F8)
class UPlayerReactiveTerrainTrackerComponent : public UReactiveTerrainTrackerComponent
{
public:
	class UFSDPhysicalMaterial*                        CurrentPhysicalMaterial;                                  // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerReactiveTerrainTrackerComponent");
		return ptr;
	}

};


// Class FSD.PathfinderReactiveTerrainTrackerComponent
// 0x0020 (0x0118 - 0x00F8)
class UPathfinderReactiveTerrainTrackerComponent : public UReactiveTerrainTrackerComponent
{
public:
	struct FRandRange                                  CheckInterval;                                            // 0x00F8(0x0008) (Edit)
	class UFSDPhysicalMaterial*                        CurrentPhysicalMaterial;                                  // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStatusEffectsComponent*                     StatusEffectsComponent;                                   // 0x0108(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PathfinderReactiveTerrainTrackerComponent");
		return ptr;
	}

};


// Class FSD.RecallableActor
// 0x00A0 (0x04E0 - 0x0440)
class ARecallableActor : public ADeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0440(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReturnFinish;                                           // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRelocateFinished;                                       // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              AcceptanceRadius;                                         // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoRecallDistance;                                       // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RelocateLandingHeight;                                    // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0484(0x0004) MISSED OFFSET
	class UClass*                                      RelocationMarkerType;                                     // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       RecallTarget;                                             // 0x0490(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	ERecallableActorState                              State;                                                    // 0x0498(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0499(0x0007) MISSED OFFSET
	struct FTransform                                  RelocateTransform;                                        // 0x04A0(0x0030) (Transient, IsPlainOldData)
	bool                                               RelocateLanded;                                           // 0x04D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x04D1(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       RelocationMarker;                                         // 0x04D4(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bInitialized;                                             // 0x04DC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x04DD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RecallableActor");
		return ptr;
	}


	void SetRecallTarget(class AActor** NewTarget);
	void Relocate(struct FVector* NewLocation, struct FRotator* NewRotation);
	void ReceiveOnStateChanged();
	void RecallableActorStateChanged__DelegateSignature(class ARecallableActor** Sender, ERecallableActorState* State);
	void Recall();
	void OnReturnSucceeded();
	void OnReturnFailed();
	void OnRep_State(ERecallableActorState* oldState);
	void OnRep_RecallTarget();
	void OnRelocated();
	void OnRecallTargetChanged(class AActor** NewTarget);
	void OnPathFinished(bool* success);
	void OnMoving();
	void OnMoveRequested();
	void OnMoveFinished(bool* returnedHome);
	bool GetIsReturning();
	bool GetIsMovingOrMoveRequested();
	bool GetIsMoving();
	bool GetIsMoveRequested();
	void BeginMove();
};


// Class FSD.RecallableItem
// 0x0020 (0x0490 - 0x0470)
class ARecallableItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	class UClass*                                      ItemType;                                                 // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class ARecallableActor>>     ActiveItems;                                              // 0x0480(0x0010) (Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RecallableItem");
		return ptr;
	}


	void ServerSpawnItem(struct FVector* Location, struct FRotator* Rotation);
	void ReceiveOnItemSpawned(class ARecallableActor** Item);
	void OnRep_ActiveItems();
	void ItemReturnFinished(class AActor** Item, bool* success);
	bool CanSpawnItem(struct FVector* Location, struct FRotator* Rotation);
};


// Class FSD.SentryGun
// 0x01B0 (0x04E0 - 0x0330)
class ASentryGun : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEnabledChanged;                                         // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAmmoCountChanged;                                       // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmmoCountChanged;                                    // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USkeletalMeshComponent*                      SentryGunMesh;                                            // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FSentryGunMuzzleSetup>               SentryGunMuzzels;                                         // 0x0378(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	class UClass*                                      projectileClass;                                          // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ShootingSound;                                            // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MuzzleFlash;                                              // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             Tracer;                                                   // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngleRestriction;                                         // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x03C0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03C1(0x0007) MISSED OFFSET
	TArray<struct FOverlapResult>                      OverlapCache;                                             // 0x03C8(0x0010) (ZeroConstructor)
	struct FRotator                                    MinRotation;                                              // 0x03D8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MaxRotation;                                              // 0x03E4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AquisitionRange;                                          // 0x03F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x03F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShotCoolDown;                                             // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TargetLeading;                                            // 0x03FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BurstCount;                                               // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstShotCoolDown;                                        // 0x0404(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IdleScanAngle;                                            // 0x0408(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IdleScanSpeed;                                            // 0x040C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FinalShotFadeOut;                                         // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioOnTurn;                                              // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       DissallowedTargetTags;                                    // 0x0420(0x0020) (Edit)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0440(0x0018) MISSED OFFSET
	int                                                AmmoCount;                                                // 0x0458(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxAmmoCount;                                             // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x0460(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TargetYaw;                                                // 0x0464(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetPitch;                                              // 0x0468(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UHealthComponentBase>         LastTarget;                                               // 0x046C(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UHealthComponentBase>         PrioritizedTarget;                                        // 0x0474(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1C];                                      // 0x047C(0x001C) MISSED OFFSET
	class UWeaponFireComponent*                        WeaponFire;                                               // 0x0498(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x30];                                      // 0x04A0(0x0030) MISSED OFFSET
	class UAudioComponent*                             ShootingAudioComponent;                                   // 0x04D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x04D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryGun");
		return ptr;
	}


	void UseAmmo(int* amount);
	void ReceiveAmmoChanged(int* Delta, int* currentAmount);
	void OnRep_MaxAmmoCount(int* OldCount);
	void OnRep_LastTarget();
	void OnRep_AmmoCount(int* OldCount);
	void OnProjectileFired(struct FVector* Location);
	void OnNewTargetRequested(class AActor** Target, ELaserPointerTargetType* TargetType, struct FVector* Location, class AActor** ExtraActor);
	struct FTransform GetMuzzleTransform();
	struct FName GetMuzzleName();
	int GetMaxAmmoCount();
	float GetDeployProgress();
	float GetAmmoLeftPct();
	int GetAmmoLeft();
	void EnabledChanged__DelegateSignature(bool* IsEnabled);
	void AmmoSpent();
};


// Class FSD.RedeployableSentryGun
// 0x00A8 (0x0588 - 0x04E0)
class ARedeployableSentryGun : public ASentryGun
{
public:
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployFinished;                                         // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDismantleFinished;                                      // 0x0500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployProgressEvent;                                    // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActorTrackingComponent*                     ActorTrackingIcon;                                        // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0528(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             SentryGunOwner;                                           // 0x0530(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bOutlineAndIconVisible;                                   // 0x0538(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ERedeployableSentryGunState                        State;                                                    // 0x0539(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x053A(0x0016) MISSED OFFSET
	float                                              PlasmaLineMaxRange;                                       // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	TArray<class ASentryElectroBeam*>                  PlasmaLines;                                              // 0x0558(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      PlasmaBeamClass;                                          // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ElectrocutionActorClass;                                  // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ElectrocutionActor;                                       // 0x0578(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      EMPDischargeActorClass;                                   // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RedeployableSentryGun");
		return ptr;
	}


	void ToggleOutlineAndIcon(bool* Visible);
	void SetSentryGunOwner(class APlayerCharacter** Character);
	void ReceiveOnStateChanged();
	void ReceiveOnSentryGunOwnerChanged();
	void ReceiveOnDismantled();
	void ReceiveOnDismantle();
	void ReceiveOnDeployed();
	void ReceiveOnDeploy();
	void OnStateChanged__DelegateSignature(class ARedeployableSentryGun** Sender, ERedeployableSentryGunState* NewState);
	void OnRep_State(ERedeployableSentryGunState* oldState);
	void OnRep_SentryGunOwner();
	void OnElectrocutionActorDestroyed(class AActor** Actor);
	void OnDismantleFinished__DelegateSignature();
	void OnDeployProgress__DelegateSignature(float* Progress);
	void OnDeployFinished__DelegateSignature();
	bool GetIsDismantled();
	bool GetIsDeployed();
	float GetAnimDuration(class USkeletalMeshComponent** Mesh);
	void DismantleFinished();
	void Dismantle();
	void DeployFinished();
	void Deploy();
	void ActivateSpecialAttack();
};


// Class FSD.RegisterInviteNotificationBlueprintCallProxy
// 0x0068 (0x0090 - 0x0028)
class URegisterInviteNotificationBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnInviteReceived;                                         // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInviteAccepted;                                         // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInviteRejected;                                         // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0060(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RegisterInviteNotificationBlueprintCallProxy");
		return ptr;
	}


	class URegisterInviteNotificationBlueprintCallProxy* STATIC_RegisterInvitiNotification(class UObject** WorldContextObject);
};


// Class FSD.RegisterSessionInviteNotificationBlueprintCallProxy
// 0x0028 (0x0050 - 0x0028)
class URegisterSessionInviteNotificationBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSessionUserInviteAccepted;                              // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RegisterSessionInviteNotificationBlueprintCallProxy");
		return ptr;
	}


	class URegisterSessionInviteNotificationBlueprintCallProxy* STATIC_RegisterSessionInviteNotification(class UObject** WorldContextObject);
};


// Class FSD.RejectInviteBlueprintCallProxy
// 0x0060 (0x0088 - 0x0028)
class URejectInviteBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0050(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RejectInviteBlueprintCallProxy");
		return ptr;
	}


	class URejectInviteBlueprintCallProxy* STATIC_RejectInvite(class UObject** WorldContextObject, struct FString* ListName, struct FString* userId);
};


// Class FSD.RepairObjective
// 0x0068 (0x01F0 - 0x0188)
class URepairObjective : public UObjective
{
public:
	int                                                RepairedObjectives;                                       // 0x0188(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                ObjectivesToRepair;                                       // 0x018C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RepairObjectiveClass;                                     // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGemResourceData*                            RepairObjectiveResource;                                  // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDebrisPositioning*                          Positioning;                                              // 0x01A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 DistanceCostCurve;                                        // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FInfluenceSphere                            RepairObjectiveInfluencer;                                // 0x01B0(0x0010) (Edit)
	int                                                RepairResourcesPerActor;                                  // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RepairResourceDistanceFromActor;                          // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinRepairObjectiveDistanceToLandingZone;                  // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET
	TArray<class AActor*>                              RepairedObjectivesList;                                   // 0x01D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RepairObjective");
		return ptr;
	}


	void OnRep_RepairedObjectives();
	void OnRep_ObjectivesToRepair();
	void OnObjectiveRepaired(class URepairableComponent** repairable);
	void AllObjectivesRepaired();
};


// Class FSD.ResourceBank
// 0x0068 (0x0188 - 0x0120)
class UResourceBank : public UUsableComponentBase
{
public:
	struct FScriptMulticastDelegate                    OnBeginDeposite;                                          // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepositing;                                             // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndDeposite;                                            // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               OpenForDeposit;                                           // 0x0150(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class AFSDGameState*                               GameState;                                                // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DepositesPerSecond;                                       // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DepositeAmount;                                           // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0168(0x0004) MISSED OFFSET
	bool                                               CanGetStrict;                                             // 0x016C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AddToTeamInventory;                                       // 0x016D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x016E(0x0002) MISSED OFFSET
	class USoundBase*                                  AudioBeginDepositing;                                     // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioDepositing;                                          // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioEndDepositing;                                       // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceBank");
		return ptr;
	}


	void ResourceBankEvent__DelegateSignature();
	void All_Depositing(class APlayerCharacter** Character);
};


// Class FSD.RestrictedResourceBank
// 0x0008 (0x0190 - 0x0188)
class URestrictedResourceBank : public UResourceBank
{
public:
	class UResourceData*                               RequiredResource;                                         // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RestrictedResourceBank");
		return ptr;
	}

};


// Class FSD.ResourceChunk
// 0x0058 (0x0388 - 0x0330)
class AResourceChunk : public AActor
{
public:
	float                                              CollectDuration;                                          // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class USimpleObjectInfoComponent*                  InfoComponent;                                            // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              ResourceAmount;                                           // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	class USoundCue*                                   PickupSound;                                              // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UResourceData*                               ResourceData;                                             // 0x0350(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class APlayerCharacter*>                    OverlappingPlayers;                                       // 0x0358(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class APlayerCharacter>             CollectedBy;                                              // 0x0368(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0370(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceChunk");
		return ptr;
	}


	void OnRep_CollectedBy();
	void CalcMovement(float* InProgress, struct FVector* InVector, struct FVector* OutVelocity, struct FVector* OutAngularVelocity);
};


// Class FSD.ResourceCreator
// 0x0000 (0x0030 - 0x0030)
class UResourceCreator : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceCreator");
		return ptr;
	}

};


// Class FSD.VeinResourceCreator
// 0x0048 (0x0078 - 0x0030)
class UVeinResourceCreator : public UResourceCreator
{
public:
	class UVeinResourceData*                           Resource;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDebrisPositioning*                          Positioning;                                              // 0x0038(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	ECarveFilterType                                   CarveType;                                                // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              SegmentMaxDot;                                            // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeinWorldHorizontalMaxDot;                                // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeinWorldHorizontalMinDot;                                // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRandRange                                  VeinLength;                                               // 0x0050(0x0008) (Edit)
	class UFloodFillSettings*                          Noise;                                                    // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseRange;                                               // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UDebrisBase*>                         VeinDebris;                                               // 0x0068(0x0010) (Edit, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VeinResourceCreator");
		return ptr;
	}

};


// Class FSD.PatchResourceCreator
// 0x0040 (0x0070 - 0x0030)
class UPatchResourceCreator : public UResourceCreator
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	ECarveFilterType                                   CarveType;                                                // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UFloodFillSettings*                          PatchNoise;                                               // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          CarverNoise;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseRange;                                               // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseScale;                                               // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Size;                                                     // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UDebrisBase*>                         VeinDebris;                                               // 0x0060(0x0010) (Edit, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PatchResourceCreator");
		return ptr;
	}

};


// Class FSD.CarvedResourceCreator
// 0x0068 (0x0098 - 0x0030)
class UCarvedResourceCreator : public UResourceCreator
{
public:
	class UCarvedResourceData*                         Resource;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleToResourceDistribution;                              // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UDebrisPositioning*                          Positioning;                                              // 0x0040(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FIRandRange                                 NumCarvers;                                               // 0x0048(0x0008) (Edit)
	float                                              ExpensiveNoise;                                           // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CarveOffsetRadius;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpawnAttachClass;                                         // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttachSpawnOffsetDistance;                                // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECarveOptionsCellSize                              CarveCellSize;                                            // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	TArray<struct FUDebrisCarveMesh>                   Meshes;                                                   // 0x0078(0x0010) (Edit, ZeroConstructor)
	TArray<struct FResourceDebris>                     Debris;                                                   // 0x0088(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CarvedResourceCreator");
		return ptr;
	}

};


// Class FSD.BaseResource
// 0x0000 (0x0030 - 0x0030)
class UBaseResource : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BaseResource");
		return ptr;
	}

};


// Class FSD.RessuplyPod
// 0x0080 (0x03B0 - 0x0330)
class ARessuplyPod : public AActor
{
public:
	class UDamageComponent*                            Damage;                                                   // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              KillRadius;                                               // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DropHeight;                                               // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DropDelay;                                                // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MissionShoutDelay;                                        // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            DialogOrderAccepted;                                      // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            DialogPodArrived;                                         // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	class UDialogDataAsset*                            CurrentMissionShout;                                      // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     StartLocation;                                            // 0x0368(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x0374(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	ERessuplyPodState                                  State;                                                    // 0x0380(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	float                                              TargetDropTime;                                           // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	class UCurveFloat*                                 DropCurve;                                                // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      PlayerSpawnPoint;                                         // 0x03A0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CloseToImpactDistance;                                    // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RessuplyPod");
		return ptr;
	}


	void OnTunnelBLocked();
	void OnRep_State(ERessuplyPodState* oldState);
	void OnDropStarted();
	void OnDroppodImpact();
	void OnDroppodCloseToImpact();
	class AActor* STATIC_DropToTarget(class UObject** WorldContextObject, class UClass** podClass, struct FVector* Location, class AActor** Requester);
};


// Class FSD.RessuplyPodSpawn
// 0x0000 (0x03B0 - 0x03B0)
class ARessuplyPodSpawn : public ARessuplyPod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RessuplyPodSpawn");
		return ptr;
	}


	void SetController(class AFSDPlayerController** Controller);
};


// Class FSD.RessuplyPodItem
// 0x0060 (0x04D0 - 0x0470)
class ARessuplyPodItem : public AAnimatedItem
{
public:
	class UClass*                                      ResupplyBeacon;                                           // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemPlacerClass;                                          // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacerInstance;                                       // 0x0480(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      SupplyPodClass;                                           // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ResourceCost;                                             // 0x0490(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	struct FText                                       OrderDescription;                                         // 0x0498(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       LogText;                                                  // 0x04B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              Cooldown;                                                 // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x04CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RessuplyPodItem");
		return ptr;
	}


	void Server_Call_Resupply(struct FVector* Location);
	int GetResourceCost();
	class UItemPlacerAggregator* GetActiveAggregator();
};


// Class FSD.ResourceObjective
// 0x0048 (0x01D0 - 0x0188)
class UResourceObjective : public UResourceBasedObjective
{
public:
	class UResourceData*                               Resource;                                                 // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ResourcesRequired;                                        // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ResourcesCollected;                                       // 0x0194(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ResourceBuffer;                                           // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RoundToNearest;                                           // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       ObjectivesText;                                           // 0x01A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CreditsRewardText;                                        // 0x01B8(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceObjective");
		return ptr;
	}


	void OnResourceChanged(class UCappedResource** CappedResource, float* amount);
	void OnRep_ResourcesCollected(float* prevAmount);
	float GetRequiredAmount(float* missionScaling);
};


// Class FSD.Reward
// 0x0000 (0x0030 - 0x0030)
class UReward : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Reward");
		return ptr;
	}

};


// Class FSD.UnlockReward
// 0x0000 (0x0030 - 0x0030)
class UUnlockReward : public UReward
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UnlockReward");
		return ptr;
	}

};


// Class FSD.UnlockPlanetZoneReward
// 0x0008 (0x0038 - 0x0030)
class UUnlockPlanetZoneReward : public UUnlockReward
{
public:
	class UPlanetZone*                                 ZoneToUnlock;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UnlockPlanetZoneReward");
		return ptr;
	}

};


// Class FSD.UnlockMissionTypeReward
// 0x0008 (0x0038 - 0x0030)
class UUnlockMissionTypeReward : public UUnlockReward
{
public:
	class UMissionTemplate*                            MissionToUnlock;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UnlockMissionTypeReward");
		return ptr;
	}

};


// Class FSD.UnlockComplexityReward
// 0x0010 (0x0040 - 0x0030)
class UUnlockComplexityReward : public UUnlockReward
{
public:
	class UMissionTemplate*                            mission;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMissionComplexity*                          Complexity;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UnlockComplexityReward");
		return ptr;
	}

};


// Class FSD.UnlockDurationReward
// 0x0010 (0x0040 - 0x0030)
class UUnlockDurationReward : public UUnlockReward
{
public:
	class UMissionTemplate*                            mission;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMissionDuration*                            Duration;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UnlockDurationReward");
		return ptr;
	}

};


// Class FSD.UnlockDifficultyReward
// 0x0008 (0x0038 - 0x0030)
class UUnlockDifficultyReward : public UUnlockReward
{
public:
	class UDifficultySetting*                          Difficulty;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UnlockDifficultyReward");
		return ptr;
	}

};


// Class FSD.ResourceReward
// 0x0010 (0x0040 - 0x0030)
class UResourceReward : public UReward
{
public:
	class UResourceData*                               Resource;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                amount;                                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceReward");
		return ptr;
	}

};


// Class FSD.WeeklyResourceReward
// 0x0010 (0x0040 - 0x0030)
class UWeeklyResourceReward : public UReward
{
public:
	int                                                ResourceCount;                                            // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FIRandRange                                 amount;                                                   // 0x0034(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeeklyResourceReward");
		return ptr;
	}


	TMap<class UResourceData*, float> GetRewards(class AFSDPlayerController** Player);
};


// Class FSD.RetirementReward
// 0x0008 (0x0038 - 0x0030)
class URetirementReward : public UUnlockReward
{
public:
	class UPlayerCharacterID*                          characterID;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RetirementReward");
		return ptr;
	}

};


// Class FSD.ItemBlueprintReward
// 0x0028 (0x0058 - 0x0030)
class UItemBlueprintReward : public UUnlockReward
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.ItemBlueprintReward.ItemToUnlock

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemBlueprintReward");
		return ptr;
	}


	class AActor* GetActorDefaultObject();
	class UClass* GetActorClass();
};


// Class FSD.SkinUnlock
// 0x0008 (0x0038 - 0x0030)
class USkinUnlock : public UUnlockReward
{
public:
	class UItemSkin*                                   Skin;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinUnlock");
		return ptr;
	}

};


// Class FSD.PermanentItemUpgradeReward
// 0x0010 (0x0040 - 0x0030)
class UPermanentItemUpgradeReward : public UUnlockReward
{
public:
	class UClass*                                      Item;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UItemUpgrade*                                Upgrade;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PermanentItemUpgradeReward");
		return ptr;
	}

};


// Class FSD.OverclockingUnlockReward
// 0x0008 (0x0038 - 0x0030)
class UOverclockingUnlockReward : public UUnlockReward
{
public:
	class UClass*                                      Item;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OverclockingUnlockReward");
		return ptr;
	}

};


// Class FSD.PureTextReward
// 0x0018 (0x0048 - 0x0030)
class UPureTextReward : public UUnlockReward
{
public:
	struct FText                                       Text;                                                     // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PureTextReward");
		return ptr;
	}

};


// Class FSD.VanityReward
// 0x0008 (0x0038 - 0x0030)
class UVanityReward : public UUnlockReward
{
public:
	class UVanityItem*                                 VanityItem;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanityReward");
		return ptr;
	}

};


// Class FSD.RewardWidget
// 0x0008 (0x0238 - 0x0230)
class URewardWidget : public UUserWidget
{
public:
	class UReward*                                     Reward;                                                   // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RewardWidget");
		return ptr;
	}


	void PlayReceiveAnim();
};


// Class FSD.RichTextStylable
// 0x00C8 (0x04B8 - 0x03F0)
class URichTextStylable : public URichTextBlock
{
public:
	struct FSlateFontInfo                              Font;                                                     // 0x03F0(0x0050) (Edit)
	struct FSlateColor                                 FontColor;                                                // 0x0440(0x0028) (Edit)
	TMap<struct FName, struct FTextStyleOverride>      Styles;                                                   // 0x0468(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RichTextStylable");
		return ptr;
	}

};


// Class FSD.RichTextSizable
// 0x0030 (0x0420 - 0x03F0)
class URichTextSizable : public URichTextBlock
{
public:
	int                                                DefaultFontSize;                                          // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	struct FSlateColor                                 DefaultFontColor;                                         // 0x03F8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RichTextSizable");
		return ptr;
	}

};


// Class FSD.RockEnemiesEvent
// 0x0080 (0x04F8 - 0x0478)
class ARockEnemiesEvent : public AGameEvent
{
public:
	class UClass*                                      PowerUpClass;                                             // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0480(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             MuzzleEffect;                                             // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PowerUpGenerationTime;                                    // 0x0498(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	TArray<int>                                        KillAmountPerPlayer;                                      // 0x04A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaxEnemyCountPerPlayer;                                   // 0x04B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PowerUpsPerGeneration;                                    // 0x04C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GruntPointsAward;                                         // 0x04C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TankPointsAward;                                          // 0x04C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x04CC(0x0014) MISSED OFFSET
	TArray<class APawn*>                               SpawnedRockEnemies;                                       // 0x04E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UEnemyGroupDescriptor*                       RockEnemies;                                              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RockEnemiesEvent");
		return ptr;
	}


	void StopPowerupGeneration();
	void StartPowerupGeneration();
	void SpawnRockEnemies(float* Difficulty, TArray<struct FVector>* Locations);
	void ShowFireEffects(int* selectedBone);
	void RockEnemySpawned(class APawn** spawnedEnemy);
	void RockEnemyDied(class UHealthComponentBase** Health);
	void OnShoot();
};


// Class FSD.RoomCarverComponent
// 0x0000 (0x0260 - 0x0260)
class URoomCarverComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomCarverComponent");
		return ptr;
	}

};


// Class FSD.SchematicReward
// 0x0010 (0x0040 - 0x0030)
class USchematicReward : public UUnlockReward
{
public:
	ESchematicType                                     SchematicType;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class USchematic*                                  RewardedSchematic;                                        // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicReward");
		return ptr;
	}

};


// Class FSD.RoomDecorationObject
// 0x0010 (0x0040 - 0x0030)
class URoomDecorationObject : public UDataAsset
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      Actor;                                                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomDecorationObject");
		return ptr;
	}

};


// Class FSD.RoomFeature
// 0x0018 (0x0040 - 0x0028)
class URoomFeature : public UObject
{
public:
	TArray<class URoomFeature*>                        RoomFeatures;                                             // 0x0028(0x0010) (Edit, ExportObject, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomFeature");
		return ptr;
	}

};


// Class FSD.RandomSelector
// 0x0008 (0x0048 - 0x0040)
class URandomSelector : public URoomFeature
{
public:
	int                                                Min;                                                      // 0x0040(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Max;                                                      // 0x0044(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RandomSelector");
		return ptr;
	}

};


// Class FSD.FloodFillLine
// 0x0028 (0x0068 - 0x0040)
class UFloodFillLine : public URoomFeature
{
public:
	class UFloodFillSettings*                          WallNoiseOverride;                                        // 0x0040(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UFloodFillSettings*                          CeilingNoiseOverride;                                     // 0x0048(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UFloodFillSettings*                          FloorNoiseOverride;                                       // 0x0050(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FRoomLinePoint>                      Points;                                                   // 0x0058(0x0010) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloodFillLine");
		return ptr;
	}

};


// Class FSD.FloodFillPillar
// 0x0030 (0x0070 - 0x0040)
class UFloodFillPillar : public URoomFeature
{
public:
	class UFloodFillSettings*                          NoiseOverride;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FRandLinePoint>                      Points;                                                   // 0x0048(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FRandRange                                  RangeScale;                                               // 0x0058(0x0008) (Edit, EditConst)
	struct FRandRange                                  NoiseRangeScale;                                          // 0x0060(0x0008) (Edit, EditConst)
	struct FRandRange                                  EndcapScale;                                              // 0x0068(0x0008) (Edit, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloodFillPillar");
		return ptr;
	}

};


// Class FSD.FloodFillProceduralPillar
// 0x0018 (0x0058 - 0x0040)
class UFloodFillProceduralPillar : public URoomFeature
{
public:
	TArray<struct FVector>                             Points;                                                   // 0x0040(0x0010) (Edit, ZeroConstructor, EditConst)
	class UPillarSettings*                             PillarSettings;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloodFillProceduralPillar");
		return ptr;
	}

};


// Class FSD.FloodFillBox
// 0x0038 (0x0078 - 0x0040)
class UFloodFillBox : public URoomFeature
{
public:
	class UFloodFillSettings*                          Noise;                                                    // 0x0040(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0048(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     Extends;                                                  // 0x0054(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0060(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               IsCarver;                                                 // 0x006C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              NoiseRange;                                               // 0x0070(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FloodFillBox");
		return ptr;
	}

};


// Class FSD.EntranceFeature
// 0x0020 (0x0060 - 0x0040)
class UEntranceFeature : public URoomFeature
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    Direction;                                                // 0x004C(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	ECaveEntranceType                                  EntranceType;                                             // 0x0058(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EntranceFeature");
		return ptr;
	}

};


// Class FSD.SubRoomFeature
// 0x0028 (0x0068 - 0x0040)
class USubRoomFeature : public URoomFeature
{
public:
	class URoomGenerator*                              RoomGenerator;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0048(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0054(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Scale;                                                    // 0x0060(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SubRoomFeature");
		return ptr;
	}

};


// Class FSD.DropPodCalldownLocationFeature
// 0x0018 (0x0058 - 0x0040)
class UDropPodCalldownLocationFeature : public URoomFeature
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UClass*                                      CalldownClass;                                            // 0x0050(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DropPodCalldownLocationFeature");
		return ptr;
	}

};


// Class FSD.RoomGeneratorBase
// 0x0028 (0x0058 - 0x0030)
class URoomGeneratorBase : public UDataAsset
{
public:
	float                                              Bounds;                                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               CanOnlyBeUsedOnce;                                        // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	ERoomMirroringSupport                              MirrorSupport;                                            // 0x0035(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	struct FGameplayTagContainer                       RoomTags;                                                 // 0x0038(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomGeneratorBase");
		return ptr;
	}

};


// Class FSD.RoomGenerator
// 0x0010 (0x0068 - 0x0058)
class URoomGenerator : public URoomGeneratorBase
{
public:
	TArray<class URoomFeature*>                        RoomFeatures;                                             // 0x0058(0x0010) (Edit, ExportObject, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomGenerator");
		return ptr;
	}

};


// Class FSD.ProceduralRoomGenerator
// 0x0028 (0x0080 - 0x0058)
class UProceduralRoomGenerator : public URoomGeneratorBase
{
public:
	struct FIRandRange                                 RoomCount;                                                // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              MaxLength;                                                // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWidth;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxHeight;                                                // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<class URoomPiece*>                          RoomPieces;                                               // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProceduralRoomGenerator");
		return ptr;
	}

};


// Class FSD.SpawnActorFeature
// 0x0050 (0x0090 - 0x0040)
class USpawnActorFeature : public URoomFeature
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UClass*                                      ActorToSpawn;                                             // 0x0050(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     AdjustmentDirection;                                      // 0x0058(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EItemAdjustmentType                                Adjustment;                                               // 0x0064(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	struct FVector                                     ScaleMin;                                                 // 0x0068(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     ScaleMax;                                                 // 0x0074(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    RotationDelta;                                            // 0x0080(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpawnActorFeature");
		return ptr;
	}

};


// Class FSD.RoomPiece
// 0x0018 (0x0048 - 0x0030)
class URoomPiece : public UDataAsset
{
public:
	class URoomGenerator*                              RoomGenerator;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<ERoomPieceSide>                             ConnectedSides;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomPiece");
		return ptr;
	}


	struct FVector STATIC_GetDirectionFromPieceSide(ERoomPieceSide* side);
};


// Class FSD.RoomGeneratorGroup
// 0x0010 (0x0040 - 0x0030)
class URoomGeneratorGroup : public UDataAsset
{
public:
	TArray<class URoomGenerator*>                      Rooms;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RoomGeneratorGroup");
		return ptr;
	}


	class URoomGenerator* STATIC_GetRandomRoomWithTags(struct FGameplayTagQuery* queury, struct FRoomGeneratorGroupInstance* groupInstance, struct FRandomStream* RandomStream);
	class URoomGenerator* GetRandomRoom(struct FRandomStream* RandomStream);
	struct FRoomGeneratorGroupInstance CreateGroupInstance();
};


// Class FSD.RotateToFace
// 0x0020 (0x0280 - 0x0260)
class URotateToFace : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	class AActor*                                      Target;                                                   // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                Face;                                                     // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0274(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RotateToFace");
		return ptr;
	}


	void SetTarget(class AActor** Target);
	void SetShouldFaceAway(bool* FaceAway);
};


// Class FSD.SalvageObjective
// 0x00D0 (0x0258 - 0x0188)
class USalvageObjective : public UObjective
{
public:
	int                                                SalvageActorCount;                                        // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	class UGemResourceData*                            LegResource;                                              // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LegCountPerActor;                                         // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LegDistanceToActor;                                       // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDebrisPositioning*                          Positioning;                                              // 0x01A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FInfluenceSphere                            SalvageActorInfluencer;                                   // 0x01A8(0x0010) (Edit)
	TArray<class UDebrisBase*>                         Debris;                                                   // 0x01B8(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      SalvageActor;                                             // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x01D0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.SalvageObjective.DamagedPodClass
	struct FInfluenceSphere                            DamagedPodInfluencer;                                     // 0x01F8(0x0010) (Edit)
	class UDebrisPositioning*                          DamagedPodPositioning;                                    // 0x0208(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              DamagedPodMinDistanceToDropZone;                          // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	class AMiningPod*                                  DamagedPod;                                               // 0x0218(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ActorsToSalvage;                                          // 0x0220(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ActorsSalvaged;                                           // 0x0224(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                RepairPoints;                                             // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PointsRepaired;                                           // 0x022C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MinSalvageActorDistanceToLandingZone;                     // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	TArray<class AActor*>                              SalvagedActors;                                           // 0x0238(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0248(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SalvageObjective");
		return ptr;
	}


	void PointRepaired();
	void OnRep_PointsRepaired();
	void OnRep_ActorsToSalvage(int* prevAmount);
	void OnRep_ActorsSalvaged(int* prevAmount);
	void OnActorRepaired(class URepairableComponent** repairable);
	struct FTransform STATIC_FindRepairPointLocation(class AProceduralSetup** setup, struct FVector* podLocation, float* Radius, class UDebrisPositioning** DebrisPositioning, class UClass** terrainPlacement, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve);
	void AllActorsSalvaged();
};


// Class FSD.MiniMule
// 0x0000 (0x0440 - 0x0440)
class AMiniMule : public ADeepPathfinderCharacter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MiniMule");
		return ptr;
	}

};


// Class FSD.SavableObject
// 0x0018 (0x0040 - 0x0028)
class USavableObject : public UObject
{
public:
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x002C(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SavableObject");
		return ptr;
	}

};


// Class FSD.SavableActor
// 0x0018 (0x0348 - 0x0330)
class ASavableActor : public AActor
{
public:
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0334(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SavableActor");
		return ptr;
	}

};


// Class FSD.SaveGameIDInterface
// 0x0000 (0x0028 - 0x0028)
class USaveGameIDInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SaveGameIDInterface");
		return ptr;
	}

};


// Class FSD.RefundableInterface
// 0x0000 (0x0028 - 0x0028)
class URefundableInterface : public USaveGameIDInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RefundableInterface");
		return ptr;
	}

};


// Class FSD.ItemIDInterface
// 0x0000 (0x0028 - 0x0028)
class UItemIDInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemIDInterface");
		return ptr;
	}

};


// Class FSD.SaveGameLibrary
// 0x0000 (0x0028 - 0x0028)
class USaveGameLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SaveGameLibrary");
		return ptr;
	}


	bool STATIC_TryGetSaveGameSnapShot(class UObject** WorldContext, struct FString* Filename, int* UserIdx, struct FSaveGameSnapShot* OutSnapShot);
	TMap<struct FString, struct FDateTime> STATIC_GetUserSaveGameSlots(struct FString* userId);
	TMap<struct FString, struct FDateTime> STATIC_GetAllSaveGameSlots();
};


// Class FSD.SaveGameStateComponent
// 0x0160 (0x0258 - 0x00F8)
class USaveGameStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEquippedPerksChanged;                                   // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradeCrafted;                                     // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradeEquipped;                                    // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradeUnequipped;                                  // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerProgressChanged;                                  // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoadoutChangedEvent;                                    // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterStatsChanged;                                  // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreditsChanged;                                         // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                Credits;                                                  // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	TArray<struct FSaveGameStatePerkItem>              EquippedPerks;                                            // 0x0180(0x0010) (ZeroConstructor, Transient)
	class UVictoryPose*                                VictoryPose;                                              // 0x0190(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FItemLoadout                                EquippedLoadout;                                          // 0x0198(0x0084) (Transient)
	struct FActiveCampaingMission                      ActiveCampaignMission;                                    // 0x021C(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0228(0x0008) MISSED OFFSET
	TArray<struct FItemUpgradeSelection>               ItemUpgradeSelections;                                    // 0x0230(0x0010) (Net, ZeroConstructor, Transient)
	struct FPlayerProgress                             PlayerProgress;                                           // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	TArray<struct FCharacterProgress>                  CharacterStats;                                           // 0x0248(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SaveGameStateComponent");
		return ptr;
	}


	void SetCampaign();
	void Server_SetVictoryPose(class UVictoryPose** pose);
	void Server_SetPlayerProgress(struct FPlayerProgress* Progress);
	void Server_SetLoadout(struct FItemLoadout* Loadout, TArray<struct FItemUpgradeSelection>* weaponLoadouts);
	void Server_SetEquippedPerks(TArray<struct FSaveGameStatePerkItem>* perks);
	void Server_SetCredits(int* amount);
	void Server_SetCharacterStats(TArray<struct FCharacterProgress>* Stats);
	void Server_SetActiveCampaignMission(struct FActiveCampaingMission* Data);
	void RefreshLoadoutFromSave(class UClass** playerClass);
	void OnRep_PlayerProgress();
	void OnRep_ItemUpgradeSelections();
	void OnRep_Credits();
	void OnRep_CharacterStats();
	void OnRep_ActiveCampaignMission();
	void ItemUpgradeEquipSignature__DelegateSignature(class UClass** itemClass, class UItemUpgrade** Upgrade);
	void ItemUpgradeCraftSignature__DelegateSignature(class UItemUpgrade** Upgrade);
	struct FCharacterProgress GetCharacterStat(class UClass** CharacterClass);
	class UGeneratedMission* GetActiveCampaignMission();
	void CreditsChangedDelegate__DelegateSignature();
};


// Class FSD.SchematicRarity
// 0x0008 (0x0038 - 0x0030)
class USchematicRarity : public UDataAsset
{
public:
	float                                              Rarity;                                                   // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicRarity");
		return ptr;
	}

};


// Class FSD.Schematic
// 0x00B0 (0x0100 - 0x0050)
class USchematic : public USavableDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnSchematicAddedToInventory;                              // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSchematicReset;                                         // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSchematicBuilt;                                         // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USchematicCategory*                          Category;                                                 // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USchematicPricingTier*                       PricingTier;                                              // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USchematicRarity*                            Rarity;                                                   // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPlayerCharacterID*                          UsedByCharacter;                                          // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USchematicItem*                              Item;                                                     // 0x00A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<class UResourceData*, int>                    CraftingCost;                                             // 0x00A8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	bool                                               CostIsLocked;                                             // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Schematic");
		return ptr;
	}


	void SetCraftingMaterialCost();
	void SchematicDelegate__DelegateSignature(class USchematic** Schematic);
	bool HasBeenForged(class UObject** WorldContext);
	bool HasBeenAwardedOrForged(class UObject** WorldContext);
	bool HasBeenAwarded(class UObject** WorldContext);
	struct FText GetTitle();
	ESchematicState GetSchematicState(class UObject** WorldContext);
	class USchematicItem* GetSchematicItem();
	TMap<class UResourceData*, int> GetResourceCost();
	struct FColor GetIconTint();
	class UTexture2D* GetIcon();
	struct FText GetDescription();
	bool CanAffordSchematic(class UObject** WorldContext);
	void BuildSchematic(class UObject** WorldContext);
	void AddSchematicToPlayerInventory(class UObject** WorldContext);
};


// Class FSD.SchematicBankBase
// 0x0008 (0x0038 - 0x0030)
class USchematicBankBase : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicBankBase");
		return ptr;
	}

};


// Class FSD.SchematicBank
// 0x0050 (0x0088 - 0x0038)
class USchematicBank : public USchematicBankBase
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty FSD.SchematicBank.Schematics

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicBank");
		return ptr;
	}


	void AddSchematic(class USchematic** Schematic);
};


// Class FSD.SchematicBankInterface
// 0x0000 (0x0028 - 0x0028)
class USchematicBankInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicBankInterface");
		return ptr;
	}

};


// Class FSD.SchematicCategory
// 0x0098 (0x00E8 - 0x0050)
class USchematicCategory : public USavableDataAsset
{
public:
	struct FText                                       CategoryName;                                             // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.SchematicCategory.FrameTexture
	struct FLinearColor                                FrameTint;                                                // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BackgroundTint;                                           // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESchematicType                                     SchematicType;                                            // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x00B1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.SchematicCategory.ShoutForging
	class UEventRewardType*                            RewardType;                                               // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicCategory");
		return ptr;
	}

};


// Class FSD.SchematicBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class USchematicBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicBlueprintLibrary");
		return ptr;
	}


	void STATIC_PriceAllSchematics(bool* lockPrices);
	bool STATIC_IsSchematicOwnedOrForged(class UObject** WorldContextObject, class USchematic** Schematic);
	bool STATIC_IsSchematicOwned(class UObject** WorldContextObject, class USchematic** Schematic);
	bool STATIC_IsSchematicForged(class UObject** WorldContextObject, class USchematic** Schematic);
	bool STATIC_HasAnyUnlockableSchematics(class UObject** WorldContextObject, class UPlayerCharacterID** characterID);
	TArray<class USchematic*> STATIC_GetRewardableSchematics(class UObject** WorldContextObject, class UPlayerCharacterID** characterID, class USchematicCategory** Category);
	TArray<class USchematic*> STATIC_GetForgedSchematic(class UObject** WorldContextObject);
	class USchematicCategory* STATIC_FindItemUpgradeSchematicCategory(class UItemUpgrade** Upgrade);
	void STATIC_AddSkinSchematicCollectionToSettings(class UItemSkinSchematicCollection** Collection);
};


// Class FSD.SchematicItem
// 0x0000 (0x0028 - 0x0028)
class USchematicItem : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicItem");
		return ptr;
	}


	struct FText GetTitle();
	struct FColor GetIconTint();
	class UTexture2D* GetIcon();
	struct FText GetDescription();
};


// Class FSD.OverclockShematicItem
// 0x0030 (0x0058 - 0x0028)
class UOverclockShematicItem : public USchematicItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.OverclockShematicItem.OwningItem
	class UItemUpgrade*                                Overclock;                                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OverclockShematicItem");
		return ptr;
	}


	class UUpgradableGearComponent* GetOwningGearComponent();
};


// Class FSD.VanitySchematicItem
// 0x0008 (0x0030 - 0x0028)
class UVanitySchematicItem : public USchematicItem
{
public:
	class UVanityItem*                                 Item;                                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanitySchematicItem");
		return ptr;
	}

};


// Class FSD.VictoryPoseSchematicItem
// 0x0008 (0x0030 - 0x0028)
class UVictoryPoseSchematicItem : public USchematicItem
{
public:
	class UVictoryPose*                                VictoryPose;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VictoryPoseSchematicItem");
		return ptr;
	}

};


// Class FSD.DrinkableSchematicItem
// 0x0008 (0x0030 - 0x0028)
class UDrinkableSchematicItem : public USchematicItem
{
public:
	class UDrinkableDataAsset*                         Drinkable;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkableSchematicItem");
		return ptr;
	}

};


// Class FSD.SkinSchematicItem
// 0x0010 (0x0038 - 0x0028)
class USkinSchematicItem : public USchematicItem
{
public:
	class UItemID*                                     ItemID;                                                   // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class UItemSkin*                                   Skin;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinSchematicItem");
		return ptr;
	}

};


// Class FSD.ResourceSchematicItem
// 0x0018 (0x0040 - 0x0028)
class UResourceSchematicItem : public USchematicItem
{
public:
	int                                                Credits;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	class UResourceData*                               Resource;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourceAmount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ResourceSchematicItem");
		return ptr;
	}

};


// Class FSD.SchematicSettings
// 0x0310 (0x0340 - 0x0030)
class USchematicSettings : public UDataAsset
{
public:
	class UDataTable*                                  PricingTable;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USchematic*                                  BlankSchematic;                                           // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) UNKNOWN PROPERTY: SetProperty FSD.SchematicSettings.SchematicBanks
	unsigned char                                      UnknownData01[0x50];                                      // 0x0090(0x0050) UNKNOWN PROPERTY: SetProperty FSD.SchematicSettings.OverclockBanks
	unsigned char                                      UnknownData02[0x50];                                      // 0x00E0(0x0050) UNKNOWN PROPERTY: SetProperty FSD.SchematicSettings.SkinSchematicCollections
	unsigned char                                      UnknownData03[0x50];                                      // 0x0130(0x0050) UNKNOWN PROPERTY: SetProperty FSD.SchematicSettings.VanitySchematicBanks
	TMap<ESchematicType, struct FSchematicType>        SchematicTypes;                                           // 0x0180(0x0050) (Edit, ZeroConstructor)
	class USchematicBank*                              EndlessSchematics;                                        // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x50];                                      // 0x01D8(0x0050) UNKNOWN PROPERTY: SetProperty FSD.SchematicSettings.Categories
	TArray<class USchematicCategory*>                  OverclockCategories;                                      // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class USchematicCategory*>                  VanityCategories;                                         // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class USchematicCategory*>                  EndlessCategories;                                        // 0x0248(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class USchematicPricingTier*                       OverclockPricingTier;                                     // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class USchematicPricingTier*>               VanityPricingTiers;                                       // 0x0260(0x0010) (Edit, ZeroConstructor)
	TArray<class USchematicRarity*>                    VanityRarity;                                             // 0x0270(0x0010) (Edit, ZeroConstructor)
	TArray<class USchematicRarity*>                    OverclockRarity;                                          // 0x0280(0x0010) (Edit, ZeroConstructor)
	TArray<class USchematicRarity*>                    EndlessRarity;                                            // 0x0290(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData05[0xA0];                                      // 0x02A0(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SchematicSettings");
		return ptr;
	}


	struct FSchematicType GetSchematicTypeData(ESchematicType* InType);
};


// Class FSD.BlankSchematicItem
// 0x0038 (0x0060 - 0x0028)
class UBlankSchematicItem : public USchematicItem
{
public:
	struct FText                                       Title;                                                    // 0x0028(0x0018) (Edit)
	struct FText                                       Description;                                              // 0x0040(0x0018) (Edit)
	class UTexture2D*                                  Icon;                                                     // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BlankSchematicItem");
		return ptr;
	}

};


// Class FSD.ForginSettings
// 0x0018 (0x0048 - 0x0030)
class UForginSettings : public UDataAsset
{
public:
	int                                                XPRequiredPerLevel;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<ESchematicType>                             MasteryRewardCycle;                                       // 0x0038(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ForginSettings");
		return ptr;
	}

};


// Class FSD.SendInviteBlueprintCallProxy
// 0x0058 (0x0080 - 0x0028)
class USendInviteBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0050(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SendInviteBlueprintCallProxy");
		return ptr;
	}


	class USendInviteBlueprintCallProxy* STATIC_SendInvite(class UObject** WorldContextObject, struct FString* ListName, struct FString* userId);
};


// Class FSD.SendSessionInviteToFriendBlueprintCallProxy
// 0x0038 (0x0060 - 0x0028)
class USendSessionInviteToFriendBlueprintCallProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SendSessionInviteToFriendBlueprintCallProxy");
		return ptr;
	}


	class USendSessionInviteToFriendBlueprintCallProxy* STATIC_SendSessionInviteToFriend(class UObject** WorldContextObject, struct FString* FriendId);
};


// Class FSD.SentryAttachment
// 0x0000 (0x0330 - 0x0330)
class ASentryAttachment : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryAttachment");
		return ptr;
	}

};


// Class FSD.SentryGunAnimInstance
// 0x0020 (0x0290 - 0x0270)
class USentryGunAnimInstance : public UAnimInstance
{
public:
	class ARedeployableSentryGun*                      RedeployableSentryGun;                                    // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    TurretRotation;                                           // 0x0278(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              YawOffset;                                                // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BuildProgress;                                            // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x028C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryGunAnimInstance");
		return ptr;
	}

};


// Class FSD.RecallableSentryGun
// 0x0020 (0x0500 - 0x04E0)
class ARecallableSentryGun : public ARecallableActor
{
public:
	struct FScriptMulticastDelegate                    OnSentryIndexChanged;                                     // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                SentryIndex;                                              // 0x04F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x04F4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RecallableSentryGun");
		return ptr;
	}


	void SentryIndexChanged__DelegateSignature(int* Index);
	void ReceiveOnSentryReady(class ASentryGun** SentryGun, class APlayerCharacter** PlayerCharacter);
	void OnRep_SentryIndex();
	void GetStateDescription(struct FText* Description);
	class UClass* GetSentryGunClass();
	class ASentryGun* GetSentryGun();
};


// Class FSD.ReloadSentryUsableComponent
// 0x0070 (0x01B8 - 0x0148)
class UReloadSentryUsableComponent : public UUsableComponent
{
public:
	struct FText                                       OutOfAmmoText;                                            // 0x0148(0x0018) (Edit)
	struct FText                                       AmmoFullText;                                             // 0x0160(0x0018) (Edit)
	class USoundBase*                                  AudioOutOfAmmo;                                           // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioReloading;                                           // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             ReloadingAudioComponent;                                  // 0x0188(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               Usable;                                                   // 0x0190(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bReloading;                                               // 0x0191(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0192(0x0006) MISSED OFFSET
	class UAudioComponent*                             ReloadAudioComponent;                                     // 0x0198(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              AmmoPerSec;                                               // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	TWeakObjectPtr<class APlayerCharacter>             OwningPlayerCharacter;                                    // 0x01A8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ASentryGun*                                  SentryGun;                                                // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ReloadSentryUsableComponent");
		return ptr;
	}


	void SetOwningPlayerCharacter(class APlayerCharacter** Player);
	void SetCanUse(bool* isUsable);
	void OnRep_Reloading();
	void OnReloadAudioFinished();
};


// Class FSD.SentryGunItem
// 0x0010 (0x04A0 - 0x0490)
class ASentryGunItem : public APlaceableItem
{
public:
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x0490(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SentryGunItem");
		return ptr;
	}

};


// Class FSD.RecallableSentryGunItem
// 0x0080 (0x0510 - 0x0490)
class ARecallableSentryGunItem : public ARecallableItem
{
public:
	struct FScriptMulticastDelegate                    OnActiveItemsChanged;                                     // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSelectedItemChanged;                                    // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                MaxSentryCount;                                           // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceBetweenSentries;                               // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       RecallHoldDescription;                                    // 0x04B8(0x0018) (Edit)
	float                                              RecallHoldDuration;                                       // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	class UCapacityHoldingItemAggregator*              AmmoCapacity;                                             // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacer;                                               // 0x04E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x04E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	float                                              SupplyStatusWeight;                                       // 0x04F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SentryAngleRestriction;                                   // 0x04FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUpgraded;                                              // 0x0500(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0501(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RecallableSentryGunItem");
		return ptr;
	}


	void ReceiveItemUpgraded();
	void RecallableSentryGunSignature__DelegateSignature(class ARecallableSentryGun** SentryGun);
	void RecallableSentryGunItemSignature__DelegateSignature(class ARecallableSentryGunItem** Item);
	bool HasAmmoLeft();
	class ARecallableSentryGun* GetSelectedSentryGun();
	TArray<class ARecallableSentryGun*> GetActiveSentryGuns();
	bool AreAllSentriesPlaced();
};


// Class FSD.SessionHandling
// 0x0000 (0x0028 - 0x0028)
class USessionHandling : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SessionHandling");
		return ptr;
	}


	EUWPBPTrialCheck STATIC_TrialLicenseCheckStatus(class UObject** WorldContextObject);
	void STATIC_StopVoice(class UObject** WorldContextObject);
	void STATIC_StartVoice(class UObject** WorldContextObject);
	void STATIC_StartTrialLicenseCheck(class UObject** WorldContextObject);
	bool STATIC_StartSearchForFriends(int* LocalUserNum);
	void STATIC_StartMandatoryUpdateCheck(class UObject** WorldContextObject);
	void STATIC_ShowStoreUI(class UObject** WorldContextObject);
	void STATIC_ShowInviteUI(class UObject** WorldContextObject);
	EBPUWPMandatoryUpdateCheck STATIC_MandatoryUpdateCheckStatus(class UObject** WorldContextObject);
	void STATIC_JoinOfficialXboxClub(class UObject** WorldContextObject);
	bool STATIC_IsVoiceChatting();
	bool STATIC_IsInActiveSession();
	bool STATIC_IsDisconnectReasonAKick(EDisconnectReason* reason);
	struct FString STATIC_GetVoiceStatus();
	struct FText STATIC_GetSessionJoinError(class UObject** WorldContextObject);
	bool STATIC_GetOnlinePlayerName(int* LocalUserNum, struct FString* Name);
	EFSDNATType STATIC_GetNATType(class UObject** WorldContextObject);
	EMissionStructure STATIC_GetMissionStructure(struct FBlueprintSessionResult* Result);
	struct FString STATIC_GetLoginStatus(int* LocalUserNum);
	bool STATIC_GetFriendsList(int* LocalUserNum, TArray<struct FFriendInfo>* Players);
	struct FString STATIC_GetFriendlyServerName(class UObject** WorldContextObject);
	bool STATIC_GetCurrentSessionState(struct FString* sessionState, struct FString* ID);
	bool STATIC_FSDUpdateSessionInfo(class UObject** WorldContextObject);
	EFSDMissionStatus STATIC_FSDMissionStatus(struct FBlueprintSessionResult* Result);
	void STATIC_FSDListen(class UObject** WorldContextObject);
	bool STATIC_FSDIsSessionValid(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDIsPrivateServer(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDIsPasswordRequired(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDIsFullServer(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDIsEliteDeepDive(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDIsClassLocked(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDHasGameStarted(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDGetServerStartTime(struct FBlueprintSessionResult* Result, struct FDateTime* StartTime);
	struct FString STATIC_FSDGetServerName(struct FBlueprintSessionResult* Result);
	struct FString STATIC_FSDGetServerID(struct FBlueprintSessionResult* Result);
	struct FString STATIC_FSDGetRegion(struct FBlueprintSessionResult* Result);
	TArray<class UClass*> STATIC_FSDGetPlayerClasses(struct FBlueprintSessionResult* Result);
	int STATIC_FSDGetNumPlayers(struct FBlueprintSessionResult* Result);
	int STATIC_FSDGetMissionSeed(struct FBlueprintSessionResult* Result);
	struct FString STATIC_FSDGetMapName(struct FBlueprintSessionResult* Result);
	int STATIC_FSDGetGlobalMissionSeed(struct FBlueprintSessionResult* Result);
	class UDifficultySetting* STATIC_FSDGetDifficulty(struct FBlueprintSessionResult* Result);
	struct FString STATIC_FSDGetBuildId(struct FBlueprintSessionResult* Result);
	bool STATIC_FSDCancelFindSessions(class UObject** WorldContextObject);
	bool STATIC_FindBestQuickJoinServer(class UObject** WorldContextObject, class UDifficultySetting** Difficulty, class UBiome** Biome, class UMissionTemplate** MissionTemplate, TArray<struct FBlueprintSessionResult>* sessions, struct FBlueprintSessionResult* OutResult);
	bool STATIC_AllowLinkToExternalFeedback(class UObject** WorldContextObject);
};


// Class FSD.SharkEnemy
// 0x0150 (0x05B0 - 0x0460)
class ASharkEnemy : public AEnemyDeepPathfinderCharacter
{
public:
	class UPawnSensingComponent*                       PawnSensing;                                              // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            CollisionSphere;                                          // 0x0468(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            NearTargetSphere;                                         // 0x0470(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    TearingGroundParticles;                                   // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    AirTrailParticles;                                        // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UInDangerComponent*                          Danger;                                                   // 0x0488(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UEnemyComponent*                             EnemyComponent;                                           // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0498(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            BumpDamage;                                               // 0x04A0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGrabberComponent*                           GrabberComponent;                                         // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundCue*                                   ImpactCue;                                                // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   JumpSound;                                                // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04C0(0x0004) MISSED OFFSET
	float                                              DiveForSeconds;                                           // 0x04C4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04C8(0x0004) MISSED OFFSET
	struct FVector_NetQuantize                         RagdollImpact;                                            // 0x04CC(0x000C) (Net, Transient)
	unsigned char                                      UnknownData02[0x10];                                      // 0x04D8(0x0010) MISSED OFFSET
	float                                              LaunchPower;                                              // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x04EC(0x000C) MISSED OFFSET
	float                                              GrabTime;                                                 // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x04FC(0x000C) MISSED OFFSET
	float                                              StopSpeedThreshold;                                       // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TiltLimit;                                                // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              UpsideDownTime;                                           // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RaiseSpeed;                                               // 0x0514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TiltInSpeed;                                              // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TiltOutSpeed;                                             // 0x051C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SafeTimeAfterVounerable;                                  // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RaiseHeight;                                              // 0x0524(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0528(0x0004) MISSED OFFSET
	float                                              AttackDuration;                                           // 0x052C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitLaunchPower;                                           // 0x0530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ChanceToGrab;                                             // 0x0534(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinTimeBetweenBumps;                                      // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	float                                              ChanceForJump;                                            // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinJumpCooldown;                                          // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxJumpCooldown;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              JumpForce;                                                // 0x054C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBeforeGroundCheck;                                    // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x0554(0x000C) MISSED OFFSET
	float                                              MinCirclingTime;                                          // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxCirclingTime;                                          // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFakeMoverSettings*                          CircleSetttings;                                          // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFakeMoverSettings*                          AttackSettings;                                           // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFakeMoverSettings*                          PostHitSettings;                                          // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFakeMoverSettings*                          JumpSettings;                                             // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFakeMoverSettings*                          VounerableSettings;                                       // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxInGroundTime;                                          // 0x0590(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinInGroundTime;                                          // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartParticleTime;                                        // 0x0598(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndParticleTime;                                          // 0x059C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DiveParticles;                                            // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1];                                       // 0x05A8(0x0001) MISSED OFFSET
	ESharkEnemyState                                   State;                                                    // 0x05A9(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x6];                                       // 0x05AA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SharkEnemy");
		return ptr;
	}


	void SetVulnerable();
	void ReleasePlayer(class AActor** playerchar);
	void PopRecentlyBumpedPlayer();
	void OnStateChangedEvent(ESharkEnemyState* CurrentState);
	void OnSeePawn(class APawn** APawn);
	void OnRep_State();
	void OnRep_RagdollImpact();
	void OnRep_DiveTime();
	void OnNearTarget(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	void OnLandedEvent();
	void OnJumpEvent();
	void OnGrabbedEvent();
	void OnDeath(class UHealthComponentBase** aHealthComponent);
	void OnDamaged(float* aAmount);
	void OnCollided(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	void Jumped();
	void ImpactSound();
	void DiveShow();
	void DiveHide();
	void ActivateDanger();
};


// Class FSD.SpiderAnimInstance
// 0x0140 (0x0400 - 0x02C0)
class USpiderAnimInstance : public UEnemyAnimInstance
{
public:
	float                                              Speed;                                                    // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x02C4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              WalkCycleSpeed;                                           // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartMovingSpeed;                                         // 0x02D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StopMovingSpeed;                                          // 0x02D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkCycleMinRate;                                         // 0x02DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkCyclePlayRate;                                        // 0x02E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MeshScale;                                                // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Direction;                                                // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PathDirectionLerpSpeedIn;                                 // 0x02EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PathDirectionLerpSpeedOut;                                // 0x02F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PathDirection;                                            // 0x02F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              HorizontalAngularSpeed;                                   // 0x02F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              HorizontalAngularSpeed_Abs;                               // 0x02FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VerticalAngularSpeed;                                     // 0x0300(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EMoveDirection                                     MoveDirection;                                            // 0x0304(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x0305(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsStrafing;                                               // 0x0306(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsMovingAndStrafing;                                      // 0x0307(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsFrozen;                                                 // 0x0308(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsStaggered;                                              // 0x0309(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsAirborne;                                               // 0x030A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x030B(0x0005) MISSED OFFSET
	class UParticleSystem*                             FootstepParticle;                                         // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   FootstepSound;                                            // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       FootStepLeftBoneName;                                     // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       FootStepRightBoneName;                                    // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootStepParticleCullDistance;                             // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	TMap<class UEnemyPlaySoundKey*, class USoundCue*>  PlaySoundByKeyMap;                                        // 0x0338(0x0050) (Edit, ZeroConstructor)
	TMap<class UEnemySpawnEffectsKey*, class UParticleSystem*> SpawnEffectsByKeyMap;                                     // 0x0388(0x0050) (Edit, ZeroConstructor)
	int                                                RandomWalkCycleIndex;                                     // 0x03D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	TArray<struct FRandomWalkCycleEntry>               RandomWalkCycles;                                         // 0x03E0(0x0010) (Edit, ZeroConstructor)
	bool                                               TurnToIdle;                                               // 0x03F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IdleToTurnLeft;                                           // 0x03F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IdleToTurnRight;                                          // 0x03F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               TurnToWalk;                                               // 0x03F3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               WalkToTurnRight;                                          // 0x03F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               WalkToTurnLeft;                                           // 0x03F5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInFakePhysics;                                          // 0x03F6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x9];                                       // 0x03F7(0x0009) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpiderAnimInstance");
		return ptr;
	}


	void SetMeshScale(float* NewScale);
	void PlayForcedCycle(float* Duration);
};


// Class FSD.SharkAnimInstance
// 0x0010 (0x0410 - 0x0400)
class USharkAnimInstance : public USpiderAnimInstance
{
public:
	ESharkEnemyState                                   SharkState;                                               // 0x0400(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsCloseToGround;                                          // 0x0401(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               AttackConnected;                                          // 0x0402(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0403(0x0001) MISSED OFFSET
	float                                              BendValue;                                                // 0x0404(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0408(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SharkAnimInstance");
		return ptr;
	}

};


// Class FSD.ShootingPlant
// 0x0008 (0x0430 - 0x0428)
class AShootingPlant : public AEnemyPawn
{
public:
	bool                                               IsVisible;                                                // 0x0428(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0429(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ShootingPlant");
		return ptr;
	}

};


// Class FSD.ShootingPlantAnimInstance
// 0x0020 (0x02E0 - 0x02C0)
class UShootingPlantAnimInstance : public UEnemyAnimInstance
{
public:
	float                                              Yaw;                                                      // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              YawSpeed;                                                 // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchSpeed;                                               // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsVisible;                                                // 0x02D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x02D1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ShootingPlantAnimInstance");
		return ptr;
	}

};


// Class FSD.SimpleHealthComponent
// 0x0070 (0x01E8 - 0x0178)
class USimpleHealthComponent : public UHealthComponentBase
{
public:
	float                                              Damage;                                                   // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               InvulnerableToNonDefinedResistances;                      // 0x0180(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowHealthBar;                                           // 0x0181(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0182(0x0002) MISSED OFFSET
	TWeakObjectPtr<class UEnemyComponent>              EnemyComponent;                                           // 0x0184(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	TMap<class UPawnStat*, float>                      Resistances;                                              // 0x0190(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               AutomaticFlushNetDormancy;                                // 0x01E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SimpleHealthComponent");
		return ptr;
	}


	void OnRep_Damage(float* oldDamage);
};


// Class FSD.MaggotAnimationSharingStateProcessor
// 0x0000 (0x0050 - 0x0050)
class UMaggotAnimationSharingStateProcessor : public UAnimationSharingStateProcessor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MaggotAnimationSharingStateProcessor");
		return ptr;
	}

};


// Class FSD.Skinnable
// 0x0000 (0x0028 - 0x0028)
class USkinnable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Skinnable");
		return ptr;
	}

};


// Class FSD.SoundMixManagerComponent
// 0x0010 (0x0108 - 0x00F8)
class USoundMixManagerComponent : public UActorComponent
{
public:
	TArray<struct FSoundMixManagerItem>                SoundMixes;                                               // 0x00F8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SoundMixManagerComponent");
		return ptr;
	}

};


// Class FSD.SpaceRigBar
// 0x0050 (0x0380 - 0x0330)
class ASpaceRigBar : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnNewDrinkableSpecial;                                    // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UInstantUsable*                              BarUsable;                                                // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               BarUsableCollider;                                        // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      BarMenuWidget;                                            // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             DrinkServingLocations;                                    // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FDrinkableBarSlot>                   DrinkableBarSlots;                                        // 0x0368(0x0010) (ZeroConstructor, Transient)
	class UDrinkableDataAsset*                         DrinkableSpecial;                                         // 0x0378(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpaceRigBar");
		return ptr;
	}


	void SpawnDrinkables(class UDrinkableDataAsset** Drinkable, class APlayerCharacter** user);
	void ReceiveFinishedSpawningDrinkables(class UDrinkableDataAsset** DrinkableData, class APlayerCharacter** Customer);
	void ReceiveDrinkableSpawned(class ADrinkableActor** Drinkable, class APlayerCharacter** Customer, int* LocationIndex);
	void ReceiveBeginSpawningDrinkables(class UDrinkableDataAsset** DrinkableData, class APlayerCharacter** Customer);
	void OnRep_DrinkableSpecial();
	bool HasUnclaimedDrinkables();
	bool HasSpaceForMoreDrinkables();
	int GetAvailableDrinkableSlots();
	void DrinkableSignature__DelegateSignature(class UDrinkableDataAsset** Drinkable);
};


// Class FSD.SpaceRigBarMenuItem
// 0x0008 (0x0258 - 0x0250)
class USpaceRigBarMenuItem : public UFSDUserWidget
{
public:
	class UDrinkableDataAsset*                         Drink;                                                    // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpaceRigBarMenuItem");
		return ptr;
	}


	void Unselect();
	void Select();
};


// Class FSD.SpawningBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class USpawningBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpawningBlueprintLibrary");
		return ptr;
	}


	void STATIC_SpawnEnemyGroupDescriptorSpreadOut(class UObject** WorldContextObject, class UEnemyGroupDescriptor** Descriptor, float* Difficulty, TArray<struct FVector>* Locations, bool* Alert, EDeepPathFinderSize* pfSize);
	void STATIC_SpawnEnemyGroupDescriptor(class UObject** WorldContextObject, class UEnemyGroupDescriptor** Descriptor, float* Difficulty, struct FVector* Location, bool* Alert, EDeepPathFinderSize* pfSize);
	void STATIC_SpawnEnemiesFromPool(class UObject** WorldContextObject, float* Difficulty, TArray<struct FVector>* Locations, bool* Alert, bool* isConstantPreassure);
	void STATIC_SpawnEnemiesAtLocationWithCallback(class UObject** WorldContextObject, class UEnemyDescriptor** EnemyDescriptor, int* count, struct FVector* Location, struct FScriptDelegate* Callback, bool* Alert, bool* scaleToDifficulty, EDeepPathFinderSize* pfSize);
	void STATIC_SpawnEnemiesAtLocation(class UObject** WorldContextObject, class UEnemyDescriptor** EnemyDescriptor, int* count, struct FVector* Location, bool* Alert, bool* scaleToDifficulty, EDeepPathFinderSize* pfSize);
	TArray<struct FVector> STATIC_GetSpawnPointsInRange(class UObject** WorldContextObject, float* distanceToPlayers, int* spawnPointCount, EDeepPathFinderSize* pfSize);
	TArray<struct FVector> STATIC_GetSpawnPointsFromLocation(class UObject** WorldContextObject, struct FVector* Location, float* distance, int* spawnPointCount, EDeepPathFinderSize* pfSize);
	struct FVector STATIC_GetSpawnPointInRange(class UObject** WorldContextObject, float* distanceToPlayers, EDeepPathFinderSize* pfSize);
	struct FVector STATIC_GetSpawnPointFromLocation(class UObject** WorldContextObject, struct FVector* Location, float* distance, EDeepPathFinderSize* pfSize);
};


// Class FSD.SpecialEventSpawner
// 0x0000 (0x0028 - 0x0028)
class USpecialEventSpawner : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpecialEventSpawner");
		return ptr;
	}

};


// Class FSD.SpecialEventBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class USpecialEventBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpecialEventBlueprintLibrary");
		return ptr;
	}


	class USchematic* STATIC_TryGivePendingReward(class UObject** WorldContextObject);
	void STATIC_StorePendingReward(class UObject** WorldContextObject, TArray<class USchematic*>* schematicsToChooseFrom);
	void STATIC_SpawnEventRewardFrame(class UObject** WorldContextObject, struct FVector* Location);
	bool STATIC_HasPendingReward(class UObject** WorldContextObject);
	TArray<class USchematic*> STATIC_GetSpecialEventsRewardSchematics(class UObject** WorldContextObject);
	void STATIC_ClearPendingReward(class UObject** WorldContextObject);
};


// Class FSD.SimpleSpecialEventSpawner
// 0x0030 (0x0058 - 0x0028)
class USimpleSpecialEventSpawner : public USpecialEventSpawner
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x0028(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.SimpleSpecialEventSpawner.EventActor

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SimpleSpecialEventSpawner");
		return ptr;
	}

};


// Class FSD.SpecialEvent
// 0x0010 (0x0040 - 0x0030)
class USpecialEvent : public UDataAsset
{
public:
	float                                              Weight;                                                   // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class USpecialEventSpawner*                        EventSpawner;                                             // 0x0038(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpecialEvent");
		return ptr;
	}

};


// Class FSD.SpecialEventSettings
// 0x00C0 (0x00F0 - 0x0030)
class USpecialEventSettings : public UDataAsset
{
public:
	TArray<class USpecialEvent*>                       SpecialEvents;                                            // 0x0030(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      EventRewardFrameClass;                                    // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDebrisPositioning*                          EventRewardFramePositioning;                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EventRewardRadius;                                        // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CreditsReward;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              XPReward;                                                 // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 SimplePlacementCostCurve;                                 // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          SpawnChanceMissionLengthCurve;                            // 0x0068(0x0088) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpecialEventSettings");
		return ptr;
	}

};


// Class FSD.ShootingSpiderAnimInstance
// 0x0020 (0x0420 - 0x0400)
class UShootingSpiderAnimInstance : public USpiderAnimInstance
{
public:
	float                                              LookAtBlend;                                              // 0x0400(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CheckCurve;                                               // 0x0404(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0405(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       TargetActor;                                              // 0x0408(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LookAtLocation;                                           // 0x0410(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x041C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ShootingSpiderAnimInstance");
		return ptr;
	}

};


// Class FSD.SpiderEnemy
// 0x0038 (0x0498 - 0x0460)
class ASpiderEnemy : public AEnemyDeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0460(0x0008) MISSED OFFSET
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UAnimSequenceBase*>                   HitReactions;                                             // 0x0470(0x0010) (Edit, ZeroConstructor)
	float                                              FirstHitReactBlendIn;                                     // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverrideHitReactBlendIn;                                  // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 GoreMesh;                                                 // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ApplyDifficultySpeedModifier;                             // 0x0490(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0491(0x0003) MISSED OFFSET
	float                                              AttackDamageModifier;                                     // 0x0494(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpiderEnemy");
		return ptr;
	}


	void PlayHitReaction();
	void OnDamaged(float* amount);
	class UStaticMeshComponent* CreateHeadGore();
	void AlertNearbyEnemies();
};


// Class FSD.EnemyBufferComponent
// 0x00C0 (0x01B8 - 0x00F8)
class UEnemyBufferComponent : public UActorComponent
{
public:
	class UClass*                                      StatusEffect;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       BufferParticleSocket;                                     // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             particles;                                                // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParticleTangentSize;                                      // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBuffingChangedEvent;                                    // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              BuffRadius;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxBuffedTargets;                                         // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagQuery                           BuffQuery;                                                // 0x0130(0x0048) (Edit)
	TArray<class ADeepPathfinderCharacter*>            BuffTargets;                                              // 0x0178(0x0010) (Net, ZeroConstructor, Transient)
	TArray<class UParticleSystemComponent*>            ParticleInstances;                                        // 0x0188(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0198(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyBufferComponent");
		return ptr;
	}


	void SetBuffingEnabled(bool* Enabled);
	void OnPawnDied(class UHealthComponentBase** Health);
	void OnOwnerDied(class UHealthComponentBase** Health);
};


// Class FSD.AlignEnemyComponent
// 0x0008 (0x0100 - 0x00F8)
class UAlignEnemyComponent : public UActorComponent
{
public:
	bool                                               RotateWhileStationary;                                    // 0x00F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AlignEnemyComponent");
		return ptr;
	}


	void SetRotateWhileStationary(bool* Value);
	void OnRep_RotateWhileStationary();
};


// Class FSD.StatHat
// 0x0078 (0x00A0 - 0x0028)
class UStatHat : public UObject
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0028(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatHat");
		return ptr;
	}

};


// Class FSD.StaticMeshCarver
// 0x0070 (0x00A0 - 0x0030)
class UStaticMeshCarver : public UDataAsset
{
public:
	struct FString                                     Status;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.StaticMeshCarver.Mesh
	struct FBox                                        AABB;                                                     // 0x0068(0x001C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FDeepCSGFloatTree                           BSPTree;                                                  // 0x0088(0x0018)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StaticMeshCarver");
		return ptr;
	}


	void Generate();
	void ExportPreviewMesh();
};


// Class FSD.StatusEffectItem
// 0x0000 (0x0028 - 0x0028)
class UStatusEffectItem : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectItem");
		return ptr;
	}

};


// Class FSD.DotStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UDotStatusEffectItem : public UStatusEffectItem
{
public:
	struct FRandRange                                  damageAmount;                                             // 0x0028(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DotStatusEffectItem");
		return ptr;
	}

};


// Class FSD.PlayerArmorStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UPlayerArmorStatusEffectItem : public UStatusEffectItem
{
public:
	struct FRandRange                                  ChangeAmount;                                             // 0x0028(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PlayerArmorStatusEffectItem");
		return ptr;
	}

};


// Class FSD.HealingStatusEffectItem
// 0x0018 (0x0040 - 0x0028)
class UHealingStatusEffectItem : public UStatusEffectItem
{
public:
	bool                                               HealPercentage;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              NoDamageTimeRequired;                                     // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UPawnAffliction*                             PawnAffliction;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRandRange                                  amount;                                                   // 0x0038(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HealingStatusEffectItem");
		return ptr;
	}

};


// Class FSD.StatChangeStatusEffectItem
// 0x0010 (0x0038 - 0x0028)
class UStatChangeStatusEffectItem : public UStatusEffectItem
{
public:
	class UPawnStat*                                   Stat;                                                     // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StatChange;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AffectedByResistances;                                    // 0x0034(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatChangeStatusEffectItem");
		return ptr;
	}

};


// Class FSD.TemperatureStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UTemperatureStatusEffectItem : public UStatusEffectItem
{
public:
	struct FRandRange                                  TemperatureChangeAmount;                                  // 0x0028(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TemperatureStatusEffectItem");
		return ptr;
	}

};


// Class FSD.HeatSourceStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UHeatSourceStatusEffectItem : public UStatusEffectItem
{
public:
	float                                              Temperature;                                              // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ETemperatureIntensity                              Intensity;                                                // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HeatSourceStatusEffectItem");
		return ptr;
	}

};


// Class FSD.PheromoneStatusEffectItem
// 0x0000 (0x0028 - 0x0028)
class UPheromoneStatusEffectItem : public UStatusEffectItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PheromoneStatusEffectItem");
		return ptr;
	}

};


// Class FSD.MakeAttackableStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UMakeAttackableStatusEffectItem : public UStatusEffectItem
{
public:
	float                                              AttackCostModifier;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MakeAttackableStatusEffectItem");
		return ptr;
	}

};


// Class FSD.ReplenishOxygenStatusEffectItem
// 0x0000 (0x0028 - 0x0028)
class UReplenishOxygenStatusEffectItem : public UStatusEffectItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ReplenishOxygenStatusEffectItem");
		return ptr;
	}

};


// Class FSD.StatusEffectsComponent
// 0x0020 (0x0118 - 0x00F8)
class UStatusEffectsComponent : public UActorComponent
{
public:
	TArray<struct FActiveStatusEffectBank>             ActiveStatusEffects;                                      // 0x00F8(0x0010) (ZeroConstructor, Transient)
	class UHealthComponentBase*                        OwnerHealth;                                              // 0x0108(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               IgnoreAll;                                                // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectsComponent");
		return ptr;
	}


	bool STATIC_TryPushActiveStatusEffect(class UClass** StatusEffect, class AActor** Target, class AActor** Owner);
	bool STATIC_TryPopActiveStatusEffect(class UClass** StatusEffect, class AActor** Target, class AActor** Owner);
	bool PushManyStatusEffects(TArray<class UClass*>* StatusEffects, class AActor** Owner);
	bool PushActiveStatusEffect(class UClass** StatusEffect, class AActor** Owner);
	bool PopManyStatusEffect(TArray<class UClass*>* StatusEffects, class AActor** Owner);
	void PopAllActiveStatusEffects(class AActor** Owner);
	bool PopActiveStatusEffect(class UClass** StatusEffect, class AActor** Owner);
	void OnDeath(class UHealthComponentBase** HealthComponent);
	bool HasActiveEffect(class UClass** StatusEffect);
};


// Class FSD.StatusEffectTriggerComponent
// 0x0050 (0x0148 - 0x00F8)
class UStatusEffectTriggerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEffectTriggered;                                        // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActorEnterLeave;                                        // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UClass*>                              StatusEffects;                                            // 0x0118(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              LeaveTriggerEffects;                                      // 0x0128(0x0010) (Edit, ZeroConstructor)
	class UPrimitiveComponent*                         Collider;                                                 // 0x0138(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               RemoveStatusEffectOnEndOverlap;                           // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0141(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffectTriggerComponent");
		return ptr;
	}


	void OnOverlapEnd(class AActor** MyActor, class AActor** OtherActor);
	void OnOverlapBegin(class AActor** MyActor, class AActor** OtherActor);
	void OnComponentOverlapEnd(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	void OnComponentOverlapBegin(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
};


// Class FSD.StayAwayFromWallsComponent
// 0x0050 (0x02B0 - 0x0260)
class UStayAwayFromWallsComponent : public USceneComponent
{
public:
	class AFSDGameState*                               GameState;                                                // 0x0260(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0268(0x0028) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Acceleration;                                             // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BackAcceleration;                                         // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PointOffset;                                              // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AvoidSpeed;                                               // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GoBackSpeed;                                              // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Active;                                                   // 0x02A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StayAwayFromWallsComponent");
		return ptr;
	}


	void SetIsActive(bool* IsActive);
};


// Class FSD.SteelSeriesComponent
// 0x0040 (0x0138 - 0x00F8)
class USteelSeriesComponent : public UActorComponent
{
public:
	struct FSteelSeriesLinearColor                     HealthBarColor;                                           // 0x00F8(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     DamageEffectColor;                                        // 0x00FB(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     DownedEffectColor;                                        // 0x00FE(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     ShieldBarColor;                                           // 0x0101(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     ShieldEffectColor;                                        // 0x0104(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     WeaponColor;                                              // 0x0107(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     WeaponEquipedColor;                                       // 0x010A(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     GrenadeColor;                                             // 0x010D(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     WASDColor;                                                // 0x0110(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     RessuplyColor;                                            // 0x0113(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSteelSeriesLinearColor                     ReloadColor;                                              // 0x0116(0x0003) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0119(0x000F) MISSED OFFSET
	EFSDSteelSeriesEffect                              ActiveEffect;                                             // 0x0128(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              EffectDuration;                                           // 0x012C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           EffectSeed;                                               // 0x0130(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SteelSeriesComponent");
		return ptr;
	}


	void UpdateHealthIndicator(int* healthPct, int* shieldPct);
};


// Class FSD.Steerable
// 0x0000 (0x0028 - 0x0028)
class USteerable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Steerable");
		return ptr;
	}

};


// Class FSD.StickyFlame
// 0x0048 (0x0378 - 0x0330)
class AStickyFlame : public AActor
{
public:
	class UParticleSystemComponent*                    FlameParticles;                                           // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             Audio;                                                    // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStatusEffectTriggerComponent*               StatusTriggerComponent;                                   // 0x0340(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FDecalData                                  Decal;                                                    // 0x0348(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              FlameLifetime;                                            // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlameExtinguishTime;                                      // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AudioFadeOutTime;                                         // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsActive;                                                 // 0x036C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x036D(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StickyFlame");
		return ptr;
	}


	void OnRep_IsActive();
	void OnExtinguisFlame();
};


// Class FSD.StickyFlameSpawner
// 0x0038 (0x0130 - 0x00F8)
class UStickyFlameSpawner : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStickyFlameSpawned;                                     // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      StickyFlameActor;                                         // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlameLifetime;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StickyFlameIntervals;                                     // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StickyFlameMinDistance;                                   // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StickyFlameLastTime;                                      // 0x011C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     StickyFlameLastLocation;                                  // 0x0120(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StickyFlameSpawner");
		return ptr;
	}


	bool TrySpawnStickyFlameHit(struct FHitResult* Hit);
	bool TrySpawnStickyFlame(struct FVector* Location, struct FVector* Normal);
	void StickyFlameSignature__DelegateSignature(class AStickyFlame** StickyFlame);
	void ServerSpawnStickyFlame(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal);
};


// Class FSD.STLMeshCarver
// 0x0048 (0x0070 - 0x0028)
class USTLMeshCarver : public UObject
{
public:
	struct FBox                                        AABB;                                                     // 0x0028(0x001C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FDeepCSGFloatTree                           BSPTree;                                                  // 0x0048(0x0018) (Edit, EditConst)
	TArray<struct FVector>                             Vertices;                                                 // 0x0060(0x0010) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.STLMeshCarver");
		return ptr;
	}

};


// Class FSD.SubHealthComponent
// 0x0030 (0x0128 - 0x00F8)
class USubHealthComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDamageTaken;                                            // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthChanged;                                          // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               BlockAllOtherDamage;                                      // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EHealthbarType                                     HealthbarType;                                            // 0x0121(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EEnemyHealthScaling                                EnemyHealthScaling;                                       // 0x0122(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0123(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SubHealthComponent");
		return ptr;
	}


	bool IsDead();
	bool IsAlive();
	float GetHealth();
};


// Class FSD.DestructibleSubHealthComponent
// 0x0020 (0x0148 - 0x0128)
class UDestructibleSubHealthComponent : public USubHealthComponent
{
public:
	float                                              MaxHealth;                                                // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x012C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             ArmorComponent;                                           // 0x0130(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DestructibleSubHealthComponent");
		return ptr;
	}


	void SubHealthDestroyed__DelegateSignature(class UDestructibleSubHealthComponent** subHealth);
	void ResetHealth();
	void OnRep_Damage(float* oldDamage);
};


// Class FSD.PartialSubHealthComponent
// 0x0028 (0x0150 - 0x0128)
class UPartialSubHealthComponent : public USubHealthComponent
{
public:
	float                                              MaxHealth;                                                // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x012C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             SubHealthComponent;                                       // 0x0130(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UParticleSystem*                             OnDeathParticleSystem;                                    // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PartialSubHealthComponent");
		return ptr;
	}


	void PartialSubHealthDestroyed__DelegateSignature(class UPartialSubHealthComponent** subHealth);
	void OnSubhealthDeath(class UPartialSubHealthComponent** subHealth);
	void OnRep_Damage(float* oldDamage);
};


// Class FSD.TeamResourcesComponent
// 0x0000 (0x0150 - 0x0150)
class UTeamResourcesComponent : public UResourcesComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TeamResourcesComponent");
		return ptr;
	}

};


// Class FSD.Teleporter
// 0x0018 (0x0348 - 0x0330)
class ATeleporter : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class ATeleporter*                                 ConnectedTeleporter;                                      // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MinTeleporterRange;                                       // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTeleporterRange;                                       // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Teleporter");
		return ptr;
	}

};


// Class FSD.EnemyTemperatureComponent
// 0x0068 (0x0170 - 0x0108)
class UEnemyTemperatureComponent : public UTemperatureComponent
{
public:
	float                                              UpdateTime;                                               // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TemperatureChangeScale;                                   // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BurnTemperature;                                          // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DouseFireTemperature;                                     // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreezeTemperature;                                        // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnFreezeTemperature;                                      // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                WarmingRate;                                              // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CoolingRate;                                              // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeatsourceWhenOnFire;                                   // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              OnFireHeatRange;                                          // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxColdSlowdown;                                          // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0138(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0140(0x0018) MISSED OFFSET
	int                                                WarmingCooldown;                                          // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x14];                                      // 0x015C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EnemyTemperatureComponent");
		return ptr;
	}


	void TimerCallback();
	void OnDeath(class UHealthComponentBase** HealthComponent);
};


// Class FSD.ObjectTemperatureComponent
// 0x0038 (0x0140 - 0x0108)
class UObjectTemperatureComponent : public UTemperatureComponent
{
public:
	float                                              TemperatureChangeScale;                                   // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BurnTemperature;                                          // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DouseFireTemperature;                                     // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CoolingRate;                                              // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeatsourceWhenOnFire;                                   // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              OnFireHeatRange;                                          // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0120(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ObjectTemperatureComponent");
		return ptr;
	}


	void TimerCallback();
	void OnDeath(class UHealthComponentBase** HealthComponent);
};


// Class FSD.TemporaryBuff
// 0x0020 (0x0050 - 0x0030)
class UTemporaryBuff : public UDataAsset
{
public:
	struct FText                                       Description;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TemporaryBuff");
		return ptr;
	}


	void DeActivateBuff(class AFSDPlayerController** Player);
	void ActivateBuffOnPlayer(class APlayerCharacter** Player);
	void ActivateBuffOnController(class AFSDPlayerController** Player);
};


// Class FSD.StatTemporaryBuff
// 0x0050 (0x00A0 - 0x0050)
class UStatTemporaryBuff : public UTemporaryBuff
{
public:
	TMap<class UPawnStat*, float>                      ModifiedStats;                                            // 0x0050(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatTemporaryBuff");
		return ptr;
	}

};


// Class FSD.TerrainDetectComponent
// 0x0020 (0x0280 - 0x0260)
class UTerrainDetectComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    OnPointRemoved;                                           // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               StartDetectOnBeginPlay;                                   // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyDetectOnServer;                                       // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x0272(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainDetectComponent");
		return ptr;
	}


	void StartDetect();
};


// Class FSD.TerrainDetectBoxComponent
// 0x0030 (0x05D0 - 0x05A0)
class UTerrainDetectBoxComponent : public UBoxComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x05A0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBoxExcavated;                                           // 0x05A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               StartDetectOnBeginPlay;                                   // 0x05B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyDetectOnServer;                                       // 0x05B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x05BA(0x0002) MISSED OFFSET
	int                                                NumCornersToExcavate;                                     // 0x05BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumCornersExcavated;                                      // 0x05C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x05C4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainDetectBoxComponent");
		return ptr;
	}


	void StartDetect();
};


// Class FSD.TerrainDetectInterface
// 0x0000 (0x0028 - 0x0028)
class UTerrainDetectInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainDetectInterface");
		return ptr;
	}

};


// Class FSD.TerrainFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UTerrainFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainFunctionLibrary");
		return ptr;
	}


	void STATIC_CreateExplosionCrater2(class UObject** WorldContextObject, struct FVector* Location, float* CarveDiameter, float* carveNoiseSize, float* carveBurnThickness, struct FVector* Normal, float* NormalOffset, float* NormalSqueeze, bool* allowCustomBurntMaterial, bool* DissolvePlatforms);
	void STATIC_CreateExplosionCrater(class UObject** WorldContextObject, struct FVector* Location, float* CarveDiameter, float* carveNoiseSize, float* carveBurnThickness, bool* allowCustomBurntMaterial);
};


// Class FSD.ProceduralFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UProceduralFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ProceduralFunctionLibrary");
		return ptr;
	}


	void STATIC_SpawnTerrainImpact(class UObject** WorldContextObject, class UParticleSystem** particle, struct FVector* Location, struct FRotator* Rotation);
	class AProceduralSetup* STATIC_GetProceduralSetup(class UObject** WorldContextObject);
	int STATIC_GetObjectiveXP(class UClass** objectiveClass, float* missionLength);
	int STATIC_GetObjectiveCredits(class UClass** objectiveClass, float* missionLength);
	class UBiome* STATIC_GetBiome(class UClass** levelSetup);
	bool STATIC_AllControllersFinishedTransitionToPlay(class UObject** WorldContextObject);
};


// Class FSD.TerrainMaterial
// 0x01D0 (0x0200 - 0x0030)
class UTerrainMaterial : public UDataAsset
{
public:
	unsigned char                                      Collide : 1;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      Diggable : 1;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      CanBeDrilled : 1;                                         // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      ExplosionProof : 1;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      PathfinderDanger : 1;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      MeltsInFire : 1;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      PathfinderPreventSpawning : 1;                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      PlatformDissolvable : 1;                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UResourceData*                               ResourceData;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitsNeededToMine;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<struct FDecalData>                          HitDecal;                                                 // 0x0048(0x0010) (Edit, ZeroConstructor)
	class UTerrainMaterial*                            ReplaceWhenHitMaterial;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanHaveDecals;                                            // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UTerrainMaterial*                            BurntMaterial;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTerrainMaterial*                            BulletBurntMaterial;                                      // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickAxeDigSize;                                           // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RemoveDebrisOnFirstHit;                                   // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	class UDialogDataAsset*                            ShoutLookAt;                                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutOnDig;                                               // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTerrainType*                                TerrainType;                                              // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ScannerMaterial;                                          // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               autoRegister;                                             // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x00A1(0x000F) MISSED OFFSET
	struct FText                                       InGameName;                                               // 0x00B0(0x0018) (Edit)
	struct FText                                       InGameDescription;                                        // 0x00C8(0x0018) (Edit)
	unsigned char                                      Precious : 1;                                             // 0x00E0(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData06[0x28];                                      // 0x00E1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.RenderMaterial
	unsigned char                                      UnknownData07[0x28];                                      // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.DigParticles
	unsigned char                                      UnknownData08[0x28];                                      // 0x0138(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.DigParticlesMaterialOverride
	unsigned char                                      UnknownData09[0x28];                                      // 0x0160(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.PartialDigParticles
	unsigned char                                      UnknownData10[0x28];                                      // 0x0188(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.PartialDigParticlesMaterialOverride
	unsigned char                                      UnknownData11[0x28];                                      // 0x01B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.CrumbleSound
	unsigned char                                      UnknownData12[0x28];                                      // 0x01D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainMaterial.PartialMineSound

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainMaterial");
		return ptr;
	}


	class UParticleSystemComponent* SpawnPartialDigParticles(class UObject** WorldContextObject, struct FVector* Location, struct FRotator* Rotation);
	class UParticleSystemComponent* SpawnDigParticles(class UObject** WorldContextObject, struct FVector* Location, struct FRotator* Rotation, float* Density);
	bool IsPrecious();
	struct FText GetInGameName();
};


// Class FSD.TerrainType
// 0x0040 (0x0070 - 0x0030)
class UTerrainType : public UDataAsset
{
public:
	unsigned char                                      Collide : 1;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      Diggable : 1;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      Precious : 1;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class USoundCue*                                   DebrisStandardSoundCue;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.TerrainType.DebrisStandardParticles

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainType");
		return ptr;
	}

};


// Class FSD.TerrainMaterialsCollection
// 0x0030 (0x0060 - 0x0030)
class UTerrainMaterialsCollection : public UDataAsset
{
public:
	TArray<class UTerrainMaterial*>                    Materials;                                                // 0x0030(0x0010) (ZeroConstructor, Transient)
	TArray<class UTerrainType*>                        TerrainTypes;                                             // 0x0040(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainMaterialsCollection");
		return ptr;
	}

};


// Class FSD.TerrainModifyingProjectile
// 0x0058 (0x0420 - 0x03C8)
class ATerrainModifyingProjectile : public AProjectile
{
public:
	struct FScriptMulticastDelegate                    OnRevertToNormal;                                         // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UTerrainMaterial*                            Terrain;                                                  // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTerrainMaterial*                            OriginalGroundMaterial;                                   // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMesh*                                 CarveMesh;                                                // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     CarveMeshScale;                                           // 0x03F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LastHitLocation;                                          // 0x03FC(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Radius;                                                   // 0x0408(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               Revert;                                                   // 0x040C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x040D(0x0003) MISSED OFFSET
	float                                              TimeOnGround;                                             // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExpensiveCarveNoise;                                      // 0x0414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0418(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainModifyingProjectile");
		return ptr;
	}


	void Tick(float* DeltaSeconds);
	float GetRadius();
	void BeginPlay();
};


// Class FSD.TerrainPlacementComponent
// 0x0030 (0x0290 - 0x0260)
class UTerrainPlacementComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	EDebrisColliderType                                CapsuleType;                                              // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0269(0x0003) MISSED OFFSET
	struct FDebrisCapsule                              Capsule;                                                  // 0x026C(0x001C) (Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainPlacementComponent");
		return ptr;
	}


	void AddBlockers(class AProceduralSetup** ProceduralSetup, struct FTransform* Transform);
};


// Class FSD.TerrainScannerItem
// 0x0070 (0x04E0 - 0x0470)
class ATerrainScannerItem : public AAnimatedItem
{
public:
	int                                                TerrainScannerZoomDirection;                              // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ScannerAttachSocketName;                                  // 0x0474(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	float                                              TerrainScannerStartAngle;                                 // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TerrainScannerScale;                                      // 0x0484(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              DelayedTerrainScannerScale;                               // 0x0488(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              DelayedTerrainScannerZoom;                                // 0x048C(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0490(0x0001) MISSED OFFSET
	bool                                               IsLookingAtMap;                                           // 0x0491(0x0001) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               UpdateMapToolActors;                                      // 0x0492(0x0001) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0493(0x0005) MISSED OFFSET
	TArray<class UAnimMontage*>                        UseLoopsFP;                                               // 0x0498(0x0010) (Edit, ZeroConstructor)
	class UAnimMontage*                                EndFP;                                                    // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        UseLoopsTP;                                               // 0x04B0(0x0010) (Edit, ZeroConstructor)
	class UAnimMontage*                                EndTP;                                                    // 0x04C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET
	class USceneComponent*                             TerrainScannerRoot;                                       // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    TerrainScannerCapture;                                    // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TerrainScannerItem");
		return ptr;
	}


	void Server_SetIslookingAtMap(bool* lookingAtMap);
	void OnRep_IsLookingAtMap();
};


// Class FSD.ThrownGrenadeItem
// 0x0068 (0x0478 - 0x0410)
class AThrownGrenadeItem : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	class UPlayerAnimInstance*                         FPAnimInstance;                                           // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerAnimInstance*                         TPAnimInstance;                                           // 0x0420(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UItemCharacterAnimationSet*                  CharacterAnimationSet;                                    // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ThrowOffset;                                              // 0x0430(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrowAngle;                                               // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxGrenades;                                              // 0x0440(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                Grenades;                                                 // 0x0444(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              GrenadeCooldownRemaining;                                 // 0x0448(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EThrownGrenadeItemState                            State;                                                    // 0x044C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x044C(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	class UClass*                                      grenadeClass;                                             // 0x0450(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UGrenadeAnimationSet*                        DefaultGrenadeAnimationSet;                               // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0460(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        GrenadeMeshInstance;                                      // 0x0468(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0470(0x0001) MISSED OFFSET
	bool                                               HasRejoinedInitialized;                                   // 0x0471(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0472(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ThrownGrenadeItem");
		return ptr;
	}


	void Server_ThrowGrenade();
	void Server_SetState(EThrownGrenadeItemState* itemState);
	void ResupplyGrenades(float* percentage);
	void Resupply(float* percentage);
	void OnRep_State();
	void OnRep_GrenadeCount();
	void OnGrenadeThrown();
	void GrenadeThrowFinished();
	float GetGrenadeThrowVelocity();
	struct FRotator GetGrenadeThrowRotation();
	float GetGrenadeGravity();
	float GetGrenadeDuration();
};


// Class FSD.TickableActionBase
// 0x0010 (0x0040 - 0x0030)
class UTickableActionBase : public UBlueprintAsyncActionBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TickableActionBase");
		return ptr;
	}

};


// Class FSD.MiniTimerAction
// 0x0028 (0x0068 - 0x0040)
class UMiniTimerAction : public UTickableActionBase
{
public:
	struct FScriptMulticastDelegate                    Completed;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTick;                                                   // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0060(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MiniTimerAction");
		return ptr;
	}


	void TickDelegate__DelegateSignature(float* DeltaTime, float* NormalizedTime);
	class UMiniTimerAction* STATIC_MiniTimer(class UObject** WorldContext, float* InDuration);
};


// Class FSD.MultiTextCounterAction
// 0x0078 (0x00B8 - 0x0040)
class UMultiTextCounterAction : public UTickableActionBase
{
public:
	struct FScriptMulticastDelegate                    Completed;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTick;                                                   // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UTextBlock*                                  TotalBlock;                                               // 0x0060(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FText                                       TotalFormat;                                              // 0x0068(0x0018) (Transient)
	TArray<struct FTextCounterEntry>                   Entries;                                                  // 0x0080(0x0010) (ZeroConstructor, Transient)
	float                                              CountSpeed;                                               // 0x0090(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	class USoundCue*                                   CountingSound;                                            // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x00A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UObject*                                     WorldContext;                                             // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MultiTextCounterAction");
		return ptr;
	}


	void TickDelegate__DelegateSignature();
	class UMultiTextCounterAction* STATIC_StartMultiTextCounter(class UObject** InWorldContext, class UTextBlock** InTotalBlock, struct FText* InTotalFormat, float* InCountSpeed, class USoundCue** InCountingSound, TArray<struct FTextCounterEntry>* InEntries);
};


// Class FSD.PendingLatentActionLibrary
// 0x0000 (0x0028 - 0x0028)
class UPendingLatentActionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.PendingLatentActionLibrary");
		return ptr;
	}


	void STATIC_WaitOneFrame(class UObject** WorldContextObject, struct FLatentActionInfo* LatentInfo);
};


// Class FSD.MoveComponentToAction
// 0x0090 (0x00D0 - 0x0040)
class UMoveComponentToAction : public UTickableActionBase
{
public:
	TWeakObjectPtr<class USceneComponent>              Component;                                                // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x78];                                      // 0x0048(0x0078) MISSED OFFSET
	struct FScriptMulticastDelegate                    Completed;                                                // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MoveComponentToAction");
		return ptr;
	}


	class UMoveComponentToAction* STATIC_EaseComponentTo(class UObject** WorldContext, class USceneComponent** InComponent, struct FTransform* InEndTransform, TEnumAsByte<EEasingFunc>* InEasingMode, bool* InWorldSpace, float* InDuration);
	void CompletedDelegate__DelegateSignature(class USceneComponent** Component);
};


// Class FSD.TracerManager
// 0x0010 (0x0108 - 0x00F8)
class UTracerManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TracerManager");
		return ptr;
	}


	void AddTracer(struct FVector* Origin, struct FVector* Destination, float* Speed, class UParticleSystem** particle, float* MinDistance, class UParticleSystem** Trail);
};


// Class FSD.TrailComponent
// 0x0030 (0x0290 - 0x0260)
class UTrailComponent : public USceneComponent
{
public:
	float                                              MaxStep;                                                  // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               MinimizePath;                                             // 0x0264(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0265(0x0003) MISSED OFFSET
	TArray<struct FVector>                             Trail;                                                    // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TEnumAsByte<ETraceTypeQuery>                       Query;                                                    // 0x0278(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawPath;                                                // 0x0279(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x027A(0x0002) MISSED OFFSET
	float                                              MaxDrawDistance;                                          // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PathLineWidth;                                            // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PathNodeSize;                                             // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      DrawColor;                                                // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x028C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TrailComponent");
		return ptr;
	}


	int TrailLength();
	void ToggleDrawPath(bool* Visible);
	void Reset();
	struct FVector GetTrailPoint(int* Index);
	struct FVector GetNextTrailPointFrom(struct FVector* From);
	int GetNearestTrailIndex(struct FVector* Location);
	class UTrailComponent* STATIC_GetNearestPlayerTrail(class UWorld** World, struct FVector* From, float* MinDist, float* MaxDist);
	struct FColor GetDrawColor();
};


// Class FSD.TreasureBox
// 0x0098 (0x03C8 - 0x0330)
class ATreasureBox : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class URepairableComponent*                        repairable;                                               // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class URepairableUsable*                           RepairUsable;                                             // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOncePerPlayerUsableComponent*               CollectUsable;                                            // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USingleUsableComponent*                      HammeringUsable;                                          // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTerrainPlacementComponent*                  terrainPlacement;                                         // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        MiddlePlane;                                              // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      BoxMesh;                                                  // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0370(0x0004) MISSED OFFSET
	float                                              CollectActivationDelay;                                   // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0378(0x0008) MISSED OFFSET
	class UAnimSequenceBase*                           OpenBoxAnim;                                              // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DelayToOpenAfterRepair;                                   // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	class UClass*                                      ResourceClass;                                            // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FUniqueNetIdRepl>                    PlayersPresentOnRepair;                                   // 0x0398(0x0010) (ZeroConstructor, Transient)
	class UTreasureRewarder*                           rewarder;                                                 // 0x03A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class APlayerCharacter*                            LastJoiner;                                               // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HologramRotationSpeed;                                    // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	int                                                ItemsInserted;                                            // 0x03C0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x03C4(0x0001) MISSED OFFSET
	bool                                               IsTreasureAvailable;                                      // 0x03C5(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x03C6(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TreasureBox");
		return ptr;
	}


	void PlaceResources(class AProceduralSetup** setup, float* Radius, class UDebrisPositioning** DebrisPositioning, TArray<struct FVector>* locationsToAvoid, class UCurveFloat** avoidCostCurve);
	void OnUsedEvent(class APlayerCharacter** user);
	void OnRepairedEvent(class URepairableComponent** repaired);
	void OnPlayerJoin(class APlayerCharacter** PlayerState);
	void OnHammerProgress(float* Progress);
	void OnHammered(class APlayerCharacter** user);
	void OnFullyRepairedEvent(class URepairableComponent** repaired);
	void OnCollectTreasure(class APlayerCharacter** user);
	void OnAllResourcesCollectedEvent(class URepairableComponent** repaired);
	void MessageClientsOfJoiner();
	void Joiner(class APlayerCharacter** Joiner);
	void DisableChest();
	void BP_OnCollectedTreasure(class APlayerCharacter** collector);
	void AfterRepairDelay();
	void ActivateCollection();
};


// Class FSD.TreasureBoxAnimInstance
// 0x0010 (0x0280 - 0x0270)
class UTreasureBoxAnimInstance : public UAnimInstance
{
public:
	bool                                               IsTreasureAvailable;                                      // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsLeftInserted;                                           // 0x0271(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsRightInserted;                                          // 0x0272(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xD];                                       // 0x0273(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TreasureBoxAnimInstance");
		return ptr;
	}

};


// Class FSD.TreasureFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UTreasureFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TreasureFunctionLibrary");
		return ptr;
	}


	bool STATIC_GiveSimilarSkin(class UObject** WorldContextObject, class UItemSkin** targetSkin, class UItemID** targetItem, class UItemSkin** outGivenSkin, class UItemID** outSkinnedItem);
	void STATIC_GiveRandomSkin(class UObject** WorldContextObject, class UItemSkin** outGivenSkin, class UItemID** outSkinnedItem);
};


// Class FSD.StatusEffect
// 0x00C0 (0x00E8 - 0x0028)
class UStatusEffect : public UObject
{
public:
	class UPawnAffliction*                             PawnAffliction;                                           // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UStatusEffectItem*>                   StatusEffects;                                            // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor)
	float                                              MaxResistance;                                            // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRandRange                                  ApplyEffectsInterval;                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              Duration;                                                 // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ApplyDurationAfterPop;                                    // 0x005C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RemoveOnDeath;                                            // 0x005D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	struct FGameplayTagQuery                           GameplayTagQuery;                                         // 0x0060(0x0048) (Edit)
	struct FGameplayTagContainer                       ExcludeTargetsWithTags;                                   // 0x00A8(0x0020) (Edit, EditConst)
	struct FGameplayTagContainer                       TargetRequiredTags;                                       // 0x00C8(0x0020) (Edit, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusEffect");
		return ptr;
	}


	bool ShouldInstantiate();
	bool CanTrigger(class AActor** Target);
};


// Class FSD.TreasureRewarder
// 0x0000 (0x00F8 - 0x00F8)
class UTreasureRewarder : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TreasureRewarder");
		return ptr;
	}

};


// Class FSD.SkinTreasureRewarder
// 0x0010 (0x0108 - 0x00F8)
class USkinTreasureRewarder : public UTreasureRewarder
{
public:
	class UItemSkin*                                   GivenSkin;                                                // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UItemID*                                     GivenSkinID;                                              // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinTreasureRewarder");
		return ptr;
	}

};


// Class FSD.DrinkTreasureRewarder
// 0x0008 (0x0100 - 0x00F8)
class UDrinkTreasureRewarder : public UTreasureRewarder
{
public:
	class UDrinkableDataAsset*                         GivenDrink;                                               // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DrinkTreasureRewarder");
		return ptr;
	}

};


// Class FSD.TreasureSettings
// 0x00D8 (0x0108 - 0x0030)
class UTreasureSettings : public UDataAsset
{
public:
	TArray<class UItemSkinSet*>                        SkinSets;                                                 // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<class UDrinkableDataAsset*>                 Drinks;                                                   // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<class UVictoryPose*>                        VictoryPoses;                                             // 0x0050(0x0010) (Edit, ZeroConstructor)
	float                                              SkinWeight;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DrinkWeight;                                              // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VictoryPoseWeight;                                        // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          TreasureChanceMissionLengthCurve;                         // 0x0070(0x0088) (Edit)
	TArray<class USpecialEvent*>                       TreasureEvents;                                           // 0x00F8(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TreasureSettings");
		return ptr;
	}

};


// Class FSD.TunnelSegmentSetting
// 0x0060 (0x0090 - 0x0030)
class UTunnelSegmentSetting : public UDataAsset
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          CielingNoise;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          WallNoise;                                                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          FloorNoise;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VRange;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HRange;                                                   // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Cielingheight;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FloorHeight;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CielingNoiseRange;                                        // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WallNoiseRange;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FloorNoiseRange;                                          // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TunnelSegmentSetting");
		return ptr;
	}

};


// Class FSD.TunnelSettings
// 0x0060 (0x0090 - 0x0030)
class UTunnelSettings : public UDataAsset
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          CielingNoise;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          WallNoise;                                                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFloodFillSettings*                          FloorNoise;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VRange;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HRange;                                                   // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Cielingheight;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FloorHeight;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CielingNoiseRange;                                        // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WallNoiseRange;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FloorNoiseRange;                                          // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TunnelSettings");
		return ptr;
	}

};


// Class FSD.TunnelSetting
// 0x0040 (0x0070 - 0x0030)
class UTunnelSetting : public UDataAsset
{
public:
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTunnelSegmentSetting*                       BaseSegmentSetting;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTunnelSegmentSetting*                       TightBendSegmentSetting;                                  // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTunnelSegmentSetting*                       DirtSegmentSetting;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTunnelSegmentSetting*                       DirtOffsetSetting;                                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FTunnelSettingItem>                  VariationSegments;                                        // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Weight;                                                   // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TunnelSetting");
		return ptr;
	}

};


// Class FSD.TutorialComponent
// 0x0048 (0x0140 - 0x00F8)
class UTutorialComponent : public UActorComponent
{
public:
	bool                                               bTutorialEnabled;                                         // 0x00F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	int                                                Priority;                                                 // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDuration;                                              // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxViewCount;                                             // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ManuallyMarkViews;                                        // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	TWeakObjectPtr<class APlayerCharacter>             PlayerCharacter;                                          // 0x010C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AFSDPlayerState>              PlayerState;                                              // 0x0114(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AFSDPlayerController>         PlayerController;                                         // 0x011C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UFSDSaveGame>                 SaveGame;                                                 // 0x0124(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ATutorialManager>             TutorialManager;                                          // 0x012C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTutorialInitialized;                                     // 0x0134(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTutorialReady;                                           // 0x0135(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTutorialVisible;                                         // 0x0136(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTutorialActive;                                          // 0x0137(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0138(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TutorialComponent");
		return ptr;
	}


	void RegisterWithManager(class ATutorialManager** Manager);
	void ReceiveOnShown();
	void ReceiveOnInitialized();
	void ReceiveOnHidden();
	void OnTutorialsReset();
	void MarkTutorialWatched();
	void MarkTutorialReadyNow();
	void MarkTutorialReadyInSeconds(float* Delay);
	bool HasTutorialBeenShown();
	struct FString GetTutorialName();
	void CancelTutorial(bool* CountAsViewed);
};


// Class FSD.TutorialHintComponent
// 0x0048 (0x0188 - 0x0140)
class UTutorialHintComponent : public UTutorialComponent
{
public:
	struct FTutorialHint                               Hint;                                                     // 0x0140(0x0048) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TutorialHintComponent");
		return ptr;
	}


	void SetRemainingVisibleTime(float* remainingTime);
	bool IsSinglePlayer(class UObject** WorldContext);
	void ChangeHint(struct FTutorialHint* NewHint);
};


// Class FSD.TutorialManager
// 0x0040 (0x0370 - 0x0330)
class ATutorialManager : public AActor
{
public:
	float                                              MinimumTimeBetweenTutorials;                              // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ResetTutorialsOnStart;                                    // 0x0334(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShowTutorialsDebug;                                       // 0x0335(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0336(0x0002) MISSED OFFSET
	TWeakObjectPtr<class AFSDPlayerController>         PlayerController;                                         // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             PlayerCharacter;                                          // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UFSDSaveGame>                 SaveGame;                                                 // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<TWeakObjectPtr<class UTutorialComponent>>   Tutorials;                                                // 0x0350(0x0010) (ExportObject, ZeroConstructor, Transient)
	TWeakObjectPtr<class UTutorialComponent>           ActiveTutorial;                                           // 0x0360(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TutorialManager");
		return ptr;
	}

};


// Class FSD.TutorialWidget
// 0x0008 (0x0258 - 0x0250)
class UTutorialWidget : public UFSDUserWidget
{
public:
	float                                              RemainingVisibleTime;                                     // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TutorialWidget");
		return ptr;
	}


	void Show(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title, float* Duration);
	void OnShow(struct FText* Text, struct FText* ControllerOverrideText, struct FText* Title);
	void OnHide();
	void Hide();
	void ChangeHintDuration(float* NewDuration);
};


// Class FSD.TwitchWrapper
// 0x0150 (0x0178 - 0x0028)
class UTwitchWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0028(0x001C) MISSED OFFSET
	int                                                TwitchStatus;                                             // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               TwitchEnabled;                                            // 0x0048(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCommandCalled;                                          // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x118];                                     // 0x0060(0x0118) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.TwitchWrapper");
		return ptr;
	}


	void StartTwitch(struct FString* oauth);
	void SetCommand(struct FString* Command, bool* Enabled);
	void ResetCommands();
	struct FString ParseOAuthCode(struct FString* URL);
	bool IsConnected();
	struct FString GetOauthURL();
	void DisableCommands();
	float CommandPercent(struct FString* Command);
	void AddCommand(struct FString* Command);
};


// Class FSD.VictoryPoseRewarder
// 0x0010 (0x0108 - 0x00F8)
class UVictoryPoseRewarder : public UTreasureRewarder
{
public:
	class UVictoryPose*                                GivenPose;                                                // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerCharacterID*                          GivenCharacterID;                                         // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VictoryPoseRewarder");
		return ptr;
	}

};


// Class FSD.UIFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UUIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UIFunctionLibrary");
		return ptr;
	}


	void STATIC_SetLoadoutIcon(class UObject** WorldContextObject, class UClass** CharacterClass, int* loadoutIndex, int* IconIndex);
	void STATIC_RemoveItemUINotification(class UObject** WorldContextObject, TArray<class UObject*>* Item, bool* MatchChildNotifications);
	bool STATIC_IsInItemUINotificationSet(class UObject** WorldContextObject, class UObject** Item);
	int STATIC_GetLoadoutIcon(class UObject** WorldContextObject, class UClass** CharacterClass, int* loadoutIndex);
	void STATIC_ClearAllItemUINotifications(class UObject** WorldContextObject);
	void STATIC_CheckItemUINotification(class UObject** WorldContextObject, TArray<class UObject*>* Item, bool* MatchChildNotifications, bool* HasNotification);
	void STATIC_AddItemUINotification(class UObject** WorldContextObject, TArray<class UObject*>* Item);
};


// Class FSD.UpgradableGearComponent
// 0x0158 (0x0250 - 0x00F8)
class UUpgradableGearComponent : public UActorComponent
{
public:
	TArray<struct FUpgradeTier>                        UpgradeTiers;                                             // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UItemUpgrade*>                        Overclocks;                                               // 0x0108(0x0010) (Edit, ZeroConstructor)
	class UOverclockBank*                              OverclockBank;                                            // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UItemUpgrade*>                        AllOverclocks;                                            // 0x0120(0x0010) (ZeroConstructor, Transient)
	class UTexture2D*                                  IconLine;                                                 // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconBG;                                                   // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconDetailed;                                             // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.UpgradableGearComponent.PreviewImage
	unsigned char                                      UnknownData01[0x28];                                      // 0x0170(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.UpgradableGearComponent.PreviewActor
	struct FText                                       Name;                                                     // 0x0198(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Category;                                                 // 0x01B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x01C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                CreditCost;                                               // 0x01E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01E4(0x0004) MISSED OFFSET
	TMap<class UResourceData*, float>                  ResourceCost;                                             // 0x01E8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RequiredCharacterLevel;                                   // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	TArray<struct FMasteryItem>                        masteryLevels;                                            // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UpgradableGearComponent");
		return ptr;
	}


	void STATIC_SetGearStatText(struct FText* Text, struct FGearStatEntry* entry);
	bool STATIC_PurchaseItem(class UClass** Item, class AFSDPlayerState** Player);
	bool STATIC_PlayerOwnesUpgradeInAllTiers(class UClass** itemClass, class UObject** WorldContextObject);
	void STATIC_MirrorUpgradePreviewStatus(struct FGearStatEntry* From, struct FGearStatEntry* to);
	bool STATIC_IsUpgradeEquipped(class UClass** itemClass, class UItemUpgrade** Upgrade, class AFSDPlayerState** Player);
	bool STATIC_IsTierUnLocked(class UClass** itemClass, int* tierIndex, class AFSDPlayerState** Player, class UPlayerCharacterID** characterID);
	bool STATIC_IsOverclockingEnabled(class UObject** WorldContextObject, class AFSDPlayerState** Player, class UPlayerCharacterID** characterID, class UClass** itemClass);
	bool STATIC_IsItemUnlocked(class UObject** WorldContextObject, class UClass** Item, class UClass** ItemOwner);
	bool STATIC_IsItemOwned(class UObject** WorldContextObject, class UItemID** Item);
	bool STATIC_IsItemEquipped(class UObject** WorldContextObject, class UClass** itemClass, class UPlayerCharacterID** characterID);
	int STATIC_GetUpgradeTier(class UClass** itemClass, class UItemUpgrade** ItemUpgrade);
	struct FString GetSourceGearName();
	class UTexture2D* GetPreviewImage();
	class UClass* GetPreviewActorClass();
	TArray<class UItemUpgrade*> GetOverClocks();
	int STATIC_GetMasteryProgress(class UClass** Item, class AFSDPlayerState** Player, int* maxMastery);
	TArray<struct FMasteryItem> STATIC_GetMasteryLevels(class UClass** Item);
	bool STATIC_GetMasteryForLevel(TArray<struct FMasteryItem>* masteryLevels, int* Level, struct FMasteryItem* outLevel);
	TArray<struct FUpgradeTier> STATIC_GetItemUpgradeTiers(class UClass** itemClass);
	EItemUpgradeStatus STATIC_GetItemUpgradeStatus(class UObject** WorldContextObject, class UClass** itemClass, class UItemUpgrade** ItemUpgrade, class UPlayerCharacterID** characterID);
	TArray<class UItemUpgrade*> STATIC_GetItemUpgrades(class UClass** itemClass, class UClass** upgradeClass, class AFSDPlayerState** Player, unsigned char* upgradeIndex);
	class UClass* STATIC_GetItemPreviewClass(class UClass** itemClass);
	bool STATIC_GetItemMasteryForLevel(class UClass** Item, int* Level, struct FMasteryItem* outLevel);
	TArray<struct FCraftingCost> STATIC_GetItemCost(class UClass** Item);
	TArray<struct FGearStatEntry> STATIC_GetGearStats(class AFSDPlayerState** PlayerState, class UClass** ActorClass);
	struct FString STATIC_GetGearSourceName(class UClass** itemClass, class UItemUpgrade** ItemUpgrade);
	TArray<class UItemUpgrade*> STATIC_GetEquippedUpgrades(class UClass** itemClass, class AFSDPlayerState** Player);
	class UItemUpgrade* STATIC_GetEquippedUpgradeAtTier(class UClass** itemClass, int* tierIndex, class UClass** CharacterClass, class AFSDPlayerState** Player);
	class UItemUpgrade* STATIC_GetEquippedOverclock(class UObject** WorldContextObject, class UClass** itemClass);
	TArray<class UItemUpgrade*> STATIC_GetEquippableOverclocks(class UObject** WorldContextObject, class UClass** itemClass, class UPlayerCharacterID** characterID);
	TArray<struct FCraftingCost> GetCraftingCost();
	int STATIC_GetCharacterLevelRequiredForItem(class UClass** itemClass);
	TArray<class UItemUpgrade*> GetAllUpgrades();
	void STATIC_ClearEquippedUpgrade(class UClass** itemClass, int* tierIndex, class AFSDPlayerState** Player);
	void STATIC_CheckMasteryUnlocks(class UClass** itemClass, class AFSDPlayerController** Player);
	bool STATIC_CanItemOverclock(class UObject** WorldContextObject, class UClass** itemClass);
	bool STATIC_CanAffordUpgrade(class UObject** WorldContextObject, class UItemUpgrade** Upgrade);
	bool STATIC_CanAffordItem(class UObject** WorldContextObject, class UClass** Item);
};


// Class FSD.UpgradableItemComponent
// 0x0000 (0x0250 - 0x0250)
class UUpgradableItemComponent : public UUpgradableGearComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UpgradableItemComponent");
		return ptr;
	}

};


// Class FSD.UpgradableBoscoComponent
// 0x0000 (0x0250 - 0x0250)
class UUpgradableBoscoComponent : public UUpgradableGearComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UpgradableBoscoComponent");
		return ptr;
	}

};


// Class FSD.UseAnimationSetting
// 0x0040 (0x0070 - 0x0030)
class UUseAnimationSetting : public UDataAsset
{
public:
	class UAnimMontage*                                BeginFP;                                                  // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        LoopsFP;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor)
	class UAnimMontage*                                EndFP;                                                    // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BeginTP;                                                  // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        LoopsTP;                                                  // 0x0058(0x0010) (Edit, ZeroConstructor)
	class UAnimMontage*                                EndTP;                                                    // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UseAnimationSetting");
		return ptr;
	}

};


// Class FSD.BPInstantUsable
// 0x0000 (0x0180 - 0x0180)
class UBPInstantUsable : public UInstantUsable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BPInstantUsable");
		return ptr;
	}


	bool BPCanUse(class APlayerCharacter** user, class USceneComponent** UseCollider);
};


// Class FSD.RepairableUsable
// 0x0000 (0x0180 - 0x0180)
class URepairableUsable : public UInstantUsable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RepairableUsable");
		return ptr;
	}

};


// Class FSD.SingleUsableComponent
// 0x00A8 (0x01F0 - 0x0148)
class USingleUsableComponent : public UUsableComponent
{
public:
	struct FScriptMulticastDelegate                    OnUsedBy;                                                 // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUseBegin;                                               // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnProgress;                                               // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUsableChanged;                                          // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUserCountChanged;                                       // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USoundCue*                                   AudioBeginUse;                                            // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AudioFailedUse;                                           // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AudioCompletedUse;                                        // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CoopUse;                                                  // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	class UPawnStat*                                   UseSpeedStat;                                             // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CoopUseMultiplier;                                        // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Usable;                                                   // 0x01D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bShowUsingUI;                                             // 0x01D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseableByOwnerOnly;                                       // 0x01D6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x01D7(0x0001) MISSED OFFSET
	float                                              UseDuration;                                              // 0x01D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // 0x01DC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DesiredProgress;                                          // 0x01E0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                userCount;                                                // 0x01E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UAudioComponent*                             AudioBeginUseInstance;                                    // 0x01E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SingleUsableComponent");
		return ptr;
	}


	void Use(class APlayerCharacter** user, float* DeltaTime);
	void SetCanUse(bool* canUse);
	void OnRep_UserCount();
	void OnRep_Usable();
	void OnRep_DesiredProgress();
	float GetUseProgressInPercent(class APlayerCharacter** user);
	void All_PlayFailedAudio();
};


// Class FSD.OncePerPlayerUsableComponent
// 0x0020 (0x01A0 - 0x0180)
class UOncePerPlayerUsableComponent : public UInstantUsable
{
public:
	struct FScriptMulticastDelegate                    OnUsersChangedEvent;                                      // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class APlayerCharacter*>                    Users;                                                    // 0x0190(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.OncePerPlayerUsableComponent");
		return ptr;
	}


	void OnUsersChanged();
	void OnUsed(class APlayerCharacter** user);
	void OnRep_Users();
};


// Class FSD.EventRewarderUsableComponent
// 0x0020 (0x0210 - 0x01F0)
class UEventRewarderUsableComponent : public USingleUsableComponent
{
public:
	struct FText                                       RewardUseText;                                            // 0x01F0(0x0018) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EventRewarderUsableComponent");
		return ptr;
	}


	struct FText CreateUseText(int* blankSchematicCount);
};


// Class FSD.SpecialEventUsableComponent
// 0x0000 (0x01F0 - 0x01F0)
class USpecialEventUsableComponent : public USingleUsableComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SpecialEventUsableComponent");
		return ptr;
	}

};


// Class FSD.UsingStateComponent
// 0x0000 (0x0130 - 0x0130)
class UUsingStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UsingStateComponent");
		return ptr;
	}

};


// Class FSD.VanityIconCharacter
// 0x0020 (0x0770 - 0x0750)
class AVanityIconCharacter : public ACharacter
{
public:
	class UBeardColorVanityItem*                       HairColor;                                                // 0x0750(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USceneCaptureComponent2D*                    SceneCapture;                                             // 0x0758(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            Camera;                                                   // 0x0760(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0768(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanityIconCharacter");
		return ptr;
	}


	void SetupVanity();
	class UTexture2D* CreateTextureAt(class UVanityItem** VanityItem);
};


// Class FSD.IconGenerationCameraKey
// 0x0000 (0x0030 - 0x0030)
class UIconGenerationCameraKey : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.IconGenerationCameraKey");
		return ptr;
	}

};


// Class FSD.UsableAggregator
// 0x0028 (0x0138 - 0x0110)
class UUsableAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FText                                       UsingText;                                                // 0x0120(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.UsableAggregator");
		return ptr;
	}


	float GetProgress();
};


// Class FSD.IconGenerationCharacter
// 0x0020 (0x0770 - 0x0750)
class AIconGenerationCharacter : public ACharacter
{
public:
	class UBeardColorVanityItem*                       HairColor;                                                // 0x0750(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UIconSceneCaptureComponent*                  ActiveCaptureComponent;                                   // 0x0758(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UIconSceneCaptureComponent*>          CaptureComponents;                                        // 0x0760(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.IconGenerationCharacter");
		return ptr;
	}

};


// Class FSD.IconSceneCaptureComponent
// 0x0010 (0x08D0 - 0x08C0)
class UIconSceneCaptureComponent : public USceneCaptureComponent2D
{
public:
	class UIconGenerationCameraKey*                    CameraKey;                                                // 0x08C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x08C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.IconSceneCaptureComponent");
		return ptr;
	}

};


// Class FSD.IconGenerationManager
// 0x0070 (0x0098 - 0x0028)
class UIconGenerationManager : public UObject
{
public:
	class AIconGenerationCharacter*                    GeneratorInstance;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<struct FGuid, class UTexture*>                Icons;                                                    // 0x0030(0x0050) (ZeroConstructor, Transient)
	TArray<EVanitySlot>                                VanitySlots;                                              // 0x0080(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      IconCharacter;                                            // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.IconGenerationManager");
		return ptr;
	}


	void SetGeneratorInstance(class AIconGenerationCharacter** instance);
};


// Class FSD.VanityItem
// 0x0048 (0x0128 - 0x00E0)
class UVanityItem : public UCraftableObject
{
public:
	int                                                SortingPriority;                                          // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	struct FText                                       ItemName;                                                 // 0x00E8(0x0018) (Edit)
	struct FText                                       ItemDescription;                                          // 0x0100(0x0018) (Edit)
	class UTexture2D*                                  Icon;                                                     // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UIconGenerationCameraKey*                    IconGenerationCameraKey;                                  // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanityItem");
		return ptr;
	}


	bool IsEquipped(class UClass** CharacterClass, class AFSDPlayerState** PlayerState);
	EVanitySlot GetVanitySlot();
	class UTexture* GetIcon(class UObject** WorldContextObject);
	void ApplyItemPermanently(class UObject** WorldContextObject, class UClass** Character);
	void ApplyItem(class APlayerCharacter** Player, bool* isPermanent);
};


// Class FSD.ItemMaterialVanityItem
// 0x0008 (0x0130 - 0x0128)
class UItemMaterialVanityItem : public UVanityItem
{
public:
	class UMaterialInterface*                          Material;                                                 // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ItemMaterialVanityItem");
		return ptr;
	}

};


// Class FSD.SkinColorVanityItem
// 0x0000 (0x0130 - 0x0130)
class USkinColorVanityItem : public UItemMaterialVanityItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SkinColorVanityItem");
		return ptr;
	}

};


// Class FSD.BeardColorVanityItem
// 0x0028 (0x0150 - 0x0128)
class UBeardColorVanityItem : public UVanityItem
{
public:
	class UMaterialInterface*                          HairColor;                                                // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          EyebrowColor;                                             // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          MoustacheColor;                                           // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          SideburnColor;                                            // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          BeardColor;                                               // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BeardColorVanityItem");
		return ptr;
	}

};


// Class FSD.HeadVanityItem
// 0x0080 (0x01A8 - 0x0128)
class UHeadVanityItem : public UVanityItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.HeadVanityItem.Mesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0150(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.HeadVanityItem.AnimInstance
	EHeadVanityType                                    HeadVanityType;                                           // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               HideBeard;                                                // 0x0179(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               HideHead;                                                 // 0x017A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x017B(0x0005) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x017B(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.HeadVanityItem.MaterialOverride

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.HeadVanityItem");
		return ptr;
	}

};


// Class FSD.BeardVanityItem
// 0x0038 (0x0160 - 0x0128)
class UBeardVanityItem : public UVanityItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.BeardVanityItem.Mesh
	float                                              BeardThickness;                                           // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RequiresSlimArmor;                                        // 0x0154(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0155(0x0003) MISSED OFFSET
	class UClass*                                      AnimInstance;                                             // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BeardVanityItem");
		return ptr;
	}

};


// Class FSD.ArmorVanityItem
// 0x00A8 (0x01D0 - 0x0128)
class UArmorVanityItem : public UVanityItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.ArmorVanityItem.Mesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0150(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.ArmorVanityItem.BeardCompatibleMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0178(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.ArmorVanityItem.FPMesh
	bool                                               CropBeard;                                                // 0x01A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01A1(0x0003) MISSED OFFSET
	float                                              ArmorThickness;                                           // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x01A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.ArmorVanityItem.MaterialOverride

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ArmorVanityItem");
		return ptr;
	}

};


// Class FSD.MoustacheVanityItem
// 0x0058 (0x0180 - 0x0128)
class UMoustacheVanityItem : public UVanityItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.MoustacheVanityItem.Mesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0150(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.MoustacheVanityItem.AnimInstance
	bool                                               RequiresSlimArmor;                                        // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.MoustacheVanityItem");
		return ptr;
	}

};


// Class FSD.SideburnsVanityItem
// 0x0058 (0x0180 - 0x0128)
class USideburnsVanityItem : public UVanityItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.SideburnsVanityItem.Mesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0150(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.SideburnsVanityItem.AnimInstance
	bool                                               RequiresSlimArmor;                                        // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SideburnsVanityItem");
		return ptr;
	}

};


// Class FSD.EyeBrowsVanityItem
// 0x0050 (0x0178 - 0x0128)
class UEyeBrowsVanityItem : public UVanityItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.EyeBrowsVanityItem.Mesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0150(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.EyeBrowsVanityItem.AnimInstance

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.EyeBrowsVanityItem");
		return ptr;
	}

};


// Class FSD.VanityAnimInstance
// 0x0030 (0x02A0 - 0x0270)
class UVanityAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0270(0x0008) MISSED OFFSET
	struct FRotator                                    ArmorChestRotation;                                       // 0x0278(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     ExternalForce;                                            // 0x0284(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ExternalForceMultiplier;                                  // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxForce;                                                 // 0x0294(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanityAnimInstance");
		return ptr;
	}

};


// Class FSD.VanitySchematicBank
// 0x0058 (0x0090 - 0x0038)
class UVanitySchematicBank : public USchematicBankBase
{
public:
	class USchematicCategory*                          SchematicCategory;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UVanityItem*, struct FSchematicBankItem> vanityItems;                                              // 0x0040(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanitySchematicBank");
		return ptr;
	}

};


// Class FSD.VanityTestCharacter
// 0x0060 (0x07B0 - 0x0750)
class AVanityTestCharacter : public ACharacter
{
public:
	bool                                               ArmorCoversBeard;                                         // 0x0750(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0751(0x0007) MISSED OFFSET
	TMap<EVanitySlot, struct FVanityTestCharacterItem> vanityItems;                                              // 0x0758(0x0050) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x07A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VanityTestCharacter");
		return ptr;
	}


	void SetupVanity();
};


// Class FSD.VeinResourceData
// 0x0018 (0x0100 - 0x00E8)
class UVeinResourceData : public UResourceData
{
public:
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnitsPerLenth;                                            // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleToResourceDistribution;                              // 0x00F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	class UVeinResourceCreator*                        ResourceCreator;                                          // 0x00F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VeinResourceData");
		return ptr;
	}


	class UTerrainMaterial* GetTerrainMaterial();
};


// Class FSD.CharacterVanityItems
// 0x00B8 (0x00E8 - 0x0030)
class UCharacterVanityItems : public UDataAsset
{
public:
	TArray<class UHeadVanityItem*>                     HeadItems;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        HeadSchematicBank;                                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UBeardVanityItem*>                    BeardItems;                                               // 0x0048(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        BeardSchematicBank;                                       // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UArmorVanityItem*>                    ArmorItems;                                               // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<class UEyeBrowsVanityItem*>                 EyebrowsItems;                                            // 0x0070(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        EyebrowSchematicBank;                                     // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMoustacheVanityItem*>                MoustacheItems;                                           // 0x0088(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        MoustacheSchematicBank;                                   // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class USideburnsVanityItem*>                SideburnItems;                                            // 0x00A0(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        SideburnSchematicBank;                                    // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UBeardColorVanityItem*>               BeardMaterialItems;                                       // 0x00B8(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        BeardMaterialSchematicBank;                               // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class USkinColorVanityItem*>                SkinMaterialItems;                                        // 0x00D0(0x0010) (Edit, ZeroConstructor)
	class UVanitySchematicBank*                        SkinMaterialSchematicBank;                                // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.CharacterVanityItems");
		return ptr;
	}


	void STATIC_SortVanityItems(class UObject** WorldContextObject, class UClass** CharacterClass, TArray<class UVanityItem*>* vanityItems);
	void PreLoadVanityItems(class UAsyncManager** AsyncManager);
	TArray<class UVanityItem*> STATIC_GetVanityItems(class UObject** WorldContextObject, EVanitySlot* Slot, bool* onlyStoreItems, class UPlayerCharacterID** characterID);
	TArray<class UVanityItem*> STATIC_GetUnLockedVanityItems(class UObject** WorldContextObject, EVanitySlot* Slot, class UPlayerCharacterID** characterID);
	TArray<class UVanityItem*> STATIC_GetLockedVanityItems(class UObject** WorldContextObject, EVanitySlot* Slot, class UPlayerCharacterID** characterID);
	TArray<class UVanityItem*> GetItems(EVanitySlot* Slot, bool* onlyStoreItems);
	void Clean();
};


// Class FSD.VictoryPoseFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UVictoryPoseFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VictoryPoseFunctionLibrary");
		return ptr;
	}


	bool STATIC_IsRandomVictoryPose(class UVictoryPose** VictoryPose);
	TArray<class UVictoryPose*> STATIC_GetOwnedVictoryPoses(class UObject** WorldContextObject, class UPlayerCharacterID** characterID);
	class UVictoryPose* STATIC_GetEquippedVictoryPose(class UObject** WorldContextObject, class UPlayerCharacterID** characterID);
};


// Class FSD.VictoryPose
// 0x0110 (0x0160 - 0x0050)
class UVictoryPose : public USavableDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               UnlockedFromStart;                                        // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x10];                                      // 0x0081(0x0010) UNKNOWN PROPERTY: ArrayProperty FSD.VictoryPose.Walks
	unsigned char                                      UnknownData02[0x28];                                      // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.VictoryPose.pose
	unsigned char                                      UnknownData03[0x28];                                      // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FSD.VictoryPose.Prop_Actor
	unsigned char                                      UnknownData04[0x28];                                      // 0x00E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.VictoryPose.Prop_Walk
	unsigned char                                      UnknownData05[0x28];                                      // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.VictoryPose.Prop_Pose
	unsigned char                                      UnknownData06[0x28];                                      // 0x0138(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FSD.VictoryPose.Prop_Idle

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VictoryPose");
		return ptr;
	}


	bool IsUnlocked(class UObject** WorldContextObject, class UPlayerCharacterID** characterID);
	void Equip(class UObject** WorldContextObject, class UPlayerCharacterID** characterID);
};


// Class FSD.VictoryPoseSchematicBank
// 0x0058 (0x0090 - 0x0038)
class UVictoryPoseSchematicBank : public USchematicBankBase
{
public:
	class USchematicCategory*                          SchematicCategory;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UVictoryPose*, struct FSchematicBankItem> VictoryPoses;                                             // 0x0040(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VictoryPoseSchematicBank");
		return ptr;
	}

};


// Class FSD.VictoryPoseSettings
// 0x0020 (0x0050 - 0x0030)
class UVictoryPoseSettings : public UDataAsset
{
public:
	TArray<class UVictoryPose*>                        AvailableVictoryPoses;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UVictoryPose*                                RandomVictoryPose;                                        // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GenericVictoryPoseIcon;                                   // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.VictoryPoseSettings");
		return ptr;
	}

};


// Class FSD.WeaponFireOwner
// 0x0000 (0x0028 - 0x0028)
class UWeaponFireOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponFireOwner");
		return ptr;
	}


	class APlayerCharacter* GetPlayerCharacter();
	struct FQuat GetMuzzleQuat();
	struct FVector GetMuzzleLocation();
	bool GetIsLocallyControlled();
	bool GetIsFirstPerson();
};


// Class FSD.AssaultRifle
// 0x0020 (0x0730 - 0x0710)
class AAssaultRifle : public AAmmoDrivenWeapon
{
public:
	float                                              KillsResetAccuracyDuration;                               // 0x0710(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               KillsTriggersStatusEffect;                                // 0x0714(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x13];                                      // 0x0715(0x0013) MISSED OFFSET
	class UClass*                                      KillTriggeredStatusEffect;                                // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AssaultRifle");
		return ptr;
	}


	void OnTimerElapsed();
	void OnEnemyKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat);
	void Client_ResetAccuracy();
};


// Class FSD.FlareGun
// 0x0010 (0x0720 - 0x0710)
class AFlareGun : public AAmmoDrivenWeapon
{
public:
	class USoundCue*                                   AutoReloadCompleteCue;                                    // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoReloadDuration;                                       // 0x0718(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x071C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.FlareGun");
		return ptr;
	}

};


// Class FSD.WeakpointGlowComponent
// 0x00C8 (0x01C0 - 0x00F8)
class UWeakpointGlowComponent : public UActorComponent
{
public:
	struct FName                                       EmissiveParam;                                            // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0100(0x0018) MISSED OFFSET
	class UFSDPhysicalMaterial*                        WeakPointMaterial;                                        // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          WeakpointHitCurve;                                        // 0x0120(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UMaterialInstance*                           MakeMIDFrom;                                              // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxEmissive;                                              // 0x01B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinEmissive;                                              // 0x01B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplaceMatIndex;                                          // 0x01B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AddFirstChannelAutomatically;                             // 0x01BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               OnMainBodyMesh;                                           // 0x01BD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x01BE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeakpointGlowComponent");
		return ptr;
	}


	bool StopLoopingGlow(int* aGlowID, bool* aFade);
	void ShowBodypartHit(float* amount, float* BaseAmount, class UPrimitiveComponent** Component, class UFSDPhysicalMaterial** PhysMat, struct FName* BoneName);
	void SetUpWeakPointGlowOnMesh(class UMeshComponent** Mesh, int* MaterialIndex, class UFSDPhysicalMaterial** PhysicalMaterial, class UHealthComponentBase** HealthComponent);
	void All_ShowWeakPointHit(int* Channel);
	void AddWeakpointGlow(bool* loopIndefinitely, float* loopTime, struct FRuntimeFloatCurve* growCurve, struct FRuntimeFloatCurve* FadeCurve, int* UniqueId, int* Channel);
};


// Class FSD.BurstWeapon
// 0x0028 (0x0738 - 0x0710)
class ABurstWeapon : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            Damage;                                                   // 0x0710(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            BurstFireBonusDamage;                                     // 0x0718(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0720(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BurstWeapon");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
};


// Class FSD.SawedOffShotgun
// 0x0068 (0x0778 - 0x0710)
class ASawedOffShotgun : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            DamageComponent;                                          // 0x0710(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDamageComponent*                            ShockWaveDamageComponent;                                 // 0x0718(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              FearFactorOnFire;                                         // 0x0720(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FearFactorOnFireRadius;                                   // 0x0724(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShotgunJumpEnabled;                                       // 0x0728(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0729(0x0003) MISSED OFFSET
	float                                              ShotgunJumpForce;                                         // 0x072C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShockwaveEnabled;                                         // 0x0730(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0731(0x0003) MISSED OFFSET
	float                                              ShockWaveDistance;                                        // 0x0734(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShockWaveRadius;                                          // 0x0738(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShockWaveLength;                                          // 0x073C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoReloadDuration;                                       // 0x0740(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	class USoundCue*                                   AutoReloadCompleteCue;                                    // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0750(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.SawedOffShotgun");
		return ptr;
	}


	void SetShockWaveDamageComponent(class UDamageComponent** Component);
};


// Class FSD.Revoler
// 0x0018 (0x0728 - 0x0710)
class ARevoler : public AAmmoDrivenWeapon
{
public:
	float                                              OnKillFearFactor;                                         // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OnKillFearRange;                                          // 0x0714(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0718(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Revoler");
		return ptr;
	}


	void OnTargetKilled(class AActor** Target, class UFSDPhysicalMaterial** PhysMat);
};


// Class FSD.ElectricalSMG
// 0x0040 (0x0750 - 0x0710)
class AElectricalSMG : public AAmmoDrivenWeapon
{
public:
	class UClass*                                      AoEStatusEffect;                                          // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             AoEParticle;                                              // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   AoESound;                                                 // 0x0720(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AoEStatusEffectChance;                                    // 0x0728(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AoEStatusEffectRange;                                     // 0x072C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0730(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ElectricalSMG");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
	void OnStatusEffectPushed(class UHealthComponentBase** Health);
	void All_OnAoETriggered(struct FVector_NetQuantize* Location, struct FVector_NetQuantizeNormal* Normal);
};


// Class FSD.BasicPistol
// 0x0018 (0x0728 - 0x0710)
class ABasicPistol : public AAmmoDrivenWeapon
{
public:
	float                                              ConsecutiveHitsDamageBonus;                               // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0714(0x000C) MISSED OFFSET
	float                                              ConsecutiveHitsMaxBonus;                                  // 0x0720(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0724(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.BasicPistol");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
};


// Class FSD.AutoShotgun
// 0x0008 (0x0718 - 0x0710)
class AAutoShotgun : public AAmmoDrivenWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0710(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AutoShotgun");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
};


// Class FSD.LineCutter
// 0x0020 (0x0730 - 0x0710)
class ALineCutter : public AAmmoDrivenWeapon
{
public:
	bool                                               StopUsingReversesProjectile;                              // 0x0710(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RotateProjectileUntillStop;                               // 0x0711(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0712(0x0006) MISSED OFFSET
	TArray<class UItemUpgrade*>                        Upgrades;                                                 // 0x0718(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class ALineCutterProjectile>        LastProjectile;                                           // 0x0728(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.LineCutter");
		return ptr;
	}


	void Server_StopRotatingProjectile();
	void Server_ReverseLastProjectile();
	void OnRep_LastProjectile();
	void OnProjectileLaunched(class AProjectileBase** Projectile);
};


// Class FSD.Magazine
// 0x0018 (0x0348 - 0x0330)
class AMagazine : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class USoundCue*                                   ImpactGroundSound;                                        // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0340(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Magazine");
		return ptr;
	}


	void OnItemSkinned(class USkinEffect** Skin);
	void ActorWasHit(class AActor** SelfActor, class AActor** OtherActor, struct FVector* NormalImpulse, struct FHitResult* Hit);
};


// Class FSD.WeaponHitCountEffect
// 0x0008 (0x0030 - 0x0028)
class UWeaponHitCountEffect : public UObject
{
public:
	bool                                               UsesDamageEffects;                                        // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponHitCountEffect");
		return ptr;
	}

};


// Class FSD.WeaponHitCounterComponent
// 0x0020 (0x0118 - 0x00F8)
class UWeaponHitCounterComponent : public UActorComponent
{
public:
	class UWeaponHitCountEffect*                       HitEffect;                                                // 0x00F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               RequiresWeakpointHit;                                     // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0101(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponHitCounterComponent");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase** Health, float* amount, class UFSDPhysicalMaterial** PhysicalMaterial);
	void OnStoppedUsing();
	void OnReloading();
	void All_ShowDamageEffects(TArray<TWeakObjectPtr<class AActor>>* Targets);
};


// Class FSD.DamageHitCountEffect
// 0x0020 (0x0050 - 0x0030)
class UDamageHitCountEffect : public UWeaponHitCountEffect
{
public:
	float                                              DamagePerHit;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DamageParticle;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DamageSound;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.DamageHitCountEffect");
		return ptr;
	}

};


// Class FSD.StatusHitCountEffect
// 0x0010 (0x0040 - 0x0030)
class UStatusHitCountEffect : public UWeaponHitCountEffect
{
public:
	class UClass*                                      StatusEffect;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChancePerHit;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.StatusHitCountEffect");
		return ptr;
	}

};


// Class FSD.RicochetHitCountEffect
// 0x0000 (0x0030 - 0x0030)
class URicochetHitCountEffect : public UWeaponHitCountEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.RicochetHitCountEffect");
		return ptr;
	}

};


// Class FSD.WeaponHitEffectComponent
// 0x0010 (0x0108 - 0x00F8)
class UWeaponHitEffectComponent : public UActorComponent
{
public:
	float                                              EffectChance;                                             // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class UClass*                                      ActorToSpawn;                                             // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeaponHitEffectComponent");
		return ptr;
	}


	void Server_SpawnEffect(struct FVector_NetQuantize* Location, struct FRotator* Rotation);
	void OnHit(struct FHitResult* HitResult);
};


// Class FSD.WalkingStateComponent
// 0x0050 (0x0180 - 0x0130)
class UWalkingStateComponent : public UCharacterStateComponent
{
public:
	bool                                               SlidingEnabled;                                           // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShowDebug;                                                // 0x0131(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0132(0x0002) MISSED OFFSET
	float                                              SlideAngle;                                               // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlideAcceleration;                                        // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSlideSpeed;                                            // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxClimbDistance;                                         // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioSliding;                                             // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  IceSliding;                                               // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             AudioComponentSliding;                                    // 0x0158(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             AudioComponentIceSliding;                                 // 0x0160(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0168(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WalkingStateComponent");
		return ptr;
	}


	void JumpPress();
};


// Class FSD.WeightRoomSelectorLibrary
// 0x0000 (0x0028 - 0x0028)
class UWeightRoomSelectorLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WeightRoomSelectorLibrary");
		return ptr;
	}


	void STATIC_SetupWeightedRoomSelector(struct FWeightedRoomSelector* Target, TArray<class URoomGenerator*>* Rooms);
	class URoomGenerator* STATIC_SelectRandomRoom(struct FWeightedRoomSelector* Target, struct FRandomStream* RandomStream);
	class URoomGenerator* STATIC_GetRandomRoom(bool* removeChosenRoom, TArray<class URoomGenerator*>* Rooms, struct FRandomStream* RandomStream);
};


// Class FSD.WidgetToRenderTargetComponent
// 0x00E0 (0x01D8 - 0x00F8)
class UWidgetToRenderTargetComponent : public UActorComponent
{
public:
	class UClass*                                      WidgetClass;                                              // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   DrawSize;                                                 // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bManuallyRedraw;                                          // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRedrawRequested;                                         // 0x0109(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x010A(0x0002) MISSED OFFSET
	float                                              RedrawTime;                                               // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LastWidgetRenderTime;                                     // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bWindowFocusable;                                         // 0x0114(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	struct FIntPoint                                   CurrentDrawSize;                                          // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bDrawAtDesiredSize;                                       // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	struct FVector2D                                   Pivot;                                                    // 0x0124(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          BaseMaterial;                                             // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ULocalPlayer*                                OwnerPlayer;                                              // 0x0138(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BackgroundColor;                                          // 0x0140(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TintColorAndOpacity;                                      // 0x0150(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OpacityFromTexture;                                       // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTwoSided;                                              // 0x0164(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               TickWhenOffscreen;                                        // 0x0165(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0166(0x0002) MISSED OFFSET
	class UUserWidget*                                 Widget;                                                   // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x0170(0x0020) MISSED OFFSET
	class UTextureRenderTarget2D*                      RenderTarget;                                             // 0x0190(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MaterialInstance;                                         // 0x0198(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	bool                                               bEditTimeUsable;                                          // 0x01A0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x37];                                      // 0x01A1(0x0037) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WidgetToRenderTargetComponent");
		return ptr;
	}


	void SetWidget(class UUserWidget** Widget);
	void SetOwnerPlayer(class ULocalPlayer** LocalPlayer);
	void SetBackgroundColor(struct FLinearColor* NewBackgroundColor);
	void RequestRedraw();
	class UUserWidget* GetUserWidgetObject();
	class UTextureRenderTarget2D* GetRenderTarget();
	class ULocalPlayer* GetOwnerPlayer();
	class UMaterialInstanceDynamic* GetMaterialInstance();
};


// Class FSD.WindowManager
// 0x00D8 (0x01D0 - 0x00F8)
class UWindowManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFirstWindowOpened;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLastWindowClosed;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USoundCue*                                   AudioWindowOpen;                                          // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UWindowWidget*>                       WindowStack;                                              // 0x0120(0x0010) (ExportObject, ZeroConstructor, Transient)
	TMap<class UClass*, class UWindowWidget*>          WindowList;                                               // 0x0130(0x0050) (ExportObject, ZeroConstructor, Transient)
	TMap<class UClass*, TWeakObjectPtr<class UUserWidget>> WidgetSingletonCache;                                     // 0x0180(0x0050) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WindowManager");
		return ptr;
	}


	void ReplaceWindow(class UWindowWidget** Window);
	class UWindowWidget* OpenWindowFromClass(class UClass** windowClass, int* ZOrder, bool* ShowCursor);
	void OpenWindow(class UWindowWidget** Window, bool* PlayAudio, bool* ShowCursor);
	class UWindowWidget* OpenSingleUseWindow(class UClass** windowClass, int* ZOrder);
	bool IsWindowOpen(class UWindowWidget** Window);
	bool IsTopWindow(class UWindowWidget** Window);
	class UUserWidget* GetOrCreateSingletonWidget(class UClass** WidgetClass, bool* WidgetCreated);
	void CloseWindow(class UWindowWidget** Window);
	void CloseTopWindow();
	void CloseAllWindows();
	bool AnyWindowsOpen();
};


// Class FSD.ChargedHitCountEffect
// 0x0020 (0x0050 - 0x0030)
class UChargedHitCountEffect : public UWeaponHitCountEffect
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0030(0x0004) MISSED OFFSET
	float                                              DamagePerHit;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DamageParticle;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DamageSound;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ChargedHitCountEffect");
		return ptr;
	}

};


// Class FSD.YesNoPromptWidget
// 0x0018 (0x0250 - 0x0238)
class UYesNoPromptWidget : public UWindowWidget
{
public:
	bool                                               bDestroyOnClick;                                          // 0x0238(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0239(0x0003) MISSED OFFSET
	struct FScriptDelegate                             OnClickedCallback;                                        // 0x023C(0x0014) (ZeroConstructor, Transient, InstancedReference)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.YesNoPromptWidget");
		return ptr;
	}


	void Show(struct FText* Title, struct FText* Message, struct FScriptDelegate* OnYesNoClicked);
	void SetMappedResources(TMap<class UResourceData*, int>* Resources);
	void OnYesNoClickedDelegate__DelegateSignature(bool* Yes);
	void OnShow(struct FText* Title, struct FText* Message);
	void OnClicked(bool* Yes);
	void Clicked(bool* Yes);
};


// Class FSD.YesNoPromptAction
// 0x0038 (0x0068 - 0x0030)
class UYesNoPromptAction : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    Yes;                                                      // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    No;                                                       // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptDelegate                             YesNoDelegate;                                            // 0x0050(0x0014) (ZeroConstructor, InstancedReference)
	TWeakObjectPtr<class UYesNoPromptWidget>           ActivePrompt;                                             // 0x0060(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.YesNoPromptAction");
		return ptr;
	}


	void YesNoOutputPin__DelegateSignature();
	class UYesNoPromptAction* STATIC_PromptYesNo(class UObject** WorldContext, struct FYesNoPromptSettings* Prompt);
	class UYesNoPromptAction* STATIC_PromptPurchase(class UObject** WorldContext, struct FYesNoPromptSettings* Prompt, TMap<class UResourceData*, int>* Resources);
	void PromptCallback(bool* YesClicked);
};


// Class FSD.ZapperItem
// 0x0020 (0x0490 - 0x0470)
class AZapperItem : public AAnimatedItem
{
public:
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacer;                                               // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      ZapperClass;                                              // 0x0480(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Cooldown;                                                 // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x048C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ZapperItem");
		return ptr;
	}


	void Server_PlaceZapper(struct FVector* Location);
};


// Class FSD.Zapper
// 0x0080 (0x03B0 - 0x0330)
class AZapper : public AActor
{
public:
	class USphereComponent*                            AttackArea;                                               // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FGameplayTagContainer                       AllowedTags;                                              // 0x0338(0x0020) (Edit)
	class UParticleSystem*                             ZapParticles;                                             // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Charges;                                                  // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeTime;                                               // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CoolDownTime;                                             // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChargeProgress;                                           // 0x037C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0384(0x0004) MISSED OFFSET
	class ULightComponent*                             ZappingLight;                                             // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ZappingPoint;                                             // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FZapperTarget>                       Targets;                                                  // 0x0398(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.Zapper");
		return ptr;
	}


	class USceneComponent* GetZappingPoint();
	class ULightComponent* GetZappingLight();
};


// Class FSD.ZipLineProjectile
// 0x0058 (0x0388 - 0x0330)
class AZipLineProjectile : public AActor
{
public:
	class UTimelineComponent*                          Timeline;                                                 // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              LightIntensity;                                           // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaterialGlow;                                             // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Callback;                                                 // 0x0340(0x0014) (ZeroConstructor, InstancedReference)
	class UCurveFloat*                                 LightCurve;                                               // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UPointLightComponent*>                PointLights;                                              // 0x0358(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient)
	TArray<class UMaterialInstanceDynamic*>            MaterialInstances;                                        // 0x0368(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	class UClass*                                      OnUseStatusEffect;                                        // 0x0378(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OnReleaseStatusEffect;                                    // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ZipLineProjectile");
		return ptr;
	}


	void OnTimelineTick(float* NewValue);
	void OnShoot(struct FVector* Origin, struct FVector* EndLocation);
};


// Class FSD.WoodLouse
// 0x0188 (0x05E8 - 0x0460)
class AWoodLouse : public AEnemyDeepPathfinderCharacter
{
public:
	class USceneComponent*                             RollingCenter;                                            // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPawnSensingComponent*                       PawnSensing;                                              // 0x0468(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0470(0x0001) MISSED OFFSET
	EWoodLouseState                                    forceState;                                               // 0x0471(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0472(0x0002) MISSED OFFSET
	float                                              RollingCenterOffsetOnStanding;                            // 0x0474(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RollingCenterOffsetOnFold;                                // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	float                                              ChanceToWalk;                                             // 0x0480(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DebugAngle;                                               // 0x0484(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x23];                                      // 0x0485(0x0023) MISSED OFFSET
	class UFakeMoverSettings*                          FakeMoverSettings;                                        // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      BurstProjectileClass;                                     // 0x04B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BurstTime;                                                // 0x04B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	TArray<class UClass*>                              StatusEffectsOnRoll;                                      // 0x04C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              TiltModifier;                                             // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurstXOffset;                                             // 0x04D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BurstYOffset;                                             // 0x04D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BurstZOffset;                                             // 0x04DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HighDifficultyCustomProjectileGravity;                    // 0x04E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BurstCount;                                               // 0x04E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04E8(0x0004) MISSED OFFSET
	bool                                               InvounerableOnRoll;                                       // 0x04EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               LockToRollMode;                                           // 0x04ED(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               LockToWalkMode;                                           // 0x04EE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x04EF(0x0001) MISSED OFFSET
	float                                              ForgetRange;                                              // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForgetTime;                                               // 0x04F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x04F8(0x0004) MISSED OFFSET
	float                                              RefreshTimeMax;                                           // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RefreshTimeMin;                                           // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BumpPower;                                                // 0x0504(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DirectionalBumpPower;                                     // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWoodLouseState                                    CurrentState;                                             // 0x050C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x23];                                      // 0x050D(0x0023) MISSED OFFSET
	class AActor*                                      CurrentTarget;                                            // 0x0530(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	float                                              FoldedStateMaxTime;                                       // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FoldedStateMinTime;                                       // 0x053C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UnfoldedStateMaxTime;                                     // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UnflodedStateMinTime;                                     // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0548(0x0008) MISSED OFFSET
	class USoundBase*                                  BumpSound;                                                // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeBetweenBumpingSamePlayer;                             // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinBumpDamage;                                            // 0x055C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxBumpDamage;                                            // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BumpDamage;                                               // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDamageClass*                                BumpDamageType;                                           // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxBumpPower;                                             // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BumpRange;                                                // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0578(0x0004) MISSED OFFSET
	float                                              AcceptableAngles;                                         // 0x057C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollSpeedModifier;                                        // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollAlpha;                                                // 0x0584(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TiltAlpha;                                                // 0x0588(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	class USoundBase*                                  RollingSound;                                             // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RollingSpeedParamName;                                    // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              RollingSoundComponent;                                    // 0x05A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFakeMoverSettings*                          RollMoveSettings;                                         // 0x05A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFakeMoverSettings*                          StopRollMoveSettings;                                     // 0x05B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x18];                                      // 0x05B8(0x0018) MISSED OFFSET
	bool                                               RotateTowardsTarget;                                      // 0x05D0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x05D1(0x0003) MISSED OFFSET
	float                                              SeeTargetSafetyTime;                                      // 0x05D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x05D8(0x0004) MISSED OFFSET
	bool                                               WantsToStandUp;                                           // 0x05DC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CanStandOnAnySurface;                                     // 0x05DD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0xA];                                       // 0x05DE(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WoodLouse");
		return ptr;
	}


	void SwitchedState(EWoodLouseState* CurrentState);
	void StopSpecial();
	void StartSpecial();
	void SetWantsToStandUp(bool* aWantsToStandUp);
	void SetState(EWoodLouseState* aState);
	void SetRotateToTarget(bool* aRotateToTarget);
	void SeePawn(class APawn** aSenPawn);
	void PlayBumpNoise();
	void OnRep_State();
	EWoodLouseState GetRollerState();
	void BumpedTarget();
};


// Class FSD.ZipLineItem
// 0x0010 (0x0720 - 0x0710)
class AZipLineItem : public AAmmoDrivenWeapon
{
public:
	float                                              MaxDistance;                                              // 0x0710(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinDistance;                                              // 0x0714(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinAngle;                                                 // 0x0718(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x071C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ZipLineItem");
		return ptr;
	}


	bool CanFireWeapon(struct FText* FailMsg, class UDialogDataAsset** FailShout);
};


// Class FSD.AngleIndicatorWidget
// 0x0010 (0x0260 - 0x0250)
class UAngleIndicatorWidget : public UFSDUserWidget
{
public:
	float                                              pixelsPerAngle;                                           // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AlphaFade;                                                // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinAngle;                                                 // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.AngleIndicatorWidget");
		return ptr;
	}

};


// Class FSD.ZipLineStateComponent
// 0x00B8 (0x01E8 - 0x0130)
class UZipLineStateComponent : public UCharacterStateComponent
{
public:
	float                                              VerticalOffset;                                           // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HorizontalOffset;                                         // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TravelSpeed;                                              // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpForce;                                                // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioOnStart;                                             // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioOnDuring;                                            // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioOnChangingDirection;                                 // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AudioOnStop;                                              // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogDataAsset*                            ShoutStartUsing;                                          // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5C];                                      // 0x0168(0x005C) MISSED OFFSET
	float                                              DamageBeforeFalling;                                      // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageResetTime;                                          // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x01D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01D8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ZipLineStateComponent");
		return ptr;
	}


	void ServerJumpPressed();
	void ServerForwardInputChanged(float* Input);
	void ServerChangeDirection();
	void OnPlayerHit(float* Damage, class UDamageClass** DamageClass, class AActor** DamageCauser, bool* anyHealthLost);
	struct FVector GetJumpVector(struct FVector* LookVector, struct FVector* CurrentVelocity);
};


// Class FSD.ZiplineLauncherComponent
// 0x0010 (0x0168 - 0x0158)
class UZiplineLauncherComponent : public UWeaponFireComponent
{
public:
	TEnumAsByte<ECollisionChannel>                     HitCollisionChannel;                                      // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0159(0x0003) MISSED OFFSET
	float                                              ProjectileLocationOffset;                                 // 0x015C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.ZiplineLauncherComponent");
		return ptr;
	}


	void Server_Fire(struct FVector_NetQuantize* Origin, struct FVector_NetQuantize* Destination);
	void All_ShowHit();
};


// Class FSD.WoodLouseAnimInstance
// 0x0030 (0x0430 - 0x0400)
class UWoodLouseAnimInstance : public USpiderAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0400(0x0004) MISSED OFFSET
	struct FVector2D                                   AngleToTarget;                                            // 0x0404(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InterpSpeed;                                              // 0x040C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BreakRollingWhenTimeLeft;                                 // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EWoodLouseState                                    RollerState;                                              // 0x0414(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsWalking;                                                // 0x0415(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsUpRight;                                                // 0x0416(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsDoingSpecialAttack;                                     // 0x0417(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsUnFolded;                                               // 0x0418(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsGroundValid;                                            // 0x0419(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInRollState;                                            // 0x041A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IdleToDownTurnLeftLock;                                   // 0x041B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               DownTurnLeftToIdleLock;                                   // 0x041C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               DownWalkToDownTurnLeftLock;                               // 0x041D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               WoodlouseWalk;                                            // 0x041E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IdleToDownWalkLock;                                       // 0x041F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               DownWalkToDownTurnRightLock;                              // 0x0420(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IdleToDownTurnRightLock;                                  // 0x0421(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x0422(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FSD.WoodLouseAnimInstance");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
